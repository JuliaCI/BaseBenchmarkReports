cset: moving following pidspec: 4004
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.22029408 seconds)
loading group "string"... done (took 0.633809512 seconds)
loading group "linalg"... done (took 7.670875185 seconds)
loading group "parallel"... done (took 0.153597606 seconds)
loading group "find"... done (took 1.204120166 seconds)
loading group "tuple"... done (took 1.758518475 seconds)
loading group "dates"... done (took 1.262983469 seconds)
loading group "micro"... done (took 0.215707732 seconds)
loading group "io"... done (took 0.91384622 seconds)
loading group "scalar"... done (took 36.908287324 seconds)
loading group "sparse"... done (took 11.527186594 seconds)
loading group "broadcast"... done (took 0.922073509 seconds)
loading group "union"... done (took 12.313710862 seconds)
loading group "simd"... done (took 4.559613985 seconds)
loading group "random"... done (took 8.662298068 seconds)
loading group "problem"... done (took 1.78542243 seconds)
loading group "array"... done (took 20.029827795 seconds)
loading group "misc"... done (took 1.767054686 seconds)
loading group "sort"... done (took 3.136355933 seconds)
loading group "collection"... done (took 17.048446142 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.532783327 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130100377 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138225653 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125382649 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153118284 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.123521412 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.131243783 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091079428 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.840639145 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.156841759 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.119465477 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.418715205 seconds)
done (took 5.344009003 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176206714 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087587166 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088100512 seconds)
  done (took 1.238300109 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.071223878 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132216211 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072429111 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072712006 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.073031183 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.072655359 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.072264277 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072856576 seconds)
  done (took 1.630839 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.078342967 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07355298 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.071808063 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073918205 seconds)
  done (took 1.359767193 seconds)
done (took 5.549760535 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.775510796 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211924763 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190329317 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39961816 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133953285 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.178730845 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.654060656 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326411789 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.190652771 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081110846 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112092082 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.349884662 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125758674 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646479113 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.082198151 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094938927 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.14214454 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.455489895 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.07318725 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08732101 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09424864 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133473465 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09231565 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078771406 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149990664 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.073097798 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.139200759 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085513171 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071963894 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.218552641 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177783401 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.669815947 seconds)
  done (took 10.3931703 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.103917857 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.103828769 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074012955 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130126629 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105613294 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.075354577 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080927085 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.073241492 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.097397136 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134168386 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096394452 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110663448 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.072227116 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074587202 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088266826 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.214051397 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.086277648 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086840767 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.076115552 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083854497 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112864526 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.083413515 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085286793 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085019215 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133658243 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.186201949 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.104965478 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.105207857 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.074213297 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08772078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.120103849 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132059525 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.07394129 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07192645 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.130182513 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.103587077 seconds)
  done (took 4.761135384 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.988437317 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.146633937 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09338001 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137076399 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.11615864 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069995988 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114715938 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070825569 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085820498 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211614442 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.365601659 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.587652751 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115401421 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115737606 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.0708011 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107588461 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073107884 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073947403 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072489658 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.47531421 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.102839309 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110638185 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084959265 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075205034 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072840916 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070075711 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071958894 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069022201 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073318171 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117608793 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079188084 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.310182481 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128131595 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072737478 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.944625626 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.17157737 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.211602907 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107495272 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.170150931 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095318846 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144804822 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07452663 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071431009 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16366301 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.070690333 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.076302902 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.072097397 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089471925 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108772574 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.126396352 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071600198 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071747573 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.1729619 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.073208397 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085173946 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.180733703 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157968368 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.072522694 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293549053 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.095133688 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075906789 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.071355245 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.19933819 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.124585027 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073263579 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07279389 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073771791 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073956994 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.383294071 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071392997 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.1910388 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073384388 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082161799 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075478746 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074783764 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077951305 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078332555 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09419999 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070885321 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078601371 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.073657561 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.071349819 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071753915 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087389039 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.375772937 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.174956926 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.07356 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070959924 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09604846 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100999123 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07270087 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071043885 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104792944 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073317263 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.072102919 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.071336659 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071933662 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088650109 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075171822 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118329369 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073590482 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070323579 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.100542733 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100250144 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074618869 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103938294 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08395886 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072873632 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.443548572 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.071019143 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072470072 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070886093 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073212387 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.072028461 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.086249766 seconds)
  done (took 22.434370963 seconds)
done (took 39.642354429 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.244916711 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074790436 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074851742 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075175412 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075301942 seconds)
  done (took 1.693433921 seconds)
done (took 2.829701569 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.124995457 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.10297157 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070552334 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101986798 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07033288 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10509553 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.107547254 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081829814 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103202077 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069711103 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.101577199 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070462427 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069934078 seconds)
  done (took 2.327577752 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088439977 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089483609 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075937404 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087665094 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069248901 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.088026889 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087214409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093994548 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086682242 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078113342 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069104778 seconds)
  done (took 2.043306089 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087606019 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08890354 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075277805 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087103585 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.071516115 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086613087 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.087515331 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091022785 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086967512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079643576 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069100072 seconds)
  done (took 2.037108735 seconds)
done (took 7.532454413 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081271766 seconds)
  done (took 1.197684929 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.534552876 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.659338397 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084770036 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109127701 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192486226 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115429023 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.250498603 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087162663 seconds)
  done (took 8.302531889 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107079539 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.076482341 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075652966 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073787254 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073656427 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077459495 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076193547 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074902969 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.074336257 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07611866 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.075623488 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.077661807 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.07483453 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.074646391 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076715997 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076917354 seconds)
  done (took 2.435230398 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096506292 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096252672 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078623723 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.080230824 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.077271477 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07730304 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.079157896 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.079211382 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075781921 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.077283255 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079932593 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078212742 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07662848 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068806589 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.079018373 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081679761 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075932729 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078716701 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.079483898 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.080228927 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079698106 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06880444 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.076587259 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07888693 seconds)
  done (took 3.11425647 seconds)
done (took 16.175773782 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110510236 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073254909 seconds)
  done (took 1.3081483 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084138146 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.085127897 seconds)
  done (took 1.302652523 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085531309 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.070283907 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092272029 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080775523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070536297 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070011289 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089853215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070737862 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.070512565 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070497992 seconds)
  done (took 1.905438179 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072108561 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080228814 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073815884 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084445655 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076927029 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068706854 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075383221 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.0721262 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080470928 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067889698 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075229293 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087608536 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075168837 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089176395 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.07569576 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072898623 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074744044 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.072096769 seconds)
  done (took 2.509752192 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069869354 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071000995 seconds)
  done (took 1.279160167 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.07130291 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068270548 seconds)
    (3/7) benchmarking "month"...
    done (took 0.071338674 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070944631 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068519761 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067531977 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.068081316 seconds)
  done (took 1.621091077 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.390602027 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.122133294 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.305425023 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.077593402 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086557374 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.2581456 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.07255648 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07698692 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07679239 seconds)
  done (took 2.638235123 seconds)
done (took 13.704203383 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085477989 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.092198073 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100225447 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.384385436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09771542 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07260046 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.119022311 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184886739 seconds)
done (took 2.283071958 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213586749 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.660823914 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404154311 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208990349 seconds)
  done (took 2.412169799 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.341347433 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092735844 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06536992 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.07309102 seconds)
  done (took 1.71766878 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071772034 seconds)
    (2/2) benchmarking "read"...
    done (took 0.075382291 seconds)
  done (took 1.287962204 seconds)
done (took 6.774587931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072435467 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071907896 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.183778135 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071626498 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.069661701 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069772358 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071611534 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071356093 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.071908933 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.071863539 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072119419 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069832227 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069564224 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088656647 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071371281 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071279242 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069202362 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071587744 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06968691 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069184754 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069048509 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071450166 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069200224 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069502943 seconds)
  done (took 2.995594143 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087556494 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071665052 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075587782 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07535198 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073384434 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075497067 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075546218 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071373987 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075522337 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073804256 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073169386 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07364349 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073491231 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073403816 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073356997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073331964 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07531944 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071135153 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073812042 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073808211 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075158545 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071387312 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073753988 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075700553 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073566663 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073504739 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073726848 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.071792001 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075609156 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073213201 seconds)
  done (took 3.376704717 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075193058 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067759682 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068856671 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07599983 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068108205 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.069350673 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.068470931 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.069018957 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069271357 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068006736 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069312046 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06820081 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068436523 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06904542 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069035991 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072740423 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084755082 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068581045 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068439956 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068801432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.074852328 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068190376 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068431401 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068715813 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068330364 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068350973 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06896211 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068246986 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068886248 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068492349 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072195687 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072792201 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068490283 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.076386809 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072767405 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068278619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072936238 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068442392 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069190672 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.068052667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068056997 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068921506 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068924905 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076059584 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068359332 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069623721 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068587934 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069367566 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068536259 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070780759 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.068006231 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068196345 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070537466 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069555729 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.07287863 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068382277 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.069307498 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.068158688 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.069534037 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068672994 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068082907 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069074755 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071772041 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069427657 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.085115896 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.076257505 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068570655 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069859861 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069174314 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071840633 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.070201509 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08383398 seconds)
  done (took 6.226588225 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092315032 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092239912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071177199 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.071456852 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066481364 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068843179 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074315658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068981218 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071089962 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088025315 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069278016 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070938425 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070624233 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072942166 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069023236 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070841609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077359272 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066725432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.069060014 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0728922 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069131301 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074341682 seconds)
  done (took 2.786381181 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152509185 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075072939 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11005453 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07967772 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075390592 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079732775 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075273211 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075051358 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074954213 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072960487 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072820047 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074965769 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075524156 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073061413 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073187404 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07278036 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075241773 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073506312 seconds)
  done (took 2.622709018 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.082193673 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.071445176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.093275469 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0719467 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.072277361 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073638327 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076079791 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079075121 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073664168 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.071688286 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078620626 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073731333 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073875897 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071486335 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073861163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071484504 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.074034277 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071711831 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078896292 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075450838 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075261549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078520516 seconds)
  done (took 2.824786041 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08499694 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073119078 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.086672014 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.073006995 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066112307 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069566993 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074920626 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.071343571 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.075135903 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.073137659 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071103514 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06972422 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073678457 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070996463 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073343869 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070951738 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073300057 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071231099 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073259819 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066566918 seconds)
  done (took 2.626327971 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089322194 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073287913 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072241253 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079504635 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072795357 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072398109 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079215101 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072493201 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072234853 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.093177054 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072355409 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073127364 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078863427 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079293738 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07256939 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07922137 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079042619 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078999939 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072803012 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072804251 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093132128 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072797164 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079196008 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072686184 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072501675 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072458486 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072187218 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076483362 seconds)
  done (took 3.312159985 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072028081 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071595245 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06963278 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.069964608 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069104729 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.069205795 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069164833 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069186394 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071889233 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069422522 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071773199 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071621005 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071363812 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071444868 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071647911 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.072117039 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071507042 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069821571 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069333859 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06990475 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071794125 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07182492 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.07173694 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069573189 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06913548 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071475483 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069263504 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069707341 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071885358 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069545977 seconds)
  done (took 3.286055917 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079735829 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077393896 seconds)
  done (took 1.327478095 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067872236 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.086032217 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068085544 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.077246599 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074306622 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072040522 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078222917 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074417433 seconds)
  done (took 1.762954296 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.087335036 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079975706 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071686351 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08059186 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080225724 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087482949 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127724509 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071023811 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078061218 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.07005928 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084054042 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071355651 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078329859 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072455859 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.077340459 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0792799 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068755038 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075349552 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072555573 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069765625 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071912668 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08030797 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075572546 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06671528 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073236736 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094390386 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082252915 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070573282 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074687931 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078933677 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07776742 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065670894 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070937227 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071197644 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068901803 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079961114 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085509794 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074441839 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079816673 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071562352 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079282621 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.066376029 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.076400862 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079102545 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082653176 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071430548 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070982528 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06633244 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070536875 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073825558 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066412052 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07260918 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066184804 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078902815 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075111387 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.082031279 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069924017 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.073712802 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075038916 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07492776 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.078664338 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073806193 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074558973 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070846639 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081997834 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.077284384 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07929467 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066562202 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065418558 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069199285 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081368457 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09523127 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077415349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071620153 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071429829 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069202816 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07531859 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07143907 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076365521 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077725849 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070031677 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074729659 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078670631 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072446513 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074042799 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077071599 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068841774 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072925571 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070237578 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.087516184 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.072213777 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068559321 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069331005 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08094376 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074637133 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.069218055 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069221025 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078093314 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064625629 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069497701 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069907198 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071522392 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079221674 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073260395 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073447176 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079613885 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076423066 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070923705 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072859515 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066900619 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196505201 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072692341 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.080965876 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067213278 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076888305 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073815876 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072020318 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.081048986 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.070012601 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.07145136 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08046732 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077893539 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069982056 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068240345 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.074970599 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070715208 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0732955 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07954202 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069967324 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066424525 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066452863 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075744102 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07078422 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075902669 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075134467 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074796834 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06663091 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069427076 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07493061 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080009798 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072159265 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07273792 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077258844 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.073644542 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070401541 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078814047 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073744572 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071333677 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077134915 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072793871 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066031875 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073178743 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075155753 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06963529 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.075776649 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073232942 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073927254 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.070762476 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069587547 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076517381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071421283 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070851382 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071892564 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069827944 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.082618886 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073984503 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.066538959 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068888426 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077712038 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.069908223 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070267336 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071088007 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073779918 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.071355921 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068965809 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070090638 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074239918 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078806466 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073666915 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07119558 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076921509 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084456373 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07032494 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074143131 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070204408 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071579354 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071230603 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080734997 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077435233 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075150326 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074185662 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.068208844 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076099466 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078975523 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070479623 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068428244 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070789209 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074696698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.077204692 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07377742 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070487154 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068728027 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072986146 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072823617 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.074400723 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069953114 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070781774 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075395256 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068512754 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075272709 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069974823 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081173779 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074377344 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065243044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071554539 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067964092 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077024961 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.065275324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069008502 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070938526 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070013202 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068822502 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072890576 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064355012 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.207976475 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080679747 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.074158768 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.073240515 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071827862 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080224847 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074205028 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076058982 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076750741 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078032747 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082885247 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071193502 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078017646 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.082395716 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071055289 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065774176 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076727991 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069596872 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069547549 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070375839 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069247061 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075059191 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078138871 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077294621 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065216127 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074662972 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069941795 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071180983 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066343904 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076051387 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.074790606 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072763259 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078480537 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071486689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071079969 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075098234 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070182399 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071386091 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071129163 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074501416 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.07142373 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073641677 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.071094291 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074268078 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071188525 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068722863 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073840131 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070582027 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.072293967 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076329399 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070312842 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07208326 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.074546741 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070791629 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072581385 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072304818 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071200404 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074712385 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072871119 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072324304 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074600116 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066605339 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079588924 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070302384 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079602017 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072594253 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068161563 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07637655 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.074983766 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075228234 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071121358 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071666573 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073483183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070806958 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074895574 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078896971 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070052739 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082091793 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078553287 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072724657 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074970002 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072274538 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073238139 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.07092806 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072324379 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070870578 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.072035217 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070229794 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075526834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073869871 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.072152572 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073394457 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071097705 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072213885 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071544318 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065555687 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070844645 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071507556 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070158561 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079562578 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07061287 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07081829 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069077248 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070336459 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069356165 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067244284 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075496675 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076083204 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069902665 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076268907 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069878114 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072049382 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080448367 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064356415 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067897039 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.199999504 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071763573 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080845066 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.072302999 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.082557161 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072895301 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.072280921 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.070189663 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071581051 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070289299 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.06615 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069118875 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075631592 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.07130567 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070212223 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070403347 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074728523 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071412458 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079957898 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070991269 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.073458834 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070970112 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068019055 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071462916 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071022565 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075023714 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071139874 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.070766912 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068971742 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070421507 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072780129 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073671938 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07067651 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073132232 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078720308 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070508487 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074878641 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072988195 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066335286 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074587511 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070756126 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070143587 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071255917 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07751906 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074663044 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071680966 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.081002663 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070563253 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072869883 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071099322 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068957817 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070360743 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070446737 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.07031402 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071294401 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071815155 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079458572 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.069086493 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074745916 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072194436 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072190479 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077791575 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071901737 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074765968 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.075830896 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072962947 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.074151019 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079944314 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07436263 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.075346174 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071335401 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072909536 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077146057 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071733206 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.078344449 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072641531 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071284797 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073579042 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070345993 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070636416 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070866962 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070056641 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077629252 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071576511 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070896627 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071208747 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068829768 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072646743 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072768358 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079084823 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073985218 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074731282 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066038226 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068693436 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070802476 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.070252348 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073777078 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074042945 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077342735 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073620193 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072118126 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070396049 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080192916 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077021625 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074715184 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069604427 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07395375 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070779429 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073504311 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071613825 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071388564 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070779916 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074306815 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072305548 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070395679 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076300958 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073488426 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.202349577 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.075267167 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074724942 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073857354 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067408311 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.07180372 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074228755 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077517872 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07460354 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071155877 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082446657 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070457516 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072498476 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07331274 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071051788 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076642309 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066287831 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073690586 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071769951 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071990058 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066569626 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071718209 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070130773 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074216147 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.07172994 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066525806 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08180259 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08132127 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074421712 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070238519 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07013476 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066446276 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066932173 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071404486 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071598576 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.074414381 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.082053646 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070879389 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071179582 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066846103 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071025283 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074859098 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074780315 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.069268795 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066459881 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071139026 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074385455 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077398033 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069627717 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070550807 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074894475 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073816844 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069192743 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073309467 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068292231 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075368683 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08352038 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071596121 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073090231 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077518428 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079896424 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071486071 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.06638265 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.071420789 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075189241 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.072631478 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071819318 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.072321665 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085938496 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074386118 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071362349 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070028744 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.0764678 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071493593 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079407737 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071621238 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071279778 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076378772 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.07366189 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07808887 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075766949 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07835862 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074820676 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.075393277 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.07034814 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07266878 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068866657 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071097647 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071295776 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070850228 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07473026 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076684597 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070719133 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081906908 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080150345 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072946861 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067902544 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070847004 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071432497 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066049965 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071028436 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069143609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.069001832 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068710415 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069624256 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072305529 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075214304 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071981874 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070258274 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06987087 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064442618 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073364822 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073204186 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071891278 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067162043 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069633988 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.202157497 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.078043756 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074896987 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071386287 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074824622 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074816932 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073922078 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066988769 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078949338 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070988725 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074189163 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071492143 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071637039 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071749494 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074892148 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074816741 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072221443 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074013414 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075470743 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072964373 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068538799 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06833482 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.077028443 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069193926 seconds)
  done (took 45.509980873 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104074762 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067499848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06643034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066673684 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076644065 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068009701 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066587211 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06777334 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067679949 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069591698 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066557775 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06665918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074085173 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081253099 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076662912 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070686219 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066618852 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067674666 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066479768 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067735026 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07451369 seconds)
  done (took 2.750465809 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076586627 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082114158 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078806444 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086523389 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075808912 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07421044 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079243987 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073943585 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081990066 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076917327 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081912093 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074333362 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076830389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076925285 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076592672 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075063712 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082288216 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076065431 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074271783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079590802 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074482969 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079520283 seconds)
  done (took 2.956335122 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070812732 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.069990252 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072678043 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.066205079 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.070087439 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065694243 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072910413 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06855984 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072816389 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070595257 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.0705418 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070597889 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.073441959 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.0742687 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071906721 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068976579 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.111234726 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073963234 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070645717 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071135139 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066263216 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.073005305 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066491589 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066554368 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070142253 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072948382 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071000735 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.069169665 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070561802 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070684126 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070636276 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068605319 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072885321 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071468277 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070722163 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070765729 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072665854 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070372472 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066080441 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068429101 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072182444 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066693646 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070870817 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07238345 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068849893 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068833102 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072749632 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070099796 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06597215 seconds)
  done (took 4.729786591 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081206789 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112178433 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072106298 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092433378 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083103111 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076185574 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074967862 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093481723 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067821357 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068796989 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08526511 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082451767 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070419511 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.07493613 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076809567 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070062353 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070908835 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069242477 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073189321 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069445037 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073607975 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077048814 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083991414 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.08161787 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07376919 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069458224 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069633642 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074087918 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081446629 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074049286 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074579158 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07499955 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084406983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074807587 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069678835 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072121227 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084867052 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070593613 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072597571 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068282259 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071949633 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.074138868 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077355889 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085044714 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070183404 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074611057 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070182144 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067272742 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.08119408 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072008837 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076685682 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082738769 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073694617 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069869546 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073991898 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084216149 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070077221 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068386429 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07302368 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081395703 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.068276978 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073242752 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081940441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071531793 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076509811 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082611555 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075111718 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073247537 seconds)
  done (took 6.539395752 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079915958 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10077459 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086634979 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086530931 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080716773 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080426765 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080391151 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080411643 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.080313913 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084261866 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080341995 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119449708 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.085090229 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082462926 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080206306 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080379827 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.081221185 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080659807 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.080822119 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080635728 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.08090395 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086547483 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080652238 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086816548 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08370671 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.076149059 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080102651 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08016692 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086538484 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079896366 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083108409 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080349166 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080113706 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086676666 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083267728 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.080070425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070134549 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081036098 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080580197 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080347252 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.076169713 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086596684 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079991676 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.092093878 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079923303 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079339538 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086133059 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083163976 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081942932 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084222745 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079879154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087040927 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079990553 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080278488 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086547539 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088845895 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086486268 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086879907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08022163 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086823978 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086331806 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088931578 seconds)
  done (took 6.442753971 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084411963 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0766114 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088448837 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065933499 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068756128 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076280972 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06878629 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069515399 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077117831 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077127153 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079102119 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076097747 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079509388 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079151784 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076526861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079379285 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076655839 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07693982 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07769609 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076734518 seconds)
  done (took 2.824188519 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.080638949 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088250445 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071672543 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076169932 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074149966 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.076410166 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073574626 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074113794 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071741119 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074055186 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080006235 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080105156 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071797119 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076346436 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07986098 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.076133338 seconds)
  done (took 2.503393807 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087406479 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076267344 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082678828 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.07021314 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071711287 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.067087734 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.070308122 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066412581 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067182201 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082752925 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070207274 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.081649093 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070358878 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.069498907 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067405717 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075932441 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.068025555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068141919 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.070850888 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081488488 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.074524619 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068753524 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.074534602 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070520207 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.073590035 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.075250163 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069927599 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.071188054 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067857801 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071029237 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07364339 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07445316 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067798037 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068478761 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06977659 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067917678 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.07076887 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070625252 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076159807 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.07082781 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068972503 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072846184 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070330161 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071804213 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067141767 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070566301 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06700817 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073491398 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068269353 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073489536 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070158485 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072687294 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071124446 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.077742302 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072741742 seconds)
  done (took 5.239713321 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084990809 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074352103 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066313968 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068838809 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07399399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.0723113 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074036174 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071694085 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072886979 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068836362 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072374858 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074006301 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072487542 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074878169 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072412476 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074358189 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065938038 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072605268 seconds)
  done (took 2.600242244 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.077448448 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071538238 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.078621721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.071513033 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071033721 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073350096 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066342456 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069137131 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069273698 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071147436 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071951956 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073854728 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069322974 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073435198 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071473458 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071205246 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073640861 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069378137 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071417643 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066636486 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073971933 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068868119 seconds)
  done (took 2.858326214 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098517469 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.088375661 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143559086 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.084341146 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.091326073 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076937822 seconds)
  done (took 1.867697548 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096594628 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104505071 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071425748 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07378772 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080380869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075422102 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074765691 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076077533 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081968336 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08019826 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077828855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082543679 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082040863 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081908589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079706218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080331259 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074943223 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075058926 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071799354 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086828776 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075399024 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082031137 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075285319 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075138111 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075141685 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081564716 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082140908 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080224167 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074850111 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082545403 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080422486 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075330032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082614353 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079877602 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074640473 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082583642 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075515586 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087073188 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080120358 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082185725 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074399983 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080442616 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082942941 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07888536 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082297375 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075283667 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079079361 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07529988 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075643931 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088476132 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080163288 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081145143 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079749856 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082477504 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0821179 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088537425 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080585823 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082101618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080073633 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080321931 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081294872 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08028871 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081584618 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080071932 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080286889 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081970108 seconds)
  done (took 6.57705258 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1096668 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072078309 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075142032 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08024604 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081516661 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075262086 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075453343 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075227597 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075379057 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072307067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112246582 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07521425 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082113683 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081733975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075361796 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075197872 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075408032 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081747126 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07265363 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088713367 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075656622 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081721336 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081814894 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081782699 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080000119 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080330105 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075319348 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075347905 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075390721 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075157718 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079213763 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075901805 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0819224 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072286095 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081775218 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075607033 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075784225 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079476362 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075318717 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080501933 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082042855 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087378043 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075385578 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075619493 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080063404 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075262713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075520032 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072289856 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075594662 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072173457 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08029948 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08004436 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080139326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081949996 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075703968 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075274728 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07529193 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075369403 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075361685 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080424097 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081729321 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075123966 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089212392 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075493797 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075064976 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081540578 seconds)
  done (took 6.511149337 seconds)
done (took 134.20005073 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198989801 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175727575 seconds)
  done (took 1.651610503 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073731147 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101219068 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080781434 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133715629 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.07137012 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105595053 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.104311768 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082393251 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071718196 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072221234 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071912058 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073952208 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13660252 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071785035 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071607251 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074498507 seconds)
  done (took 2.692078313 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102615599 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.161366364 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106026229 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070410797 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102399791 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.07706516 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073047369 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079529809 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075622156 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07038663 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077069453 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075082186 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070451504 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075283656 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07630685 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076919465 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.071103189 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076837246 seconds)
  done (took 2.813942968 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100876234 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094444151 seconds)
  done (took 1.492637547 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161506409 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137649382 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206203184 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342548154 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.158045054 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.147622495 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14715468 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.146722827 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118077723 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.141204873 seconds)
  done (took 2.999614932 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104882977 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.153955066 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.276988947 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121340133 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.078691453 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095527124 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12306014 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.084745626 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084504542 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084485898 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083741391 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081357633 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.10378521 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078138419 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07988256 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080683054 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10762155 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.079228565 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079879865 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079994417 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.105444116 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071929718 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.078411483 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.079160903 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081015847 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081336794 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071817175 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071324729 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080153126 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080309372 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080629482 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094210044 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081528024 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.106113747 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.077078865 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.107200237 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081104365 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.078116681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.080330124 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077982535 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082458746 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082293675 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078844771 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080953101 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072231222 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081652064 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072048878 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.071638263 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.08147924 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072308013 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082218037 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080800477 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105827181 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072575822 seconds)
  done (took 6.164376649 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11142671 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110553333 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075266984 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117214795 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108557355 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074568435 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109629416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.103424881 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111738705 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.075638492 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073834712 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.075052561 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083409884 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08528366 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120021557 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111871667 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077552434 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.074293826 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112004011 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110959017 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074055401 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105986617 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101960159 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110364593 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072696254 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074531091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073721817 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074476944 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080197835 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082338493 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073500641 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082846673 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087132187 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081494101 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072528942 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.07325013 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073958446 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082209169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083086441 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082315541 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081079882 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072849811 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073413208 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07477185 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074161393 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073315039 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081244924 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082566116 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081523301 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073227673 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074565578 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073247098 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.0748214 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.082550687 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080165558 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083694462 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082860212 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073926858 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073995291 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076519932 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083657848 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083110109 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082066042 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076741133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082904032 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.074011596 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083848217 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086395514 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073760203 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074558353 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.074234955 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073661772 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074529767 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080542144 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080228391 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074607123 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072730087 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073172 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081849334 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080474942 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073023505 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079478798 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072221216 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07294485 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074413119 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074108948 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079897808 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082216813 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074518283 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073132733 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073077289 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072072896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071002301 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078260931 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080864274 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080234346 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079671602 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073144409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079529738 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078956658 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.208249018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083652862 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.074854301 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076403192 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.075619666 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08275091 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081459276 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083185765 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.0746398 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074406524 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081998886 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084000368 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.07470043 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081093412 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083779771 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081456152 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072607158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084434116 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.074619108 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0834608 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073850082 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083583501 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073774851 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082068233 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07430529 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072598049 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073123191 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081850395 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.075333806 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073759531 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.075384066 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07401156 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081695125 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084710162 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075103747 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080679281 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081390757 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074423341 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081147443 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074526618 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082520405 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074159784 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074899396 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07302347 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084884692 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073776861 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073586864 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073420972 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082749166 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07346572 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082733151 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080809158 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072471294 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083972147 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083504862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080647245 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083266805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074753296 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073669444 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073688081 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073609363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080388346 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082699658 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074793206 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073376937 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.08036466 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082452308 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072575408 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081143954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080697959 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081363979 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073546679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073758062 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084663699 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083672496 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080985542 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081484559 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080986685 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073581984 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080525586 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081191703 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073112911 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086335431 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073498409 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084492366 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081173166 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079493966 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081156909 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0824193 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082621923 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082838648 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084579428 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072165439 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.073128745 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079337119 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072043519 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072420589 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078795687 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073557608 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073412725 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083793538 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072730521 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.218131376 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074209467 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083833173 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07392313 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075781456 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086769057 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.074865912 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.078209253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082578174 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073436728 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082188513 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083679188 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081053266 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073538229 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074685269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083253117 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082841026 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073941763 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073922514 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074821075 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081358655 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080781384 seconds)
  done (took 19.512883003 seconds)
done (took 38.638857923 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.196967962 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149502179 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161899398 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116702258 seconds)
  done (took 2.008513808 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.113476771 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102242609 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093304061 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070040341 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099088713 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.07038709 seconds)
  done (took 1.883667583 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276912266 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193118427 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176821235 seconds)
  done (took 1.978101748 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.201860087 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18676388 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.433129893 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.264458262 seconds)
  done (took 2.514514149 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140592577 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089071366 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.07172901 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.0879539 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.129141554 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157423087 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099935918 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125111323 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083247706 seconds)
  done (took 2.362668095 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147915414 seconds)
done (took 12.228918788 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096310548 seconds)
    (2/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072507076 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.124891731 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079742019 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.2039921 seconds)
    (6/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.080182862 seconds)
    (7/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.175706366 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081351785 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.081991534 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.179183197 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.242833754 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.079498144 seconds)
    (13/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079281751 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.079049027 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079742223 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.147385736 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122398294 seconds)
    (18/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.180339949 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079282202 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.169223233 seconds)
    (21/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.19327196 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.114778 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.314950768 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182415333 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.057409166 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.079229792 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.153409921 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077911217 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.075212024 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105862767 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.220016445 seconds)
    (32/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.087743192 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075351001 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.10546612 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.091896251 seconds)
    (36/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.114525828 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082218896 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.116466752 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084915391 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.175862345 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095505244 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.120557256 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.156041602 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078702316 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162265623 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069661779 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.227928425 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.171941087 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.149936205 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087728574 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.077504419 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.121352671 seconds)
    (53/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.191371254 seconds)
    (54/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.095699607 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.204567562 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081527469 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 0.071512158 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132679741 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095298839 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077008383 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.090852952 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09123886 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.174466456 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120841438 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207963969 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.121804789 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.092756763 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162842788 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069872201 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078389526 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084297631 seconds)
    (72/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.115626694 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.181324113 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.084568776 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070729144 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.081235512 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.069163282 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095883725 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056460681 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.185628326 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.07351889 seconds)
    (82/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.169017354 seconds)
    (83/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092738293 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186606015 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.069282559 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077386033 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.079707221 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077944855 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.16802006 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156920491 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.08221995 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.075504858 seconds)
    (93/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224889968 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.081902168 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124541828 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.134126687 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.077553839 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174093084 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.146063921 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.092587505 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.077324614 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.057325325 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.149890732 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069500132 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.113723893 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.097277812 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.075263277 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.0693237 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071370125 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.056445074 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069461235 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.075442506 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082183601 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.101717958 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074753999 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079743724 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160101843 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.21137403 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071977102 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.102874617 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154019259 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076687894 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076654676 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068887869 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076927739 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178947155 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077244064 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071450385 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 0.133825675 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.069105921 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.159625683 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.06999735 seconds)
    (133/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.057454434 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.058089975 seconds)
    (135/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.067466343 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138815406 seconds)
    (137/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099693928 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.057955747 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.056889457 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.175152446 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190717621 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.055647178 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.075131597 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057279954 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068843841 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077555718 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.189798149 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06809562 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09410226 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092619322 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.068983357 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075703553 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066889889 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087941034 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.075431761 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.106691883 seconds)
    (157/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.055911809 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090170445 seconds)
    (159/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122036878 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055531293 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077523177 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076520003 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088468223 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070981307 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.055671186 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.055620306 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149269456 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.057555049 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.127606938 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068750349 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067269559 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080729476 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.056408069 seconds)
    (174/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.080253394 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055684739 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084890394 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068518188 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147090473 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07809594 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070211851 seconds)
    (181/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.117286295 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076465602 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.055394837 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075569198 seconds)
    (185/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189604608 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.347344027 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.175284207 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.061645082 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.08190442 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075990675 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.073505455 seconds)
    (192/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.060584702 seconds)
    (193/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.058950629 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.059986932 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.086397173 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.086787207 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.071738886 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.074498146 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.075189298 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.084324178 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.083448381 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.099777571 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.059417652 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.083144531 seconds)
    (205/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.122843216 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.121759391 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.120108575 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072281401 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.079368473 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.210715557 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.072211358 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.058256942 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.156282873 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.059096133 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084707828 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078678264 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.057902806 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.098216324 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.134502555 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.081078711 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.079180621 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.147257334 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.072365683 seconds)
    (224/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075559615 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.072421896 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058895481 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.072215082 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057859846 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073053293 seconds)
    (230/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.070014332 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093873901 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.07167695 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07919706 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11274044 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077481776 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.113358719 seconds)
    (237/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.099907746 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.072464113 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080553198 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.059842548 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071690087 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.059200321 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.115548844 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102292399 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058504187 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.058377258 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092374846 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.096569342 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.198743135 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093257264 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145014507 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.058001294 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.070318881 seconds)
    (254/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.058500648 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.070851838 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.058028128 seconds)
    (257/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.059121898 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.094109004 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.058822125 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.059606573 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057576381 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.059363908 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079562724 seconds)
    (264/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.076151417 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.058887024 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071489629 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.071337154 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077918401 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092001488 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182540775 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057870216 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.162539531 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.072975893 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.079775682 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184709287 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.077557753 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.059738319 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.07431775 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.093513683 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.05777027 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070654871 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 0.135525518 seconds)
    (283/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.057369349 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07935472 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.072236141 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124108238 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059075582 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07094067 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068758123 seconds)
    (290/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.080340962 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057777407 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078340767 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057819455 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.057314679 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057388523 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.069231245 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078653973 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173393408 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070506219 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.077832897 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072276488 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077215904 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078675423 seconds)
    (304/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.098286391 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070968652 seconds)
    (306/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057795496 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.232589969 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.099731678 seconds)
    (309/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.076354021 seconds)
  done (took 32.37805497 seconds)
done (took 33.722873304 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09056363 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100962505 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.084624749 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101537455 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08959844 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.086245759 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.083153861 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.087335495 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089922764 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.091786637 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088221729 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.064414761 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083984165 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083547073 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.083923693 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099601168 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.088070386 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081555152 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081727382 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07232836 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081372538 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073223239 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074654085 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062472861 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.085977524 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078803742 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.081828907 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081339657 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072203585 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072055093 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076745681 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080815308 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071689064 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086457238 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.080294046 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079709647 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.081205574 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083379687 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073838096 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072209679 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.081957776 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071902882 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.080029334 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080267761 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.078635318 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077670946 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080096343 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.083534074 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09621939 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074924955 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.082215628 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082613155 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083360421 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079592258 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.076396944 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.080070749 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077801131 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096804592 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080127944 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074106654 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.081614549 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080603354 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077734427 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07972202 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.080111433 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.082173754 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.083629508 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.07766404 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08184316 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.078223434 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071982323 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.080497153 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.076263024 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.07513536 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082751083 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.084600968 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.070839293 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.078577636 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079513756 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.080027676 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.071137581 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073555009 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07329685 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.078610814 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073781866 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061441609 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.076184288 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.078756755 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.07089806 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.080290343 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078435538 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079398352 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.073077571 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.083522581 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.07151457 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.077149212 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071690553 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.072009013 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072914211 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07607145 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.071017053 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073300803 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.082185673 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.073080337 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077920333 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084301359 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.071249975 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.078620057 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070490488 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.070717154 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.08409629 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.081400309 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.071269164 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073877141 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.070659887 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078911005 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.070691641 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.070892877 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.071340699 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.071282937 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.077768826 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071310504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073121126 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.0784478 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.226859963 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073006048 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.078180027 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.075332811 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.073491094 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.079376926 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.072366665 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072712164 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.073693054 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.068945972 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074311859 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.072393191 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079688628 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073806268 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.080704935 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.073343359 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.081141026 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077228718 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078906541 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.078134908 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.071563229 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.066725277 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074578512 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.074027078 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07359717 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071495144 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073194458 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.071540808 seconds)
done (took 13.506444819 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.072678915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.137738943 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098426383 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099958505 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090209407 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072788709 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.080442506 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099829476 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07354881 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102967747 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092905721 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.091395716 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114353943 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070954614 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071902794 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076454339 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.073989076 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085119313 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101051353 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.092247756 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116558619 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.07173935 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096195889 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093922671 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.091055125 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.106490713 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.073381639 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.076274332 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.07582103 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.096214778 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.09517513 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07655779 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072927948 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.100601748 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.096718766 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08892566 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.072252444 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087068769 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072931119 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071681434 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073848829 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.100483597 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084408036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.084822401 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07626525 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.082546091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.073279006 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086775455 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092791834 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083156177 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089209495 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102633934 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074028604 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087899314 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070391999 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088767631 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081177486 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.074425312 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.072365833 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079658572 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.072112992 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.075338691 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084845936 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084094094 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075700672 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.087852338 seconds)
  done (took 7.125299833 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089359281 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.102665563 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088916934 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.089410088 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071833423 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.072220802 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072943985 seconds)
  done (took 2.082474694 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072532273 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.09260387 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093073409 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092770613 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086109953 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.095591321 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082271167 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.072719316 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09731434 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073646382 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09217097 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102368163 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.075684856 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085752255 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094232549 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072896379 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095058428 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.07249334 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075589143 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094413784 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078347463 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.102321488 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.080169891 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.07275343 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085809798 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.073056288 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117971077 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076894435 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074827309 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075717163 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074042722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111448341 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085064946 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079776963 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073113631 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088033427 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085934528 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.07575954 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083587081 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081576853 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085614371 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.07270715 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073700612 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07411019 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076868403 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.08229193 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.073793177 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076845041 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075209772 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091702315 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07130035 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085097277 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.075236802 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077689798 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074342737 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078720101 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082923888 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073186594 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092028211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074322886 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087704298 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087289076 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085576673 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087214167 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074964782 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085613463 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085657191 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075639479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075330371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.076548306 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087122239 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.071590242 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.074371442 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082574451 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074885199 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094664537 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094458726 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074157146 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.08560669 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.073260668 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072749941 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072380942 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094072089 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077763858 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072850248 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076775125 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.076326153 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.076298964 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071364589 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076682748 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070875112 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.078878729 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076169574 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075632007 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074861192 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087418554 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.075174281 seconds)
  done (took 9.384135395 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075108161 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074051106 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.075835815 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073351728 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.07366343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07412995 seconds)
  done (took 1.967187404 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094674452 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.074210922 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084980464 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076949353 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108352472 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090877878 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091776271 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082368268 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088257625 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083737261 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090782741 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092336884 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095787198 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.077381739 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091080351 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076335692 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091568437 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079331571 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.083522841 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077898147 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090428108 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077568426 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078370149 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.08587417 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.08094919 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.077216035 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.084328385 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083640449 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083442095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082808082 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077255375 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.081018383 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07563959 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081698995 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.09146492 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075728973 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07938968 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082531841 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076837548 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080472932 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092648352 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077947872 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.079497221 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.082069061 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082252527 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075927724 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.08250184 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.084156862 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091116864 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082237131 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082837243 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077113461 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080634117 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.082163647 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075751825 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081516527 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081956284 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091551404 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.077190549 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07561988 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.074209521 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080778183 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081973007 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081244883 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082148951 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081868605 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076056252 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077600492 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07783849 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076852851 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.082643759 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073979548 seconds)
  done (took 7.434993325 seconds)
done (took 29.476561242 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.540953172 seconds)
  done (took 2.017836741 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.608123596 seconds)
  done (took 2.11441856 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.518246436 seconds)
  done (took 8.021804764 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.375844598 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.48179118 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719124103 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.13932641 seconds)
  done (took 3.256532343 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.722463563 seconds)
  done (took 2.23880285 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239055541 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230707991 seconds)
  done (took 1.990510866 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380020486 seconds)
  done (took 1.884385508 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.125424436 seconds)
  done (took 2.63238091 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242283447 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181676128 seconds)
  done (took 1.936342447 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.445577347 seconds)
  done (took 1.956937736 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.874372845 seconds)
  done (took 6.387222938 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.224229906 seconds)
  done (took 1.77763333 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240380086 seconds)
  done (took 1.754009454 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.749379081 seconds)
  done (took 3.262485158 seconds)
done (took 42.748507224 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088554785 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090499782 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.090778585 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086517546 seconds)
  done (took 1.85088563 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081595063 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078451217 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.08119315 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077946803 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081635618 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077787502 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079459726 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080739555 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.078048309 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07850828 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.078356679 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077940931 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.080032125 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079668709 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076542198 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080897159 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080948521 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.07798948 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080606532 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077785733 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076509548 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079819002 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080201753 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076790666 seconds)
  done (took 3.414450374 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084408263 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07882545 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080970518 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077471453 seconds)
  done (took 1.842159838 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083955867 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094474359 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093066046 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.084220789 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.095294786 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091353829 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.074812146 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.074428458 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.076007053 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.084497283 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073343749 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.099304824 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092641996 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083385659 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.085681429 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070995963 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073199685 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091764543 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.084327874 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.084497368 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075715772 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083949944 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073734908 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093782418 seconds)
  done (took 3.534808878 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.085995026 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10617025 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085332756 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.095573295 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.097844367 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070647632 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084429807 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097393923 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.131015805 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.07067258 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076763644 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.071440259 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.080130679 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.074359515 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086272631 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113134616 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116586934 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074886666 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103018934 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071392526 seconds)
  done (took 3.318785188 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077798446 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.075684371 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076033745 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.07102818 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082532745 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.078638316 seconds)
  done (took 1.99005249 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07326816 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072637561 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072718101 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072550096 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077394603 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072901849 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071534536 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073109831 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072504018 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072459004 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.072342325 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071629138 seconds)
  done (took 2.398874864 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.185396897 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073993086 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074012194 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071342032 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075803684 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072632087 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086885976 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073206645 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097374641 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072597727 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072101597 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074001215 seconds)
  done (took 2.554552217 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19831627 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081328175 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228751702 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153608576 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110772318 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115214426 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114570036 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11445446 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.138916232 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102121847 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162509087 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16279865 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109409731 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139005521 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09387425 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106671536 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152877973 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165759345 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109318775 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163985117 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143644518 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129495147 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14711824 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104720399 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10825588 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121017009 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076703413 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08436357 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167082553 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132621427 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143289603 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114099529 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094848312 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178980566 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165620256 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138449707 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148723012 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087269886 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105555323 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133400377 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200324231 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093105925 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30397081 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114796244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085285141 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134946331 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120892962 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122541672 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107094975 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093900303 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144850506 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177243991 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135170684 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089884598 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12485164 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114128142 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113842033 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1158097 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17402379 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157981579 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129752593 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076532058 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109954557 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15019074 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136108914 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109423158 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.12454885 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094712539 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132531358 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153143291 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123500994 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140834209 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116493661 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091904778 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122232645 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138251939 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128263407 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159528723 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126412301 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078235979 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124112356 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102115696 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084762984 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.149177429 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079948143 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172011711 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102771921 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108884283 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124409893 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109678516 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109841931 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153937396 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.286307643 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107464147 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073243298 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110085541 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120903265 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143881509 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091643641 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110397336 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117150755 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081960337 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134627913 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080361507 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124461499 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082662312 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12430192 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130942361 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082427889 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124467722 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10660014 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105130493 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1307205 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157368609 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091623614 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085484859 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163437187 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123764782 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105330294 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142016862 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155236966 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1053504 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101462634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145551442 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166676512 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.093492324 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161053311 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107079486 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087572759 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092057639 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125139446 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112862863 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125245549 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085822732 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119334851 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161661095 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079249273 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098518349 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134357007 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08297654 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084147047 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106390414 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106183378 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100339803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101519178 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103936356 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135310105 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276061325 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108601252 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125734002 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102377536 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165953423 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091644561 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10668503 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107591276 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07556541 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13203877 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152787019 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082891817 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157127367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122339383 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117673486 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121430387 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087725479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1359247 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083787104 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075562925 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140185437 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113575631 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111452902 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148226214 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117877927 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124474488 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119508152 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131595949 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130795899 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130236888 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109208042 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.093229178 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115050952 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127789887 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078517049 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093596297 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084368506 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108015544 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098291529 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087837877 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140353027 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123924701 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110617408 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114845188 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099314308 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144724522 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080626745 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126983339 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120800868 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098528649 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148589861 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148526605 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132730917 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101426573 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283032893 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07662053 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079403289 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090945042 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124622219 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087947182 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087562709 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115899143 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145089963 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128895184 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13495828 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124358786 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120995986 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152375146 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075555719 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.122742385 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143016302 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122854176 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108230785 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094540262 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102383627 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14078049 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107096423 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173092376 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116548018 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126257567 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155758406 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.10646805 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084139373 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105843563 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132145775 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105597696 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143001249 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102030858 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091897743 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110694921 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080949165 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100512642 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12748691 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120386285 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13786662 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115741243 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133314054 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082394639 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114853624 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12275821 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121542964 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069848137 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119391267 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162303258 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098004113 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117892645 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29883874 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084994007 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138971014 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169840338 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14366325 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088699579 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109159072 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122164162 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125825285 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121082142 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135953523 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106951994 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137612877 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112884839 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089967479 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091108209 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09911629 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106410157 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.098688772 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105367971 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115428975 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.099635265 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131352146 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105655394 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112891713 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119909881 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10409667 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096992314 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100155289 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171452899 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120326064 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166468834 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104197132 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.140097741 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158313767 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080210435 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083895666 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083284637 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136761423 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089189067 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131351169 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112943995 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118354227 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125554557 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137355753 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098581805 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.074115819 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111072802 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131999807 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123854883 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100472243 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104332672 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158006007 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102513956 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08271226 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261226108 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118674536 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107273612 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166484519 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068209554 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109438022 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081642697 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084204397 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126596956 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147799145 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085492267 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.10275517 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121843974 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113486072 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127114761 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100866337 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111373662 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125311745 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145485566 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127657556 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093323293 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112143194 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129963831 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152902767 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105109378 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101795441 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167551183 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149279284 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.15636564 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089740084 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116527633 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116593494 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111483272 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137042701 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08815359 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158453798 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086240189 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13579988 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10506107 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091564596 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128891903 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113027384 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091566586 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143432869 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117797436 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086758545 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081692548 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116372938 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119552125 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105161089 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079305755 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286189746 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080196238 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134269451 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159226786 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085143575 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108348458 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099392287 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085077768 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106659407 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105297292 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090483928 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103277811 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167026701 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089717233 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145868611 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133181238 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114126334 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134108401 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105233297 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643877823 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081776547 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147979006 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116277318 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16800109 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10241539 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119852347 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112236987 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121766441 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141683099 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104769197 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.182490376 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1315649 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.118104259 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083321532 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105213547 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106416111 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090597695 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109851053 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115879557 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117051006 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097347354 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.118010764 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124304557 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087776844 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098928932 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15219818 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115845647 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141911207 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135547554 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087770104 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118711287 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135120076 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232593472 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.120108173 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148956479 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108924075 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10193974 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08555427 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102329908 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157986161 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078393348 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172174926 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124772836 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112572382 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115189909 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110771017 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131546275 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107312603 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123672062 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095332901 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10951754 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11523459 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085756973 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081578796 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107653344 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112421108 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.10251792 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099704959 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103535855 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148857855 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077593443 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101428099 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117530165 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141936823 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167670924 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092740255 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087369583 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122374193 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118116723 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114453228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123073433 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.08361885 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086233439 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.083960663 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.087320023 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110348751 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11632166 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116033085 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111938289 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157088403 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087761469 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23070905 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098515097 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107018016 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.075040708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082210485 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099154282 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099253357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.255288824 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111515497 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157056242 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099717999 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093801495 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094696399 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.080401466 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087454791 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126229195 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113258003 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119841188 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103516216 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068994161 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109224567 seconds)
  done (took 59.664920738 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111050199 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.087273912 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101742833 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149625425 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126468572 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204726982 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.1569557 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193567047 seconds)
  done (took 2.759325814 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073649167 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099315168 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108436304 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.088352521 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.072528096 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.074117794 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.226885462 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085813581 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071743964 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.097095754 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082293703 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073934436 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.41026518 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.07152143 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072542673 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066960465 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.073058725 seconds)
  done (took 3.465381807 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.397297759 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.616311262 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345364487 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.082672038 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.967753897 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095855952 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.314265064 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139073067 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083645443 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533319093 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414064826 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134025077 seconds)
  done (took 18.74757105 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086104743 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.0801997 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.093302058 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093312262 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083002935 seconds)
  done (took 2.059138874 seconds)
done (took 109.144302572 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.087388165 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418812789 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.059935294 seconds)
  done (took 2.129249617 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.091615302 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090028274 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089751282 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087440665 seconds)
  done (took 1.989326554 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.08013203 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082084202 seconds)
  done (took 1.789814519 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229462661 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172989898 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.101103061 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087090699 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085100792 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084798036 seconds)
  done (took 1.889646211 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07690637 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079921755 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077313455 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.08078605 seconds)
  done (took 1.942988232 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080297302 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058242732 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060156005 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.063340018 seconds)
  done (took 1.891323592 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.09108679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.089040953 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083342913 seconds)
  done (took 1.893315583 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104359043 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092763225 seconds)
  done (took 1.82707964 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085501155 seconds)
  done (took 1.716665312 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093364118 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102656429 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.135691153 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118083405 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142109777 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118371468 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089636923 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090373684 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.083787506 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090919711 seconds)
  done (took 2.696327006 seconds)
done (took 21.978327651 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08356657 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.371060195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365078925 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093650641 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674737303 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.362259172 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990311068 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097389786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.144449522 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073167478 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089707333 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.654332108 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982999653 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33337101 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969330773 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331068549 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656338329 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074759808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073671498 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073849617 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.977952784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073800723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073705117 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074494147 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655383855 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.378626362 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074087489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.335883173 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074115446 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075785146 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.377934343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074431483 seconds)
  done (took 16.350923927 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075318382 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.12388378 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078280729 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089883306 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076267138 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074963425 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.076995766 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.074961962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126240057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073492513 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.09056612 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073687754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.077688752 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074723436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093607202 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077177249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075038548 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074753607 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074319507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074484223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092337512 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074448293 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074102476 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074489073 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073887328 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086719122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074756326 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074151442 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074623252 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076519524 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076857557 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074786297 seconds)
  done (took 4.225497619 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121394939 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128778585 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078470737 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109212636 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117933678 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076615144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149216964 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098632929 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132194159 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073995063 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090762115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075031963 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106644606 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075175819 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093604079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074406849 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075314456 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.074575398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074315401 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074967579 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093080037 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074715907 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074575584 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074781579 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.074435151 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087694577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074426293 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075099292 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075040477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076747057 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077940892 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074759474 seconds)
  done (took 4.477278701 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.078665345 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080504158 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087560251 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089062844 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074595462 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077236107 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078789402 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075035274 seconds)
  done (took 2.288796502 seconds)
done (took 28.978330856 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084096094 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07492299 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078336897 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.093413549 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079992961 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082871711 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07258389 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.082307397 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.078836751 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079274478 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080431984 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073135049 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.077592669 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.072655474 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.079811511 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.073736112 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084425496 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077749231 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083958045 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084355157 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075724541 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078796276 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081457527 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.08397332 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083384522 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083438399 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082383016 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.078380505 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073952835 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076280721 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081860665 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089349362 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073607757 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083308866 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073190995 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073092898 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077346179 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073345774 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083422995 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081853925 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074975702 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081948476 seconds)
  done (took 4.957120392 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092621509 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097228656 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090143464 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068211164 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.073054598 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071033311 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095289985 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065843647 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.066745981 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.094331907 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.062880047 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065975161 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069341633 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060632195 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066658237 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063793377 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068185607 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062000159 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066534917 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065785115 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094710391 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060562341 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083279369 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069154856 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.06255164 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068210761 seconds)
  done (took 3.56006472 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080477266 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08792548 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095562237 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148477197 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.116072529 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.0832854 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084562477 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097901406 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099123 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072238511 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076373899 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099052895 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094006734 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079330618 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073378669 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089424103 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.090269349 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.074920278 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078273403 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099915674 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091252234 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090337655 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.096829359 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08703061 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07198623 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075370352 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.07661853 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085530344 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075854815 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082303492 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075647166 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076663804 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.07500707 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083926615 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075862639 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074877326 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099343191 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083246201 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083960989 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.07409937 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08128459 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074461893 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096415944 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129126624 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.072547871 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079140292 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.076992524 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083171282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072730906 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099804262 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084507298 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073100853 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07640918 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.072404149 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07281599 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076082578 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.074772393 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075094922 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081835344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079270219 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097183498 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078041425 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089000419 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072732985 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08169505 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072185929 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074571178 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072461753 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099459874 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074978793 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113468507 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073732179 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074167148 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082316589 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081232713 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079359835 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073151642 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088863774 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083258264 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075983104 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081376302 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076191097 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075996224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101919441 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.07613676 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075294895 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074321986 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.078743865 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.075762106 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.074086454 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085893925 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072760899 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076025792 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089879606 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073523904 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074379204 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078558714 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.078050991 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.073073832 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083778859 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076885743 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073831692 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082264855 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073521569 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074975423 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084735846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.079771174 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071811179 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.0763334 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077867444 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073711563 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.07424933 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074970077 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.0747844 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081397269 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.080098688 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076970209 seconds)
  done (took 11.266051013 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166935473 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155964706 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075857325 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149649161 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081900087 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083830722 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150741703 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097686563 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.073262475 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074415266 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073495136 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112669491 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107711315 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118775299 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083135797 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073243841 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095713729 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117400187 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152178462 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148025273 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.095862082 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081433209 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.075322828 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.074520327 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075806437 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082657713 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090609104 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081750939 seconds)
  done (took 4.543786662 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084325971 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107517861 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080397992 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.095279732 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094625523 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073796836 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075377469 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075173786 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090740273 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083184922 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073386289 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077531812 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079845515 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075963325 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074019437 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079767364 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079812051 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074405185 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.076909983 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080500489 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083632728 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096593988 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076460464 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.072711511 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078179466 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072714156 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.06858428 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088743222 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073727797 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097699416 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071115245 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078078218 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087449415 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074160479 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.073149268 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.072988838 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073749084 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07314105 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07548199 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071980511 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071542642 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063573597 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072499365 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083666977 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08661554 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062029768 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078092336 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07850916 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078876918 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070861473 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075967793 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.0761408 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075743622 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081081804 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077192011 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.078481623 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074687506 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.081719775 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081973144 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073389805 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.070113546 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.07185142 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077813147 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070046859 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.088565879 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078483249 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072062628 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073146087 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0749146 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086402692 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072987086 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078281509 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071371001 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075354928 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078275423 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075196186 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074580286 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.071856723 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.073460505 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07339652 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.06108631 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073466237 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05900991 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075782009 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071610647 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072172941 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073290199 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078096195 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084111133 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074352889 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079175034 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.074676609 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.07265771 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076286374 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065633907 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075771516 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083922214 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087509603 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073834765 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071230324 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086015802 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078047503 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072529361 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063445325 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.078027628 seconds)
  done (took 9.76084949 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096255032 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075510057 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087777891 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.094734789 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092049783 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080219626 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.083869266 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.074742872 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089693962 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079832795 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082714508 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073804225 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084144173 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083297104 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075225527 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084068394 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07725537 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088456771 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087656676 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073570041 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.082086152 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085798442 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094328437 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085945071 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.0841794 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085866797 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095384573 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.082741608 seconds)
  done (took 4.062635073 seconds)
done (took 39.7902534 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.751622105 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.985177786 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.729970102 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.061544085 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.803053072 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.900305841 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.809674435 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.7218773 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.847050167 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.757011231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.058288854 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.823581017 seconds)
done (took 65.034601052 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.777093347 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.862924809 seconds)
    (2/2) benchmarking "String"...
    done (took 1.952048251 seconds)
  done (took 5.46511304 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.919890086 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.398078782 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.95983725 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.722487317 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.72930284 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.980160726 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.518439578 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.27081075 seconds)
  done (took 30.232435429 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.883153767 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.949244678 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.416141853 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.448256615 seconds)
  done (took 15.395792885 seconds)
done (took 62.526330053 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.736898936 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.768494897 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.738732736 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.709418939 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.782840829 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.735395547 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.936300835 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.778695352 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.72498781 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.711163006 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.725322001 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.1548153 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.725776754 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.95758632 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.72467545 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.733814059 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.738199047 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.247778192 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.879845509 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.740505582 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.732479837 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.781099418 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.728301223 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.734361885 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.726101178 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.725332232 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.124813473 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.726517133 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.549406058 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.729109619 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.7720268 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.173826868 seconds)
  done (took 202.407165297 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.723928093 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.763237955 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.823956138 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.732244834 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.198184097 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.909650154 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.824787047 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.239811535 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.732929905 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.749029746 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.934034644 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.726272608 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.947736707 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.671537944 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.774183409 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.729871189 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.86868121 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.9427931 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.778178023 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.893588875 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.751785291 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.804262738 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.763089439 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.902088362 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.737911788 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.748782404 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.746323118 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.736617354 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.91993111 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.857747709 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.730029653 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.750194238 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.932407083 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.598337864 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.72930269 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.732054077 seconds)
  done (took 168.060836547 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.915323237 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.727182214 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.725436403 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.725502025 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.725036134 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.731220522 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.726395897 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.850235823 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.855265603 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.365184371 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.088943003 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.780769035 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.726162852 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.534562145 seconds)
    (14/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.725949288 seconds)
    (15/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.726332892 seconds)
    (16/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.794030728 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.737919848 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.728263744 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.740533077 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.752870199 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729450039 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726274746 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.854966073 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.739955853 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.727319796 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.734031238 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.726501931 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.732747517 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.097922873 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.727191896 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.926959053 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727952939 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732923334 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.967945708 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.726805877 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.726911855 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.585627578 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.308907279 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.810065026 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.729210178 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732936983 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.727537381 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.945402992 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.728465181 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.726788587 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.727919729 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.731135596 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.871414868 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.731598948 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.851250335 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.730826124 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.206446701 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.731307488 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.727485602 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.549049299 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.320495474 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.731071672 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.730792516 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.726931177 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.7285665 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.734852308 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.453880799 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.802459555 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.730610095 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.73188624 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734087474 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.729010934 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.770262658 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.729038579 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.170941984 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.787085918 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.848078037 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.850704158 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.729444243 seconds)
    (75/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.795665772 seconds)
    (76/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.819410717 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.726664068 seconds)
    (78/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.725833269 seconds)
    (79/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.725915162 seconds)
    (80/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.726269238 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.806792848 seconds)
    (82/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.725953767 seconds)
    (83/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.850893508 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.733899965 seconds)
    (85/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.727883995 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.777923564 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.795356333 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.727235764 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.566596574 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.726825423 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.72599569 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.986606087 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.790616573 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.7239988 seconds)
    (95/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.723304113 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.724925865 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.849085162 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.845810558 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.433067367 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.727312143 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.719085522 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.493009606 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.856829921 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.719617034 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.864837446 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.721556564 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.800281836 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.723667354 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.720408589 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751305503 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.719000558 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.772156377 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.718101864 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.09181056 seconds)
  done (took 396.402043612 seconds)
done (took 770.494131226 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.340728993 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.310709867 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.402951028 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.324503886 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.300412164 seconds)
  done (took 13.326249386 seconds)
done (took 14.973749231 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.80617729 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.81237765 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.742889581 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.809039227 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.740116168 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.808238954 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.791170527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.744279522 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.776292407 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.742528177 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.778520846 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.744504968 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.72992394 seconds)
  done (took 24.673714156 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.960262063 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.95129023 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.789453787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.950168927 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.765559027 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.955776855 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.881838631 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868823035 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.873491447 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735174974 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.730713347 seconds)
  done (took 22.110637575 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.968841767 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.956310866 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.799055546 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.954318539 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.768640565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.958599391 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.885581492 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.873657481 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.869850361 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.735726164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.731541646 seconds)
  done (took 22.149051772 seconds)
done (took 70.581911982 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.728234863 seconds)
  done (took 3.375192192 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.754975965 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.924024603 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.733426442 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.730529172 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.725952613 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.727215929 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.729894441 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.725937738 seconds)
  done (took 15.699731876 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.728038862 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.726255917 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.724406631 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.722993312 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.72377083 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.726673886 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.726897978 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.721566933 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.721075074 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.724230662 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.721863195 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.724937967 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.719218141 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.717029053 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.720414606 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.720781251 seconds)
  done (took 29.219118068 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.718629884 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.718634724 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.716873358 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.717537667 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.716668271 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.717230173 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.71860934 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.716213921 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.716258918 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.716664294 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.717661158 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.717012592 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.718490339 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.716389756 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.716246291 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.717135715 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.71531411 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.716801115 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.72195214 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.716433063 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.717424582 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.71465665 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.715606434 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.717045091 seconds)
  done (took 42.856173725 seconds)
done (took 92.798418928 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.447682286 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.69554941 seconds)
  done (took 9.784203144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.719585826 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.719512278 seconds)
  done (took 5.084774414 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.71939437 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.720610294 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.720026819 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.719144313 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.71930382 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.719067607 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.720003035 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.719737827 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.722117288 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.722341534 seconds)
  done (took 18.843486612 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.721413635 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.723033994 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.719724866 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.721606384 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.723221582 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.719551703 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.721366993 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.722625111 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.722254222 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.719419867 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.722980194 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.720008958 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.723560503 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.720258216 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.722543809 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.720369855 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.720404571 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.72020973 seconds)
  done (took 32.628458637 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.724249725 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.72132576 seconds)
  done (took 5.091122839 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.719654924 seconds)
    (2/7) benchmarking "second"...
    done (took 1.719950756 seconds)
    (3/7) benchmarking "month"...
    done (took 1.719478106 seconds)
    (4/7) benchmarking "year"...
    done (took 1.719386427 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.71830663 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.718222007 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.717647856 seconds)
  done (took 13.676788835 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.721993004 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.869731961 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.925997246 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.349061463 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.720803921 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.721992458 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.648226353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.722414511 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.723015709 seconds)
  done (took 19.046709217 seconds)
done (took 105.799378488 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.599750192 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.715344989 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.951903278 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.771106985 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.771771106 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.052393089 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.72697811 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.990388975 seconds)
done (took 42.221025782 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.712614442 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.398968089 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.438385045 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.736170491 seconds)
  done (took 15.208188966 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.691599637 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.016537999 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.718726171 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.549394046 seconds)
  done (took 21.614320317 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.079068182 seconds)
    (2/2) benchmarking "read"...
    done (took 2.053748984 seconds)
  done (took 5.770729873 seconds)
done (took 50.945218444 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.711584232 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.711577982 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.708472316 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.711720206 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.709015108 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.708909928 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.711990681 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.711587932 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.710910334 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.71122115 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712541252 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.708498862 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708355676 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.708111965 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710891462 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.711016378 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.709624806 seconds)
    (18/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.710402977 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.709185339 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.70952983 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.707790841 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711073319 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.708691483 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.709196373 seconds)
  done (took 42.676278653 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.71170777 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.709731655 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.711644482 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.712532766 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.708124615 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.710704669 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.711438717 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.7081565 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.710744987 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.713154987 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.70925622 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.709242914 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.710749517 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.708923909 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.710941095 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.709311611 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.71051795 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70798128 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710564002 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.708322436 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.711305444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708184897 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.70764652 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.710685904 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.70751473 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707000122 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.712862841 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.707977037 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.709920269 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.706410667 seconds)
  done (took 52.927258528 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.714651168 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.718839195 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.709243972 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.709165568 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.709747669 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.709330657 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.709245383 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.710620242 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.709025713 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.708678189 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.710124885 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.710141274 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.710008276 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.71041168 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.709563871 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.709336588 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.709655508 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.708948824 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.709267319 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.709789567 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.70944746 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.709700793 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.710239751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.709953079 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.709879342 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.711079209 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.709408769 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.710037314 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.709252885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.70927362 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.70995754 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.708882206 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.709568634 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.710194986 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.710124435 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.709124757 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.714326866 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.716406999 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.710098718 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.709413578 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.709321952 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.710399482 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.711418445 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.709642118 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709808501 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.709033498 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.710019407 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.709553919 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.710844543 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.708937235 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.710185507 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.710201955 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.709730941 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.71036118 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.709682991 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.709932539 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.710252417 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.709762419 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.709292353 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.710622524 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.711457518 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.708881256 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.709761926 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.709585718 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.710204581 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.711228265 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.708705668 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.708675618 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.70882609 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.70911915 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.709770056 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.710077062 seconds)
  done (took 124.762106721 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.708892614 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.707053281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.706347201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.706872294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707429447 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.70907095 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.706459588 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709183121 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.70554675 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.708848586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710553317 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.707351397 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.706995439 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.709623324 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.709533249 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.706115225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.710946523 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.706506047 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.709616777 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.709289067 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.708902781 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.706827726 seconds)
  done (took 39.210100786 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709322716 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.710118689 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.705967157 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.709888206 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.70634147 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.710443843 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.709680714 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.709789332 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.71004712 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7076669 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706796681 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710800465 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.7069075 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707129028 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.706005262 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.706706216 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.709840654 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.707290603 seconds)
  done (took 32.384652188 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.706909472 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.706730971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.709259748 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.70909852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.706405452 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.710334247 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.707020706 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.710147859 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.709072501 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.708286892 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.710775686 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.709009518 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.710539191 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.706480162 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.709971542 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.708225981 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.709917656 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.707624843 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.71016549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.707021619 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.707194834 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.711664413 seconds)
  done (took 39.224775833 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.709637374 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.710385945 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.707777856 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.707970836 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.709215118 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.71036187 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.710245659 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.708136953 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.710753287 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.710860613 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.709865825 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.709997677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.708159856 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.709222171 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.708565867 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.708615243 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.710978794 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.710192404 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.711720885 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.709464905 seconds)
  done (took 35.82547576 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.713287935 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.711990953 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.712736537 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.712270109 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.712250615 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.711767851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.71354944 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.712098753 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.712903429 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.712984248 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.711996587 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.711955413 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.712638039 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.711749028 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.71304698 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.711865275 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.712689352 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713768561 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.714117396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.713253341 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.712738717 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.712567764 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.713164209 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.713126429 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.71357246 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.713843573 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.712797659 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.712226209 seconds)
  done (took 49.592226045 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713106109 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.714005272 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.709817321 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.709540498 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.709347529 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.710891403 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.710774559 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.710037609 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711345162 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.709206879 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.713133621 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.712769158 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.713513935 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.712025154 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.713143173 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.712442392 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712259077 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.71049458 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711863832 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710654014 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.713533468 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.713173344 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.713505066 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.711087544 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.712063718 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.713490724 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71039714 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.711084392 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.714246093 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.711426685 seconds)
  done (took 52.989338355 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.731865743 seconds)
    (2/2) benchmarking "in"...
    done (took 1.732414692 seconds)
  done (took 5.101658564 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.710502611 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.714121977 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.714561567 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.711845975 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.712085251 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.714510839 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.714261431 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.711660883 seconds)
  done (took 15.340315841 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.712690565 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.71434526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.714868207 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.714239501 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.716139479 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.713499106 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.720653778 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.714162588 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.714661693 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.714655039 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.72127769 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.719656172 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.716633128 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.715738155 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.714187633 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.715794101 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.716756621 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.715209217 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.715019134 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.714619325 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.715604679 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.71569804 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.718779525 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.71174677 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.716090357 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.723703705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.717948406 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.715193318 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.715937383 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.717914184 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.715065554 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.713110097 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.716131499 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.716870651 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.717213844 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.716230439 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.723151673 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.71718476 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.720675276 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.717457846 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.716265885 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.714634193 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.717194237 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.716615218 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.716300543 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.717067618 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.716657919 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.714603617 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.716056358 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.71896281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.720104806 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.715980159 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.713676142 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.720331404 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.718170297 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.723178018 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.717426462 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.720549573 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.722946921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.724299365 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.728141209 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.722193305 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.718405008 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.718385491 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.724731126 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.736525965 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.723922339 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.714500934 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.715705136 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.716655086 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.723013787 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.728683343 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.723948143 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.717041368 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.717862773 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.717177498 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.71745172 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.718140491 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.723931322 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.720516651 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.719979768 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.719056841 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.725454297 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.735733826 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.716978723 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.718555982 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.720236161 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.718540243 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.718157608 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.727485232 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.719080971 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.718097964 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.718270375 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.717590946 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.720886719 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.719570516 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.717897299 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.718616898 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.717032688 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.719741434 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.719397514 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.720540807 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.725009225 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.7210533 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719341587 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.724356826 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.71839052 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.718401771 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.724837306 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.719967578 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.71980224 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.719262705 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.724247856 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.71654783 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.720736352 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.726131294 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.719474914 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.719739939 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.719871827 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.720016279 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.727574951 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.741426546 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.719514015 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.71868717 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.723187907 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.73027015 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.720980107 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.723233989 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.719747146 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.717186558 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.717403391 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.720813531 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.721894414 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.720287352 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.720173493 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.72083995 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.718216454 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.720016002 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.720874878 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.720936635 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.721241732 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.72017883 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.720960493 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.721300698 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.722488052 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.721807435 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.726027298 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.720735339 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.721746014 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.721653455 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.719428208 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.721774236 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.721135647 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.722428001 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.721183587 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.722131057 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.720830333 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.722113751 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.721031148 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.721894254 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.721801245 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.723359841 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.724076507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.72243115 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.725549257 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.721153867 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.7193443 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.722477811 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.722079957 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.721527615 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.721795593 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.721375037 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.723945162 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.728805308 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.722240494 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.722268904 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.723810303 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.722171001 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.722931737 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723565786 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.724401948 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.727967009 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.72224296 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.72813744 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.722852913 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.722553486 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.722301813 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.721532693 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.722632694 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.722397206 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.72567547 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.728510061 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.733769442 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.729779751 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.722706145 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.725393357 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.724578151 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.725892779 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.726069693 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.723855287 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.722910243 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.723632823 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722516221 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724114819 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.724750754 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.724466125 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.72346026 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.724451562 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.725072424 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.724388255 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.723840194 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.724882976 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.726011029 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.721941369 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.724551061 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.725115726 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.723968357 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.721740818 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.723236937 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.724097446 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.724736883 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.724733807 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.730494952 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.721946384 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.724333871 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.725702024 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.724972458 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.722213204 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.724606786 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.726187965 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.723663844 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.731373584 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.724880162 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.724714813 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731973091 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.725051312 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.723386737 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.729142516 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.724386766 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.722150927 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.727352158 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.729899277 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.724396268 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.727220112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.725345036 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.725083802 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.725752964 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.73056875 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.723716369 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.724893213 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.726457322 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.727467257 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.722925748 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.726671746 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.727137502 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.726052667 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.726432731 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.726117612 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.725097173 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.725906206 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.727748385 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.726636191 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.725978543 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.727578355 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.731389509 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.729778661 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.727551943 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.727516569 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.725872067 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.728920539 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.726663684 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.726174966 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.727282499 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.737287115 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.733809972 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732662364 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.728075386 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.728235122 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.730728401 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.727359054 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.729421148 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.72690763 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.726785605 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.727712383 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.725889262 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.724863399 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.727738925 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.728038025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.727584334 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.729806597 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.729646025 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.726556235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.727262691 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.727350606 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.72782892 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.728488387 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.7270043 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.727961511 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.72903665 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.729224745 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.726785666 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.727417704 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.733839286 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.727817952 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.729479453 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.726484008 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.729498301 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.726679249 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.72838603 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.728614883 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.730635635 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.733785003 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.731398013 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.735488393 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.728755579 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.73631117 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.728079395 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.730817945 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.736369233 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.725596546 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.727397797 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.728549442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.728723439 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.73568846 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.729866752 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.729255739 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.732431057 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.729606521 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.729847358 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.729522802 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.729019773 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.72878716 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.729506426 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.736166714 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.72984334 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.733528459 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.73149699 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.726830851 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.730189956 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.733773113 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.732674253 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.738445484 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.73370579 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.734601794 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.733841687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.734178152 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.733777564 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.733936627 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.734139081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.731505401 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.733957683 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740745881 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.735501864 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.737869629 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.734008756 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.741710453 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.735520936 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740930299 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.736026301 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.735091298 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.734863236 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.735088493 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.735342442 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.73312403 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.736536105 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.735166343 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.734781103 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.737802462 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.734886296 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.73662694 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.736153985 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.73568685 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.734416589 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.742488152 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.754653694 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.735616778 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.739233398 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.732542587 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.736336489 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.739239002 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.736038622 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.735129374 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.736586342 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.744468388 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.741813497 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.736390141 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.736400233 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.737825399 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736199765 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.73523266 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.73612441 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.736115472 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.736719321 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.737363746 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.735514107 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.739058934 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.735753572 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.737624777 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.737427254 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.737225748 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.745273409 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.73684079 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.738035475 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.736226393 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.738120499 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.736994755 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.737128854 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.736925288 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.736802372 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.737107233 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.737433377 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.742290321 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.741056202 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.738901937 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.736684297 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.737362913 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.737019845 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.736966478 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.737294334 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.737778994 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.738131662 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.737252298 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.737486893 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.737727982 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.736361891 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.737639061 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.737187191 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.73864436 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.738726687 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.743103027 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.73770566 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.734232673 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.736465899 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.739378707 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.737059167 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.738408497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.745523483 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.73998504 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.745825486 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.745230302 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.741491156 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.738343532 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.740096738 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.743950309 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.737486974 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.738613936 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.738994063 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.739769139 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.73760766 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.741152724 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741108371 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.744764071 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.738504729 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.738347664 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.746688838 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.740099594 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.740127892 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.739672837 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.741501198 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.739397682 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.736050987 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.739622088 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.739590453 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745495096 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.7404376 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.739317334 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.741587325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.737678403 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.740742271 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.742986615 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.740279297 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.741016114 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.737195296 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.740453405 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.739987224 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.741630881 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.737241215 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.73860755 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.739772601 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.74233387 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.744282939 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.737029042 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.74193651 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.739554281 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.740481028 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.7417787 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.74071172 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.737691797 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.737796751 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.739785622 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.741438698 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.741351681 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.742869989 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.739644916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.740762993 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.740438056 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.741561885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.742866066 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.747772445 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.7469106 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.737856683 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.741532629 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.742875566 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.743884608 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.741983125 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.741830873 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.742228236 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.742032992 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.742603633 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.742681815 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.741631903 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.743655023 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.754157881 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.742147751 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.740988162 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.74196434 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.744197468 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.741205352 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.738608106 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.742752525 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.743311229 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.743436364 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.748115374 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.742591459 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.748357135 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.742375396 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.742003194 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.744948133 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.743938112 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.747916672 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.744512453 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.743412876 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.743526804 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.745056789 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.754971206 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742373011 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.750753889 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.766673514 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.742778035 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.743965236 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.742902313 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.742333111 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.743851421 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.744248722 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.743526877 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.743740263 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743581382 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.742864013 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.744926863 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.746864718 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.743700034 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.743159698 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.743260362 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.742066342 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.745573787 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.74035082 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.743763393 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.744406372 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.743726934 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.744244123 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.74430274 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.743015899 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.754564871 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.752105382 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.743668374 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.746097142 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.740768519 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.746473402 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.746151499 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.752510229 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.7504224 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.74536692 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.744458608 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.746403802 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744447652 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.74232184 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.744363014 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.744414388 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.743425241 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.741711136 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.755383869 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.751543334 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.749247606 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.743562578 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744140794 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.745128726 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.745704847 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.744589272 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.746293265 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.746421715 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.744708161 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.7484284 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.74480373 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.745037412 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.747558747 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.750983731 seconds)
  done (took 1033.318782878 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.743165189 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.742326937 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.742929215 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.742769398 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.741811874 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743053867 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.74347423 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.743060347 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.743328952 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.742893243 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.743201551 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743225376 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.7424915 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.743845725 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.744365142 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.743121283 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.743740523 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.742297275 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.742898467 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.743533935 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.744241675 seconds)
  done (took 38.273586254 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.746099219 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.743686344 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.7443325 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.746883336 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.744849746 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.746389724 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.744272322 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.747074716 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.746245196 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.745175498 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.746833179 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.746245023 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.744691323 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.74456019 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.744816763 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.74696888 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.747080091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.744193607 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.747332201 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.744172977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.747370391 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.745834449 seconds)
  done (took 40.073569089 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.748073049 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.747441628 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.746788347 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.74493298 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.747548976 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.744869868 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.747932212 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.746704576 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.747617263 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.747872082 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.746843471 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.747797822 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.75271568 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.751257304 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.749393348 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.748304053 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.891426393 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.748415194 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.749923404 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.748619424 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.744932451 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.753039554 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.745140184 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.745279009 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.747671792 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.748854062 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.749859662 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.748651991 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.748145843 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.74971108 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.752664728 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.748147351 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.749463706 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.750197448 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.748193747 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.74918525 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.751049523 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.749878693 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.747103329 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.748880429 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.756937465 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.765287414 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.750761556 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.755897443 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.749830787 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.749425334 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.751764011 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.75628964 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.747989004 seconds)
  done (took 87.534573487 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.750856458 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.749950063 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.747405594 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.749898302 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.749943631 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.75089274 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.750590587 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.749281143 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.747226414 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.747180682 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.749864389 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.746699802 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.747489634 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.749795936 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.750320593 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.747594174 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.749100177 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.747927403 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.747990316 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.748094633 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.746512307 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.749439056 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.750331027 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.747827367 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.750034271 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.748138005 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.747576762 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.749930249 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.747887015 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.748000948 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.750458725 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75077652 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.750438831 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.749937432 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.749171974 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.750675813 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.750917219 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.747742922 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.750392845 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.749280553 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.750585392 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.751447597 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.752288925 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.751722537 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.748495581 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.749774191 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.749117167 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.749311055 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.749798617 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.751431446 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.75243543 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.749672198 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.752222693 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.749337564 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.752017278 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.751659849 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.749634988 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.752152404 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.752472807 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.749331035 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.749206784 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.75189993 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.750210441 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.752723022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.752020685 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.751264684 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.749848615 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.752874289 seconds)
  done (took 120.662024893 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.753560421 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.752281746 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.752787933 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753561115 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754130235 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.752704626 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.753321639 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.753270398 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.753483705 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.754359126 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.753496037 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.752748905 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.753759848 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75325197 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.754086345 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.753097901 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.754142938 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.753263926 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.753500702 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.753044591 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.753730145 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.7539141 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.753394348 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.754656138 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.754234016 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.754607534 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.752882355 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755119018 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.753549003 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.755076306 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.754848102 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.754747321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.754605396 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.755347881 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.755444743 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.753978294 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.754161322 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.75431848 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.753904866 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.754301637 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.754911709 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.755069296 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.754967816 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.755215592 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.754529733 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.754620823 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.755131599 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.755532329 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75551974 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.75506787 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.755096313 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.755038403 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.755279224 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.755213683 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.755644243 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.755220827 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.755323837 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.755613071 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.755841448 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.75599101 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.754458302 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.755620587 seconds)
  done (took 110.445871758 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.754323681 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.754454672 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.752218753 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.752355121 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.75558777 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.752909186 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.754633525 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.755944471 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.75741097 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.754928085 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.754734359 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753354068 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754470715 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.755989908 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.754068342 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754653269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.753302531 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.753058248 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757363589 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.753929691 seconds)
  done (took 36.766237129 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.753582278 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.755184819 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.752853387 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.753534021 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.755870399 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.753758074 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.757064002 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.756378079 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.754160387 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756691597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.756961696 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.756588356 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.754834157 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.753864304 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.756733395 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.754487597 seconds)
  done (took 29.760405594 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.755256259 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.756845691 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.757401385 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.757864749 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.75451851 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.753923076 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.757151504 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.752955434 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.753888634 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.758019397 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.757701918 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.756432045 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.757165346 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.757705656 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.75379601 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.757617053 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.755164928 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.754708138 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.757226035 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.75791323 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.755771383 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.75477629 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.757685081 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.757554664 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.754668703 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.75585813 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.754103714 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.754806502 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.755149183 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.758202489 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.755106593 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.755977498 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.755033148 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.754686677 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.758936391 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.755882336 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.758132158 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.757957678 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.758562538 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.757171234 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.75870434 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.755722942 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.759595996 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.759306113 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.756159568 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.758487238 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.757064466 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.756839943 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.756719167 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.75716557 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.759192495 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.760532351 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.75984385 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.75858386 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.759794909 seconds)
  done (took 98.303217149 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758912017 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.760141467 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.757223621 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.758730887 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.759876126 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.756334217 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.759230954 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.756927508 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.757212454 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.758960263 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.757555847 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.759747437 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757181348 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.759797626 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.757934622 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.758905253 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.757379309 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.757064987 seconds)
  done (took 33.328955192 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.75742056 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.75708178 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.760361604 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.756826488 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.757529712 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.7605712 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757455922 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.759724902 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759663627 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.757988955 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757623337 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.761763479 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759729801 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.760976124 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.758523244 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758654353 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.760553943 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760201234 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.759012211 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.757523844 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.761462636 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760856025 seconds)
  done (took 40.382730173 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.759962805 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.760122725 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.775287869 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.77643954 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.779892145 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.789469588 seconds)
  done (took 12.324409507 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.757925821 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761284762 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.758402789 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.760902701 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762360962 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.758970844 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759544865 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758205201 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761841478 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759455477 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759159464 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761740386 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762116106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.758973823 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762233787 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761718598 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759269038 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758447072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759166172 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762391696 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760167673 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761929397 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.759959168 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.758600551 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760077219 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76016249 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.762716377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.760200878 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.759431532 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762016188 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763140802 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.760499658 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763396058 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.759867749 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762127391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763341945 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.759469651 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763071923 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.762493183 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.760554981 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.762190155 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763676786 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764078439 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761265636 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762954616 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.760735294 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76133746 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76065458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761268142 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.765224425 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763626411 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761888701 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764311367 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76409007 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764676228 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.765688716 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761465229 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761747031 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763471734 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762142844 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761628697 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763425433 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76196825 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761997623 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.764361256 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761519579 seconds)
  done (took 117.943032435 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.762456587 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.761186961 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.761434168 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.761301293 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.761245353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761927972 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761817441 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.762075253 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761543775 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.7619479 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.765050706 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762447129 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.761936958 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761390788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761534948 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.761856911 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763578116 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762094729 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.762296171 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765443148 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761734736 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.761780174 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.762151233 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76222264 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.761954835 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76444344 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763823916 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.761938309 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763147696 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76260385 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763194332 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763005867 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.762789314 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.763573147 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763145584 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.762385391 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763066803 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.763740097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763038155 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766873131 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764206633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766722477 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763740898 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763449379 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.763736021 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76430016 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.763842443 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.763575474 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.763675101 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.763613096 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763973812 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764577526 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.76468431 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764579861 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76417107 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764573511 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764915762 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764503642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764999873 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.76740302 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.764775748 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.764897653 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767140509 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763357565 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.763789227 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764260472 seconds)
  done (took 118.070368335 seconds)
done (took 2408.860622698 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.822849486 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.775977864 seconds)
  done (took 15.286811914 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.927018551 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.881140773 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.765175269 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.778035076 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.765687833 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.7858316 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.762157057 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.764930858 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.765223549 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.765865214 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.766529439 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.95020634 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.761066573 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.76694501 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.766243273 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.858095866 seconds)
  done (took 50.521616153 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.769365009 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.772150142 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.781453193 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.772463532 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.76994194 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.78092963 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.80347481 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.773773951 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.803048274 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.78216137 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.836876319 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.778095616 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.768439773 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.818440548 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.781703046 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.783308621 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.862491746 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.842241714 seconds)
  done (took 33.969710624 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.844389788 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.767681134 seconds)
  done (took 10.307968449 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.795981429 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.76416078 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.781538865 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.780180989 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.778468184 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.767609156 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.792998435 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.791779092 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.778868932 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.810365905 seconds)
  done (took 69.535761883 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.775166085 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.770858011 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.770221692 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.768430192 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.76316121 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.767505799 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.769112018 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.768395103 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.423827507 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.801934552 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.774873433 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.775264928 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.770000163 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.77178479 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.76776416 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.792895611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.870261469 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.76778329 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.767309272 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.775897463 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.771515812 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.82391827 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.782506623 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.770397945 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.799008749 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.423246287 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.776428471 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.776747763 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.894111633 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.768727784 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.770108617 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.77045707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.773534353 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.160650926 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.039743969 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.771096358 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.784251604 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.778170026 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.769917117 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.88391442 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.772585835 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.779889596 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.484054884 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.018413929 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.865712624 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.811036057 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.087530239 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.785068837 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.773510179 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.79939317 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.7738036 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.772988923 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.784908514 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.258148268 seconds)
  done (took 126.764189922 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.766460927 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.118004098 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.936776486 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.767093654 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052496313 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.974725477 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.76776695 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.815756352 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.770823709 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001332196 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.020955999 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.873489677 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768459863 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.770119745 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.770396162 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.766682862 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.923619045 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.840308357 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.770767971 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.767402875 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.7990481 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.009184655 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.891029439 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.769472442 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.798254021 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.979626794 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.890075701 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.872620106 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.541920814 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.767186531 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.832443027 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.769174876 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.769296206 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.767482656 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.926832549 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.879897093 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.851765246 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.769509053 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.769352479 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.76805713 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.518060813 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969216069 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.866726862 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.900103557 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.020325877 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.974092553 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.552107087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.768767379 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.507014475 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.934354344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.998933177 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.003974414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.890251131 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.769683879 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.046659161 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.768264463 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.768404847 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.020113337 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.991432985 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.866976001 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.772677481 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.769603649 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768628464 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.062687664 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.770596902 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.866635039 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772997595 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.769517246 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.868172376 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.869547094 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.000808242 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.986124308 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.802470904 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.131608004 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.285269108 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.01796564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.836837032 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.02238183 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.771737017 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.768589685 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.850005451 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.615890114 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.024445035 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053486013 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015246227 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806532082 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.500827039 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.768956857 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.997236471 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.993208628 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.031106713 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022286757 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.00146151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.088076693 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.771691977 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.769953907 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.086986082 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.897270368 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.771209951 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.126332174 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.001476711 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.296532722 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.801257774 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.074999069 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.901941213 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.774918473 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.411451769 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.771611999 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.001898438 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.812731868 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.773413687 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.772399393 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.992192713 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.76263857 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.770320896 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.664871139 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.836386145 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.77427454 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006073641 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.775616042 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041478838 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.774539684 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006289982 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.773981568 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805570448 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.948283423 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.021663505 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.774879532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013691608 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.016177795 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.890107541 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.044644182 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.682675046 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.771579956 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059181001 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775544537 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.771113113 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.94442392 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.773870573 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.916758001 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.774439191 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069116298 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.797605554 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005681176 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.775032067 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.031423755 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.807711076 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.824251725 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.777340674 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.897426801 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.774571946 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.596699766 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.932221528 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774705039 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.771163135 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.330322074 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.772218837 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.923557029 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.000401001 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796239177 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.261349702 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.444961788 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.77286651 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.860304445 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798309212 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.169198415 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.775260907 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.026569048 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.774785885 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.773145244 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.773818556 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.060416396 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.013077947 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.777480975 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.775420158 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.685585183 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.775067912 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.775053172 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.957202195 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.174766531 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.775252613 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.977948904 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.777995038 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.902946791 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.777999834 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.853628414 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.113414876 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.774305875 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.775051414 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.774911221 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.774230146 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.776580069 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.984401069 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.802583064 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.270291773 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.913837522 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.049118879 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.08834055 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.017930772 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.820607879 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.777670159 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.032568561 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.778097746 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.839294577 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.778137642 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.798415505 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003598003 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.776031264 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.068245686 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.046596635 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.783772953 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.825058987 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.776849654 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774421861 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.776093646 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.922853077 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865396009 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.777181584 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.777431733 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.892085632 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.898739168 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.986034094 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.777303797 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.80109575 seconds)
  done (took 883.786460076 seconds)
done (took 1191.861836697 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.775006264 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.7758412 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.761865168 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.779904568 seconds)
  done (took 28.794820754 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.78368726 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.780340193 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.783088466 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.781514498 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.783391494 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.781340809 seconds)
  done (took 12.396366503 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.82580158 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.777417076 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.77833419 seconds)
  done (took 21.083681008 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.848052525 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.160246402 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.882748475 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.197750015 seconds)
  done (took 9.791248599 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.783671824 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.78343182 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.785182707 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.785192742 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.785986391 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.787925459 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.784326583 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.785997417 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.786146111 seconds)
  done (took 17.771586618 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.758995619 seconds)
done (took 95.300472132 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.85509219 seconds)
    (2/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.875249365 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.036948174 seconds)
    (4/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.805738259 seconds)
    (5/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.951858146 seconds)
    (6/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.805200043 seconds)
    (7/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.860248619 seconds)
    (8/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.798350957 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.861236866 seconds)
    (10/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.870269119 seconds)
    (11/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.205618763 seconds)
    (12/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.864080238 seconds)
    (13/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.861530969 seconds)
    (14/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.126501284 seconds)
    (15/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.94682302 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.763875792 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.266309791 seconds)
    (18/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.91345339 seconds)
    (19/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.808520171 seconds)
    (20/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.777796634 seconds)
    (21/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.017871557 seconds)
    (22/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.781073329 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 3.41083526 seconds)
    (24/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.779240008 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.142130746 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.808319536 seconds)
    (27/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.779734471 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.870901761 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.846198728 seconds)
    (30/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.779786499 seconds)
    (31/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.237561716 seconds)
    (32/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.168474069 seconds)
    (33/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.924068036 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.765984039 seconds)
    (35/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 3.386548845 seconds)
    (36/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.273206064 seconds)
    (37/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.803033406 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.548133175 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.782746227 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.887038284 seconds)
    (41/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.789482068 seconds)
    (42/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.002749104 seconds)
    (43/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.869959824 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.955272279 seconds)
    (45/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.879656337 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.887850602 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.765374686 seconds)
    (48/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.842635188 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.003882025 seconds)
    (50/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.106844042 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.872737893 seconds)
    (52/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.859986828 seconds)
    (53/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.348128527 seconds)
    (54/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.646290581 seconds)
    (55/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.770830662 seconds)
    (56/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.976891142 seconds)
    (57/309) benchmarking ("sort", Int64, false)...
    done (took 5.508884174 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.798236319 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.090628899 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.040721677 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.117746427 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.133123033 seconds)
    (63/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.642195858 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.808475475 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.065652217 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.770775022 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.096513435 seconds)
    (68/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.956755971 seconds)
    (69/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.946088085 seconds)
    (70/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.802989059 seconds)
    (71/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.955671136 seconds)
    (72/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.84530771 seconds)
    (73/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085447319 seconds)
    (74/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.27463211 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.788597305 seconds)
    (76/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.879734778 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.873376007 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.780827713 seconds)
    (79/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.001064897 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.818568816 seconds)
    (81/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.771592273 seconds)
    (82/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.976773979 seconds)
    (83/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.801698716 seconds)
    (84/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.140295302 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.106108545 seconds)
    (86/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.783683781 seconds)
    (87/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 3.367254677 seconds)
    (88/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.82148305 seconds)
    (89/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.870133959 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.957922338 seconds)
    (91/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.946529057 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.970553263 seconds)
    (93/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.658227754 seconds)
    (94/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.435467991 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.773600761 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.961947716 seconds)
    (97/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.915451487 seconds)
    (98/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.782932515 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.682515985 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.408557256 seconds)
    (101/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.793056948 seconds)
    (102/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.101967746 seconds)
    (103/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.074368874 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.462321401 seconds)
    (105/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.226653328 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.751325923 seconds)
    (107/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.00216485 seconds)
    (108/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.784955606 seconds)
    (109/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.943323987 seconds)
    (110/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.0576171 seconds)
    (111/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.784922499 seconds)
    (112/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.397714867 seconds)
    (113/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.593596497 seconds)
    (114/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.774040039 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.907047067 seconds)
    (116/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.783606847 seconds)
    (117/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.329421552 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.287631236 seconds)
    (119/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.85075445 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.902223205 seconds)
    (121/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.878379165 seconds)
    (122/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.786029364 seconds)
    (123/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.387739865 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.208558066 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.999059496 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.783226192 seconds)
    (127/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.811855113 seconds)
    (128/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.782627101 seconds)
    (129/309) benchmarking ("sort", Float32, false)...
    done (took 6.170602179 seconds)
    (130/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.18731434 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.771362699 seconds)
    (132/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.026077928 seconds)
    (133/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.187811736 seconds)
    (134/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.775048242 seconds)
    (135/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.463777943 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.791089077 seconds)
    (137/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.70448693 seconds)
    (138/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.772327014 seconds)
    (139/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344139672 seconds)
    (140/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.090700745 seconds)
    (141/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.267498246 seconds)
    (142/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.877478471 seconds)
    (143/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.171593673 seconds)
    (144/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.213077669 seconds)
    (145/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.098816679 seconds)
    (146/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.819997588 seconds)
    (147/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.824625001 seconds)
    (148/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.006819007 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.454592153 seconds)
    (150/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.795690884 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.302489694 seconds)
    (152/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.042900069 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.12496412 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.759897296 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.050481725 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.851219167 seconds)
    (157/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.185750677 seconds)
    (158/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.792891017 seconds)
    (159/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.795903053 seconds)
    (160/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.013560226 seconds)
    (161/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.815258393 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.811328403 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.700341823 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.927057452 seconds)
    (165/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.076399654 seconds)
    (166/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.020460142 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.79049989 seconds)
    (168/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.187664807 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.900969888 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.926046265 seconds)
    (171/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.809804253 seconds)
    (172/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.459506772 seconds)
    (173/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.856180888 seconds)
    (174/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.790301164 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.217402126 seconds)
    (176/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.603757426 seconds)
    (177/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.947119231 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.788938619 seconds)
    (179/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.788482524 seconds)
    (180/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.01201724 seconds)
    (181/309) benchmarking ("map", identity, Float32, true)...
    done (took 3.116042227 seconds)
    (182/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.208133887 seconds)
    (183/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.862283091 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.949289287 seconds)
    (185/309) benchmarking ("sort", BigInt, false)...
    done (took 6.786862842 seconds)
    (186/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.85411637 seconds)
    (187/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.918062168 seconds)
    (188/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.777035229 seconds)
    (189/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079074509 seconds)
    (190/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.787469067 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 3.521269895 seconds)
    (192/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.175506665 seconds)
    (193/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.182973818 seconds)
    (194/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.880977615 seconds)
    (195/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.789998251 seconds)
    (196/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.982624693 seconds)
    (197/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.797967763 seconds)
    (198/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.793503231 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.860203078 seconds)
    (200/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.870897203 seconds)
    (201/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.788981538 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.005731231 seconds)
    (203/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.895920226 seconds)
    (204/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.924657289 seconds)
    (205/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.010461573 seconds)
    (206/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.946136973 seconds)
    (207/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.239851707 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.174055552 seconds)
    (209/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.85879998 seconds)
    (210/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.774395981 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.170525972 seconds)
    (212/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.970906835 seconds)
    (213/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.796295546 seconds)
    (214/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.778670778 seconds)
    (215/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448403366 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038834325 seconds)
    (217/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.030485772 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.410560852 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.923443814 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.516436941 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.99094942 seconds)
    (222/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.786522352 seconds)
    (223/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.790875122 seconds)
    (224/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.89370117 seconds)
    (225/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.683143762 seconds)
    (226/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.776100181 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.567259128 seconds)
    (228/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.955108608 seconds)
    (229/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.882095453 seconds)
    (230/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.029508747 seconds)
    (231/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.80727232 seconds)
    (232/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.020231969 seconds)
    (233/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.813998209 seconds)
    (234/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.898703154 seconds)
    (235/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.799945169 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.959685505 seconds)
    (237/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.814642368 seconds)
    (238/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.785763556 seconds)
    (239/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.287453872 seconds)
    (240/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.6733141 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.103959547 seconds)
    (242/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.774310611 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.568718807 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.905364871 seconds)
    (245/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.883909757 seconds)
    (246/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.03125389 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.904185539 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.413379723 seconds)
    (249/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.878824392 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.91518284 seconds)
    (251/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.79125544 seconds)
    (252/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.648985539 seconds)
    (253/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.892643425 seconds)
    (254/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.061395964 seconds)
    (255/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.957387546 seconds)
    (256/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.956950291 seconds)
    (257/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.866845513 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.743491008 seconds)
    (259/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.08844119 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.303263147 seconds)
    (261/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.031039742 seconds)
    (262/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.086873642 seconds)
    (263/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.816264736 seconds)
    (264/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.887637651 seconds)
    (265/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.773056442 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.369894935 seconds)
    (267/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.063808727 seconds)
    (268/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.81296745 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.694402975 seconds)
    (270/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.790688021 seconds)
    (271/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.103315115 seconds)
    (272/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.945354146 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.79246379 seconds)
    (274/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.227822488 seconds)
    (275/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.787543238 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.809295324 seconds)
    (277/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.785606261 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.031635786 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.685228938 seconds)
    (280/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.089724689 seconds)
    (281/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.148791003 seconds)
    (282/309) benchmarking ("sort", Float64, false)...
    done (took 5.529983742 seconds)
    (283/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.993612968 seconds)
    (284/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.797837661 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.795968714 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.911566083 seconds)
    (287/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.855768691 seconds)
    (288/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.873410312 seconds)
    (289/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.3177964 seconds)
    (290/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.913050321 seconds)
    (291/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.975437628 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.574385484 seconds)
    (293/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.785181808 seconds)
    (294/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.040460707 seconds)
    (295/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.991421942 seconds)
    (296/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.372240754 seconds)
    (297/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.826297725 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.947744171 seconds)
    (299/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.942658233 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.831709657 seconds)
    (301/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.883306161 seconds)
    (302/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.88324602 seconds)
    (303/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.825274818 seconds)
    (304/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.840215339 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.034398852 seconds)
    (306/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.900858376 seconds)
    (307/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.062177259 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.721330723 seconds)
    (309/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.889618989 seconds)
  done (took 982.235889485 seconds)
done (took 984.002103891 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.832035197 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826285588 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.80944282 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.831142152 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.921064611 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.83805852 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.820579787 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812108876 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.857354398 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.859351373 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.806977843 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.836196503 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.811506099 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812161344 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.810210048 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.824646539 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.17546781 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.846324909 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828284062 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821096804 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.827066358 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.808316977 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.860282673 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.836942464 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.81533442 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.812783143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.813858077 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.829794827 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.922321377 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.81311401 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.813811237 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.821946024 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.13375899 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.846129042 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.807143492 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.830297158 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.824124454 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.820299769 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.816113031 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.843272437 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.227016126 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.853125858 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.813392651 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813292485 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.812087087 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.815331699 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.813587803 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.81844275 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826237498 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.825716327 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.217823886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.868400135 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.813940866 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.81348915 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.822897582 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812911116 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.81550476 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828230958 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.831330706 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.829457754 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.108976351 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.851017296 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.81563811 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.829435407 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.821719048 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.242545187 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.851401663 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.816450566 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.214295859 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.861618097 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.243778671 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.865354872 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.814701672 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.826108484 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.846051266 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.129458839 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.840276952 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.814583994 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.820088263 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.810588768 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824995562 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826109352 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.81785146 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.814083306 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.827737707 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.841949906 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.823965185 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815421739 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.821983115 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.832108428 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.820376793 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.826505316 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.818392213 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.80883105 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.823613232 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.817280987 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.817192208 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.816022318 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.819341425 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.824971992 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.214279796 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.874291846 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.811119606 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.811764365 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.814521148 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.828083994 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.212412777 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.860437036 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.836654442 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.862618201 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.818022136 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.114042501 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.854646772 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831008703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.824889663 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.819183907 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.811673763 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.114156722 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.242380743 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.874766323 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.818163208 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.812220326 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832028608 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.819228081 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.812438928 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.133274174 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.848472024 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830103249 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.938955318 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.829011692 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.847230255 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.812268543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.81913347 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.847897174 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.831919362 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.84782033 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.81915717 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.831269654 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.832251607 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.814890313 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.827230976 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.826753727 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.817361971 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.821299324 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.81179614 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.847410973 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82894912 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.829691856 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.837574373 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.938067813 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.816136307 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.11570652 seconds)
done (took 285.468942428 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.890313036 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.817660406 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.909766251 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.813641893 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.907769627 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.899392321 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.812046941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.811644157 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.812036511 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.209201242 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.813123158 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.812109078 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.812189176 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.811898868 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.909161381 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.815102794 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.811474333 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.152910915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.815403959 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.887925385 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.816848471 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.812166496 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.814080798 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.185571947 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.811374538 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.808852003 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.885205741 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.814676754 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.152146581 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.808612582 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.810707111 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.150008436 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.905608025 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.832830494 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.82497898 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.822004634 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.895666268 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.819902981 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.896311172 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.910605992 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.91063514 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.85570884 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.817011854 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.813449898 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.819459573 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.817312485 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.813249207 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.843470325 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.80952322 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.813916585 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153944265 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.827139972 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.813767473 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.813435116 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.813365505 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.846569751 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.81491589 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.817168455 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.910473145 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.817231091 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.877243604 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.187152901 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.216636403 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.816970877 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.816729449 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.815000719 seconds)
  done (took 180.706978453 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.884084368 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.895206625 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.882459055 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820803489 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.867744403 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.883367447 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.821108743 seconds)
  done (took 14.788183444 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.82226933 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.816818617 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.871020252 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.867419965 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.816883051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.969988695 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817321846 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.827907076 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.815453375 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.867468999 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.817251761 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.81790995 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.824157702 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.818422242 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.866835582 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.82878813 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934811778 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.818856769 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.819632186 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.967790292 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.815908276 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.825388076 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.851367291 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.829186702 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.819287735 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.824465872 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.411811571 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.818397308 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815075494 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.817932939 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.815029769 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.858468239 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.818069768 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.814110258 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815983268 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.930451239 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.818130456 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.815944063 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.818683388 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.815582272 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.818091585 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.81830959 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.820260049 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.816097347 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.818921056 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.841654487 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.818669389 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.819070666 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.818650909 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.818552877 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.852641192 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.820194821 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.8169952 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.817178128 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.872550228 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.826262018 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.821038722 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.816676066 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.819439911 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817437317 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.970654095 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.869258022 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.820068062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869660517 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.820184745 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.820537866 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.820434631 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.819537448 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915481535 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.819602481 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.869837627 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.817062934 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.979555924 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.842338486 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.821368138 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.823292396 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.82349729 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.820919101 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.820594109 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.826600556 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.816596304 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.822470367 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.826431689 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.818175214 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817444905 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.932049094 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924549062 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.817735791 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.833345046 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.828049652 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.818110232 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.855405685 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.820241572 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.818444642 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.876372332 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.937682244 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87398769 seconds)
  done (took 200.809730764 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.826470301 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.82962245 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.822360488 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.840040926 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.820515945 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.82057223 seconds)
  done (took 12.698083092 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.82387799 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.823279761 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.821344109 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.822204785 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.822671706 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.822960486 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.823510947 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824901992 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.826576935 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.822072277 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.823677002 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.82387595 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.824339073 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.822337521 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.823532267 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.822681391 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.823142873 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.820325797 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.822596779 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.823315678 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.967150367 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.822935342 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823276659 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.824099775 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.827447302 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.822175458 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.830535131 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.821966778 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.821949998 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.828615146 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.827103012 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.822492902 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.823477059 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.829891029 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.828197642 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.824620651 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827310412 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.824678933 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.820403903 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.823072666 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.82397623 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.823322686 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.823462338 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.824021405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.824734882 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.830457191 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.829023489 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.830921924 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.82453282 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.824131021 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.825288543 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.825760621 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.825307121 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.825815649 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.826626852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.830290749 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.830191418 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.824393595 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.825298587 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.825346353 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.825337473 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.824831575 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.826938577 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.830468065 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.832383985 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.826845489 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8261997 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.82980221 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82654438 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.825802456 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.827148971 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.82219127 seconds)
  done (took 134.292543573 seconds)
done (took 545.047642731 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.920385546 seconds)
  done (took 8.662018386 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.003243514 seconds)
  done (took 8.78277261 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.406516762 seconds)
  done (took 10.152794241 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.834864758 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.836706606 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.831288627 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.823296933 seconds)
  done (took 29.098762811 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.84925978 seconds)
  done (took 8.594307354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.845639126 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.823016185 seconds)
  done (took 15.444234458 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.957101145 seconds)
  done (took 8.703222115 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.05763919 seconds)
  done (took 8.831620798 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.826297856 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.855877151 seconds)
  done (took 15.44132965 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808890234 seconds)
  done (took 8.555446971 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.433531796 seconds)
  done (took 11.266614932 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.847654113 seconds)
  done (took 8.69262728 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.866389299 seconds)
  done (took 8.613409334 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.898588452 seconds)
  done (took 8.645016477 seconds)
done (took 161.227762965 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.827402637 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.823793707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.822598135 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.823566636 seconds)
  done (took 29.043684329 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.863059572 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.863508951 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.864521188 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.875046253 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.86649824 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.863075131 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.856170486 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.856533029 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.874003093 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.865992485 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.865175794 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.864899614 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.862719694 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.854885786 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.865341596 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.865182981 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.87379974 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.864682709 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.855488501 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.86613376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.831295947 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.876089619 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.866357394 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.830819971 seconds)
  done (took 46.438709849 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.025389777 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.898436142 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.983820318 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.882161051 seconds)
  done (took 9.537166542 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.882298817 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.883689308 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.894147287 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.933895949 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.964627312 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.893760139 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.857206747 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.851986745 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.838899185 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.885186193 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.958416626 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.87848602 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.968728875 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.830964876 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.032788931 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.830676892 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.832212015 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.883029904 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.933969056 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948829867 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.831774541 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883383717 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.886347471 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.879272587 seconds)
  done (took 47.212735141 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830500008 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838104045 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.837273691 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.830848194 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.832661414 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.830686055 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.836413957 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.832985986 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.851870927 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.833285795 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.829801685 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.830853255 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.828649081 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.831694356 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.830522845 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.844108056 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.844508423 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.832162825 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.834302178 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.837634593 seconds)
  done (took 38.44754015 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.824349905 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.678799964 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.176735425 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.080965299 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.827007473 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.829560037 seconds)
  done (took 31.167133334 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.845882798 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.839347433 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.833416001 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.888228858 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.973741711 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.839584045 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.831652981 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.844195074 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.878511869 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.900629337 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.853107479 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.86205969 seconds)
  done (took 24.139463583 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.829828891 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.830349877 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.827098217 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.844030139 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.841810707 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.837281932 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.835118415 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.823626343 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.84185435 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.847458147 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.835430994 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.839836619 seconds)
  done (took 43.786527093 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.911856952 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.711952706 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.463823747 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.615628124 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.355725282 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031856655 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435044515 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.999826643 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.822226334 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092096942 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.314044138 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066385081 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.080326981 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829069397 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.901282048 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.288831088 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.122569398 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050623848 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.851290767 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.484958276 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942906669 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.443589494 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.567857886 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.949024599 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039864185 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.962459547 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.088706224 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.792578447 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958090696 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.863280216 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838472366 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.82894778 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.101364585 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04140746 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91480524 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838093139 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481173601 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.546008908 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.81862764 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.495654472 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.482289208 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.959323139 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837331846 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831272471 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.762543856 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453079819 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016994416 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.834661556 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.532644094 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.830110646 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839197444 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915241939 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.832539566 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.645598266 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783408453 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107310426 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.829802218 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834872763 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.382818565 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870877707 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.583285991 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.775182638 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.922664052 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.540925692 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2959091 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.983129348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.834007871 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.833928282 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765114881 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.55342595 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.948581224 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.976502459 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.852706189 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.480630011 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128124272 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.4303552 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905373634 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.118093262 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.736675533 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.77427857 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058042272 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.78810488 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.764475098 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.670792994 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765282113 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086991098 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864526922 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.467352505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.868416127 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.006852161 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.842459754 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85230389 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839085346 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.053895274 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.713824218 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833021004 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.300145243 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.111000891 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855733882 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.011712858 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767710476 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.838194069 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087859757 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.044729731 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.197487347 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.295372387 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997609916 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835712731 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.919113055 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.840753097 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843162014 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.116931396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894954568 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.877221205 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959592808 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.796817872 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127501429 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.858558422 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.007844365 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.372160325 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092166791 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.152918623 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082865597 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916462191 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.835689665 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.835049613 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.551277697 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453337815 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.060307214 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.83544537 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438542618 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.850565027 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.836818413 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769214935 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.460464521 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.366267952 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.936449722 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057541634 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.886460207 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110661462 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768993459 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97940626 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.832697262 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.057799357 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.475521801 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.909693743 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092736458 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44656492 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.191860199 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84979526 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85340144 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916777801 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856351743 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.366118002 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.091947067 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.841773052 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.839090527 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.550298471 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.901725868 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840529478 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.843926415 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.630950969 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118728158 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.863677139 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838350317 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.727130342 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.852080136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918027387 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.840271587 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.845545903 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.362038541 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.589519967 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.846882395 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.505263311 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064081873 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.845231267 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.49969061 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017445197 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.927661626 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.112054616 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901711488 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.770306566 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.540002865 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.539753606 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838655553 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772134472 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.83910682 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.845933595 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848954763 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.031989321 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.12170617 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.885974207 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.497964967 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.947052486 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848848407 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.843434522 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84039361 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.36324473 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.909993846 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.55377842 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.852771555 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972966986 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.85164402 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.770641624 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.846674905 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842146884 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838333668 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.795947952 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888683756 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.512584924 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170845809 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09627416 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.489128635 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.855250359 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.567102127 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.964185283 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.85858499 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.327231027 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.032330937 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.85041898 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923508291 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.850256336 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.516306643 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.603249347 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393166142 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.147104506 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156890622 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282109322 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.317367735 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.177541179 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.018898628 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.073229866 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368484483 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900217373 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.023164411 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781571837 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930205109 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.483019783 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.190759297 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854616219 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.063847021 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220026363 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.385512882 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.995978604 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.050323565 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874790534 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.746717287 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881424778 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.362296679 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.990800784 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.392827591 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058841264 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.016851631 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.345103151 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943280571 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.841028759 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.291813912 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919866733 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.550823313 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.20052808 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.507130823 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.394316758 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21521332 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.841148594 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.286185318 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193901701 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.277621867 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.940651455 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.772670754 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.849016285 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.848056825 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.840281821 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.818960293 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.724241029 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.11027143 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84877672 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072033552 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.219408255 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111822365 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.748379996 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.844056886 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840656413 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135895843 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.602006854 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08554939 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.271122709 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.429043726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847950798 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77187754 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770002469 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.539958269 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84678306 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.8094554 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061038662 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.940046964 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790110187 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315430868 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162796867 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.08862019 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.849441548 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.110406571 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115483355 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.56965855 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864089104 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.935094758 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.315284159 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.543517573 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.065090559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.080822145 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.643180887 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.072116433 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483921802 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.814887825 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.844051177 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058255048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.065679809 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.402905742 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09007578 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.569006776 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.851843862 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22535776 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907633262 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.403117711 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.058566541 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.93507761 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.853885611 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923626729 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85454468 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.854704936 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856214294 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889900432 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.407530055 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.976913625 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.858204325 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9384765 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921109787 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.425164919 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.855701464 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.124878731 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217226141 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179270188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912233396 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.84605989 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854799357 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778825983 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982711341 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.290898038 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119847034 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.975050272 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.028620349 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872055777 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.336444267 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.227078238 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.171379393 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120922109 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.741026646 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847180035 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.931481655 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.070582741 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858755158 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.056363562 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072333458 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164927639 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.316348987 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.072548168 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.141421692 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12113089 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.221760864 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848168806 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.441081663 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.862724305 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.375860731 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.885209303 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.406317943 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132003716 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85630919 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063689531 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.871744675 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.044983202 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.299563537 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.516517551 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.207455849 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.835531447 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904823409 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127391217 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.261556094 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164980724 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.929855959 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859321968 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.544377943 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987531141 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.774577521 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.104195907 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849948797 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.058896983 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.56054591 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.85766427 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.137406228 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163054801 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.846790338 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.804394435 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901585607 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.858706465 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07034892 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.111444205 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.099251396 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858754777 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.849098385 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.665094171 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135729921 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914312513 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782299855 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.852909755 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943636166 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.096330237 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870093309 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.366458235 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.553009156 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146334631 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.765806837 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871567484 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34500344 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.310863465 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191827616 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.375360298 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.079978841 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404188061 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.793542537 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237133433 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.854656256 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.33889334 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242179206 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.854012729 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.446471833 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.976241972 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.12698768 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18264491 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.868291482 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648222049 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.892779273 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072580661 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.444330922 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791387077 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.854815623 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.911442909 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.851461683 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.846882013 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.862784408 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.839836222 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.808495785 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.701287053 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343990165 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.857925033 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.846821051 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.340282929 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.487889836 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970523079 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009651408 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861830157 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.560375295 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.142355591 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.10474946 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.439349468 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.935744297 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.85480432 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853248878 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.778855421 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.047047959 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.045813592 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152891754 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.291664343 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.97471641 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.856024232 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.067642136 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06481418 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.396387416 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005679483 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337354108 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97679468 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.779948937 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.565857136 seconds)
  done (took 1664.171418481 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.860370847 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.889496514 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.852045042 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.863039706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.855412645 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861780738 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.867626053 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.847860331 seconds)
  done (took 56.672398058 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.841623946 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.021822647 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.851400012 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.841995167 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.863205357 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.844263678 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.01933691 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.848594156 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.860211937 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.842061706 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.833135628 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.857462846 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.148288163 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.859642725 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.830024181 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.849542142 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.859560639 seconds)
  done (took 73.839816403 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.829265303 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.008623861 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.851187035 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.85047537 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.707477977 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.833941256 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.777570976 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.85360571 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.832605653 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.003138223 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.164977945 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.836570944 seconds)
  done (took 89.296229544 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.843083316 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.834774619 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.835078722 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.835313343 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.836403887 seconds)
  done (took 10.9404519 seconds)
done (took 2166.459090887 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.065747035 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.016555416 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.058696867 seconds)
  done (took 5.823672216 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.975780566 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.028076096 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.143678395 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.164448036 seconds)
  done (took 10.062923055 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.11272914 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.199106764 seconds)
  done (took 6.059399641 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.159602044 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.84891132 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.210386098 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.831851315 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.83020236 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.829884781 seconds)
  done (took 22.246349571 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.834566388 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.836413458 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.834146794 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.83812293 seconds)
  done (took 9.092497163 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.815808776 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.539308134 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.814329502 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.827869171 seconds)
  done (took 20.746303967 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.985639796 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.952026485 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.978046958 seconds)
  done (took 7.664714582 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.512150804 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.485930823 seconds)
  done (took 9.747220129 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.013057339 seconds)
  done (took 3.779676328 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.886448028 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.12201183 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.366244422 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.413898493 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.47416957 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.157330746 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.194837358 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.078921863 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.296261065 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.334248307 seconds)
  done (took 25.092773596 seconds)
done (took 135.348098732 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.401881882 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871156596 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.050189011 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.209613614 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.074128378 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.04688161 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.04502116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.205622145 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.896681401 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.884931649 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.219537092 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.077471085 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.00083098 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.856073346 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.009770924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863508032 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.069444636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.217893239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.885798562 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.106515319 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.069285436 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.851758153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.04200135 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.863336806 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.072813913 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.996437756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.394753157 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.871869936 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.023388296 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.40690861 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.010248331 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.244975712 seconds)
  done (took 167.603459577 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.840840186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.84207318 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.838168951 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.840470574 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.315517783 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.840437111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.842600774 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.841077328 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.296249675 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.289700135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.840488062 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.307349528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.842959113 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.840472282 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.842654787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.840658473 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.459987605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.840933895 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.841630981 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.84029568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.841171513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.146094997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.842529697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.151651704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.46445714 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.844833396 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.840684232 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.84093674 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.840581619 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.840146812 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.842648659 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.841175143 seconds)
  done (took 208.383389893 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.841908066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.843617905 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.843986286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.842329074 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.842890372 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.839872969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.84601281 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.842187883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.46003351 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.451442269 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.843902145 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.843507253 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.842966003 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.843904635 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.843287968 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.843418004 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.842809783 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809261815 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.843547525 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.843282132 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.846591071 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.445364646 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.844580845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.456605652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.844208635 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.839385477 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.84211681 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.843870847 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.848096869 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.846355089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.849607639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.84245367 seconds)
  done (took 219.164956263 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.10341166 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.853030052 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.851371986 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.760102346 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.851688378 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.850498993 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.856755688 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.101211497 seconds)
  done (took 18.999698848 seconds)
done (took 615.92351805 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.306375446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.161475796 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.028646708 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.873149601 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.130759679 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.907681602 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.871720828 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.940649319 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.491929176 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.946403751 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.515479557 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.891655863 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.607101497 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.897751074 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.992382502 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.930407907 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.43759149 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.5300709 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.049155237 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.947846332 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.045295897 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.799928158 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.954653245 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.536276792 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.625891375 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.862412257 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.950343242 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.448663648 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.879635003 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.03230837 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.62773739 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.188684509 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.886157985 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.867207983 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.9258105 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.90391743 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.146748254 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.884104323 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.992514853 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.601851709 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.938211751 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.399565885 seconds)
  done (took 101.718117527 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.843548456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.841194645 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.840257206 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.841264361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.840844503 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.840032807 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.840930336 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.840003616 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.840389541 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.841297664 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.840744586 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.841655567 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.839778961 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.840461531 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.840294824 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.841173764 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.843551345 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.842020315 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.84117374 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.841153522 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.84193904 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.841418654 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.855631829 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.841947796 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.840020611 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.841819143 seconds)
  done (took 49.661989 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.853355589 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.008692016 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.091740592 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.874156663 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.854156133 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.860775838 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.873383496 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.859462368 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.855294636 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.856739871 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.961402967 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.859251898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.874611857 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.09175357 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.874883887 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.855585875 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.854337462 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.854394205 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.017105943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.870002356 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.871926206 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.86048212 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.874979166 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.867021975 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.853841118 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.855439442 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.859455034 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.297842006 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.862335491 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.957235791 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.909920328 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.876774758 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.237011901 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.102490119 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.910909677 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.864687444 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.857471973 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.961930145 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.860922602 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.856114334 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8749507 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.861052601 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.093901275 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.347892028 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.871177952 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.857957642 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.309874884 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.976373585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899024935 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.864469075 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.097996546 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.876547428 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.859699327 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.857631352 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.893020641 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.859542927 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.85664735 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.157321162 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.867022411 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.874237359 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.864615544 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.857395691 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019578173 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.869312653 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.008892204 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.868603709 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.863674106 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.859012187 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.095683788 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.874249316 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.351461614 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.875863143 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.861511308 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.963982351 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.017888098 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.344334266 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.873380014 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.023991236 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.257358306 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.885948802 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.867428565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.288745722 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.890343964 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.866509845 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.860886525 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.858922962 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.85994185 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.90116355 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.875438198 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.29103505 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.363115686 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.17581132 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.884284742 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.873960614 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.860816863 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.155554655 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.868553227 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.861083556 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.091897552 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.365105568 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.874341891 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.866878621 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.340868358 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.879006023 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.880740169 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.870961247 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.103956392 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.877828495 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.903685886 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.863537701 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.868586455 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.86351313 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.882522873 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.872222911 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.862860269 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.337757246 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.988063573 seconds)
  done (took 230.459578186 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.859949527 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.860012562 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.857125523 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.86013622 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.859162991 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.861122845 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.858371373 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.857478516 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.86362335 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.856652372 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.858826238 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.857366675 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.860260762 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.85909306 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.870604741 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.864654356 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.460555845 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.858212503 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.858552491 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.856343207 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.525557747 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.86510924 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.85765068 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.857284829 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.857058708 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.860684687 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.862268839 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.862224259 seconds)
  done (took 167.122527887 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.86508361 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.98195693 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.882705007 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.893910845 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.873427184 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.861200694 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.887071191 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.876824203 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.871219951 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.862897517 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.862791015 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.925728991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.873504625 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.963102783 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.894174313 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.894548575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.966773642 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.872719049 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.863188109 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.864990376 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.894160572 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.858110471 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.925995958 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.99341887 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.883937608 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980784874 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.866581045 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.86531642 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.8649476 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.985819848 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.880989296 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.926834857 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.891674078 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.880733752 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.987616218 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.978455425 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.964760469 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.891617552 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.870717691 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.865643502 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.865885437 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.851986465 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.982729038 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.886619711 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.86734682 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.970472892 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.884076152 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.868498563 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.877896959 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.867973521 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.878871885 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.885537252 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.935046442 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996510402 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.899514539 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.888749211 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.890687182 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.143953862 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.87382311 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.963967968 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.856645029 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.984003647 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.885082106 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.852374752 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.863922326 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.873881494 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895239019 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.894236392 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.96718397 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.871083948 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.96490094 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.897368355 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.870753219 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.867633235 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.870767552 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.983400538 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.983785164 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.900314039 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.90078734 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.89581032 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.863132245 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.865954123 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.854291402 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.884513353 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.868162625 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981743962 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.980417662 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.873081385 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.870108317 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.869014519 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.8694265 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.893303859 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.992731573 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.901378331 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.95752425 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.932164935 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.943795321 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.879463783 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.879629398 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.871522763 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.930296452 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.881758754 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.877886374 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.194972899 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.935300725 seconds)
  done (took 202.088372171 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.353905161 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.917835566 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.924870565 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.192080457 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.226526031 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.869379512 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.911802865 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.918089435 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.93957867 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.120446492 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.986943541 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.936075796 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.901960709 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.891824949 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.917211233 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.936483916 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.928794295 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.246580096 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.021540737 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.087027939 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.897344777 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.230181517 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.189786053 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.323644938 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.95110771 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.264600223 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.590052596 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.066808643 seconds)
  done (took 61.530303324 seconds)
done (took 814.345247303 seconds)
SAVING RESULT...
DONE!
