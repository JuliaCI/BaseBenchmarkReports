cset: moving following pidspec: 28555
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.340062829 seconds)
loading group "string"... done (took 0.570191696 seconds)
loading group "linalg"... done (took 7.524389413 seconds)
loading group "parallel"... done (took 0.153313887 seconds)
loading group "find"... done (took 1.193241598 seconds)
loading group "tuple"... done (took 1.767880961 seconds)
loading group "dates"... done (took 1.245012179 seconds)
loading group "micro"... done (took 0.216098538 seconds)
loading group "io"... done (took 0.902141757 seconds)
loading group "scalar"... done (took 36.72005226 seconds)
loading group "sparse"... done (took 11.468034487 seconds)
loading group "broadcast"... done (took 0.918204183 seconds)
loading group "union"... done (took 12.261388387 seconds)
loading group "simd"... done (took 4.543215378 seconds)
loading group "random"... done (took 8.619735905 seconds)
loading group "problem"... done (took 1.791047323 seconds)
loading group "array"... done (took 19.960087128 seconds)
loading group "misc"... done (took 1.755647037 seconds)
loading group "sort"... done (took 3.119994248 seconds)
loading group "collection"... done (took 16.961662475 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528472349 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128248566 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.13693325 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.12369789 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15198933 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122407893 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.130259127 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089762038 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.873546939 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.15561254 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118765009 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410258244 seconds)
done (took 5.34752132 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175457916 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086153982 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08756031 seconds)
  done (took 1.235034486 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.07075642 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130362209 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.072358785 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.072613121 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.072354283 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071888398 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.071911465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.072210567 seconds)
  done (took 1.623301038 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077416269 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073448559 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.074804006 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073969762 seconds)
  done (took 1.363198136 seconds)
done (took 5.538995423 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.769462193 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211532696 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188612376 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.39392546 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131731158 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177557008 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.652059217 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.343968192 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.189451649 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079903817 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.111234758 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.346899815 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125348099 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.648932982 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.081519319 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094802365 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141317639 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453469346 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.073134961 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087973506 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.094185755 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133932103 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.093103017 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.079317217 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150690194 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072812714 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138061615 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085427079 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.071628773 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.217117893 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177546697 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663311905 seconds)
  done (took 10.372171526 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10368368 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.102912052 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.074582703 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129812374 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.104770584 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.074961916 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.080856487 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.072645826 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.096835207 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134003929 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.09634159 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.109854055 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071009649 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.074261836 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088060386 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213069189 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.085063912 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08599472 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075703065 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083447691 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112341136 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082653389 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084656812 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084513088 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133836624 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185285646 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10125064 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.103012705 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071351016 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.086299707 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119236744 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133039443 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.073006917 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070854146 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.129470661 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.101099319 seconds)
  done (took 4.729980056 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.974782925 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145934441 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.094265603 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.090527355 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.137129866 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.070801095 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114668425 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.071087453 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085699621 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209868405 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.360823273 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.579576929 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.115337416 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115524751 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107343976 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072546007 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073719663 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069822572 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.072595712 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.478928087 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103373723 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.111449029 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085432604 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075048711 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073333266 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.070748418 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072100807 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.069161464 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073541673 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117791942 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079475381 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305987254 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125112048 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073088864 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.932797717 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.168637042 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070526876 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.244585092 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.175116089 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098349482 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143027213 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074019521 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071527758 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.162220544 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069642926 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075221337 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071353917 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089073804 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108426237 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124509147 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.071659842 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071020857 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171608177 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.072806703 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.084437242 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.136933583 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158593039 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071435763 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290481018 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094808398 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075361538 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.070491266 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176265196 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.127664107 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.073060955 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09601065 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072037248 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073546897 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.073634965 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366213794 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.071047096 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.883576277 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07560856 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081478869 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075496157 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074709472 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077818953 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077774919 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09337484 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070708416 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080281595 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070506564 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070731902 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071468174 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086709012 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.476170262 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.072524429 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073782969 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.070502775 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.09494649 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100841794 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.071449644 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.071017235 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104164673 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073339065 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.071714559 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071395123 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070132676 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087559704 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.075194916 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118696734 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.07344983 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.094635084 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101331118 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074277958 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103553336 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.082883361 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072982842 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.410319596 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07039575 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072840935 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.070000429 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072710497 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.073166883 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.085749552 seconds)
  done (took 21.948544708 seconds)
done (took 39.087365363 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242926582 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.073963009 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074114907 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075139239 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074453126 seconds)
  done (took 1.686087782 seconds)
done (took 2.82097404 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.123855953 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102626481 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069557219 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.100743936 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069267014 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106406955 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103700643 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081012879 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102770471 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.069757982 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100718945 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069895512 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069547994 seconds)
  done (took 2.315320407 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088461435 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088734267 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.075575664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087178985 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068342421 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087103711 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08601916 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.09324095 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086356383 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077705353 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068668141 seconds)
  done (took 2.034234889 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086712627 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088695668 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07485063 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087403055 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07101956 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.0864822 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086484523 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089922313 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086536484 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.079006993 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068861539 seconds)
  done (took 2.026375884 seconds)
done (took 7.49697745 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080125087 seconds)
  done (took 1.193023639 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.532492737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.627812042 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.084166804 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.108502149 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.19124771 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.115175775 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.244123105 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086714951 seconds)
  done (took 8.258212111 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10543922 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076762634 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.073706327 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075939715 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073290104 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075950498 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.076940373 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.074876817 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073699642 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.073261365 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.075062582 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074247268 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.077291463 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.074339473 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.076553015 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076795416 seconds)
  done (took 2.422368532 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.09644445 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095517854 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078207615 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079228952 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07666618 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076505127 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078936129 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077993564 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.075219667 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076996349 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079803356 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077569165 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075969187 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068481256 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.078785818 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080272271 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075110863 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078557647 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078706064 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079977277 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.079403113 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068417817 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075943717 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078679469 seconds)
  done (took 3.096471162 seconds)
done (took 16.092565171 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.110463306 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072496168 seconds)
  done (took 1.302348606 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084082689 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084344509 seconds)
  done (took 1.29740011 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083982406 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069807111 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090328837 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.080484567 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070051401 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069530337 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08888945 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070235806 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069571395 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069898567 seconds)
  done (took 1.892850708 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071833931 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079088843 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073570491 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083276093 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076799038 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068163134 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075075182 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071406101 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079773948 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.067319128 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074820901 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086745211 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074658787 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.088459833 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074973464 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072009299 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.0745026 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071711946 seconds)
  done (took 2.494281328 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069763806 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.070624941 seconds)
  done (took 1.272907966 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070675239 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067857856 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070075072 seconds)
    (4/7) benchmarking "year"...
    done (took 0.071041981 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.068298655 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066807881 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067939046 seconds)
  done (took 1.612687036 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.385762696 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120014236 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.303993978 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076810587 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086410852 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258052336 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.071440964 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.076130922 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.076191184 seconds)
  done (took 2.621077169 seconds)
done (took 13.629372433 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08523632 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091441903 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09968401 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.382099394 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.097229739 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.072211605 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.118703949 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.185764566 seconds)
done (took 2.278398994 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218654712 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.657309322 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.403711277 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.2072514 seconds)
  done (took 2.406757894 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344088766 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092530073 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.065365335 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.072619693 seconds)
  done (took 1.719911091 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.07198902 seconds)
    (2/2) benchmarking "read"...
    done (took 0.074581809 seconds)
  done (took 1.289471941 seconds)
done (took 6.779197273 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072470265 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.203135036 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.068980243 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071025241 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.068767697 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.071329263 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.068794709 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.069290619 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.071147432 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.071337201 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.071412181 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.071462938 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.07169791 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.070847565 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070915324 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06844824 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06911621 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070755148 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069096633 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069274647 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069036671 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071123417 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.068787698 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.068644018 seconds)
  done (took 2.986269824 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087321731 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.071815994 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075854216 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.076154899 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07318687 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074527718 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075234991 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070639231 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075548329 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073225304 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073662691 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073459291 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.073241262 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.072986138 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072969777 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073088677 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075345224 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071096122 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073363833 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073121195 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075441537 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071712319 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073191504 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075409382 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072946993 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073186228 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.073072683 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070869511 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074829982 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073039749 seconds)
  done (took 3.371671217 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.075488773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067971653 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.069180347 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.076367455 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067620457 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068358541 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067789746 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06867328 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.069058979 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067825021 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069281055 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067808148 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.068072487 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.06864879 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068656956 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.07249143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084298879 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068063611 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068298671 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068713633 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.075015936 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068338542 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068385907 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.06809121 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068080344 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067627013 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068443905 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068769409 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068511875 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068281871 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072204803 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072787044 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068070431 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075941813 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.072467738 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068632074 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072883206 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.068148491 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.069032535 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067764302 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068418917 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.069126162 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.068386194 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076334638 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06813892 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069180317 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068173048 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069438182 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068622952 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070175861 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067612002 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067923779 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069892795 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069266301 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073013017 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067702426 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068927803 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067850949 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068713588 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.068118797 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067995821 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067959633 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071990458 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.069074312 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.084392439 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075998956 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068034495 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06928133 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.069117898 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.071438471 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069547085 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083520287 seconds)
  done (took 6.207082196 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.091429146 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09180696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070906993 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070518526 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066471223 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068760313 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074248631 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068778746 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070627605 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087803786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068990625 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07050513 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071353944 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072749062 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069453794 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070989551 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076909454 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066136203 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068923963 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072518292 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068536738 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073984681 seconds)
  done (took 2.780449485 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152097586 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074841679 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109696644 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079304647 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074873387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079137551 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074222944 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074527821 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074853634 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072792965 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072388983 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074254277 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074260413 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072442737 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07232434 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072084964 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074786753 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07256701 seconds)
  done (took 2.60710806 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081148848 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.07076107 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.092371848 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070575085 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07154808 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.073359905 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074924023 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078404424 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073694861 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070656356 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078638216 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073449146 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073270118 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071402563 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073738131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071709217 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073305168 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07089262 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07840175 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07482186 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.075373561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078686678 seconds)
  done (took 2.80719189 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084190999 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072760921 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085538552 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072383144 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065941936 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068976479 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.074649499 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070486895 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074327872 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072873387 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070825144 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068544748 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072952952 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070507421 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.073239263 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070707271 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07291088 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07122959 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073264722 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066046931 seconds)
  done (took 2.611515021 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088632781 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071972084 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072418773 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077984334 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072193088 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071963162 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078236952 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071969957 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072052914 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09249245 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071693188 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072187531 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077984185 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078583872 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072226314 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078138739 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078381457 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078630611 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071957489 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071835662 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093373379 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07235631 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077867706 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071744532 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072051531 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07173945 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072096448 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075656282 seconds)
  done (took 3.289670558 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071527412 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071429649 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.069174797 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.070096338 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.069446522 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.068566771 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.069262551 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069411408 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071295212 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069018488 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071538922 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071256869 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071198666 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.071153406 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071263557 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071508787 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070803069 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069061364 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069261655 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069308335 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071290354 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071490265 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070867119 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070158098 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069046808 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071180387 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069023416 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068742599 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071183987 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068615317 seconds)
  done (took 3.271663752 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078688479 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077582699 seconds)
  done (took 1.321834832 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066836946 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085249768 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067580522 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.076430248 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074398769 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072256855 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077800562 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074165886 seconds)
  done (took 1.756133704 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086252414 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079790248 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071351622 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079822068 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079654478 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087685179 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127018278 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070521232 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077907387 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.069941127 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.083706736 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070901567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.077654147 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071828206 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07716499 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078990682 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068428257 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075064974 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072234776 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068915844 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071170845 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079727971 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07454074 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06603913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072756596 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093558809 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081526271 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069610937 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074388836 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079020835 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07737346 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065206714 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070586197 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070720136 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068989196 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079072969 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084865558 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07394838 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079654617 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071201542 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.078439059 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065671583 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075654632 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.078394381 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.082256769 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070372223 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.070889243 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065712902 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070049643 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073648188 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065949414 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072584989 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065673487 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078451776 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.075043153 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081589398 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069317379 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072740448 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.074118824 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074279965 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07806736 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.073511179 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074669145 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070212009 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.082018389 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.076725578 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078952102 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066403927 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065055077 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068740968 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081245714 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094292159 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077037764 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070859001 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071649973 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.069376939 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075440932 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071900822 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076092844 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.078840307 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071924861 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074948721 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078318128 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072369027 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07388076 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07606676 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068651815 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072675932 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069908885 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085794164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071470732 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068659643 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069696605 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080581247 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074212543 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.068955199 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068539755 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077640677 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064314338 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.069399551 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069706808 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071354599 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079037108 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07241446 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072629544 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078583518 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076109732 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070789025 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072487678 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.066702254 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.195540647 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.072401321 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.081014406 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.066393131 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07609712 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.07437433 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071945601 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080593442 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06939256 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071067705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.080036001 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077709173 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069754134 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068013719 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.075096119 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070175035 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0723306 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079776344 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069555255 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065961361 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065863154 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.075091028 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.07023566 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075524129 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075044461 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074937466 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065859212 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069123638 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075246924 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080419139 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071629437 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.073232162 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077421877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072590923 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069686751 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.078444413 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074043821 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071197256 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076670412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073068137 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.06589281 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07305402 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07395838 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06933899 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.076051455 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072965151 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.073807048 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.07049844 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068920813 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076399884 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07102583 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070648361 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071709309 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069816609 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081250089 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073563654 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065894705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068020633 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077184945 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070234924 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070448578 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.070973919 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073483575 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070848515 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068710231 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069325934 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073207517 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.078004597 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073094484 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071138564 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076624087 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083679656 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069858075 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073813993 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070133362 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071016885 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070567919 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080113139 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077150685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074410467 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.074027053 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067998726 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075965913 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07869475 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070569245 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068517802 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070277889 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.073439079 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076612449 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072995466 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.07016429 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068585976 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071837581 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072444797 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073835028 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06953166 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070433694 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074469936 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068036397 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07462555 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069815876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080118878 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073195601 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.064773963 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070987686 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067483834 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076763921 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064574321 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068703097 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070165394 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06955656 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068435822 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072477115 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063866026 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.206569303 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.080929651 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.07386924 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.07222824 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.07101049 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079701316 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.074422884 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.076154614 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.076112306 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077694294 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.082276115 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.071201268 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.078910875 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081806717 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070525882 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065387131 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077304063 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069119446 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069588934 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069787361 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069310056 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075001894 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077281289 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077756024 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065534137 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.074382351 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069170815 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.071104298 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.065985641 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076160443 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073964028 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072867206 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078456993 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071416723 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070678992 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074454529 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069777159 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070958767 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.070695441 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074553015 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070359562 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073727349 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070906792 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074396711 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070298249 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068293957 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.073167079 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070078207 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071743935 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075806744 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069949075 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072142333 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073797605 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070891478 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072241841 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.072533956 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.071314929 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074442106 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072403117 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.072425308 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074054492 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.067207986 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079258465 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069808214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078918551 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.072295794 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068125611 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075877275 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073809554 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075120687 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071000471 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071074498 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.07342074 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070109703 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.074046706 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079400806 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070073238 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.082362016 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07774225 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073123254 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074120537 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.07222125 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.073023635 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070744533 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07215284 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070397363 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071830331 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.069639407 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075136238 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073512943 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071442654 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072809239 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.070275361 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071982755 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.070796229 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065350077 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070868868 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.071050478 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.069904368 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079757063 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07015608 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.071307025 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.068823575 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070220309 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.068729729 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.066760152 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075085718 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075249917 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069568634 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075886786 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069997182 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071854797 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080145522 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064039338 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067751753 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.198567745 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.071338532 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080496218 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071462441 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.08253316 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.072940934 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.07272714 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068397008 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.071811378 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070038304 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.066128835 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06938359 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075072999 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070922572 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070177414 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070766228 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073798916 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07167563 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.080032708 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070247546 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.072971382 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.070390726 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06894179 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.071992687 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.071950237 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074997778 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071461286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.071094733 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068870394 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070125696 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072554348 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.073310941 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.070594631 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073354243 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078389642 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070794133 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074517439 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072957681 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065608378 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074457182 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070283776 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070254354 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.071134494 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.077541946 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075858431 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071038047 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080842821 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070025325 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073023578 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071372101 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068877513 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.069983952 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070188857 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070541592 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071207079 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071743144 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079288994 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.06896975 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074823072 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071903046 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072311802 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077294428 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070941536 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074322264 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076331619 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071932356 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.073264629 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079925908 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.074338729 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074844543 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071063632 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.073175296 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077383188 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.07108699 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077644063 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.072637524 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071173367 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.07290849 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.070398934 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070264593 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070222274 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070253971 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077385668 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071006106 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071253418 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070803151 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06889248 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072280782 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072566685 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079417644 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073816011 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074124273 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066119194 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067650061 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07064498 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069497972 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072813839 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073754118 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076705069 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073469324 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071992865 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069628014 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080210826 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076709584 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074551235 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069300524 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074381634 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06992405 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072394013 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071635201 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.07061754 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070363089 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073984802 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071763442 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069649173 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076405406 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073908109 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.201176324 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.07532937 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.074775859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.073590017 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067859555 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071969516 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074521109 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07709216 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074897957 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071480287 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082376048 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.070108951 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072906896 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073189734 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070455237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076053293 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066130044 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073319668 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070770989 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07170019 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066851878 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071768771 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.070005716 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074463385 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.071692655 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066937761 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081862414 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080998667 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074706878 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069736434 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069973688 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066835507 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066157046 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.071023631 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071867392 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073695777 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081046077 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.071104016 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.071050589 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066350821 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070537713 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074748687 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074417223 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068536345 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066874364 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.071192727 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074524764 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077247592 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069591487 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070544479 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074461207 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073449177 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068761521 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072947077 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068266928 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075155382 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082897868 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071124567 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073067354 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076858069 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079003924 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.070659726 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065951441 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070947699 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074378116 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073001151 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071292757 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071672916 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085412715 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074889953 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071144767 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069684806 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.076731959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071563376 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079675018 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071433989 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071364509 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076504265 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073528188 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077160561 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075194319 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07809737 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074617178 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074752312 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070164118 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072410258 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068657341 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071047569 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071204378 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070363205 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074047444 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076401758 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070873732 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08136921 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080433372 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072803286 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067743177 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070924093 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071017524 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.066093488 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071097457 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069030769 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06887907 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06875069 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069493662 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072287558 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074886502 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071680061 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069860368 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.069089964 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064459946 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073330633 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072632965 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071673955 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067303005 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069505929 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.202045499 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.077564884 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07534111 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.071679843 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074887401 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074738632 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074262706 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.067355554 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078893535 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070438909 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074115082 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.0724456 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07106566 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.07214505 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0753814 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074816321 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071373683 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074663803 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075950773 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072155134 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.069018043 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068226654 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.0765367 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069702122 seconds)
  done (took 45.33572731 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104054953 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06786127 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06642893 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066383327 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076454396 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067092445 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066146017 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067221393 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067267022 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069182565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066505456 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065997516 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074025895 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080961547 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076620068 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070583161 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066234611 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067503898 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066478441 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.0672016 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073934366 seconds)
  done (took 2.744530178 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076920745 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082339849 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.078698975 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085877335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075137904 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073883175 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.078825568 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074395636 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082017695 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076813025 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082290176 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074274302 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076390878 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07649096 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076748744 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07475284 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081800973 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075348965 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074362659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079052938 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074446971 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078848891 seconds)
  done (took 2.950905417 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071334683 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070376422 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.073348745 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.0659376 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069601258 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.06695016 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072561369 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.068397806 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072984834 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.070644781 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070718124 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070345169 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.081128937 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.066241821 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.071477455 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.06816179 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110421214 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072620327 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070504552 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071517905 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.066085492 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072814713 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.06622812 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066844784 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070459631 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073255414 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07072414 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068492873 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.070229125 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.07036657 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070135708 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068563484 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.073368052 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071471605 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070771622 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070684896 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.072612649 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070599888 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065951312 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068567852 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.072882707 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066308003 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07046387 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.072929463 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068531402 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.068262053 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073072071 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070530014 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066237029 seconds)
  done (took 4.72616314 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.080601851 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.112316489 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072907131 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091985092 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083023079 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076260452 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074928297 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093013574 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067929856 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068496706 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084461182 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082436956 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069437662 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073672541 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074440582 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069403469 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070484259 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068614532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.072427523 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069381273 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.072960039 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076577491 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083175083 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081653322 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073238249 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069023947 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069435322 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074194007 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.080782267 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073571383 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074328258 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07442566 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083425565 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074331924 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069063874 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072115984 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084266705 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069938509 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072274692 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067867492 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.07158993 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073318556 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076324146 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.084663565 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069812351 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074513611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069808326 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067343425 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080811599 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071951779 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07636428 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082001439 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073143531 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069579704 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073869926 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083812814 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069510722 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068159604 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072249354 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.080414672 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067534875 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073209977 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.081376975 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071072391 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076001694 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.081888355 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074644774 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072916806 seconds)
  done (took 6.505881906 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079093449 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101028387 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085840271 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.086896986 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0801062 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080463727 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080597639 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080048279 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08032588 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083807497 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07994669 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119129914 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08408461 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081782398 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080139479 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.095482718 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079565961 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079692183 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079410069 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079294796 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079582446 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085732289 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079500543 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085832052 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082861212 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075536395 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079570407 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079752013 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086140569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079314643 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082766115 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079772649 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079796652 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085699957 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083232138 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079263876 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07005012 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079276095 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079585474 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079239729 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075853369 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086237818 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079677277 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075967946 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079834346 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079448173 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.085849724 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.083051847 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082415134 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083442084 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07991336 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08583447 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079569126 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080044201 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.085613838 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.088035453 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.085688059 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.085909791 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07954859 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.085815951 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085889494 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088415641 seconds)
  done (took 6.404001266 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084462942 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076952226 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.088118867 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066207049 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069060162 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076321498 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069045586 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068673903 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076881697 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076836164 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078817278 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076031711 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078560141 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079479773 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07591012 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078599543 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076251258 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075897917 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077047577 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07587798 seconds)
  done (took 2.813516507 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079775096 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087644125 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071335481 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075516527 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073438318 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075176681 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073139525 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073671774 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071946794 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074190775 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078993582 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07952856 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071464499 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075596649 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079164987 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075449923 seconds)
  done (took 2.491450375 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087283769 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076746481 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082183366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069760913 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071733913 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066408005 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069513667 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065915972 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066548845 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082350476 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069886173 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080894316 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070113276 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06879854 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.067516639 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075490316 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066573836 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067687966 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069749644 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080944891 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073834103 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068494343 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073501824 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069975341 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072493403 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074501491 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06911863 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070879858 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067458045 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070117545 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073194353 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.074133919 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067750283 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068284481 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06906073 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067296626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070406994 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070348594 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075407954 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.069995743 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068468794 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072415342 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070085789 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07100317 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.067267525 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070624043 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066906963 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.073391387 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068365524 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.073204036 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070015583 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072450797 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070598843 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07718703 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073238533 seconds)
  done (took 5.213936128 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0842337 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073662082 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065678418 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.069170091 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07361144 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.072017682 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073153922 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071589141 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072095225 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068283856 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071638826 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073685513 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072386315 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073981957 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071884071 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074060764 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065846275 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071329401 seconds)
  done (took 2.588825223 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076212152 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07088585 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077754624 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07120561 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07045772 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07319556 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065980408 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068701069 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0695545 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070945642 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07137489 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073159212 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068574418 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073035344 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070977106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071214106 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.073537394 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068724945 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070776832 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06626502 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073106259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068974105 seconds)
  done (took 2.845605056 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097347753 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087201781 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142048672 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083822526 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090498236 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076887224 seconds)
  done (took 1.860812425 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095813657 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10494586 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071715338 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073876238 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078659745 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074461556 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074075157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074472615 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081362589 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078934737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076995701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081527644 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081245876 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080569152 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079254006 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07992209 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074696225 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074434264 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071177837 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086132965 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074801129 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082198425 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074776903 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074674291 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075026671 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080917629 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081273186 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079234885 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074248131 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081433464 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079358601 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074581069 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082400372 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079797996 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073886728 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081700876 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074999087 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086303586 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079465949 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080979565 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.074338805 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079872601 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081811787 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078024479 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081817859 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074834615 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078258235 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074778798 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074754455 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087585799 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079765735 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080507367 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079191369 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081515318 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081513509 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087582543 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07939156 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080700484 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079495425 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079256414 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080766031 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07934856 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080473568 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078789766 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079685332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080646646 seconds)
  done (took 6.527186094 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107196554 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071655674 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074487767 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078509409 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081208412 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074654523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074611187 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074481405 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074769194 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071748374 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111578748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074561731 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081221178 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081207112 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07457029 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074726827 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07465246 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081017638 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072281707 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087988089 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074508407 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.08118436 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080833336 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080935572 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079230116 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079379543 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075360895 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074950839 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074169067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07466495 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078771611 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074824785 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081175476 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.07190193 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08148897 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074994096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075210022 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078084453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075009469 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079935745 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081221163 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086318415 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07523628 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074584216 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079582759 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074512823 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074649979 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071938303 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074493296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071895392 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07995745 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079050238 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079655832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080558075 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074776658 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074705146 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074468805 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074994843 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074728072 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079269284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080754831 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074310157 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087769008 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074652886 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074380226 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080649839 seconds)
  done (took 6.459026289 seconds)
done (took 133.623682012 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198272465 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174262573 seconds)
  done (took 1.646556167 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073260492 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100141735 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080999441 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13362181 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071597959 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105702199 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103481198 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081636096 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071126795 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070651284 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070858613 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073470528 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136012045 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071084454 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070696243 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073138493 seconds)
  done (took 2.680265149 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102180491 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159334198 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10472018 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070219795 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101603996 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076338125 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.073118752 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079149631 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075123686 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070066016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076509318 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074456626 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070332398 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074649885 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075187566 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.07654517 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070216991 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076817959 seconds)
  done (took 2.801291328 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100641137 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094907544 seconds)
  done (took 1.492679142 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161456191 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137278786 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.206818687 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.339758344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156979644 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148029418 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.145845147 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144688068 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116492641 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139924973 seconds)
  done (took 2.99150256 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103984441 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152122902 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273934715 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120275962 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077387918 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094288177 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121491868 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083562592 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083434596 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083108334 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083054989 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080394809 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102698301 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077894857 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.079314026 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080344255 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.106232164 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.078330655 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079937908 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079499745 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104629912 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071255245 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077938765 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.078892814 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080664141 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081096044 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071269054 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071080073 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080208578 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079387158 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080401763 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093300419 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.080773503 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105496542 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.076012479 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106961628 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080978822 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077491627 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079729799 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077588013 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082154898 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081873148 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078624773 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080659724 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.071446658 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080666673 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.071323926 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.07098613 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081228439 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.072124151 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081313618 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080169931 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10588471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072181224 seconds)
  done (took 6.125194101 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111256415 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.110174789 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074671451 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.115578829 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107902804 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07430907 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.108922143 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102253962 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111404852 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07473992 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073026331 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074590146 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082787741 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084442542 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119847628 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111604126 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076980881 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073974651 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110915636 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111350181 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073744774 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105411384 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.101363503 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110499445 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.072930946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074609104 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072902424 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074331496 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080295219 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081324815 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073354184 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082830949 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087377777 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080574271 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07214125 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073106986 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073509466 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081797701 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083056399 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082167998 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081004873 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072569 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073359801 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074412484 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074206842 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072393719 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081606237 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082560437 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080986126 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073087196 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074594645 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073503142 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074452231 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081731523 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079681668 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.082835487 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082784926 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073675587 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073170271 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07579087 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083278383 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082241131 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081806273 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076476574 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.0819021 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073678117 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083637982 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085718197 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073225735 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074178221 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073840495 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073780292 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074775747 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079539263 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.079767511 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074139111 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07252067 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073028295 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08171462 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08062531 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072429347 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.0791859 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071703741 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072681193 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073942539 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073978778 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079746785 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082833071 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074539348 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.073094455 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072543655 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071956691 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.072165859 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077866793 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079892523 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079954035 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078666251 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073168756 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079359588 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078685812 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.207010033 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.082663824 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07471225 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0760356 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07517931 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08187515 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.081354131 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083287663 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073764204 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.074497172 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.081106464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084278939 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073794347 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080847707 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083935724 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.08160561 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.072973938 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083512187 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073823486 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083010422 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073406637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083123112 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.0737562 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081646888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073352152 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072911973 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073452053 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081686836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074591072 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07311816 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074516739 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072942586 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080956262 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084964451 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.075126782 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080884204 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080810633 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074448435 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.08082796 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073049101 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082763524 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073678867 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074395961 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072504638 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083691113 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073367932 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073338478 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073117644 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08228597 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073490927 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082886606 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080670684 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072590152 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.083899458 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08307185 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.08053516 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083056625 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074636057 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073066103 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073025185 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07304863 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080096779 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081523956 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074581694 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073186953 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080224982 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082141043 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.072225038 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080487278 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080262403 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080921088 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.073160771 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073314175 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083192282 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08288112 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080652709 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080620278 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08055159 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073184843 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079720195 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080079965 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072695208 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085636948 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073235133 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084517842 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080526739 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079489103 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.08102355 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082292713 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082108182 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082153088 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08424676 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071534168 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072209706 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079399832 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072037071 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071503427 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078144896 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.073110186 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073499015 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083294729 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072516803 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.216262528 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.074533501 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083836263 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073743627 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075429097 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086110451 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07431526 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077140666 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081876741 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.073455129 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080735177 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082660562 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081199118 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073397745 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074402357 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082115955 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.081949125 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07348305 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073570135 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074993808 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.081319675 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080106852 seconds)
  done (took 19.424601175 seconds)
done (took 38.470895917 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.197408589 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.149141792 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.161864907 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116748775 seconds)
  done (took 2.007967231 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.11384227 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.102010569 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093429446 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070795162 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099209472 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070856866 seconds)
  done (took 1.881056678 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276294893 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.193156785 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.177649553 seconds)
  done (took 1.974899903 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200913367 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.187075024 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.431166618 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.26544467 seconds)
  done (took 2.509125629 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14168101 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089024094 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.072020657 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087989968 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.128964984 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.157378398 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099525007 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124673907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084075358 seconds)
  done (took 2.359569312 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.147712265 seconds)
done (took 12.218478571 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.19441107 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.147555588 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.193560233 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.184324657 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.168030126 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.096779441 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073817706 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079788684 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.130612002 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080390725 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.199337803 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087875 seconds)
    (13/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.158522985 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.081386485 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150569487 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.08112873 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.183418277 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125820333 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.071364998 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.212105913 seconds)
    (21/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.329529322 seconds)
    (22/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.19384223 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.125850156 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096354537 seconds)
    (25/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.110900136 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.190035174 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.079167965 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079656514 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.179296352 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.216696764 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088378119 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.071264825 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.201024714 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.090919042 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.107804664 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.081857695 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131572873 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093591772 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.084644678 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078629803 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.185190965 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183758584 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.176948491 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.084544324 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.107624462 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.069420224 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168750201 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.079207193 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.057683373 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.114009908 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079530728 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.074255419 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149367422 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.163920508 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092120493 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 0.150285307 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.109232539 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07786401 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116712435 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.18376128 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.077497312 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 0.072075425 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.120412086 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068883796 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077209387 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.130303295 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.081419109 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.170696214 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080040415 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069920975 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078440435 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.150757853 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.0958131 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.103311497 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.182550646 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07987544 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093941858 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.136250749 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068515689 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076236238 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.127471456 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108149909 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068044775 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.331252582 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.095135894 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.083217698 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219206982 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.153031947 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.081966854 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.095394462 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.179472708 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.185066547 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.09346513 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079741438 seconds)
    (95/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085412452 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.126633596 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.079783874 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07798933 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.175010425 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068255075 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.081562295 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.092960353 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.085053731 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.107348727 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.117653558 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057502631 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.095107698 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.074688593 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05703957 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.093316959 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077457253 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057047203 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095452455 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.082138504 seconds)
    (115/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.0766094 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083278041 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.057498325 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.153405277 seconds)
    (119/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058132878 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.195228192 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.085543067 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093844535 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.188754596 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183791732 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075530291 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.095021007 seconds)
    (127/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.057211726 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.077756605 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077740488 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078864056 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.058866056 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073053428 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.10134753 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.057976894 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.148479645 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078514081 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075375682 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.07345479 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077477741 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.146502362 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.057815453 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095186922 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.172774469 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.079627413 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08208703 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.072118401 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 0.149792892 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077554648 seconds)
    (149/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.170071035 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.136070798 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181694876 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.213988201 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.068254055 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.095184469 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077396077 seconds)
    (156/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.057567108 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.151225134 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.077176993 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076360131 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.104037666 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079150315 seconds)
    (162/309) benchmarking ("sort", Float32, false)...
    done (took 0.136054474 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078164495 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066925596 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.071173125 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071644482 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.118526741 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.069921498 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075789042 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.081443365 seconds)
    (171/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09521254 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070464204 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078524172 seconds)
    (174/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.068786048 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057381856 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140920629 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.14949348 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071527402 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070136194 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.070163884 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.095693799 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100243369 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.142258721 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077815528 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146836291 seconds)
    (186/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.261110688 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.08264576 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.085807419 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.078522478 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05952724 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.185805163 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.058997729 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.080596331 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.071359726 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074152209 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.057658714 seconds)
    (197/309) benchmarking ("sort", Float64, false)...
    done (took 0.137144145 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.076760969 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084128375 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.069703156 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.059379462 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073187486 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.145923659 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.08347503 seconds)
    (205/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.058347814 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.093755 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074258517 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072182037 seconds)
    (209/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.075548911 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.078134124 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.058074041 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.093654074 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.096211842 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.158367571 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.079902923 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.086703126 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.059086157 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.070862052 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.078170348 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05736224 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071256882 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080273471 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078925638 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069894305 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145217172 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05960729 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.078222958 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082970695 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.09262115 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057572337 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079090297 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.072321508 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172754439 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072048008 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.057456455 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070987669 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110732633 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.073476837 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07243986 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.060652933 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057517434 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070823639 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.069529339 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.071018237 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.058953928 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.071017333 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.057408954 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.071140279 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069599184 seconds)
    (250/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.07328305 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070606479 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057241686 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091768713 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.057327631 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.056923963 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058546182 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.059697216 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133162786 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.057346446 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070794877 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.057299568 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.072600702 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069832463 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.145445555 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078457278 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.057279315 seconds)
    (267/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.085732248 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.071238271 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058209167 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078541304 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058412913 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.071198877 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.080787699 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.118149117 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076774694 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.069332851 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.057663303 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056802421 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070655412 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.111100332 seconds)
    (281/309) benchmarking ("sort", BigInt, false)...
    done (took 0.193774673 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.124054621 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077898432 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058627976 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056574035 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058443823 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.08994166 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.106006111 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.095053883 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.058186315 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.056414019 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.058456556 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071651483 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077323169 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.057985447 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056590752 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058210256 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075883769 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070036784 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08976577 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057379256 seconds)
    (302/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079534302 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076832288 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071870829 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070560315 seconds)
    (306/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068849623 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.071498101 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069967597 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103927777 seconds)
  done (took 32.163440401 seconds)
done (took 33.504864936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.092993786 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098711002 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.082654508 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099349847 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.087679296 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083770636 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.079432005 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084687623 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086873535 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088188617 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.085402336 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062090211 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.081273013 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.081415834 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081025154 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096696278 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.085648117 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.079999972 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.079681231 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.070698012 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.079052098 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.071138564 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072870678 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06101173 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.084794389 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078201041 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080892426 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080347752 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.070845845 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072268101 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076122946 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.080146338 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.071167857 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.085408585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079527748 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079013423 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080650564 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082692579 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.073199822 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.071428621 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.080555214 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.071192983 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.078964493 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.079404116 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.077410426 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.077056482 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.079199793 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.082709342 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09520787 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073609276 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081088315 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.081522106 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082400666 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.079039653 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075254672 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.078789641 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.077164642 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095413063 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.079186509 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073404512 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08012235 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079657165 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077114878 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.078889564 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078641706 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081358669 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082195621 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076787221 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081011329 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077753559 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070689433 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079096974 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075298467 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.073849106 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081890475 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083568886 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069939735 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077531087 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.079468553 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079615128 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070282485 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072871546 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072709615 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077814151 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072868482 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.060971329 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075888241 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077780408 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.070006415 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.078995748 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.078077847 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07817144 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072223936 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.082562373 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.070256439 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076641736 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071152369 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070681658 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072229108 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075099873 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07040768 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072453853 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.0815428 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072534907 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077409577 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.08345452 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070295639 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077922555 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069667205 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.06966188 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083784875 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.080523599 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070421481 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072545228 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069541008 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077508234 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069067896 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069334684 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069284038 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069754019 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076301666 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06973707 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072017824 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077286443 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.226240341 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.073639481 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.077127352 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074602945 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.072713325 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.078084564 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071854457 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.071875058 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07321066 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06863686 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073667675 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.071503505 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078897644 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073367429 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079433899 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072358624 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080094039 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.077435087 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.078677033 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.077489834 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.070868017 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.065972933 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074451527 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073414358 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072982191 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071220397 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072392888 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070961006 seconds)
done (took 13.325394975 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07228513 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.136232633 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097137482 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.098178558 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089087151 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.072791468 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079535529 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.099272046 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07304114 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102111901 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091957798 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090523399 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112875083 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.070134291 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.071302922 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075428453 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072651653 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.084147168 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099632294 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091668565 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115108047 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070582053 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.094861284 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.092194887 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090513444 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105526008 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072193695 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075248503 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.075248291 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.094932736 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092986219 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075458066 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.072176541 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099120933 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097645293 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08599027 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071895525 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.086418674 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072049363 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071315728 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.072983705 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099182251 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08318758 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083630057 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.075612612 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.081928051 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072469152 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086012061 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091866928 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082249247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088726233 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101310462 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.073720336 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.087274346 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069892648 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088192512 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080112265 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073500204 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071845103 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078944801 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071720413 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074887188 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084369822 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083515172 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075584049 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.086885821 seconds)
  done (took 7.003616052 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088420909 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.101778051 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087561892 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087840837 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.071663439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071437538 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071347728 seconds)
  done (took 2.020220957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.072442988 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092026992 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092597968 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09234225 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085752561 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.094818762 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081193705 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071908179 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096291451 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.073187172 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091767684 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101496569 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074619727 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.085113021 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.093624592 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.072107314 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093963747 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071658662 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074786607 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093890118 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077454457 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101150261 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079500037 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.072316727 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085723718 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072490673 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117286706 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075362719 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.074023245 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074831439 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073456048 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110662305 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084580218 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079331722 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072365568 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086363456 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08613619 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.075438843 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.083192693 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.081150034 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084984857 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.072630966 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073222009 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.073356413 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.076190807 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.082124934 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072878537 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.076197861 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074607038 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090923158 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071866126 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08470634 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07435507 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077279559 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073769179 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078228621 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.08227206 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.073047007 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090869397 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.074002857 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087466919 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086888059 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084856621 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086420672 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074102078 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084812892 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085000979 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.075662668 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074131119 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075478522 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08594506 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070767563 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.07393297 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.08154417 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074210996 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.093702407 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093820795 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07353404 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084925505 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072484686 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072294308 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.0725794 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093445682 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076941528 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072160842 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076237537 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075931027 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.075210285 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070893805 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075767732 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.06989391 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.077562436 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.07433693 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.075711111 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073879773 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086080406 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074032385 seconds)
  done (took 9.260559341 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.075129709 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074198101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074759395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073428838 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072638844 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.07364848 seconds)
  done (took 1.90868483 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094303779 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072924593 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084385286 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076241767 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107116882 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090215731 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090785461 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.081464296 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087556315 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083379375 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089925332 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.091667211 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095028903 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07702967 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090401033 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07613883 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091072861 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078679021 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082937037 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07736214 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.089696568 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076964744 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077040526 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.084993839 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079970881 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076778088 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083281452 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082929602 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082797825 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.081585919 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077185186 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080508022 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075224837 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.08141916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090849528 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07526459 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078477691 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081564962 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076552935 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080017979 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091269983 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076918904 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078751919 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081714872 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081573977 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075966569 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081492491 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083413619 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.090584147 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081278813 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081543414 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075583957 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080507937 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.08165495 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075598748 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081201945 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.08192095 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.090826094 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076759127 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075729821 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073726061 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080467541 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080981436 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.081186748 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081556269 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081357613 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075318848 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077130119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077722891 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076181808 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08140644 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073554205 seconds)
  done (took 7.3282759 seconds)
done (took 28.940460537 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.54405363 seconds)
  done (took 1.962460906 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607611088 seconds)
  done (took 2.054714899 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.508650331 seconds)
  done (took 7.950843976 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.3689219 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.472617594 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.710962574 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138038721 seconds)
  done (took 3.169631612 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.728428358 seconds)
  done (took 2.180462205 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238812022 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230022703 seconds)
  done (took 1.93180215 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378782191 seconds)
  done (took 1.823813825 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.117310244 seconds)
  done (took 2.562273818 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.240854578 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.180067416 seconds)
  done (took 1.86994634 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.444083377 seconds)
  done (took 1.891132946 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.869880799 seconds)
  done (took 6.317919412 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222882795 seconds)
  done (took 1.712397309 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.2391888 seconds)
  done (took 1.688231895 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.738841059 seconds)
  done (took 3.191212175 seconds)
done (took 41.763593894 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088353633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.090237081 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089981496 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086020695 seconds)
  done (took 1.787384901 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081275831 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077603975 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080756788 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077810888 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080705615 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077649492 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079457358 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080530822 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077583914 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077796125 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077700056 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077678217 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.08044688 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.079244476 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076648085 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080284215 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080580674 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077297755 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080149584 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077593244 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075949177 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080073615 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.0802043 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076848902 seconds)
  done (took 3.345295397 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082978312 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077806667 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080831082 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077033433 seconds)
  done (took 1.77760875 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083423664 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094419933 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.092642994 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.08317241 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094552777 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.089905244 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073972921 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07453484 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075316174 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.083400938 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073362008 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09928514 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.092058874 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.083113186 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084953348 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070128148 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072414541 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.091773597 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083978892 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.08395976 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076287479 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083591297 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073362728 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.093251829 seconds)
  done (took 3.46343255 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.08646017 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105133729 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085296321 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094732003 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096476665 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070837195 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083956886 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.097002545 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.13044001 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.070648006 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.076248854 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070476223 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.079168269 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.073859383 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085088183 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.112984491 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.116319333 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074401636 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102201245 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070586067 seconds)
  done (took 3.24411113 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077284906 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074732588 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07562384 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070522403 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082614401 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077828766 seconds)
  done (took 1.924641563 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072996904 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072408132 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072455001 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07205099 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077215531 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.072197342 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070751322 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072565607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072306854 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072557518 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071933279 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.071033053 seconds)
  done (took 2.330983001 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.184774625 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073200129 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073883175 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.071383599 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07532497 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.072034784 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085874571 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073006535 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096630275 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071982277 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071942881 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073932177 seconds)
  done (took 2.487179405 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195240177 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080049643 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226921257 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151996573 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11001063 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114579585 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113323975 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11282283 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137684501 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100913006 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160964351 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161946543 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108504742 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137371502 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092893064 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.106036543 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151858928 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163713591 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108144434 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16238335 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14265479 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12788285 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146165294 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103579331 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107388957 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119811711 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076078167 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083144826 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164137619 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131040316 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140938402 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112821542 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093407387 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174364759 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161245352 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137005529 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147911619 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087216295 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105924689 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.130733981 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188092579 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091357605 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.298971934 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113608355 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.085025578 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134790264 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119636898 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121480732 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106396337 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093549465 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142845143 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177339881 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132333773 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090079733 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123924221 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112726165 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.113023366 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114537007 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171714453 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155809292 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127693602 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075958783 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11308068 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148436632 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134694858 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108527992 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123065071 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09396113 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131719536 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151862019 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1224345 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140017859 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.116735621 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091800933 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121344312 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136297618 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126882841 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158019583 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124652555 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077714901 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120720044 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100575213 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083944532 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147254217 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079111263 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170092602 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102383171 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108051623 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124477174 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108539668 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109224439 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150020291 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.285336277 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10732547 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.073165362 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107627269 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120741831 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14323825 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091157065 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110855863 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117242882 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082076195 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133304543 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080237035 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124165719 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.082358017 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123946132 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129742155 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081577939 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123692193 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105571908 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104415198 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129668443 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15552841 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091261811 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084483606 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162051536 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122745885 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104306024 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14034674 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154086034 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104961697 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101345236 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144505341 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16625905 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092877967 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159158247 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106132924 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086637973 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09145893 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124341751 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112525468 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124372943 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08471207 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117629142 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159279602 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.078528653 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097856625 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133330305 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082329658 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083756613 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106351208 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104808561 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.099084281 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100504996 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103414699 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133134713 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.273400995 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108822501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125036845 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101493095 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162735625 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091634835 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105816865 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106318351 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074894837 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.131121354 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152214904 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08295941 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155932732 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121848097 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117168644 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120245266 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087893392 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136256534 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08306347 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074788696 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139166324 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112718413 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109964433 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147051298 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116400772 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.123215816 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.118718881 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130070576 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129367357 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.129551357 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109066723 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092226838 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11429402 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126977649 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078076523 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092908452 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084223211 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106759133 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097744996 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087019558 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139115419 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122530199 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112689511 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113017766 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098550295 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143699476 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.079820714 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124664611 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11977435 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097871425 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.147435943 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147310066 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131423335 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1001678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281495105 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077045462 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079889674 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090697561 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122963856 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088022106 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087487569 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114771532 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145202701 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127454082 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13341089 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123540703 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118945453 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151622263 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074913464 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121569466 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141849538 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121799168 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.107923771 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093557837 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.101961476 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140133828 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106530632 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171817065 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115355491 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125157933 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152826052 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105615541 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083335376 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105030757 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131151526 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105242403 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142294086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101124091 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091498274 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109757898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.080172168 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099718129 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126286802 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118265991 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133696791 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114311917 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13120004 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082002031 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11394416 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121805377 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120401504 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.069534525 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117372453 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153136291 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097487703 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116676708 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296780336 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084085944 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.138681645 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167807222 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142123514 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088716327 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108840281 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121373217 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125357683 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119867168 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136123299 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106863655 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136266949 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112496141 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089350189 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090420055 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098872135 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105811991 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.097170874 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.103599914 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113932021 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098987496 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130032182 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105605421 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112100663 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119204855 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.10308242 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096329843 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099037502 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170342625 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119614849 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16549879 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103314087 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.139376394 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157549442 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079722776 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083038336 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08225667 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136794337 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088368213 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130151399 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113159574 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117064475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122859952 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136600442 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097920625 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073394961 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109607249 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130748346 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123344605 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100017291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103136282 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156029824 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100076288 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081346965 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260321261 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117739197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106465845 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163875068 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068193029 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108800148 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081556062 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083286369 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125142127 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147241708 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084051189 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.103834614 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120893025 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113016605 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125573379 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100318695 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113003702 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124268381 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143656568 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126461875 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092877609 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111508973 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12914294 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151262084 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10421033 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100605527 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165889405 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148454792 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154720486 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088797611 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115011937 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115325651 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111443708 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135823057 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087399071 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157122134 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085822236 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134570802 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103834092 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090171642 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126531672 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112026684 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09088844 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141730358 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117224024 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086382573 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081250653 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11584227 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118547527 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10486197 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07899849 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28397652 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.080208005 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132413217 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157358368 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085553494 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108133189 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098903325 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083840011 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106919318 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104425041 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089575916 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102836417 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164440857 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088565407 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143827515 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131413948 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113101652 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132555995 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104338198 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643004675 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082132879 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148446865 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115224318 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165759117 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102382598 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11889649 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111589214 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120596513 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140569408 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103888863 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180876598 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130577527 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117154871 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082953506 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104317681 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105973345 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.090157645 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109176409 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114951785 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115896287 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.095689787 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117092789 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122532674 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.085539206 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098304437 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150769462 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115787065 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140342095 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136117277 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087790815 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118206402 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134131159 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23455716 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118732461 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147484395 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108284461 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102638458 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085538924 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101406938 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154782024 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.078463364 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153381918 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123623661 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111744656 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114979383 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110256708 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129339563 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105601554 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121241073 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094142759 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.10840834 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130318479 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085036568 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08060819 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106879451 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111353302 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101331765 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09827974 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.102964346 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148086492 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.077708102 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100763403 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116838429 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141242092 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166942208 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091914173 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086733153 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120084056 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116380808 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113129111 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12183346 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083504216 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085116833 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.08378148 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086139548 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.109396404 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114953775 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114222451 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110181443 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155909011 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.086829301 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228500246 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097350328 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105260919 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074490239 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.0807315 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097608736 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097880647 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254442188 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115142857 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155442975 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099698313 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.092889135 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093473712 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.079702008 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086930683 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124383501 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109494201 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11876463 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103365514 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068854607 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107320559 seconds)
  done (took 59.102316784 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.111582417 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086265393 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101172724 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147188045 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12532474 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203930922 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160482902 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192350284 seconds)
  done (took 2.692373246 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073304544 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098827145 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107553316 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087189946 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071302619 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073541238 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225037739 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.085544802 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071267719 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.096806652 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081967682 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.073657161 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.407474925 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070820481 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.072025238 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068092894 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.072520975 seconds)
  done (took 3.390433927 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.387846528 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.618317019 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.345081993 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08233041 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.950028107 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095705927 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.312632108 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139001436 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083396582 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534911429 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.408440394 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135573113 seconds)
  done (took 18.655719359 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088147592 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.081913788 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094155549 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.094917109 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.084522477 seconds)
  done (took 2.102087207 seconds)
done (took 107.785365107 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089186533 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418083014 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.060206263 seconds)
  done (took 2.069219072 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092803934 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091264747 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090481849 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088255446 seconds)
  done (took 1.932980205 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080927405 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.082440554 seconds)
  done (took 1.728678482 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232798513 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172508403 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.102350426 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088730745 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.086017117 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085909297 seconds)
  done (took 1.828699019 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.077690689 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080119837 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077789819 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081387662 seconds)
  done (took 1.880656078 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081415525 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058639747 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060418378 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06343441 seconds)
  done (took 1.828104687 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.092242267 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088015716 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.084051748 seconds)
  done (took 1.829539449 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104376503 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.092553139 seconds)
  done (took 1.762111221 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08659466 seconds)
  done (took 1.654662986 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.093293552 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.103345145 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.136667093 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.118755573 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142182952 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118644438 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089586136 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090517616 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084667305 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091206436 seconds)
  done (took 2.63612562 seconds)
done (took 21.309996486 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084367456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.377348954 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365561763 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095047907 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.675359972 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363071915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991008702 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098874138 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.145486503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07351938 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090346725 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656002968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.981616406 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.337851161 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.969055845 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.336507514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.656738073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075099567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074448969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074856754 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976469017 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074961664 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074551398 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075336838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.655822893 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.379398248 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074985934 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.336060078 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075768435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07671925 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380853113 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075070773 seconds)
  done (took 16.327623808 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.076689837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125408685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078425185 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089969654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.076856504 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.076054199 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.077729503 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.075009845 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126908556 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074574944 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091484274 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074858889 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.078388375 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075456766 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094158504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.077580609 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075748315 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075912041 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075251757 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075226139 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093439304 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.074619545 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.075039929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.075636868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07480916 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087430222 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.075252553 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.074874896 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07540676 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.077368277 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.077793069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075851251 seconds)
  done (took 4.192277543 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123729789 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129598319 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.080084073 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111019114 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.119916477 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077477522 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150427109 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099747941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.133343529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074440379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.092024456 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.074621211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107716116 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075521964 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.094702134 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075657019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075841754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.075353581 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.075271794 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.075466766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093898672 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.075316781 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074889936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07629683 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.075206095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.088737629 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07552495 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.075262021 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.075344112 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076907962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.078325622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.075689615 seconds)
  done (took 4.44767039 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079442861 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080892492 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087339504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089336358 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074461888 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.077647531 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.079708445 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.075878446 seconds)
  done (took 2.230556365 seconds)
done (took 28.774338431 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084834176 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075398618 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078879035 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.095029708 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.080345767 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083307583 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.073060037 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.08190587 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.079082546 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.079814444 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.080737561 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.073443014 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.078236715 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.073121236 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.080487429 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.074256754 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.085061826 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.078367536 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084217683 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084854925 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076596298 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079206869 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.08180262 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084289438 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084466198 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084355928 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082862762 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079091394 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074585786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.076915957 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082764871 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089910172 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.073980272 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083829475 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.073709343 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073563084 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.077700652 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073713592 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084201825 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082298594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.075384254 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082763244 seconds)
  done (took 4.923988764 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093758917 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.098117878 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.090733645 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.068573923 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.074923966 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.072316731 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.095911107 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.066343464 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.06720161 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.095003364 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.063723924 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.065894732 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0697904 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.061328038 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.066849564 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.064697651 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068665138 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.062134725 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.066852546 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.066134661 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.095482799 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.061276867 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083971605 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.069873752 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.063157899 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.068964173 seconds)
  done (took 3.517105332 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080984931 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089571582 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.096139698 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.148815256 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.11577576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084828613 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084774643 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098347086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100043579 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.072832311 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077341697 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.099845084 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093609107 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079822775 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073855842 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090426807 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.09124445 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075543895 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079047109 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100897882 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091948233 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091838629 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098020233 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088525563 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.073155095 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075890393 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.077581662 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086980468 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076276908 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082845747 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076470036 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076702831 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.075565885 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.085329711 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076247573 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.075523219 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.099934473 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084097155 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.084894746 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.074621574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.082063075 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.075399634 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096983325 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.130435631 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.07282829 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079069292 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07709021 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083476172 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.073381517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099989444 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084844749 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073578303 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076664783 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.073180026 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.073039895 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076394272 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075302875 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075678153 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.082201339 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078934964 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097284856 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07889292 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089114904 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.073140876 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.08173611 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072742441 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.074552802 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072537139 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.10030589 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075131378 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11322202 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.074205285 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074404014 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082748666 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.082168182 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08057026 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.073588193 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089256437 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083863332 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076959639 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.082349424 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.076644852 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07610396 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.102461509 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.076123486 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.075764905 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.074435877 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.079089152 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.0762397 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07491478 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086291758 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07306756 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.076603926 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089960228 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073589767 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.074635708 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078561452 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077597759 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072584298 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084228031 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076924848 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074057802 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083388128 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073371846 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075843464 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085167618 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07952326 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072039532 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076686029 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078269029 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.074081488 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074990899 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075233576 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07450041 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081769595 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079723742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076897602 seconds)
  done (took 11.263517566 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169719463 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.157930517 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077631316 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150330689 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.083455125 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084586831 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152136309 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.098660123 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.074404583 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.075062308 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.074964406 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113228007 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108534134 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.119306474 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.084195519 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073822194 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095993831 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117854054 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153217609 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149516773 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096846141 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082841742 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076929764 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.075452351 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07638642 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083295733 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.0907537 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082334751 seconds)
  done (took 4.51370479 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084850488 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.108822677 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081432505 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096465518 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095261102 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.074122175 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076585436 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075985341 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.091077669 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083090404 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073794762 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078194293 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080004038 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076749691 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074606145 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080375682 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07996107 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075150737 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07722155 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.080960224 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083906744 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096776112 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076625239 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073215724 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.078721 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.073966984 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068563798 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088692971 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074235733 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.098303723 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.071571 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078625824 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087551207 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.07486405 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074108133 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073930415 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.073802579 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073894739 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075770853 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.072084304 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072235324 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063897889 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072821426 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083685037 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08718308 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062316048 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078038723 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.078972072 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078829486 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071256092 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076950568 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076813495 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.076558332 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.081305853 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.077801652 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.079015329 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.074836913 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.082510489 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082141635 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.074231361 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.072356995 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.072749087 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.079064481 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069977509 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.089896636 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.078921023 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.072220295 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.073502328 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.075319494 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.087442771 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073644734 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078856924 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071702429 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075800287 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.078367794 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075925772 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.075063423 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072297418 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.074133977 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.07428851 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.061514338 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.073549456 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.059579562 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07662342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071816709 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072659691 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073812142 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078193352 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083749907 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075093168 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079471193 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.075142402 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.073251044 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076387273 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06603059 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076385444 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084355024 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087159153 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.073830958 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.071585576 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08620561 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.078688924 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072642851 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.063482414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077899812 seconds)
  done (took 9.749212654 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.097749698 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.076330855 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.08848799 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.095590796 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.092247824 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080165349 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.084292514 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075690526 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.090234895 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.08011024 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.083102655 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.073919201 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08488142 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.083741415 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.076043137 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.084249874 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077600821 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088884325 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088777575 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.074868378 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.083000389 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086161011 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094882816 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086253498 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085029074 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086753508 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095430948 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08343119 seconds)
  done (took 4.014982281 seconds)
done (took 39.563680392 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.686427338 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.838975073 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.66760367 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.970701825 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.739766387 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.864457079 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.754884261 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.660000039 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.831973307 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.702045369 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.984154257 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.723765435 seconds)
done (took 64.150191287 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.738318866 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.794536789 seconds)
    (2/2) benchmarking "String"...
    done (took 1.906095396 seconds)
  done (took 5.289517189 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.861761183 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.241032824 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.906043119 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.660417777 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.667971523 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.96595452 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.463667014 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.188729032 seconds)
  done (took 29.687164707 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.81830844 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.890022714 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.366272294 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.394450829 seconds)
  done (took 15.113372169 seconds)
done (took 61.370559039 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.653314501 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.66459346 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.701069266 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.646655029 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.721088014 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.67534476 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.992005929 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.743463565 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.662706252 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.647893053 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.665945984 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.097371427 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.676518402 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.798538001 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.662190516 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.669918588 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.71600123 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.260310911 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.869140377 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.674597033 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.665772965 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.696547848 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.665360371 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.67455119 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.698143104 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.665686904 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.06610578 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.665703684 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.290843939 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.662154092 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.697920103 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.073677438 seconds)
  done (took 200.312393057 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.662993214 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.82368068 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.797038838 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.671673147 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.11689155 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.843529125 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.747148334 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.168887195 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.670216737 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.677386823 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.923663388 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.664665926 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.951843258 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.608674769 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.712714856 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.676223089 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.823545266 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.952607075 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.717961677 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.834254263 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.669110769 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.810013795 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.763111547 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.905031948 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.706050605 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.692992211 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.681788751 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.697598223 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.857694364 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.792537844 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.704642806 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.687981711 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.834351367 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.536589271 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.667868818 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.670475499 seconds)
  done (took 166.31897567 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.855616049 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.666594452 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.665498585 seconds)
    (3/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.666984835 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.666448319 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.670728701 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.665300473 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.792608732 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.791944024 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.270392978 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.081721926 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.719428723 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.666315061 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.47736822 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.665741103 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732702317 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.678870281 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.667733288 seconds)
    (18/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.666494973 seconds)
    (19/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.681173403 seconds)
    (20/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.692894581 seconds)
    (21/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.667831227 seconds)
    (22/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.665312429 seconds)
    (23/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.792998036 seconds)
    (24/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.678321635 seconds)
    (25/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.671300448 seconds)
    (26/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674215787 seconds)
    (27/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.666813274 seconds)
    (28/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.671836272 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.038616081 seconds)
    (30/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.66626336 seconds)
    (31/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.70329707 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.669064518 seconds)
    (33/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.672212383 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.906875496 seconds)
    (35/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.668087741 seconds)
    (36/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666789583 seconds)
    (37/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.515801944 seconds)
    (38/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.785262754 seconds)
    (39/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.750847842 seconds)
    (40/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.667888129 seconds)
    (41/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.674953705 seconds)
    (42/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.666312289 seconds)
    (43/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.883158907 seconds)
    (44/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.667491814 seconds)
    (45/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.666792691 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.667492992 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.669784167 seconds)
    (48/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.799403121 seconds)
    (49/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.670921391 seconds)
    (50/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.792065343 seconds)
    (51/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.668909285 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.147686988 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.66815309 seconds)
    (54/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.667569114 seconds)
    (55/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.354336394 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.524084043 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.669464241 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.670867225 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.666952017 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.669203647 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.679412502 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.530845766 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.746006558 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.670332411 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.668922959 seconds)
    (66/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.671054486 seconds)
    (67/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.673606707 seconds)
    (68/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.668658817 seconds)
    (69/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.910669195 seconds)
    (70/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.668417235 seconds)
    (71/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.321912167 seconds)
    (72/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.728351971 seconds)
    (73/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.78915587 seconds)
    (74/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.789786168 seconds)
    (75/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.670556026 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.734712324 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.760304631 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.66831277 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.66835455 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.668543681 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.66794841 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.749834263 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.668294828 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.839630614 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.677394696 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.670056765 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.722296623 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.738937003 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.669712997 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.521953763 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.670714973 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.669036152 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969712707 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.734789865 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.66911962 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.668773194 seconds)
    (97/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.669459783 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.811333306 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792630898 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.395708586 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.671046194 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.258359174 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.824551781 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.670997699 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.824213183 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.672825169 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.750855629 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.674704462 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.672155784 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.701824585 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.671234564 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.724612192 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.673217868 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.044468586 seconds)
  done (took 390.765172062 seconds)
done (took 760.901066372 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.283621353 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.253818795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.350988644 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.271005543 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.24594995 seconds)
  done (took 13.00483136 seconds)
done (took 14.602720692 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.76174329 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.765507565 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.694715531 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.762348337 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.691138342 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.761181334 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.744748729 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.694787575 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.730114887 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.695450838 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.731719066 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.695285233 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681935562 seconds)
  done (took 24.010148748 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.90658696 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.904984924 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.740999925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.898667077 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.717136471 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909635352 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834929883 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.821648779 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.826748358 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.687247441 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.682148142 seconds)
  done (took 21.532563764 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.911489949 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.916623553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.747748326 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.908948323 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.720386375 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.917665328 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.837428368 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.823203155 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.823381162 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.688610164 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.682471879 seconds)
  done (took 21.578898958 seconds)
done (took 68.720828334 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.679080614 seconds)
  done (took 3.27914498 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.707071237 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.876959703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.686595955 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.684570444 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.68042404 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.680013968 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.685283283 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.679231678 seconds)
  done (took 15.282135437 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.678172482 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.678475091 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.675589629 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.677907698 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.675744974 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.67878875 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.6797831 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.676363108 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.675889144 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.676024868 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.676655293 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.677005414 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.680913326 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.677026267 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.679080899 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.679658478 seconds)
  done (took 28.445341362 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.678366074 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.676631194 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.677063168 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.677567568 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.676927797 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.676751455 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.678228448 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.676943477 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.677395199 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.677077375 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.678591654 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.676865678 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.678112382 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.678843391 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.678479421 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.678686139 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.676904814 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.67768331 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.682778848 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.678044388 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.677461267 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.677800739 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.677651667 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.67823571 seconds)
  done (took 41.874052486 seconds)
done (took 90.481709372 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.417357797 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.459130188 seconds)
  done (took 9.478899021 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.68467463 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.681306901 seconds)
  done (took 4.972239506 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.68043006 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.680567155 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.680718949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.680644402 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.680952627 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.682077441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.681443955 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.681336478 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.680582745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.680971367 seconds)
  done (took 18.413775577 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.680666981 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.681919629 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.6775379 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.679942311 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.680720063 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.677827257 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.680825458 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.688124139 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.685729113 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.684010558 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.686091712 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.684047348 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.685506331 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.683758252 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.686579441 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.683859521 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.683619629 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.682720389 seconds)
  done (took 31.899047658 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.686377211 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.686268218 seconds)
  done (took 4.981273 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.686143875 seconds)
    (2/7) benchmarking "second"...
    done (took 1.68460421 seconds)
    (3/7) benchmarking "month"...
    done (took 1.683693602 seconds)
    (4/7) benchmarking "year"...
    done (took 1.6855037 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.684643665 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.683663248 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.683905487 seconds)
  done (took 13.40170465 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.686608857 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.827716022 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.887985859 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.336971804 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.688505764 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.690109515 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.621030144 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.690204528 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.69211879 seconds)
  done (took 18.730785512 seconds)
done (took 103.480112444 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.536441193 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.681292071 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.907925173 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.735243434 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.703373603 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.022203888 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.704080527 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.941804077 seconds)
done (took 41.840636017 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.686388281 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.384490667 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.406048616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.704026511 seconds)
  done (took 15.094588512 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.657151852 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.978831837 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.681484857 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.529374758 seconds)
  done (took 21.451809894 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.046562257 seconds)
    (2/2) benchmarking "read"...
    done (took 2.022243662 seconds)
  done (took 5.674368664 seconds)
done (took 50.509489931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.679156678 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.676164793 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.674555815 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.678219269 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.675789761 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.677843217 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.675255267 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.675282864 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.67824217 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.678754745 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.678285955 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.678560908 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.67965782 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.676979796 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.680938714 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.675909414 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.67518131 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.677257592 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.676268598 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.67483348 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.675132586 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.677292228 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.675688149 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.677524798 seconds)
  done (took 41.849396467 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.677824468 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.676418265 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.677394291 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.678221237 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.675612444 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.678955932 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.678485659 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.676738001 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.678191816 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.67720732 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.67682571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.674415664 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.677800768 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.675790818 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.678302049 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.67644691 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.679485626 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.675042278 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.678336266 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.67590722 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.679143543 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.676030003 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.677990785 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.678480566 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.675973709 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.676469716 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.680047031 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.677007661 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.679261707 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.676168622 seconds)
  done (took 51.921198541 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.682902514 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.68674606 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.677945101 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.679384484 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.678249759 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.677199654 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.679224507 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.679178122 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.67896291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.680259815 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.676669329 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.677279928 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.680362187 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.6763345 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.676375903 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.678593422 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.67267939 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.672729518 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.671998291 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.672924467 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.673109023 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.67371633 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.672309615 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.671929913 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.67218377 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.672748457 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.671822964 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.674585439 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.672999542 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.672339322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.676368109 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.67295241 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.6723269 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.672666599 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.671452043 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.6715696 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.676807299 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.678750994 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.670374461 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.672594937 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.672760089 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.671482412 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.671629134 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.671563099 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.672205812 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.672965051 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.67134061 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.671724731 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.673065244 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.671682116 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.673247641 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.674316533 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.671458284 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.671730558 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.672331824 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.67164414 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.672434535 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.672125787 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.671731762 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.672417545 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.673262447 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.67273988 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.672172406 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.672655651 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.672409294 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.672590188 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.675474519 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.67246015 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.671891804 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.67196977 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.672391147 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.671470308 seconds)
  done (took 122.137515368 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.67267361 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.669442475 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.669960866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.668280161 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.671108103 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.672545119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.66985071 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.672815241 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.669954539 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.673536491 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.671794838 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.673686959 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.670014652 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.672468196 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.674692005 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.669082704 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.672030645 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.669530048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.671966956 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.672035639 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.673431745 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.668925905 seconds)
  done (took 38.365185696 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.671374377 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.671432109 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.668670269 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.673129435 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.668628681 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.669804591 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.672362055 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.669595367 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.66986612 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.668807373 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.66671111 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.669755192 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.666296954 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.666694384 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.667932917 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.668760397 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.668635859 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.667112334 seconds)
  done (took 31.63939074 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.666650629 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.66665503 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.670183826 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.665918875 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.666446199 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.670623931 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.666462645 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.669281065 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.669379899 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.664834951 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.667605526 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.667772045 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.667281641 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.665432022 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.668385205 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.663198498 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.665964235 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.663155213 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.665831045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.663037425 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.66415083 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.665238878 seconds)
  done (took 38.255731616 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.666689072 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.665583083 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.662568368 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.663308959 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.662568356 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.66527691 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.664934981 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.663413751 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.665812375 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.666782912 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.662721631 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.665717064 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.66360274 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.664165294 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.663926842 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.663316378 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.665738935 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.663237224 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.666520595 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.663760662 seconds)
  done (took 34.878328334 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.666907491 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.66632766 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.666151965 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.667328663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.666159954 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.666957082 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.667593922 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.666198673 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.666914998 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.665918927 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.667670551 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.666867155 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.666567239 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.666819655 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.66639532 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.669553228 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.668062445 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.666780007 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.66665158 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.667066042 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.667862036 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.665819778 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.666710529 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.667498829 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.668005079 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.66576 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.667218695 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.667340659 seconds)
  done (took 48.263878053 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.666162952 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.667118193 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.663179791 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.66251306 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.663160196 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.6634431 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.663748341 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.664525882 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.665164372 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.663353197 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.666172607 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.665923257 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.665845741 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.666124763 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.665957667 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.666786527 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.666492906 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.662879163 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.663526697 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.664461926 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.665860477 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.665154834 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.665538864 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.663036944 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.662695756 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.666587343 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.662918606 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.662782233 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.665563847 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.66175925 seconds)
  done (took 51.527919235 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.684969161 seconds)
    (2/2) benchmarking "in"...
    done (took 1.684645381 seconds)
  done (took 4.95763502 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.662702671 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.664955589 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.664390207 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.663456578 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.66215987 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.665696805 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.666143459 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.664850379 seconds)
  done (took 14.90192242 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.666065411 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.665078505 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.666462354 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.665481864 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.666754171 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.665159847 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.672561636 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.666108561 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.666430989 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.666530336 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.672607968 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.67270567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.66985354 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.66547714 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.664960383 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.667296571 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.6655119 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.665487082 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.666713648 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.664379285 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.666298614 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.666835479 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.667089681 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.661809247 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.667332875 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.675562547 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.670108497 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.665308856 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.666306693 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.668745476 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.667416544 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.662377551 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.666157335 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.666298399 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.667081295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.665891748 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.675426458 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.665691376 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.672392341 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.665758171 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.665667056 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.662807489 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.667314706 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.668452286 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.667864176 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.666255356 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.666056258 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.663459284 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.666308989 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.668460855 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.669598237 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.665246264 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.665731306 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.669949946 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.668092048 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.672725585 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.667494351 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.669520906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.673095402 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.676192897 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.680317405 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.672581095 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.666920108 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.667544831 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.674843889 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.686581971 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.673361808 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.663369109 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.663422998 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.665453489 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.674939219 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.67833414 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.676204419 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.666430732 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.66654444 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.666944022 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.666550199 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.667180286 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.674853476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.668838533 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.665817762 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.665817035 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.675218645 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.684691836 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.667062932 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.666609239 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.666080595 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.667829103 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.667198326 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.676632356 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.669251532 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.665442272 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.665650364 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.666963035 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.666466801 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.666973908 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.666766092 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.667196753 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.663482921 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.666569908 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.666761645 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.669082541 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.675461264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.667027492 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.667013067 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.673086744 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.668660068 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.666686397 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.674627204 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.665592956 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.666652697 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.667038583 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.672473896 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.663184781 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.67105369 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.672940721 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.666968461 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.668424068 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.668476248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.667261117 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.677456538 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.687973536 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.666581137 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.66649924 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.673568484 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.678747365 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.668632508 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.670246689 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.666254832 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.663563002 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.664849194 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.667916794 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.668456121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.668788697 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.668323913 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.668364824 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.664838722 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.667191905 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.667602685 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.668404791 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.668339508 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.667748339 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.670157038 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.669125496 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.669262548 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.668720136 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.67307695 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.667826924 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.669023778 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.669693627 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.666258574 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.667074587 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.6686202 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.668796087 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.668523274 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.668587225 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.667016072 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.66805218 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.668627684 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.668083828 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.671420294 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.667149525 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.671314418 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.669230541 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.671411445 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.667404818 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.664700732 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.668037043 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.669914296 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.669601671 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.667759417 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.667237281 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.670499301 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.674462722 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.669723287 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.668733188 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.670844855 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.669091953 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.66907433 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.668621508 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.671623338 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.675050712 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.669885622 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.676216901 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.670973884 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.670057052 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.670719119 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.669007209 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.668391618 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.670875613 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.671817142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.675514566 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.683320878 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.676274252 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.670683957 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.672104468 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.672014893 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.672790283 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.673373611 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.670488506 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.6704419 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.670968881 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.670250467 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.66998227 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.672697213 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.670783986 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.669345988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.669980045 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.669167932 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.670279817 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.671033357 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.670364318 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.672260979 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.667874824 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.675407956 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.67110034 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.671652566 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.668243588 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.669031064 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.670895145 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.670932031 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.671140627 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.677322633 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.668229029 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.670962946 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.672576862 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.671137676 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.670118273 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.672869986 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.673999102 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.671248 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.678034882 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.673024273 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.672495688 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.679840006 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.672002393 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.671577203 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.674231424 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.671482151 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.669020353 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.674545875 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.677320487 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.671587638 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.673481437 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.67277977 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.672353773 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.673136001 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.679879638 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.669445301 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.673238318 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.675014304 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.674889778 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.67040149 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.67363383 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.672962396 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.673961735 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.675307816 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.673860437 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.673683073 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.673730606 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.672691459 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.672304027 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.673438596 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.67442314 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.680039896 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.67819631 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.672431524 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.675598702 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.676787759 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.675114766 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.675701501 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.673245722 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.672556053 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.68535339 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.679259471 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.680253672 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.676173982 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.673351509 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.679344134 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.674372034 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.676215971 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.673713428 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.675035351 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.673660615 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.672935731 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.671044109 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.678262525 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.674088881 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.676766999 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.675249722 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.676652156 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.674426039 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.673405257 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.675460165 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.675113259 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.674093897 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.672337169 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.674180624 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.677859727 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.676666332 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.674824187 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.675402802 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.680932202 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.674789139 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.67964162 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.675557295 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.675486916 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.674239466 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.676185545 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.675972243 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.676811703 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.681714199 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.678867904 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.682063237 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.676763658 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.684337445 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.675615062 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.677328527 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.683053851 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.671720229 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.673776545 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.674903285 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.679316942 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.683105877 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.677051677 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.67526156 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.679724192 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.676001413 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.67547541 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.675297867 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.677318848 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.675600761 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.676517299 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.684045047 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.677425631 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.678946791 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.680670336 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.672513175 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.677009719 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.677640884 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.678288846 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.680349296 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.676529197 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.676378276 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.675878166 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.67655991 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.6761829 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.677350622 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.676039074 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.674323154 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.675882774 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.683986065 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.677670778 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.681691033 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.676459799 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.684960287 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.676138927 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.684866685 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.679358747 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.679295747 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.677695083 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.677816723 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.678347059 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.677458537 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.678056299 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.678235971 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.678141279 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.679833236 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.677446918 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.679902084 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.678135276 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.678416534 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.677253423 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.685675304 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.696815876 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.682040161 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.681841479 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.676216169 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.679491088 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.682016398 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.678839205 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.676843928 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.6797528 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.686969347 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.683624048 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.677824648 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.678402354 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.678539802 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.678849499 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.678288501 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.678413253 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.678563611 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.678563985 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.682481762 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.6786367 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.684029974 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.678749898 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.679343005 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.679677304 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.680411974 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.688959962 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.680230616 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.680979613 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.679503572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.67839468 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.679280665 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.680005266 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.679961112 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.680364641 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.678794125 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.680253918 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.686088399 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.683474928 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.683933945 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.679149778 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.679596873 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.680220489 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.679862995 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.681140735 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.68223669 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.680526079 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.681288555 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.680481607 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.681353227 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.679187138 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.680744862 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.681388385 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.680147899 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.681483415 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.687420207 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.681109633 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.679003431 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.682738445 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.67953427 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.679311959 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.680224656 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.688368696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.683192515 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.688633606 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.686107627 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.683878941 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.681100921 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.682497969 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.688095852 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.679566168 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.681958784 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.681235357 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.683621278 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.68063708 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.683906997 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.683022116 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.68785989 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.681081325 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.680107157 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.6883275 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.682930195 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.680965858 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.681851566 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.684944382 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.680541308 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.679247033 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.681603335 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.680661111 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.688231853 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.684817877 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.683692998 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.684367598 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.68009989 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.683097879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.684446194 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.681528403 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.683296346 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.680233537 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.68303975 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.68188886 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.684157073 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.679980787 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.682998552 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.682965687 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.685747648 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.688348637 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.679990486 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.686091743 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.684446174 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.684712733 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.68289839 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.682317539 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.680965244 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.679979991 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.68326063 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.684054062 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.683425102 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.684618311 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.682710704 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.683621494 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.682503864 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.683567867 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.685849828 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.690826309 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.688580799 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.680143938 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.682635532 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.68402687 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.686186619 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.683852802 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.683312335 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.683986048 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.685125364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.683569619 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.68368367 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.683203441 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.685451535 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.697744903 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.682988051 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.686131384 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.684754621 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.687590455 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.684522261 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.680802486 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.683856502 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.687208863 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.686323615 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.690430658 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.685129826 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.691072223 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.684322389 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.685599162 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.687015898 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.68630913 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.690381668 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.688670523 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.684793238 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.685489986 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.690076062 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.698761164 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.68462497 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.695341475 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.709391344 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.68665123 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.6864229 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.685846416 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.684423206 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.685382602 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.687514336 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.687168823 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.685451137 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.685243338 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.686040283 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.686073411 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.692119874 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.687281074 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.68594032 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.685718393 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.686240758 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.68690502 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.684606784 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.686683934 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.686154209 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.686939941 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.685753233 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.686948745 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.688694589 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.697501779 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.693705808 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.685550625 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.687228097 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.683416005 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.691629479 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.688313302 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.694280676 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.691978755 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.687100489 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.686887446 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.689465493 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.687066979 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.683811813 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.687114565 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.68646448 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.686137938 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.685915925 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.697760122 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.693083596 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.690681476 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.687833777 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.687836103 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.689975424 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.688367588 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.687774345 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.687717849 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.689368811 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.692310074 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.691788831 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.687475802 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.687950414 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.689817356 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.693348082 seconds)
  done (took 1000.932196808 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.685766684 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.685557907 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.685258854 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.685460416 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.686302033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.68624028 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.687332589 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.685924172 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.685879839 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.685565024 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.686239916 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.68815984 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.686885101 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.686515526 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.685816868 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.685383443 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.685512468 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.68563819 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.687175118 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.686276488 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.685991131 seconds)
  done (took 37.019042908 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.688399952 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.686082109 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.687691132 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.688161079 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.686212868 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.688325746 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.688080658 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688810991 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.690077063 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685224037 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.689221117 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.689508705 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.685890066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.686667881 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.687471904 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.688876535 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.688797375 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.686304845 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.688496617 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.688117945 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.689519709 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.686387549 seconds)
  done (took 38.743330794 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.690229665 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.692260454 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.690209448 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.687729916 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.689656904 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.686174911 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.690377885 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.689994649 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.690183236 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.690933495 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.689511735 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.690672397 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.694498491 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.693449969 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.693590579 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.690487972 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.83362786 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.691258473 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.690980195 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.692507213 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.6885923 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.69495068 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.687682978 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.687921915 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.689677254 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.690796725 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.691925136 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.690416153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.690849094 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.692404928 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.693433796 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.691641579 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.691083268 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.692127993 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.691949347 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.691686734 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.693889881 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.698921385 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.690268933 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.691187262 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.699686002 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.706225133 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.691868668 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.697645919 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.69293364 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.691932944 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.694039776 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.698311874 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.688795164 seconds)
  done (took 84.664645952 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.692143302 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.692252986 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.688931828 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.692006314 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.694000126 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.694521214 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.693429238 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.691428898 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.689165124 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.689627915 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.692241573 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.690808972 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.68902348 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.69150619 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.69207485 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.690438243 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.68987174 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.690019475 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.68891743 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.689312654 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.689543831 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.692267972 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.69526329 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.692030529 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.693137877 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.689428929 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.690128335 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.694608942 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.691318527 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.690732831 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.693929073 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.692982425 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.693991362 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.69067703 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.691621335 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.694963791 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.692692121 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.691620438 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.694270074 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.689891135 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.69781685 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.693730098 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.693958463 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.693225983 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.689494328 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.690603152 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.690502865 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.692587955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.690737588 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.69250028 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.693057261 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.691219217 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.693362107 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.690734334 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.69390257 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.694460806 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.690790551 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.69108071 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.69695903 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.69247149 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.691177219 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.693718753 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.691880814 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.69358344 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.694192164 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.692774846 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.691753559 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.693753147 seconds)
  done (took 116.678824498 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.693721843 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.695269857 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.695593927 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.695539065 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.69514552 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.69520771 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.694792094 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.69926738 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.696243141 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.695029892 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.69522586 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.694968878 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.696332576 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.695651441 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.696866758 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.696193775 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.696938699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.696318169 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.696134824 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.696096744 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.695350267 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.696715681 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.696923469 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.695857023 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.699926749 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.697585396 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.696687507 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.695810321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.696077681 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.695268912 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.696124633 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.697529557 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.69724522 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.696805565 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.69667173 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.696212891 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.69654914 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697637962 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.698126437 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.696971125 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.696485587 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697044457 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.700473869 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.698173732 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.698025494 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.69662395 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.697347926 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.697436367 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.696418416 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.69803157 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.697248013 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.698053239 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.696869901 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.696558242 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.697249812 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.697943876 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.697552255 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.697158874 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.696899831 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.697875954 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.701317794 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.698674975 seconds)
  done (took 106.820730809 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.697374697 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697311586 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.694820579 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.696677193 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.697395616 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.693838443 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.697807421 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.697625324 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.699901909 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.698294032 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.697417583 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.6953182 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695775473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.697649829 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.696478186 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.700225937 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.695472373 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.695251331 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.697614406 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.69603544 seconds)
  done (took 35.557705723 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.696763719 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.699042883 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.695856385 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.695429957 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.698642546 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.695904976 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.700435646 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.698107215 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.695506851 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.699727759 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.698939228 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.700261162 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.696692793 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.696975398 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.698275554 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.695885734 seconds)
  done (took 28.782949035 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.696412339 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.700649389 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.700054406 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.699374088 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.696487447 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.697302168 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.700259114 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.69684502 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.696582483 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.699469827 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.699387847 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.699480715 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.701804797 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.699821672 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.69720859 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.700865775 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.697404285 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.696282804 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.699948247 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.700277078 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.698486803 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.697265259 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.700311841 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.699838843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.697494549 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.697010825 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.697193867 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.697218677 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.697437694 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.700245318 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.700385115 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.698380297 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.697598217 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.697841851 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.701857849 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.698596549 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.701723194 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.701436798 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.700086834 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.701275235 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.700474909 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.69976316 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.701981428 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.700840511 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.698990445 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.70131734 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.698608416 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.700203309 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.700559257 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.699823906 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.700985715 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.702741512 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.70053431 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.701074576 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.70273944 seconds)
  done (took 95.090618695 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.701413072 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.701056293 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.698061155 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.702007942 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.701831305 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.69870849 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.700968724 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.69864899 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.698182604 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.702738694 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.701357315 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.70100802 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.699102617 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.702078706 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.70013371 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.701350609 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.701151324 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.699858025 seconds)
  done (took 32.233190431 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.700336182 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.699968066 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.703782763 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.699238113 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.699349504 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.702554244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.69961065 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.701807453 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.704784435 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.699749011 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.699877104 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.70291602 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.702804526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.703151763 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.701303871 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.701458738 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.703824465 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.703312678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.699808768 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.701353059 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.703359762 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.702992342 seconds)
  done (took 39.061025766 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.702613134 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.702471621 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.717484927 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.719860255 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.722778298 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.729818167 seconds)
  done (took 11.919985184 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701051454 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702661285 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.701368802 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703666896 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.702690951 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701359993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701377399 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701127952 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703515802 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701637181 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701009701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.703877265 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703480667 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703219748 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704308254 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703658046 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.701888201 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.701453283 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702061036 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704174803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.701544318 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703832695 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.701896751 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702109209 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702159596 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70239048 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704327017 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.701742168 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.700576531 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.7047765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704244487 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705057818 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704561198 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.702671943 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704478795 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.70493659 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.7031638 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.70571097 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705441527 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.702980418 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.705766342 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705679413 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705596382 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.702793325 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705984276 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703365791 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704149028 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70350918 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.703224739 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708187188 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706510573 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703218026 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705630278 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706327815 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706607021 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706515003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704438593 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704760942 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707212816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70407048 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704646584 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.708115326 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703492545 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704323454 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705977406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704432158 seconds)
  done (took 114.080037638 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704042417 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.703984637 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.703489079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.703616882 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703427411 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70367461 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704288545 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705789743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704207872 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70431737 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706635884 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703987985 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.704032915 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70476295 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704115233 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704635638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.703656879 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706622513 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70429942 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707234865 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704916009 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704502297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.704899274 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704808361 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704864469 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707240583 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704458279 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704769988 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703931446 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704904979 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704833536 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.704664205 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.705401398 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.705047192 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706981761 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706549709 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705395433 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705041907 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705872824 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707740869 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705259853 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709266714 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706584555 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705785201 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706811613 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705171992 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707072441 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705674819 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705956059 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705296071 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705581641 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706587413 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709976142 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706051808 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706178915 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.70660757 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.705833926 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.706316094 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706062121 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708389805 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707188322 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705624086 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708373269 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706470242 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707237517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.70674491 seconds)
  done (took 114.202537425 seconds)
done (took 2336.089555906 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.793987131 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.723223273 seconds)
  done (took 15.147529829 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.870450708 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.822829697 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.708043641 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.752493533 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.708178109 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.703048595 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.719308588 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.708805636 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.707938152 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.708420737 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.708339699 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.895297039 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.764975684 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.708132172 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.708904001 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.800743847 seconds)
  done (took 49.639619478 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.712266147 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.713463631 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.722307669 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.713733803 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.712018876 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.725322 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.745837318 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.714571687 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.745460702 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.7236738 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.772834555 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.715433507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.704679606 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.754826319 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.717943335 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.720863466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.796446779 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.779441543 seconds)
  done (took 32.824866034 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.781870249 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.70586966 seconds)
  done (took 10.118972877 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.707345165 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.722753144 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.714731885 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.734217145 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.711981348 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.706670662 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.731225049 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.736419428 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.72420895 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.752481418 seconds)
  done (took 68.901637754 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.712425224 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.707792579 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.708064227 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.707138234 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.702733566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.704220266 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.705326989 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.704968473 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.356202672 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.738906905 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.712067974 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.711518025 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.708846128 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.71195316 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.705151442 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.731412713 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.81153248 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.704256226 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.704503584 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.713419084 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.708558408 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.762167776 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.720112905 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.707461933 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.736121476 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.358045147 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.714747826 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.713537688 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.811216145 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.705509965 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.708861034 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.708151268 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.710419614 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.103423988 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.986936942 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.706723385 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.720145323 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.715802133 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.705376548 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.815674794 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.708901349 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.715770361 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.460391737 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.968913064 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.811782739 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.75010427 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.01108164 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.72238161 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.709966817 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.736428196 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.711382843 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.709623679 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.722832871 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.198833835 seconds)
  done (took 123.352322968 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.70373752 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.054102879 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.873269998 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.7040323 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992133456 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.910907255 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.706013388 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.753241088 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.705156997 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.93885501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.960302692 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.811032715 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.706316845 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.703498188 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.706218791 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.704919541 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.865032305 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.776724311 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.706022043 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.704027558 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.736025081 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947815063 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.828721678 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.705847692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.734627586 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.917748325 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.828221014 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.810961425 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.490081787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.704547141 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.770433406 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.706504145 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.704177315 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.704039054 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.86198328 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.800633978 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789706976 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.706737847 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.705473781 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.70520886 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.379136875 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.907882746 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.801895011 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.847141129 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.904119486 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.911310701 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.489211174 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.704453824 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.455463045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.872481371 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.935091149 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.940362105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.828770356 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.707863791 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.240941407 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705154993 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.705256876 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.957398006 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.852414738 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.806558686 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.706746225 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.705530685 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.705592008 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.951896748 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.707450193 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.804420702 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.708910141 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.706366069 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805554985 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.808575297 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.845044418 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918627396 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.73903549 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.606279831 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.250798944 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955109043 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.772929094 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.958683599 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.710461478 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.707288536 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.786842234 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.550433496 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.962114728 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.956390423 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.961758993 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.74387345 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.428170749 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.707290095 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.937192275 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.928907129 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.96882943 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.942940044 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.946881622 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.037579845 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.706957237 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.707260624 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.930403177 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.844068039 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.710850602 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055913913 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.942329036 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.255977118 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.73096878 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.013949752 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840766491 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.709724223 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.350376432 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.707612902 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.940266471 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.750522399 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.70846968 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.708460075 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.929410805 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.70403354 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.709072246 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.369206536 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.773322327 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.709376631 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943233617 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711001331 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.98006291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711676158 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947448853 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.785347723 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.742930959 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.940324563 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.942832568 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.710936172 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.954523374 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.955329491 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.826357019 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.932572231 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.415140535 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.709251595 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998733942 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.711060867 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.708803974 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.881991268 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.709542103 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.855410475 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.71305701 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.004438102 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.733474051 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.943225701 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711507248 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.972125818 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.74512903 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762046439 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.711927873 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.844200786 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.71144153 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.537144198 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.870139675 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71386939 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.709853143 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.529717032 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.709414085 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.862128809 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.357309149 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735160128 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.784254068 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383432582 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.709543832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.791673126 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736328114 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.103675119 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.709347937 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.963746123 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.713035054 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.710417032 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.710554141 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.952179936 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.895955764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.716077979 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.7098382 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.628033958 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.711804341 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.711155494 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.89439966 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.070071162 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.710891821 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.916570059 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715118889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.840135851 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.712851422 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.794190035 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.056085863 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.710293849 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.713572298 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.711140958 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.71041405 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.712237872 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.975553782 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.73951813 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.230188622 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.851403624 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989331516 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.025871979 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.963666103 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.75825649 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.716796265 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969445759 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.713436751 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.78088384 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.714455611 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.734311302 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944511685 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.715830282 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923299354 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.994462781 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.56231762 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.762620583 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.714470392 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.712802916 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.711572896 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.85835021 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.801647915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.714874166 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.71348319 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.82982159 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.833685037 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.922859286 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.713843256 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.91010574 seconds)
  done (took 867.846630636 seconds)
done (took 1169.463251773 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.712964147 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.718609888 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.701241122 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.713993799 seconds)
  done (took 28.486054317 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.720415959 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.717711593 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.718988557 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.717775761 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.719155939 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.721119507 seconds)
  done (took 11.953977513 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.747906675 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.715068323 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.716087554 seconds)
  done (took 20.817848486 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.788496026 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.099057754 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.820788763 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.13898144 seconds)
  done (took 9.487465438 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.720229213 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.718969055 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.719871535 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.720531492 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.721527359 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.722463358 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.720574736 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.720839527 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.722900052 seconds)
  done (took 17.129683395 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.801134215 seconds)
done (took 93.315842316 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.976845942 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.85467533 seconds)
    (3/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.819738209 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.728593642 seconds)
    (5/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.016400404 seconds)
    (6/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.795391408 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.861046589 seconds)
    (8/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.805990043 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.86214357 seconds)
    (10/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.816166038 seconds)
    (11/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.923723909 seconds)
    (12/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.112746955 seconds)
    (13/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.833200677 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.745373657 seconds)
    (15/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.814824576 seconds)
    (16/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.757564078 seconds)
    (17/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.72580511 seconds)
    (18/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.049263237 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.03548088 seconds)
    (20/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.021972907 seconds)
    (21/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.248865346 seconds)
    (22/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.966908393 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.744600778 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.089848763 seconds)
    (25/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.731333004 seconds)
    (26/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.828201746 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.894815543 seconds)
    (28/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.749109259 seconds)
    (29/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.262681039 seconds)
    (30/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.288973534 seconds)
    (31/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.823218688 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.994708199 seconds)
    (33/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.004194059 seconds)
    (34/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.960902768 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.381682493 seconds)
    (36/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.829710916 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.837650015 seconds)
    (38/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.735342671 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.725376141 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.004693855 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.710921053 seconds)
    (42/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.084639102 seconds)
    (43/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.651561432 seconds)
    (44/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.737370707 seconds)
    (45/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.817225337 seconds)
    (46/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.838282511 seconds)
    (47/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.827267809 seconds)
    (48/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.756870456 seconds)
    (49/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.806224 seconds)
    (50/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.744066217 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.733156034 seconds)
    (52/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.787740334 seconds)
    (53/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.955168401 seconds)
    (54/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.716059526 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.144166993 seconds)
    (56/309) benchmarking ("sort", Bool, false)...
    done (took 1.952933553 seconds)
    (57/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.798961527 seconds)
    (58/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.947884817 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.717190538 seconds)
    (60/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.138014642 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.005329555 seconds)
    (62/309) benchmarking ("sort", Int64, false)...
    done (took 5.379447844 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.755282377 seconds)
    (64/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.079134019 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.982836072 seconds)
    (66/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.894485435 seconds)
    (67/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.734697385 seconds)
    (68/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 7.025736854 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.753453261 seconds)
    (70/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.886272509 seconds)
    (71/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.750593822 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.727421744 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.729662602 seconds)
    (74/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.812506099 seconds)
    (75/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.939033709 seconds)
    (76/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.813622431 seconds)
    (77/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.741422552 seconds)
    (78/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.848740827 seconds)
    (79/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.817033919 seconds)
    (80/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.817491082 seconds)
    (81/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.85371232 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.846891362 seconds)
    (83/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.919727319 seconds)
    (84/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.734200349 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130329034 seconds)
    (86/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.731173721 seconds)
    (87/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.812029893 seconds)
    (88/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.787680879 seconds)
    (89/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.748038699 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.346107187 seconds)
    (91/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.730526593 seconds)
    (92/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.149783661 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.028401659 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.735429782 seconds)
    (95/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.06807362 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.718276349 seconds)
    (97/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 3.108458517 seconds)
    (98/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.946499823 seconds)
    (99/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.896021032 seconds)
    (100/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.837046107 seconds)
    (101/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.864086418 seconds)
    (102/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.884700373 seconds)
    (103/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.323986032 seconds)
    (104/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.811199119 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.18148705 seconds)
    (106/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.041941731 seconds)
    (107/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.551606532 seconds)
    (108/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.798237809 seconds)
    (109/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.905937224 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.142513118 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.751116768 seconds)
    (112/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.091964069 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.56125695 seconds)
    (114/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.752685201 seconds)
    (115/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.111490802 seconds)
    (116/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.872749267 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.035359921 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.028103623 seconds)
    (119/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.829055786 seconds)
    (120/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.719607246 seconds)
    (121/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.002697837 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.667671147 seconds)
    (123/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.977929332 seconds)
    (124/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.730362039 seconds)
    (125/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.751545372 seconds)
    (126/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.734616526 seconds)
    (127/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.648729964 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.832611313 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.919654858 seconds)
    (130/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.753449057 seconds)
    (131/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.147612094 seconds)
    (132/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.737430172 seconds)
    (133/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.121001746 seconds)
    (134/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.719156009 seconds)
    (135/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.920218359 seconds)
    (136/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.84120027 seconds)
    (137/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.829641017 seconds)
    (138/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.792013197 seconds)
    (139/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.746232604 seconds)
    (140/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.825878383 seconds)
    (141/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.910592543 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.393074737 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.111336484 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.769230973 seconds)
    (145/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.732675944 seconds)
    (146/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.817133775 seconds)
    (147/309) benchmarking ("sort", Int8, false)...
    done (took 4.725414733 seconds)
    (148/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.990352161 seconds)
    (149/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.204932618 seconds)
    (150/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.828001863 seconds)
    (151/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.732038323 seconds)
    (152/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.162945491 seconds)
    (153/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.863377768 seconds)
    (154/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.684814264 seconds)
    (155/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.994624095 seconds)
    (156/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.810202517 seconds)
    (157/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.840405147 seconds)
    (158/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.986791778 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.891710654 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.849501166 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.730626946 seconds)
    (162/309) benchmarking ("sort", Float32, false)...
    done (took 6.92770661 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.767670029 seconds)
    (164/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.176680648 seconds)
    (165/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.738120326 seconds)
    (166/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.824720164 seconds)
    (167/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.940425496 seconds)
    (168/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.897738781 seconds)
    (169/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.183598944 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.746328771 seconds)
    (171/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.757973359 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.089764249 seconds)
    (173/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.755038085 seconds)
    (174/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.750836986 seconds)
    (175/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.716728321 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 7.272109209 seconds)
    (177/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.969648675 seconds)
    (178/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.820383397 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.15685187 seconds)
    (180/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.878647381 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.73916454 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.971746137 seconds)
    (183/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.733092832 seconds)
    (184/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.73428192 seconds)
    (185/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 7.952262462 seconds)
    (186/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.78364883 seconds)
    (187/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.760275495 seconds)
    (188/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.450950962 seconds)
    (189/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.723955185 seconds)
    (190/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.512880492 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.723555515 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.986900081 seconds)
    (193/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.819261486 seconds)
    (194/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.654682237 seconds)
    (195/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.805774246 seconds)
    (196/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.089277545 seconds)
    (197/309) benchmarking ("sort", Float64, false)...
    done (took 5.48097061 seconds)
    (198/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.168309164 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.445220087 seconds)
    (200/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.723332853 seconds)
    (201/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.245209163 seconds)
    (202/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.885795734 seconds)
    (203/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.80581413 seconds)
    (204/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.73989222 seconds)
    (205/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.049993185 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.786473537 seconds)
    (207/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.892621112 seconds)
    (208/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.817049859 seconds)
    (209/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.834948011 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.801551313 seconds)
    (211/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.023455265 seconds)
    (212/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.716946113 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.495245038 seconds)
    (214/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.958672205 seconds)
    (215/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.761710781 seconds)
    (216/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.574684895 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.132108113 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.416123046 seconds)
    (219/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979175195 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.922718705 seconds)
    (221/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.739136242 seconds)
    (222/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.571201775 seconds)
    (223/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.957932293 seconds)
    (224/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.866864664 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.733762071 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.728722863 seconds)
    (227/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.950653016 seconds)
    (228/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.248162824 seconds)
    (229/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.652796161 seconds)
    (230/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.786954895 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.766370076 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.734271656 seconds)
    (233/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.167002884 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.741012473 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 3.16897902 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.086763034 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.851127154 seconds)
    (238/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.870830645 seconds)
    (239/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.735711429 seconds)
    (240/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.79823618 seconds)
    (241/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.36061652 seconds)
    (242/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.148188518 seconds)
    (243/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.724878058 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.018893124 seconds)
    (245/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.070272368 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.143787991 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.057036365 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.154454889 seconds)
    (249/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.876954933 seconds)
    (250/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.821947887 seconds)
    (251/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.977347445 seconds)
    (252/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.030650649 seconds)
    (253/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.911606357 seconds)
    (254/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.878053339 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.30169721 seconds)
    (256/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.141408584 seconds)
    (257/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.724303796 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.956625953 seconds)
    (259/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.918825671 seconds)
    (260/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.07430647 seconds)
    (261/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.84034286 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.887933826 seconds)
    (263/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.81824501 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.737049288 seconds)
    (265/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.768196347 seconds)
    (266/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.979402095 seconds)
    (267/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.587639838 seconds)
    (268/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.456342198 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.80708617 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.082923203 seconds)
    (271/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.008602653 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.064805659 seconds)
    (273/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.834813848 seconds)
    (274/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.893447416 seconds)
    (275/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.766616109 seconds)
    (276/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.988155857 seconds)
    (277/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.837902679 seconds)
    (278/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.173625406 seconds)
    (279/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.076633379 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.728931142 seconds)
    (281/309) benchmarking ("sort", BigInt, false)...
    done (took 6.840849082 seconds)
    (282/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.743197996 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.765215325 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.723021489 seconds)
    (285/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.977419144 seconds)
    (286/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.258453744 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.723467307 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.850263889 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.855819188 seconds)
    (290/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.904651219 seconds)
    (291/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.029081401 seconds)
    (292/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.729194879 seconds)
    (293/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.741592126 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.679294948 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.216443957 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.895374013 seconds)
    (297/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.22778293 seconds)
    (298/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.767768486 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.090107985 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.702517935 seconds)
    (301/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.041861504 seconds)
    (302/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.75179602 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.771929417 seconds)
    (304/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.841969637 seconds)
    (305/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.808391119 seconds)
    (306/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.085560873 seconds)
    (307/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.904474079 seconds)
    (308/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.959248909 seconds)
    (309/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.727594236 seconds)
  done (took 964.683386568 seconds)
done (took 966.63900055 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.971636428 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765037856 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.748292173 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.769570188 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.86024429 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.783755138 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.759548216 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.750447206 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.79648477 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.798657009 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.745041886 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.782712542 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.750414314 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.749602458 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.748519009 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763900792 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.0651041 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.78164935 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.766619333 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.758631734 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.767141494 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.746424088 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.798546553 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.782782854 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.752580785 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.752020923 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.751741478 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.768699133 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.861380348 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.752594542 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.752546457 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.76120753 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.065676258 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.782392657 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.744965061 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.769564201 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.762166086 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.759318827 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.753680584 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.782599788 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.147995939 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.789588264 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.75246296 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.750869327 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.751156716 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.754417105 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.752075947 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.75601395 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.764853598 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.765229872 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.141345924 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.807726809 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.754500557 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.751756966 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.762582473 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.751290818 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.754108777 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.767095213 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.771714193 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.76797751 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.046625409 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.788538819 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.754111119 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.768156921 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.75875471 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.176223172 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.787627238 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.755918684 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.147712826 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.798593332 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.175017706 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.801740532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.753469273 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.766398935 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.783866738 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.068450415 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.778691666 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.751844027 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.759596644 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.749475458 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.762250828 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.765145239 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.758659671 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.754530318 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766611285 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.788280962 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.764003968 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.753140707 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.761992455 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.772196482 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.760388502 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.76403427 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.757345751 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.748509673 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.762929647 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.755928751 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.757114546 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.756532495 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.757731658 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.76338189 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.149773617 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.812316074 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.751188281 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.750706809 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.753098219 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.767553627 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.149185174 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.795418446 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.77589436 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.801087825 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.755004295 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.04978003 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.788758029 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.770369786 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.762893369 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.756691931 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.750029914 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.049469742 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.175744185 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.810090678 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.756018156 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.750258436 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.770163942 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.755659989 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.752244335 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.068861834 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.789149109 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.768898588 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.876059459 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.76671562 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.787873452 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.751781442 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.758532874 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.794404186 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.771519828 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.786567097 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.758640084 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.770675869 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.772122796 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.752439494 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.765370508 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.766838568 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.756503405 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.759236157 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.750344866 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.794651183 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.768954311 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.768408795 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.776760462 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.877075686 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.755937296 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.050668328 seconds)
done (took 277.050332293 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.828212532 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.745710567 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.850145291 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.751793205 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.834353683 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.838869014 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.749619856 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.750719234 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.749760119 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.124531613 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.751495863 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.750679947 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.747699443 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.750224842 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.835678018 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.753630983 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.750408108 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.139961938 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.753941928 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.827479328 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.747357291 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.752390879 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.752986982 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.125180671 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.748749809 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.755997105 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.82528803 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.754136276 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.0898233 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.748071286 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.750057513 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.090483972 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.844865933 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.772108692 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.763761624 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.759874293 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.836097362 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.758709637 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.835210126 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.83471055 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.853558286 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.794154482 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.756279893 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.755252642 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.757554327 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.755122301 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.751577753 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.781744668 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.754785238 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.752518874 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.089437411 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.767738679 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.752581035 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.75310883 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753130241 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.785469862 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.752345283 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.75545536 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.847690787 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.756851411 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.817533046 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.125734403 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.127887735 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.75567297 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.754871428 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.755410492 seconds)
  done (took 176.56752977 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.822138498 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.835963082 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.821239604 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.7637871 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.807112526 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.824545762 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.765109275 seconds)
  done (took 14.313906324 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.762153896 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.75574925 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.806931853 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.806923178 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.756278995 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.910992581 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.756025717 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.769666377 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.753930383 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.807325334 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.756401851 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.756452662 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.762082955 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.749696926 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.807051787 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.767556558 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.87281359 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.757268243 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.757434407 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.907356909 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.762928545 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.759480076 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.790133524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.767715016 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.758972207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.763262862 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.388423125 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.757446739 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754992334 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.756962744 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.753978495 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.797173962 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757258841 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.753316583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756147678 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.875343217 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.75721713 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.754739084 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.756901688 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.752046556 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.757323986 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.75813292 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.757457944 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.756339304 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.757416098 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.781610358 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.757356051 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.758071112 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.757993641 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.763637137 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.792735572 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.758709678 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.755004363 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.755128027 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.811849108 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.764869345 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.760056502 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.754695887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.758909005 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755053129 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.909799791 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.809614789 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.758729933 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.809510887 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.757977918 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.759227677 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.762643005 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.758971166 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.854044371 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.758743807 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.809211228 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.757251804 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.914978989 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.782435422 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.76051512 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.761302643 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.762750457 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.759671456 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.757232586 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.765956191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.759377059 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.760451155 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.76448224 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.756387997 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757242675 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.871039939 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.86891855 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.7580609 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.773453978 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.768620392 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.75694557 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.794547123 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.759666032 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.757686391 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.81759749 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.875757022 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.818736021 seconds)
  done (took 194.893834725 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.765052348 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.769340995 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761182848 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.777996568 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.761635173 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.761096612 seconds)
  done (took 12.277377896 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.762870344 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.76240038 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.761024196 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.760127933 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.761541201 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.763596498 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.761565567 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762916151 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765590092 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.764023457 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.762861143 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.762633796 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.762389246 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.761208759 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.761949915 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.760603298 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.761133173 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.758515526 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.761319017 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76155007 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.907109673 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.761711008 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762709797 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.76352806 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.765739481 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.765739919 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.77155414 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.761108757 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.761519757 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.76792535 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.765948082 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.762271208 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.762353426 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.768497421 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.766912762 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.76367113 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76605387 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.763572493 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.759987669 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.764271771 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.764445293 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762834845 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.765597251 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.766211423 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.765247057 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.768682724 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.768682624 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.771693499 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.763858723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.76607909 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.765878827 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.763188649 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.763607093 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.765176367 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.766077787 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.769554538 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.769659047 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.763831491 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.763193767 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.766588629 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.764567532 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.763691882 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.764545991 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.768124909 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.769844538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.764916788 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.765388809 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.768157752 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.76363815 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.76254598 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.765154781 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.761712278 seconds)
  done (took 129.855534379 seconds)
done (took 529.597478617 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.886205206 seconds)
  done (took 8.567356599 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.835154227 seconds)
  done (took 8.551272318 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.26425404 seconds)
  done (took 9.953671938 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.784079961 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.802076386 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.768519325 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.766053214 seconds)
  done (took 28.824869286 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.775806672 seconds)
  done (took 8.456729471 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.784943903 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.755901111 seconds)
  done (took 15.252515329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.909208285 seconds)
  done (took 8.589805258 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.833807867 seconds)
  done (took 8.555352249 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.776779842 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.796006966 seconds)
  done (took 15.266886912 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.742429924 seconds)
  done (took 8.42291071 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.386027854 seconds)
  done (took 11.151452731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.77014801 seconds)
  done (took 8.545339073 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.837372652 seconds)
  done (took 8.518389858 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.787864634 seconds)
  done (took 8.468720055 seconds)
done (took 158.807307312 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.762159146 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.759903019 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.75679059 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.757433091 seconds)
  done (took 28.717469501 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.796831253 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.7962728 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.797851355 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.807494695 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.799217518 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.797018049 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.789193577 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.789124893 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.807388955 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.799751814 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.798123021 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.798926855 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.79907509 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789843661 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.800146191 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.799006643 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.80763462 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799460974 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.789240057 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.800535069 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.763965212 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.807326791 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.799757429 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.765619877 seconds)
  done (took 44.781308515 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.961463382 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.834856693 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.917262298 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.816905416 seconds)
  done (took 9.212313762 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.816284241 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.817446228 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.829998947 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.867698393 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.893827091 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.827086448 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.787206439 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.786314831 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.772924193 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.818254156 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.894015917 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.812732165 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.903848748 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.765147925 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.942822308 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.766016222 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.764319983 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.818743511 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.870301401 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.881735191 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.766248277 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.816441611 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.820130711 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.812189166 seconds)
  done (took 45.534977825 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.763152114 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.771836429 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.772293455 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.765571673 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.767039462 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.765824135 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.771038513 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.765541503 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.786674563 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.766694664 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.765052023 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.765781708 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.765568611 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.766214023 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.765369069 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.779667225 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.780119085 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.767221891 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.768886378 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.772126502 seconds)
  done (took 37.075846696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.76013094 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.614446332 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.113796366 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.018196263 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.761904839 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.765068775 seconds)
  done (took 30.71751407 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.781625044 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.775998724 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.767365077 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.82602161 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.910273841 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.778924024 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.768576932 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.781090662 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.816970089 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.836898549 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.790670738 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.79853224 seconds)
  done (took 23.318880799 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.766041246 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.764507719 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.765705692 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.779901006 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.779815902 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.778401791 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.777109863 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.762212335 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.782425183 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.789682029 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.778595271 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.780685297 seconds)
  done (took 42.994914132 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85304842 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.653861754 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405380472 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.551541949 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298691772 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974156231 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.384910296 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.941400634 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.767132431 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.036114313 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.270847119 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994989821 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.016980447 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.765455772 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.838463715 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.212618379 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.053067556 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993377211 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789287105 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.451765338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871310502 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.384325426 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.440392803 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877839255 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.975639561 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.893773103 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.023826736 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.720955855 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895886074 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.792631741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775273724 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.767605391 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037306226 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975786681 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892775529 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.775558866 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.421027938 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.483036502 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.758839303 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.432210951 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.36826539 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.886114486 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.77235294 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.766119197 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.698528899 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.345091391 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.950244996 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.770491733 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468098486 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.766207951 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.776538101 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883349347 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.772700856 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.584159778 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.724152549 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.043385346 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.7638122 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772530163 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.343409498 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.811282333 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431831931 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.708296417 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.85751089 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.413784337 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.22007398 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.913784776 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.769751851 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.772071069 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.700541143 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.461389903 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877236103 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.911447499 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.786168791 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.415340153 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061239236 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.321105851 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834487179 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059125502 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.693808817 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.711029945 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993193677 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.72253198 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698989165 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.608537254 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.700340801 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.036075942 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801771596 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.407415791 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809599981 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.942730513 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.778404313 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787180458 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.774726299 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.990146678 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.650045753 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769483452 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.211062458 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.038325993 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790930883 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.948280193 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.702594376 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.771878453 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022216645 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.97914856 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.075547428 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.224310116 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.924234122 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.76942953 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.856472126 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.75266531 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.783915546 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.044050084 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.824481575 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.80671827 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886499475 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.731708412 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066067865 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79488858 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.942554936 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.282384214 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.018811661 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.097335414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.017748137 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851643283 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.775154589 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.770770609 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.483299723 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382562018 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.994330351 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.770886478 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335623343 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785576276 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.772593175 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703516152 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.433713899 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.295085439 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.862080801 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99288453 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.772014748 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.046950236 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.703233783 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913385547 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.881077122 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.992966358 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.409772881 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.831490776 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.027949574 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.330170988 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.087827237 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785694971 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788621939 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.872274276 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793118704 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.268086758 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.028231391 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.77491755 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.775169367 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.478359672 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.833798021 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.778477672 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.778830465 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.569634979 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054459445 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.79517096 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.777191222 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.707158692 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.787036558 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854824279 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778821096 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.781164642 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.301321052 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.522368745 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.781588754 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.421450757 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998249635 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782074476 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.466974759 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946639513 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.861171576 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.047107372 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.830721869 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.705191991 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.476139575 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.475133496 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.774663116 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.706013359 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.77386762 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.781945866 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782201283 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.995827977 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056891221 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.816996344 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.418603247 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.874938175 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.782846982 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.777703227 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.773848561 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.274353276 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.825276165 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.437831521 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.784563019 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909425007 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.787146396 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705584971 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.776890193 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.778348946 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.774731389 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.726771241 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827033424 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.465343951 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.096059942 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.032022041 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.423423398 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790597733 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.443118093 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.892325396 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.797528802 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.232373806 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.797754307 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.880424105 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858516726 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.785103812 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.461678075 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543349955 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358533545 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075641725 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.08540983 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214537451 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.208133834 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.12270005 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.950500118 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00858845 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304105739 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834731183 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.95830847 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.719993722 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.865482172 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.415223646 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.114630716 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.790997839 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.002204946 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160782281 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.287068158 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922973412 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.98780273 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810060909 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.648058762 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.814026437 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.298975906 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.931887539 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.276453184 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985029285 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951000152 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.237757873 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871895375 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.776462559 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240350103 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86171654 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.484762029 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.137075376 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.378155612 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.290766839 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135754049 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782367527 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.219978223 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127580811 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.175537919 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.873298168 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710982558 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.787339842 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.788220905 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.776467106 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.757527888 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.652811495 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.034046403 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787957496 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01170448 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.124582819 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046891359 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.728112263 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.78243696 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.780289726 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072921258 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.564096197 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.023583176 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.17805508 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.366807175 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.78792654 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.710985483 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.710205532 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.480678591 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.780619348 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.753437486 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006834253 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.88248654 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.737430686 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.219714709 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098750354 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031780183 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.793770563 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.050660443 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051476459 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.514094262 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808699049 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.881163065 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.230309326 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.485530607 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.999388007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.012672274 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.576144117 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.0080974 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.431182689 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.753231282 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.778783234 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.993687774 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.000952856 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.284066954 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015382359 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.500112705 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.787128768 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157642465 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836577455 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.280729727 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.979477697 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.871269374 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790213799 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858918978 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789646077 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.789834124 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.790100239 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.834173787 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.293819758 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90067951 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.794122714 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89777851 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822003403 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.354168283 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.79153219 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057148588 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.129815406 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11051922 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.839600723 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.784008707 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790119599 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.713737649 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918863309 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.226216745 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055334821 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.914138741 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.959986913 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.807050982 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.223210367 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.117026808 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10079243 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055812344 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.674826743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.782479579 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.870182516 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.004471979 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.791095048 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.991927795 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011086052 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100024604 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251126413 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.991145135 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.068754794 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056175003 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.159566575 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.782978231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375302502 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.786080616 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.323491517 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.820915291 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284706784 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056220239 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.793256395 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996820392 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.799928844 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.9832956 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.234986093 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.480152645 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.132739023 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.776255912 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.829045555 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.057957337 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.176190214 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09386433 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.862772232 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794143254 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.479934108 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921652866 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.691956245 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.020352748 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.785123337 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.994664952 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.495917414 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.792338615 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06867986 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091280247 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.782586535 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.722842854 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.81588182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.792807102 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.009816853 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.049245705 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.033969509 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794081974 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.789801229 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.600227271 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065943061 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841561604 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717110577 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.788600244 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889781801 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.030965515 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.805392211 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30138954 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.487359742 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086890728 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.702126076 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806338261 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.247611624 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.234257724 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116903792 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.308348426 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022263537 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.342003368 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.684067431 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.16656896 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.789763593 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.243672024 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170531223 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.789998772 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.358828268 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904427826 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.058992734 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.107786874 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.793585357 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.559933874 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.817464295 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.00801251 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380513758 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.727668639 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.791525042 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.84675809 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.787037858 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.913887172 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.797768564 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.758640545 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.690158378 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.630211325 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.278125689 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.791902486 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.778904554 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.239388056 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384027638 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900658767 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942369667 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.793358257 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.507990879 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.078331671 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.039177798 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.350473955 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.866502617 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.790020722 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.787947528 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.713386818 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.984621998 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.983593794 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093580809 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.196070664 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90557419 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791041836 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.002137203 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998953656 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.338681895 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932374199 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.22630544 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.904774711 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.715337199 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501305386 seconds)
  done (took 1631.268455347 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.790817989 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.81835073 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.804895174 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.890926362 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.861532791 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.818747006 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.874430726 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.826680814 seconds)
  done (took 56.39752632 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.790317606 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.972821126 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.797108286 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.789704391 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.816947586 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.789285254 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.001333642 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.809184594 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.848252701 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.799708889 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.791514059 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.812689538 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.091943772 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.815818368 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.790411251 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.785127817 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.818509826 seconds)
  done (took 73.092329459 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.791029822 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.972858754 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.81599925 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.808388945 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.703233379 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.794693292 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.842224392 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.813625737 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.794699827 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.964179704 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.122944364 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.797641932 seconds)
  done (took 88.93429613 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.807433988 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.797307486 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.797290812 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.797377515 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.796328888 seconds)
  done (took 10.715987085 seconds)
done (took 2124.461010074 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.03023428 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.976253969 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.013679578 seconds)
  done (took 5.702957129 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.939659814 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.990816836 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.108664673 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.127400737 seconds)
  done (took 9.888035231 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.080620229 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.163640083 seconds)
  done (took 5.960015293 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.118262767 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.82779533 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.181714354 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.792647768 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.794632492 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.798195381 seconds)
  done (took 22.105889399 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.797237199 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.798781086 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.796404211 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.799342145 seconds)
  done (took 8.908077609 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.781548155 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.494596191 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.778919471 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.794675464 seconds)
  done (took 20.565867087 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.545592735 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.921515457 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.540377173 seconds)
  done (took 8.725055897 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.286066191 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.160272535 seconds)
  done (took 9.163566385 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.956107352 seconds)
  done (took 3.673743796 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.827175203 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.068892452 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.314209205 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.37165486 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.436437421 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.044886231 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.147658282 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.029801232 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.260376043 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.283661375 seconds)
  done (took 24.503065284 seconds)
done (took 134.0665886 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.382949677 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.829498344 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.006449184 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.175663551 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.041449609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.00305904 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.004516151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.181687282 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.88310706 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.876702844 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.230495461 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.037414965 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.955860838 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.814645905 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.963342035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.818347564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.02948726 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.182004941 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.855003389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.093390023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.024352501 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.81500885 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.004573456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.83032813 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.034063882 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.953776103 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.357371802 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.8241792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.996443928 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.373035276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960396825 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.23507141 seconds)
  done (took 166.4931362 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.799240744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.801857735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801388273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.798877183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.341676843 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.800513741 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.799648813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.799393175 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.239545713 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.242841806 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.801365831 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.344339522 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.802928941 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.800721126 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.799596344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.803251873 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.390358642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.80097265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.801191309 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.799241947 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.80109193 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.178781367 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.801239674 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.200673372 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.378881785 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.802402123 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.799942371 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.801525995 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.80056656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.799406746 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.802149016 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.80161845 seconds)
  done (took 207.260688325 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.799600812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.802692438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.801882788 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.801305539 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.803920135 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.804417159 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.803874621 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.802018552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.55810134 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.550920504 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.803534526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.803382877 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.809332908 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.80233502 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.81133985 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.801725398 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.809749044 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.809808494 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.81253747 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.816513158 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.81828243 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.590777675 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.818073134 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.566578268 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.808339139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.811477916 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.802303278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.812487504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.819522575 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.816859459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.821128277 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.801941636 seconds)
  done (took 218.619225812 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.057561955 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.80708135 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.807513228 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.733824237 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.807378351 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.808813626 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.800315315 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.059123618 seconds)
  done (took 18.625148396 seconds)
done (took 612.726634933 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.293607064 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.139664503 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.992186533 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.833190243 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.084039551 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.867379747 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.825620439 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.893797113 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.467646197 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.900301858 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.484233717 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.850773502 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.56431946 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.856547631 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.951006843 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.886703374 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.409519442 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.495627992 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.01365226 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.889474349 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.005901017 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.769961997 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.911245402 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.507169584 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.589983334 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.835169111 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.902513205 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.41121574 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.839323634 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.990425605 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.583208905 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.150904712 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.844239975 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.829633075 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.883480567 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.863569051 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.114382679 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.842341059 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.955467049 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.576389776 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.905552082 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.372947278 seconds)
  done (took 100.109037911 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.800533359 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.798224068 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.795940982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.796569448 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.796757888 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.797482484 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.796130344 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.796124777 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.797337593 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.797123033 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.795784678 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.798128943 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.798065734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.797158558 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.797822443 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.796174442 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.799110364 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.799017121 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.797528825 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.79712455 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.799237536 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.798106564 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.811580033 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.796396474 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.79803111 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.799593042 seconds)
  done (took 48.48818902 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.810634982 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.959670446 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.050445028 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.832719799 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.810638619 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.815112136 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.829026148 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.818499423 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.813191349 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.813982479 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.915514637 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.820352947 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.831604992 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.050276889 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.830798739 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.813477054 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.812890785 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.81212941 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.970410205 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829879044 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.833034704 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.819030315 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.832817603 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.834780423 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.815036035 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.813554548 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.81713978 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.318463352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.825619354 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.917708478 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.873726609 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.838950545 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.26210661 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.063115742 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.871218885 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.821273449 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.81240259 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.920201688 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.823916166 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.81923919 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.8318663 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.8200864 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.0481246 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.308518263 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.829760481 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.813987725 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.326649492 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.932098705 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.858568067 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.824281524 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053200456 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.832938502 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.815396313 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.81548134 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.855207154 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.821402231 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.813913222 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.169068398 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.830916905 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.832460988 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.821448937 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.814957792 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.972338008 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.825733375 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.962999809 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.827568663 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.820534604 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.815241029 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.049896669 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.83371517 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.311427351 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.83101735 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.814677355 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.919940251 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.970553255 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.357402239 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.829538795 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.973626317 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.278803903 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.842299033 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.824575595 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.306070897 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.845104563 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.825134626 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.817386912 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.81968772 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.818126967 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.859755618 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.832265909 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.253513984 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.318033946 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.187930772 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.845840129 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.833513569 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.816821524 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.17072308 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.827641582 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.816391044 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.045867949 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.321200992 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.832871865 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.824481989 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.300090223 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.833083797 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.836827412 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.826744589 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.056050324 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.835715463 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.862059095 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.816956713 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.822892266 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.820945642 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.836210608 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.826533397 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.816802305 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.293486697 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.944707237 seconds)
  done (took 225.984889334 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.812896831 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.833240142 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.812592977 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.836085636 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.81602069 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.816532177 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.811812039 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.812586986 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.817054153 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.812052306 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.812556573 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.812157597 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.813413384 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.81861409 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.823462219 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.821914363 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.417801369 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.811919742 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.812295699 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.822654194 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.468542652 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.82015894 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.812026955 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.821569209 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.81450538 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.814548963 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.820589955 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.823799774 seconds)
  done (took 165.880866797 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.818501413 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.933823156 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.837431502 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.847500142 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.827249986 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.817047134 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.843898854 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.834500047 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.825569619 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.816751936 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.816725083 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.880329882 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.832101121 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.916613489 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.849103513 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.851397125 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.922048946 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.824632171 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.817838677 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.816360088 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.847127477 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.812671323 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.880952912 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.948668249 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.837134979 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.93545704 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.826089613 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.820701202 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.819301781 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.936802407 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.834063131 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.879271979 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.850977297 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.8378097 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.942008366 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.936205085 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.923390674 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.84741138 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.824993834 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.817321605 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.817940595 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.805458845 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.935653213 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.840399107 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.820476811 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.923514984 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.838903311 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.821189301 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.829349601 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.818119915 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.834853305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.841259045 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.89043886 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.952692071 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.856169739 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.846542136 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.844990767 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.112947641 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.828562822 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.919765299 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.81409617 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.937473971 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.842790012 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.806670019 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.819648971 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.825111352 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.848639982 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.852259503 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.925453154 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.828067095 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.919528982 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.856459841 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.827269477 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.82021008 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.822019059 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.937500855 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.939913549 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.854514703 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.859948221 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.853325198 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.817039401 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.821076833 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.809544301 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.838530467 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.825531148 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.935987234 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.939776408 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.829630515 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.824262814 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.822590134 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.823368157 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.848139117 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.948204904 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.856896388 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.915247174 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.88885144 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.898257882 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.837407465 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.83426782 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.82718626 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.884449997 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.837034099 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.832684043 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.164995003 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.891960109 seconds)
  done (took 197.349059133 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.278716952 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.874882265 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.881648656 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.136761614 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.166860746 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.74527763 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.868845287 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.872434719 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.895965424 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.06402662 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.943376228 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.890967013 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.861460301 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.846099059 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.872462653 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.894482841 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.879830811 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.216413769 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.979836366 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.029121284 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.853675303 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.161552794 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.148617475 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.257893195 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.907279719 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.207545946 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.551536108 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.018898067 seconds)
  done (took 60.052203612 seconds)
done (took 799.587275297 seconds)
SAVING RESULT...
DONE!
