cset: moving following pidspec: 8262
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.38413495 seconds)
loading group "string"... done (took 0.578056529 seconds)
loading group "linalg"... done (took 7.218568538 seconds)
loading group "parallel"... done (took 0.16037857 seconds)
loading group "find"... done (took 1.152100754 seconds)
loading group "tuple"... done (took 1.836104962 seconds)
loading group "dates"... done (took 1.248379266 seconds)
loading group "micro"... done (took 0.220341582 seconds)
loading group "io"... done (took 1.016739238 seconds)
loading group "scalar"... done (took 37.822678222 seconds)
loading group "sparse"... done (took 11.835391497 seconds)
loading group "broadcast"... done (took 0.942976353 seconds)
loading group "union"... done (took 12.542615601 seconds)
loading group "simd"... done (took 4.491654298 seconds)
loading group "random"... done (took 9.10010063 seconds)
loading group "problem"... done (took 1.82067453 seconds)
loading group "array"... done (took 20.817582495 seconds)
loading group "misc"... done (took 1.68257876 seconds)
loading group "sort"... done (took 3.328195283 seconds)
loading group "collection"... done (took 17.163278118 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526007444 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126778013 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119842643 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.121017906 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148695506 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114678466 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.127256809 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087938594 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.869833973 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149578627 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118408451 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.434178754 seconds)
done (took 5.292567701 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178971758 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087786509 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084992783 seconds)
  done (took 1.344752002 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067156011 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.125283701 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067865259 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068362274 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067917323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067474717 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067044986 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06740618 seconds)
  done (took 1.703771094 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076837421 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070765707 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067402254 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069175545 seconds)
  done (took 1.457957513 seconds)
done (took 5.937279695 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.791313987 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204227817 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.188618813 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.41454075 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.133469555 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.164104705 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.674205225 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32698494 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193558807 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.082080763 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.110491962 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.332301137 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111201092 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.632769793 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075589404 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092503223 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.139197168 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429257987 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.068574052 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08329162 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089867226 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.12897248 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086326558 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.075607317 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.147153958 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.069000583 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.138167092 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081121655 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067226594 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214763755 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17431169 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655258237 seconds)
  done (took 10.391438088 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101783077 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099090517 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071116677 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12400754 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099473039 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071289109 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072542727 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068503008 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087748548 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.129255561 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090455397 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103385948 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067114965 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070938085 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086907429 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.2053858 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081249916 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083263478 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071815691 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.076993815 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.106489097 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079513624 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.07838598 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078706641 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130491193 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180826987 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098003783 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099188824 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068341999 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080629354 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116817855 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12666544 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067249343 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067746827 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12548678 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095737717 seconds)
  done (took 4.671244975 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.007640793 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.145301212 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092763013 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13604758 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066471014 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.112910526 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065737539 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110445438 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066874011 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082527704 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.210692546 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.463532445 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.600044187 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112462639 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.107311607 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068767961 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069596033 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068778238 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.510613072 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098134473 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109340149 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083501704 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0719899 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.071096902 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.355003532 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06916539 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065773859 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069630086 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058657171 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.126846636 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069569544 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.949104024 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127421732 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067549278 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101773029 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168623508 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.199852187 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.089933311 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.144709364 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070661489 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065688783 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154388666 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071591137 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067530093 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086308174 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104858717 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113917837 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066446492 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070709603 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164063392 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066033975 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080945784 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.66060014 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155129177 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077937604 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065464152 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256247541 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.089356806 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070677568 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066160435 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.197351317 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131379537 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068635831 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068487133 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069261283 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070014824 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361022906 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067340029 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.203893437 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069489646 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078024195 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070172757 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07013682 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074388998 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073555347 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.089319106 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067459854 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076338074 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.067070687 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067379552 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067509319 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064905938 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084429562 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.380253572 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06783948 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069155307 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.066010169 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.090068777 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097742686 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068342778 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067039533 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101206364 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069593287 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067551536 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108239553 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067971976 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.187160653 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071134235 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.114383091 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067730373 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.080546811 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068660919 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097262724 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074302075 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100920485 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.081600636 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069029021 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.422822533 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066420932 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065959661 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069284242 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066402915 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.068680833 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.06685516 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081224734 seconds)
  done (took 21.662237443 seconds)
done (took 38.905731593 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.238600181 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.084494146 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076362581 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077385824 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075375138 seconds)
  done (took 1.815399413 seconds)
done (took 3.058269437 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.127255955 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104451458 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067599373 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099017041 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065230349 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10349573 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.10236597 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082989527 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101600018 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065205106 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099439755 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065965546 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065995385 seconds)
  done (took 2.411222086 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087473133 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087311116 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072456773 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086792512 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06593522 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083914591 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082592268 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090292708 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082890933 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074299259 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064735104 seconds)
  done (took 2.11238477 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086602768 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08822558 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073342815 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08648724 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066996033 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085787446 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085498828 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089623593 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086040157 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077620307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065860119 seconds)
  done (took 2.121692753 seconds)
done (took 7.87335696 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081987897 seconds)
  done (took 1.303058626 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593137891 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.077339703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.083059666 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11239137 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.191074889 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.119733347 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273427612 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.08820536 seconds)
  done (took 8.947206611 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102681881 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069517886 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070235846 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073454588 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070980381 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070111141 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.069331917 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071757441 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072225447 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072373039 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072952674 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070179076 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.069698649 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07320542 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070793213 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073249977 seconds)
  done (took 2.468227234 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092646781 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.093084688 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074213158 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076204713 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073297609 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072656572 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075415647 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074406102 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071436996 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073719714 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075592117 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074373105 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0722852 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065673124 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075044619 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075861354 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071910438 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074611974 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075401188 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075648568 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075996609 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065743947 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072347176 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074658648 seconds)
  done (took 3.133736983 seconds)
done (took 17.083235268 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118179113 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072428979 seconds)
  done (took 1.416462118 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.08534129 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.086407279 seconds)
  done (took 1.41098469 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086890099 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067381877 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.091837945 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078919752 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06670607 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066547135 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089925658 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066899263 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067176269 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066632497 seconds)
  done (took 1.987053127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071732054 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.081105584 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073710857 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082863404 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074393568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.065126408 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.073154192 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.068664802 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078344572 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063885612 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072715444 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083690736 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072288987 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085181131 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072924715 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.07008773 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072054209 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068657542 seconds)
  done (took 2.56988116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069278513 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068256432 seconds)
  done (took 1.381342243 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070966007 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06489356 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067710754 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06708718 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064220782 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06377017 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064324975 seconds)
  done (took 1.70270558 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379459491 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114280711 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.312602675 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071835316 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082622793 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.258751353 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.067211386 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07206457 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072386481 seconds)
  done (took 2.714074531 seconds)
done (took 14.425178461 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.082968045 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087898968 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097059964 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.377351019 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092403138 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066800161 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.115204844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188367832 seconds)
done (took 2.361262764 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.219180019 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.638628882 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.40378857 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.206264406 seconds)
  done (took 2.493658199 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.347991794 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088867676 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.06026281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068451003 seconds)
  done (took 1.821312399 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069444213 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071102229 seconds)
  done (took 1.392825942 seconds)
done (took 7.178956221 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06941477 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.084399524 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066535187 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064765787 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067516517 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064873017 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064223906 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067336779 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06694337 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.066653942 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.06977778 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066909526 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064847836 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064488455 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067185729 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064620319 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.067004339 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064916702 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066393873 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064163366 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067131862 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064578387 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.06441861 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06430176 seconds)
  done (took 2.889075076 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088346473 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06683148 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072612156 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072587473 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070239706 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07178804 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072207511 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06671833 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072403661 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069305242 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069998067 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070312132 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069458096 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070609311 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069645722 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070250425 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072331294 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067103504 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069200664 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.0702243 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071775233 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066829396 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.070035186 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071533547 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070169023 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071744007 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069426421 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066674999 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072443177 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069796849 seconds)
  done (took 3.382566907 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073334874 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064804784 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065382409 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071836554 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.064080564 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065622677 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06424025 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064538664 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065143494 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064737854 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066035434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064222036 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065206032 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065454229 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065172699 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068278282 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080352119 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064809141 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064675762 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064889785 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068035991 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064178668 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.064302242 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064401327 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064304814 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063670953 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067498843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064407151 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064626311 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064307461 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067569779 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067954081 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06390269 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071577855 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068228707 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.175251333 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068472494 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064148862 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064916426 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063749347 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064147099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063954055 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063850989 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071116426 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.064667235 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06606512 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064614623 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065339324 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065213567 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066825911 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.064379708 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064786248 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06648448 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065413124 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068530912 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064041701 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.065026815 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064207305 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.06511855 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06392746 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063462409 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064010122 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066966648 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.065035035 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079555612 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071549411 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064045969 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065933442 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065341323 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066996258 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066383306 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.078585164 seconds)
  done (took 6.147372634 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093280516 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087372219 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066613686 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066518109 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06235512 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065005119 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070647565 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065130494 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065924287 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082453619 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065158213 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066596425 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066052037 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068604123 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064492269 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066138239 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07270409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062300815 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064804864 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068300473 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065189505 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070218442 seconds)
  done (took 2.794366517 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155402552 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071953833 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.106688255 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076440362 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071289048 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.076184976 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071197143 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070742965 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07070729 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06828096 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068588841 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070306028 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071009692 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068406976 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068318353 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068245768 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070774532 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068413986 seconds)
  done (took 2.654810353 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.079094105 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067884801 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086884895 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06694598 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066473517 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069228131 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071029886 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074555583 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.069407949 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066781487 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074683795 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068930202 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06907497 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066485541 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069278132 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066905211 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069017986 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067055224 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074601139 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071122064 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071315119 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074575639 seconds)
  done (took 2.827409166 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0827668 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068650747 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082091986 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069137078 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062704514 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06497583 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070982564 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066809186 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070736644 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068914522 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067158946 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065309831 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069472231 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066956252 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069529296 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066837879 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068684869 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066447062 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068949106 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062718434 seconds)
  done (took 2.644804518 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089624766 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068781225 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069183997 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076375348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067996435 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068563252 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076407038 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068854534 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068585842 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08902969 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068213527 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069040973 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076231127 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073699802 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069065212 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076329856 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075883316 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.0759576 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068694443 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068589512 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.089551523 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068556942 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075906518 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068459996 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068570263 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068368785 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068940563 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07338679 seconds)
  done (took 3.314317423 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069990655 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069101656 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066926453 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064682488 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063971747 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.065144962 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064518599 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064249926 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066640246 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064737118 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067412101 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066602621 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067141103 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.067033696 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066635248 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067083421 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067262991 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06482555 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064663515 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064385932 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069483225 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066890101 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.067038098 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064507307 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064338961 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066632934 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06416286 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064320494 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067155254 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064354583 seconds)
  done (took 3.254749275 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079306973 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074491888 seconds)
  done (took 1.423376912 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066269505 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08072431 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064730575 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071115591 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070333507 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067583612 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074546848 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070365022 seconds)
  done (took 1.828574607 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085668955 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078050891 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068125359 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080330829 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.078053766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084269385 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135940692 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067962404 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073818015 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065878121 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080890719 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066598843 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073806117 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067770988 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072467722 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073596883 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065115332 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073301258 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069292714 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065663007 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068376969 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076041812 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070041463 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062798304 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068233714 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089893252 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079138262 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.067304519 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07036539 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.07505553 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073726585 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061319679 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068022091 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067867056 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065358387 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077251931 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082480671 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070489976 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076193213 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0681809 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077112938 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062086597 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072036269 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073976688 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078173405 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068192501 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067972791 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062395903 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065612117 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070016706 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062590045 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070293544 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06209935 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074454857 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071398401 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078581807 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066870584 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069242791 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.070910319 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071105358 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074234041 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069836221 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070410126 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066949046 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077147586 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072447428 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076872074 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062878823 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061461002 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065576161 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077426205 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090582403 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073957613 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068390965 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068596495 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065237468 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070681851 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068165436 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073230437 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073881465 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067391924 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072933557 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074601837 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067523781 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070876441 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075687415 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066091756 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070956485 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065551431 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08410545 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.067150294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065600331 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065460972 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077964936 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070682106 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067891665 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065122165 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074410421 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061325823 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067807774 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067986103 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068125393 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077634092 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071618009 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071428166 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075544961 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074419312 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067243268 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069543257 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063364084 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067321579 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065452191 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073778035 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.060544874 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069732266 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.192244779 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069356434 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076594312 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.066503473 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068074198 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076351275 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073772435 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065994634 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064369909 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071283996 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068631758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070566705 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076452605 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065756653 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062569862 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062703397 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071540433 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067264609 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071389348 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072367518 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071056101 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.062044105 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066023503 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072604194 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076855667 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067461035 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069085693 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.0734969 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070012357 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067612412 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074581763 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070733026 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067153506 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073473973 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069046778 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062879775 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070937913 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070419606 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066087809 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070854904 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071045891 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070344235 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067918276 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06622709 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075132198 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067760136 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06629298 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067816238 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066286598 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077536537 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06945719 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062318281 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063992142 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075722232 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066009208 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066642109 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066475561 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.070580246 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068237059 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065453038 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066588632 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068874865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07738774 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070875943 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069427412 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072737198 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078739474 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067885906 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069956258 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067529922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068385954 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067569033 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076227616 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072850574 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072103559 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070261699 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064129204 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073566286 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074848419 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066568538 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065230938 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066879854 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071077779 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073815144 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071391228 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068271424 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065843441 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068365129 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070839847 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070570112 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066969616 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066766052 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073636224 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065941087 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074325533 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068849207 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07764689 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071260056 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06262649 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069810668 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065877584 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073429143 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062305852 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065293676 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066535972 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068304315 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066496127 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069778003 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061493625 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074610089 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074143941 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067081853 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.066394625 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066094804 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073120073 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068612877 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06993216 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070427076 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.072299721 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.204775471 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068049331 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071902707 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.07854268 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.067878041 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063015547 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072938122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067344849 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067054605 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066988463 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065809116 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071080739 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076163066 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074357983 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061312488 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070625623 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066249504 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06677549 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06265417 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073037608 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070953205 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069250829 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075143409 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069155159 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067989683 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07191181 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067764998 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068943308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06913113 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070531449 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068405718 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069402467 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067398658 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071548502 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066434706 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.065260052 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069905991 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068919861 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068593469 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073483259 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067293176 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067508811 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070101534 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067398371 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068713427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06803207 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066956698 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071473596 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068268848 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068190462 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069845441 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062995163 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07524221 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066674759 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074516826 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068558053 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.0641501 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073532671 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070338438 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073307622 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06801366 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067720908 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06890664 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066551871 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070387557 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075120945 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065743478 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078507422 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075122637 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067934687 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070440603 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068019868 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.069160523 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066785294 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068339683 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06794733 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068985861 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067588518 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072168604 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07042802 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.068023629 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06983619 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067957393 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067822016 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068675517 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061906049 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066749161 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067572757 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067507582 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077341218 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068452598 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067437551 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066529932 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068675164 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066680754 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064097484 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075280272 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075945788 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068310055 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074947306 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067413069 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068879996 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078078822 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061331138 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065502864 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065548057 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065301441 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07483319 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067935718 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076934053 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067353077 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066398842 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064145197 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067439501 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065115106 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061089147 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064487374 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071306191 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065599847 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065769691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066197768 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.198961627 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069138044 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078323891 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067447502 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07019657 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06904382 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065571445 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066727176 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066857863 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070800998 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069298939 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066328521 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064658764 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.067603596 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068832481 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068743062 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069875205 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069611104 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073983617 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067503074 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071074214 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070002535 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061749822 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071354365 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067469837 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067924843 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067292933 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071907541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071407304 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068838321 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07669192 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067312364 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068314245 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068141217 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066014554 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067547915 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06742132 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067187343 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.067366373 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069227013 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075602246 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065630769 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071368762 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068011843 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068321317 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.074260531 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068414819 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.071059535 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07511872 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068409288 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070007155 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076341993 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072322104 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071761993 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069186665 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068900902 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073041486 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067377054 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074082216 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068222335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067826068 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069634264 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065540802 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067628562 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067453736 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066190612 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073776179 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.069054725 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067104575 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066660521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064985433 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06856481 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069830068 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076080236 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070223762 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070700571 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062199452 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064918297 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067800086 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065143118 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.06930323 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069609868 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073608645 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069974467 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067646707 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066652153 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076661911 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072980578 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071110788 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065565751 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.07106116 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068464895 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069661478 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068592943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068069607 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068998555 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071227804 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06943663 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067074708 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075303577 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.0714141 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068801882 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069420341 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06848887 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067757828 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.06236376 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067611796 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069272336 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072367374 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069762493 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067561885 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077573868 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065406875 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06812101 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069952442 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066469703 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071315782 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062008051 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068385578 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067654052 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066687897 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061864269 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065761444 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.195720992 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071185681 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067459822 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063190509 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078426472 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077760296 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071001265 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066790922 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067087525 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06309025 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062470876 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067402549 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069003034 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070052778 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078363538 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066779019 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06703262 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062458501 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068359476 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070940346 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07045947 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064556165 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062941729 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066533555 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070823535 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073364965 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066420179 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06754464 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070703396 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069927446 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065242209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071125379 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06379033 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071599652 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080238225 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067638601 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068135083 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074121899 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074767388 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067734306 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062861911 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068180631 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071711974 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067784482 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068292071 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068434909 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082869561 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071086372 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066942638 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.066210803 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070863172 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066715337 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076139978 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068940477 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068399082 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072190125 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069254499 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075239818 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070117074 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0745522 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070435752 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070995894 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067102464 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068069339 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065915423 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066239581 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.068028893 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067601746 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072076728 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074829051 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066045374 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077841545 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076633958 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068990856 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064122685 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066817645 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066374967 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062361072 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068355479 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065642502 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.066163425 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065744052 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066939733 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068597262 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072968048 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06915719 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067723055 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067446913 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061552585 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069970105 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070195708 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068310525 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064362013 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067670068 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068378731 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071733217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070376336 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065516282 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06983983 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069366534 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068718489 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062826859 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073909226 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066698014 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069387163 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066347694 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06724973 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068110225 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070557374 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07177828 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068191987 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069521221 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070608476 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069050042 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063889438 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063515391 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071787883 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064780517 seconds)
  done (took 43.279570217 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.106052948 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06395309 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063013236 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063629532 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074044803 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06338383 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062716999 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06371502 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063253186 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066078488 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062429728 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062520626 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070994198 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077822289 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073720003 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067323105 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062640271 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063523284 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062691758 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063415989 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071107156 seconds)
  done (took 2.791569069 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.076239554 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078486451 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076077344 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082648604 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0720392 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071020325 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075603735 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071297748 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07896334 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072981457 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079286121 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070849814 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.073154362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.073975448 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07341328 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071858412 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078819511 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071910858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071068153 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075538651 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071183085 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075935252 seconds)
  done (took 2.976901354 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069583366 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067013209 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06880545 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06212604 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066706287 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062052802 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069998353 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064385176 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069588381 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065740277 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066363037 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066255173 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068409544 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061773725 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06704376 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064626496 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107629107 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070313295 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066916493 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067535312 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062170794 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.06898546 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062124341 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062389431 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065447245 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070153854 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067358004 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064848057 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066782761 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065952381 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067067259 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064395346 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068051283 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067394297 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065793593 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066677598 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066544114 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066930237 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062044244 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06477345 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06763904 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062910851 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067164227 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068045785 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06490635 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064575479 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068596705 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066627406 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061412565 seconds)
  done (took 4.617764062 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083014092 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110511554 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06778625 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089195786 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082090583 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073281528 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070168403 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.090229697 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063687127 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064954683 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08170884 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080422637 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066537381 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071012056 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073214569 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065921698 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06747379 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065118363 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.06987923 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065429055 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070103157 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072649367 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080112674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078662027 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070259272 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06536687 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06555938 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070977727 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07854312 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070884759 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070368925 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071804526 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081283635 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071827502 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065664353 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.068711636 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081910391 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066325326 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068892192 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064258665 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068894224 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070192116 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072843848 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081881713 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06659743 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.071810669 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066525677 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064041266 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.078657039 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068848797 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074378485 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079922983 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07014616 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066438854 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070452681 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081378734 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065955189 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06473743 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069045126 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078017351 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064024492 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070030547 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079249438 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06858139 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073298326 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079287497 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071231853 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070018399 seconds)
  done (took 6.425238663 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.078441982 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.097120394 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08445814 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083772152 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076208302 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07668744 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.076307963 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.076062071 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.076194722 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08064579 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076898186 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115512457 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071575491 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.078861326 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.076452803 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076857992 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.076395253 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07637729 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07655928 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076190106 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.076727454 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084542933 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.076619297 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.084008044 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080312645 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.071803817 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07646794 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075996936 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084105502 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.076284879 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087986678 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.076085868 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.076427191 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.083647892 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.080049591 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075964571 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066045621 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076628857 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.076927007 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.076815409 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071954921 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.083522965 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075789728 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071522301 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.076179738 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.076368095 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.083533527 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079493977 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07906088 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08074425 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076666955 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084396997 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075987795 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.076639458 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084250968 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086965708 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08364062 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083758496 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076750356 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083900593 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083586483 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086524782 seconds)
  done (took 6.300865658 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086233217 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075017735 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083110701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062506918 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064523241 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072343119 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064843184 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064754376 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07506711 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074652809 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076810397 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072600787 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075828515 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076859955 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072865742 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075531194 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072296122 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072785033 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074440296 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072642189 seconds)
  done (took 2.830366071 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.077318528 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084190524 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067938683 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072255904 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069766332 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072266719 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069120899 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069506435 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067415961 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069851602 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076254861 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077088201 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067954134 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.072291287 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.076473992 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072024535 seconds)
  done (took 2.518527083 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.087393703 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.075193778 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.08111356 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.06691763 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067281849 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063053196 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066150209 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062694716 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063003676 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079243769 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06640261 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.077101433 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066684704 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065622148 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063310255 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071971749 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063161464 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063711352 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066304705 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078908175 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.070649254 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064978942 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069769601 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066488368 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068984881 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071097729 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.0657116 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06706121 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063994446 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06730484 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.069827675 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070093768 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063702792 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064367155 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06566065 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063646799 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066627901 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067270175 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.072396096 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066629071 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065208767 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069469571 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066768866 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067608604 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062874088 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06696789 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062917107 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068524564 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064468668 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069309977 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066424627 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069242828 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.06728263 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073912815 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069352754 seconds)
  done (took 5.109935278 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082090706 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073306504 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06400314 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065454399 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070835163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067981018 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070184435 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068261772 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068073623 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065200009 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067577873 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069319647 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068137255 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070546437 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067992333 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07018785 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062462173 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069176824 seconds)
  done (took 2.610046052 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074314802 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066936882 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073771203 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066797609 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067197336 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069197758 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063056411 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.065602822 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064994186 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066464058 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066624215 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068856395 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065364103 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068532077 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066636169 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066339925 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069186505 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065928327 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067270119 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062527599 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069007607 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065401256 seconds)
  done (took 2.843213691 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097289456 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083506541 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140834577 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079454608 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.085245314 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072606495 seconds)
  done (took 1.923190437 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093748867 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101282733 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067683036 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070203072 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076826621 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070556365 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071588694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071061369 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078843659 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07697117 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070834667 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079902472 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079350654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078373859 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077003615 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076901069 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07124376 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070387048 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067361328 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084065553 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071141756 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079050918 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07075583 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070313518 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070744169 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078048027 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07885734 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076905956 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070599247 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078873311 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076666477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070825665 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079594511 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076163104 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07026515 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078992595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071081552 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084464549 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076566499 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078761516 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070091271 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076756765 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079267356 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075421405 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079691895 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071189417 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075549593 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071313223 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071569964 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086396733 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076646829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078222226 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079161132 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080364642 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079382112 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086175057 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076878301 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078797938 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076823339 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076481546 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078315816 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076746986 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078246842 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077200344 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076554226 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078389449 seconds)
  done (took 6.421600509 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106070503 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068923834 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071643559 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076673331 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077990233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070999748 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071148474 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071067905 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070872166 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067910464 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10821919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071589161 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078525546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078706318 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070854864 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070976162 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07055218 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078233499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067790746 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086436898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07075306 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078184771 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078163979 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0784823 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076215042 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076417327 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071007326 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071022262 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071105852 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070457151 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075591489 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070998653 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078653728 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067452959 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078497899 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071948436 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071000569 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075426409 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071235373 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076274556 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078782888 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084065887 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070788442 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070761036 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076944739 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070856891 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070883456 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067473945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071018312 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067613476 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076089539 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076895327 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07665894 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078008652 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07252836 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070895527 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071123691 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070708894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070910614 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076464348 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078703403 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070744941 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086230016 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071089993 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071461145 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079104528 seconds)
  done (took 6.322090798 seconds)
done (took 131.382977347 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.189363862 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165562995 seconds)
  done (took 1.710131371 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071732901 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098871836 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077659281 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129493538 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067427964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101620405 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099862565 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.078880606 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.067040194 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067142759 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066911376 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069000087 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131874879 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067237866 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066993209 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06964472 seconds)
  done (took 2.702568441 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102254227 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162958405 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10386364 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066350938 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100021089 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073716539 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065578136 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075820702 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.071778131 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.066302718 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074387714 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07182294 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066175707 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071482824 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071762214 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.073676622 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066116734 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073612747 seconds)
  done (took 2.830801977 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102555592 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092556457 seconds)
  done (took 1.572656716 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.160382071 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13436106 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207990637 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.35140482 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164363624 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.14851883 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.14543042 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.144214702 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117915946 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139948172 seconds)
  done (took 3.081403025 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102960895 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155830817 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.268409499 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120383528 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.073868408 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094507837 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119819556 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079458275 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081599034 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081352971 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081142252 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077578964 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100371768 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074366324 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07491154 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077028334 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104411063 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07393801 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075431692 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076477189 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101498186 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.06711836 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074052461 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073838604 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077994551 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078236567 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066637718 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066395542 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076901802 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074982752 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077368926 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093430815 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078143808 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107339354 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071953498 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.108301809 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078226642 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.074586479 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075697161 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074591403 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078718899 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078984566 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.07401674 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077830239 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066602637 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.077641967 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067293801 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066897466 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078254464 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067873751 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078029643 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078129336 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.107181502 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068523399 seconds)
  done (took 6.057359585 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106129718 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107377997 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071995532 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112550564 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103344835 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073058499 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103548373 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.096357961 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.10515343 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071193926 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069774463 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071508317 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08334933 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083883 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115382797 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107371149 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07435014 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072446915 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106659043 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105713557 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069671988 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098136743 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091528148 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103976439 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068182084 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070726141 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069348321 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071404677 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077175257 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079411114 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071135804 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081641057 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085773466 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078801568 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068511826 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068917569 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069013087 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080465188 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080115509 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080378687 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078430971 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069255964 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068956549 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070628188 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071359167 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068931068 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079677247 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082617415 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.07999024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070559272 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071521234 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069654116 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071073669 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081457226 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078779471 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081874295 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080783324 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069847867 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069719723 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073695388 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081231228 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080146349 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080651935 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070898932 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079808858 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069600801 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081536465 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.085555923 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069898213 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071451763 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069736385 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070372475 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070661875 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078802836 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078867925 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070785124 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07092111 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069840288 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081322582 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078875611 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069662311 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078054104 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068528567 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069459739 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070985039 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070720562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078775224 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081329457 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070739892 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069584825 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069876553 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069364453 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067874768 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077466082 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080928425 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079963199 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.078556573 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070241529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078795878 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077946882 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070240664 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.0790928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06829254 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070846249 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.199541074 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081593339 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07948818 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081319527 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071158443 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069730247 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079096885 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081082775 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070075856 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080101994 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081523977 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080465428 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070342425 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081930284 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069973319 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081056235 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071356589 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080881826 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070309536 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081331044 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070409833 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069680479 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069823244 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080439179 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074011079 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06990116 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071212217 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07149641 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079814583 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083671676 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071571959 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079263684 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079345849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071227357 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080628918 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070271199 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080119376 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070000619 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070698209 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068940937 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08231048 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070271117 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070004786 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070912004 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081471923 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069225567 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080975385 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079153794 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070263342 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081373554 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080936836 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077943293 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081876822 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071333578 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069497746 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069645513 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070411586 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078900856 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080989112 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071353703 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070283681 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078792426 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080569762 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068665119 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079575373 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079763235 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079633554 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069219807 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070787774 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081338539 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081376658 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.0786883 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078920198 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079218427 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069545516 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078435736 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078927782 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069647112 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085075523 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069849833 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083863689 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079941235 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077719557 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079637972 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081890267 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081191959 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081336188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08403909 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069561446 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06936122 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079941777 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068836057 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070532705 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079051617 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070718914 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070381297 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083756209 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069232064 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.07944666 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068508064 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078897481 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06750821 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070346272 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082285188 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068381539 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.201004494 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081791952 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071100828 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.080352249 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081962878 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079816697 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06998448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071912263 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081339393 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080500511 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069546539 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069234597 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071921014 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079670804 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077926917 seconds)
  done (took 18.917738192 seconds)
done (took 38.25575659 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210655473 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.15270728 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.173803461 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119588771 seconds)
  done (took 2.134779241 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.120161617 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101768976 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093482351 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066170066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.100610848 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065641314 seconds)
  done (took 1.961523247 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314048682 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211691731 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188854249 seconds)
  done (took 2.123289659 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202141072 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189336011 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.417623307 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261797763 seconds)
  done (took 2.596863648 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.14518285 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089629981 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068337529 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084954109 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13421569 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160986985 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101265724 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126938903 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07925739 seconds)
  done (took 2.462746697 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150014422 seconds)
done (took 12.840855878 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.113513056 seconds)
    (2/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.200839057 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.207559671 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12913481 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.099348061 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.083927064 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.19933697 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.163210033 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07526059 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.174251368 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.185911482 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.189565073 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.083740807 seconds)
    (14/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.167970126 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.22052044 seconds)
    (16/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.161470361 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079249152 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204463057 seconds)
    (19/309) benchmarking ("sort", Int8, false)...
    done (took 0.143976856 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074761981 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206024728 seconds)
    (22/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.100164294 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071445424 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072419055 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073674127 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074860742 seconds)
    (27/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.090704454 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.102818198 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.084719895 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.114161319 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.156709996 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.066825907 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146983072 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.220972666 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.098593156 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.211187215 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.235460336 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074871242 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062647037 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.164953198 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.090462668 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115872859 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074915094 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074242677 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.196661399 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077430453 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.185191258 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.182691689 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07043067 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05229739 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.078032642 seconds)
    (52/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073463356 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081592215 seconds)
    (54/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.100859923 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076117931 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066274656 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.109496053 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155622342 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128228233 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.167325018 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093930983 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.112843905 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.09114843 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065141017 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.162136957 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074698298 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.098651609 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114410803 seconds)
    (69/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.141300132 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07365633 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090014666 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.068190564 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067785425 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052079028 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078080405 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148365565 seconds)
    (77/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068252995 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069195955 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066890799 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163169971 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.184883285 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080577237 seconds)
    (83/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053984513 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.233781407 seconds)
    (85/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079044989 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070429458 seconds)
    (87/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.16372923 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068466324 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082740841 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.145875896 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.067507392 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.078494084 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073985253 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052455116 seconds)
    (95/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108772118 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.194325555 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 0.067851161 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089661846 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066925528 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052420594 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.129048361 seconds)
    (102/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102351978 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.066419691 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.131714225 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.19741166 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074458318 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.280886775 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.111663807 seconds)
    (109/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052221493 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.05141942 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.141693801 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.165437201 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.07322657 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073734951 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051573144 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052161215 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.163346002 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.207581832 seconds)
    (119/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089072707 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087292315 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.178899287 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053791723 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068318972 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061812612 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.051886499 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093086176 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140440787 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065640416 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077075333 seconds)
    (130/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.153383174 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.051819912 seconds)
    (132/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077945589 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077133978 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.074306359 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051901235 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 0.135389695 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073913601 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073134676 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.154820149 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.156322834 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072364924 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072991573 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090450673 seconds)
    (144/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066835766 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.052018952 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147627821 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075474965 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072892291 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051467388 seconds)
    (150/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090736211 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065963113 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.07355473 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.179957812 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.079130986 seconds)
    (155/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.077045102 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066510058 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.074055292 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.053321211 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.161580249 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.181510552 seconds)
    (161/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.066111129 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07348 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099327121 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090995081 seconds)
    (165/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062953551 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.052058802 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.150526998 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.080275045 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.124285627 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138904731 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075039112 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093113698 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094860923 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.11781512 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06596175 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.053654258 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081210894 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073346807 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.068378236 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090252016 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074612386 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.051693876 seconds)
    (183/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.062093918 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065845033 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.065650686 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073410766 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065853643 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205320254 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075374509 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171033393 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073880963 seconds)
    (192/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.070861692 seconds)
    (193/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.206853068 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091572875 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06682918 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053181379 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.163757383 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083898453 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052347819 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065824017 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089070347 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067298471 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.094529857 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067233515 seconds)
    (205/309) benchmarking ("sort", Float32, false)...
    done (took 0.133348221 seconds)
    (206/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.102153522 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070781414 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.051803923 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.092112493 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.067316513 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140946072 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06863317 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051864936 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075691324 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073882324 seconds)
    (216/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188591643 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073182665 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052256595 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155368374 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051772701 seconds)
    (221/309) benchmarking ("sort", Float64, false)...
    done (took 0.132295095 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.073309748 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.05268735 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071866138 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.052945872 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053918169 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.09058404 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053164116 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.053464482 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.06713784 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064629037 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053107861 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140670342 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067013523 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.0777634 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098775234 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051649699 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.147797388 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089478321 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07397696 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092410434 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090063242 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071770946 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051807221 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068801474 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.066615637 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064552894 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073803891 seconds)
    (249/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.052850314 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05174445 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065784638 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073944865 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.052873013 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052046576 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054102817 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073938531 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05312338 seconds)
    (258/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051825958 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068794492 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074159946 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.062826862 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.07117779 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.052260567 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089819891 seconds)
    (265/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.067036958 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066694869 seconds)
    (267/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.053015928 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.1274097 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091835527 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112112504 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.068942933 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053259353 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.12966501 seconds)
    (274/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079177169 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065578373 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093923782 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087650636 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.074778055 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.052866715 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065212983 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088118558 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141862349 seconds)
    (283/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063441686 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064855438 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07392151 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073849083 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.07466726 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081233841 seconds)
    (289/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053145679 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.053199199 seconds)
    (291/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074550353 seconds)
    (292/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.064167626 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052968718 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072052506 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068066314 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066207176 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079599293 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052169222 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141086326 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.055158474 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066839997 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053056113 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071784187 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.06632131 seconds)
    (305/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053348747 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.053067811 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.06874107 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066334872 seconds)
    (309/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089527071 seconds)
  done (took 31.223808019 seconds)
done (took 32.649384936 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090851679 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097232375 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076556229 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094801496 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083037613 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077820324 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073656106 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.079846474 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.0811647 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083296036 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079461359 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055823461 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075743416 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075997533 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076382888 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092672134 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080356682 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074520371 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074600584 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066240132 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073989985 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066380037 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068325938 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054803457 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079055619 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072776778 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073193585 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074855495 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.066494434 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.066680194 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069753843 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074892942 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065761106 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078676728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073407828 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074198101 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076105812 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077238268 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068453686 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.066317816 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075087681 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066357246 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.073688646 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075499026 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072579911 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072204526 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073720782 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078947536 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091882485 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068221679 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075836439 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080683188 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076765854 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074205613 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070764359 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07426306 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071524632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091954135 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074108946 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067799122 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074670211 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075016613 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07277112 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073910686 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074328935 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076142831 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076392435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072420646 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075618165 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072565917 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066020021 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.07362034 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070300955 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066528008 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076764445 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078553817 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065048566 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072283381 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073785884 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072094056 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065662985 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068158695 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068011173 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.073082306 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067872983 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055424673 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070744745 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072812074 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06586591 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074656714 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073005542 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073959575 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067796029 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076935585 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065492256 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072098546 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066349108 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066582462 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06761213 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070543669 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065937152 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068444442 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075496932 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067934732 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07300323 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079875245 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06709601 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073299687 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064711665 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065882388 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080268938 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075560359 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066534986 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06816866 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065519408 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073414598 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065096476 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065846201 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066416718 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065853573 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071603433 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065960405 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068095428 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072622006 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078289994 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064803232 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06894898 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067010068 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065431149 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071227673 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065322733 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199997661 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069243195 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063663952 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069378358 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066671264 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074303533 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068652704 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073665376 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067353664 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074555488 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071616256 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072393281 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072522371 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065009569 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060427911 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068988193 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068623086 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067960164 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067130209 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067869535 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065786359 seconds)
done (took 12.629015269 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.070217217 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140852001 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097440416 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.096173089 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086141472 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.0672556 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076302708 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100436098 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068593965 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101343559 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088353365 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086634866 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.115056394 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065162893 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06637312 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071108974 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.0684553 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081865981 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100684657 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087535171 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115604678 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066588743 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093546146 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089844345 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.089231659 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094749033 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070052009 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070366846 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070289861 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102825246 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088674831 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071131264 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067414443 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.09875069 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094970229 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084631407 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066963652 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083811706 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067474694 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066516297 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068261332 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099334172 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081022002 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082147924 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070441475 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.076572444 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067749429 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084681531 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090437944 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079771124 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086875791 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.102075365 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069568567 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.085058221 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.065196563 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087440441 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.077910698 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069158695 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066964665 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074639627 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067339275 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070649679 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081495674 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081431737 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071558661 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.085977516 seconds)
  done (took 6.899985446 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087883812 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092368373 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084914932 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08443325 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066779453 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067179411 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067540507 seconds)
  done (took 2.056819724 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070573684 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088875738 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090169256 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.09020824 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082144664 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088699863 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076263514 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067217435 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088518513 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068186364 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089948231 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100738312 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070437485 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074528639 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091232835 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067044904 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091079912 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067283893 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071006001 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091411306 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069580619 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.096312554 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.071052164 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067846061 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081804726 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067383342 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115109763 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07186811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068897243 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.07057222 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065364214 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108767335 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081331971 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075241384 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067380834 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082456612 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081927772 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065777921 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084570308 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076460451 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081682798 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068016085 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068637022 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065718163 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071719197 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077523392 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068243647 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.0680828 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070184198 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08726592 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068004209 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081263954 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070509848 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073127906 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068644189 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074068796 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078003407 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068477075 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.0873377 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068781047 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084650515 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083845625 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081255846 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083424773 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069435076 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081134718 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080987286 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069906847 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069747126 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071760414 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083200848 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.06582327 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069232921 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078288142 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069531922 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090578715 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090941578 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06939291 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080781715 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067911194 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.067642017 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067545166 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090316467 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072774467 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.0672612 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072035807 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070645643 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065864768 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066327519 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071333689 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066086698 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069528176 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.070715563 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070764335 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070263205 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084019279 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069726161 seconds)
  done (took 8.907652656 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07264925 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069363856 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070391156 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068680404 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068519037 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068936521 seconds)
  done (took 1.941475502 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.095952714 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069647621 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081270387 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072093564 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105820576 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087733846 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08758801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078478273 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084594144 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079386325 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087706028 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088102824 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092118273 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073387722 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087450951 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071929752 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.088089673 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075574323 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079330983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073657123 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087311542 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073338192 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073650463 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082277815 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076791597 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072396646 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078761836 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078977834 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079004484 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078944371 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072949713 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076126128 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071487682 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078711838 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087919675 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071555698 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072500269 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077385293 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072734501 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076112858 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088031928 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073570406 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074565731 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077280471 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078534539 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071265685 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077088891 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079973724 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086909289 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.07703314 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.078109422 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072126458 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076565949 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077074754 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.071482619 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078759542 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078000698 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087886516 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07280618 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071255882 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069540361 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075998512 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078391688 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.076857605 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079433772 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07758419 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.071350187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073052189 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073249092 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072207027 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077605699 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069460046 seconds)
  done (took 7.14881616 seconds)
done (took 28.443684087 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.535788459 seconds)
  done (took 2.025701906 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614326103 seconds)
  done (took 2.128284633 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.479820984 seconds)
  done (took 7.983713409 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.403165951 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.525734357 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.722018989 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132770752 seconds)
  done (took 3.328512867 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712264662 seconds)
  done (took 2.235505233 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.218317466 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.203024837 seconds)
  done (took 1.955800596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.378661916 seconds)
  done (took 1.886021973 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.137836229 seconds)
  done (took 2.645841199 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26155604 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175665139 seconds)
  done (took 1.95037763 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.476554624 seconds)
  done (took 1.990086449 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.906605958 seconds)
  done (took 6.425522309 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.21615605 seconds)
  done (took 1.766760669 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237107206 seconds)
  done (took 1.74651934 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.74035814 seconds)
  done (took 3.256892825 seconds)
done (took 42.846593443 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08432568 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.083256917 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083135482 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080001811 seconds)
  done (took 1.83415662 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081327647 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07448851 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078143048 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074259673 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078267646 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.074008827 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075731861 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076623227 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073784164 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07449361 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.074530597 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07392926 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076975335 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076209761 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07217033 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.076369763 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.07771579 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.074238515 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076972033 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.074440032 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072307913 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076264602 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.076588271 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07297002 seconds)
  done (took 3.334203308 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081795799 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073788125 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076409959 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072626534 seconds)
  done (took 1.833318339 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082845328 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095184442 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093732964 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079191528 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09399562 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088175757 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.071050921 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070581998 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071954085 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078993888 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.069504331 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.09808793 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090140927 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078582386 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.081751891 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.067455472 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070703236 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.0893174 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079832942 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.080340281 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072141246 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079182964 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.06933648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090345099 seconds)
  done (took 3.46790608 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091086167 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106232408 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083368094 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090792547 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093123258 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066637458 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.089479951 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092149284 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.128269177 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06673261 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072121516 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066785318 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.074525311 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066404171 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082922996 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109202795 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113398942 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070773838 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098769186 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066842431 seconds)
  done (took 3.265462462 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076527286 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071145591 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066726761 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070663234 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078791509 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07385936 seconds)
  done (took 1.97370585 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072131966 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06897132 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068727864 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068294721 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073451097 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068870256 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067570284 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069373761 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068881729 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068844971 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068521647 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067528714 seconds)
  done (took 2.362263883 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.207011772 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069426429 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070479331 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06694921 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071934917 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067967415 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.08244483 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06987392 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.093202375 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067779732 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.068287817 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069652651 seconds)
  done (took 2.537665888 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21364368 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077824994 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240587828 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153531163 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112828283 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11753279 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114648537 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114602847 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144328546 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103087633 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170602627 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169338919 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110357941 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139380971 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090868741 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.102827503 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156943592 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165891744 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107962553 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169016494 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147745175 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128349065 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150244779 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107107178 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108167998 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124234589 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073098219 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082314145 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172650362 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135767455 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147127984 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112940126 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093964899 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178155766 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174036686 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14329239 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149199606 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08596444 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.106919116 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135509798 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202000458 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.090403515 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163518529 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250074345 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083856439 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135787249 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120809924 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120019485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10707439 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091100897 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148763553 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186992004 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140263073 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088842045 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125488509 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115856029 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115553858 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115465966 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185618667 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163472348 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130080591 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.073349071 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11104603 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156807924 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133864829 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110456925 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.126569822 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093599092 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137633526 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157516053 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121985437 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147650254 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118232169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091278372 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120032986 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142338766 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130360121 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163019865 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126469528 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07457351 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125128931 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103862337 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082564493 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147837225 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07703627 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177584025 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10132424 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.111104292 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127216609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110017293 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111150364 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161645846 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147014257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10415729 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.209794903 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107881666 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122856167 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14862999 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089382955 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109775576 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119848742 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07987434 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139671884 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077160298 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126582553 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079335793 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125876039 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133745535 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078903614 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125537076 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105405919 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.101981337 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134722614 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162630067 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089937874 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083756928 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171475987 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123904111 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106443937 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147417256 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158562533 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102164345 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102591814 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150855773 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181380695 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090669958 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164564551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108419064 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.085112683 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.089731364 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125893824 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114111054 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12592125 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083380544 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119858472 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17087828 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076774593 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097948613 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136250438 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080296696 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083617753 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106750098 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106773511 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097538683 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.101638613 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10489221 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138219477 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12568582 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107044146 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124583732 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245551554 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175274359 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090539569 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10462111 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105949624 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071826071 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.138639435 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15983351 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080655167 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166567956 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124328219 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119031341 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119668888 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084854117 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142630671 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081777834 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071850594 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147142141 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110375595 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111965945 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.153290804 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117836579 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127267599 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120551566 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136161312 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133518909 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131271068 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10712044 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088969942 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11341461 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128835549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.075061663 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.092643281 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081864372 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105840223 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097902416 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084867667 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143592609 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126575979 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111553044 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113295401 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09809742 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149392875 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077960873 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130548319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120152811 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097649317 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153999373 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154546091 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133403143 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100532838 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138844091 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072392563 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075472217 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.089401694 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122092912 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083539955 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083714219 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115470578 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145275793 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126428003 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132878155 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122243649 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118509288 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153477085 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070208543 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.1168822 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144592967 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119206387 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104155007 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.0897379 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097900987 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141126029 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10602965 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178752868 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11437634 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125224108 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150289813 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.100492939 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079621088 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101153702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132527394 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099855906 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136643271 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096407265 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085535864 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103710088 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073527953 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093791253 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121458425 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113232294 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12723263 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111816285 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126697993 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07597025 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110058417 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116802799 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115910358 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063377421 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113988477 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152455526 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091708261 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113252599 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144766382 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076956484 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.129512211 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165783918 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.399596942 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089762133 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113427462 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12600139 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133288809 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122874073 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145414854 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111235907 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139504143 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114138049 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088066454 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090936044 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101107252 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108174579 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.09837068 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110934934 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.116988148 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.098457438 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135267961 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106307052 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112930895 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120147355 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101405163 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093719629 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09979849 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181636013 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122433562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173404163 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.10224395 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146891702 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1662063 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07709445 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081085047 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.080440655 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142618309 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087206628 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133101709 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.109631155 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119813122 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12601393 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144787506 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097827358 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070379004 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11031037 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135271813 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126677867 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10065379 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105998888 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165124684 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102756949 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083534471 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11541467 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118450705 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104624519 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177717945 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.063105389 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107459801 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.224320874 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082619106 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130970803 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156090532 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082621952 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104997214 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121147188 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113810735 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130051131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10290986 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110930383 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128876431 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152240698 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129748938 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091294473 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113679881 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129368421 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158769838 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106793666 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098406617 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174996731 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154175522 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162139132 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.089543341 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115374519 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115315713 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109802188 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140795631 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08545107 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165937729 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083873747 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138985704 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105299606 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091121957 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131764116 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110722659 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090223523 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149857314 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119929185 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084955043 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079199204 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120317305 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121760384 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108487977 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076580888 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139581279 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075085884 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134064685 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16187485 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082455173 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106592128 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097119343 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081037364 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258440064 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104610285 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090206427 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.101357097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175949431 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.088131837 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152523822 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135246395 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114333098 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137456834 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104125117 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.641557074 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07966334 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154112742 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11797418 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175787054 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102435003 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119195812 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111033127 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124532843 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145983025 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106622366 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.186118406 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133817758 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116759236 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081532626 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103442839 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105626857 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.08923006 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109338355 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114421272 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11677987 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094805207 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117780856 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126666951 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083744658 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098417394 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157495533 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119035535 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145762382 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142830178 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087735199 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119138112 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140142104 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081734096 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121461835 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153862929 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1078232 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101353025 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082801617 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101784216 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.306830653 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075442737 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162917158 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123156064 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112387538 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113819949 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114925186 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133876634 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107499061 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123474196 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094921773 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11022703 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115507068 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083411967 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078537864 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106974486 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112884877 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099386251 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098658361 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099962931 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153691686 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073743703 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100833942 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116991223 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146094387 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176218276 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089736565 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084905199 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120549675 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115900054 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114966521 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123327966 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080902818 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083413609 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082015036 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.079533374 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111092075 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115186678 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116467701 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111825794 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165761026 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.085076429 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231609151 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09714536 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107087812 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.071005452 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079504034 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097671096 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099998573 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109207102 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112058452 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161957535 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096907108 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.091375303 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092412194 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.075460052 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084497859 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129952497 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111252268 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270557015 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102290663 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.065307051 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110706213 seconds)
  done (took 59.768991653 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11166366 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.084719511 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095717873 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145823194 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123896115 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204271679 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155670545 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189757511 seconds)
  done (took 2.771116821 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072906494 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096568033 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105064941 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085146614 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068855314 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.070887227 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233700866 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082923863 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068562215 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099963135 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.081213326 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070834061 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430697916 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067165636 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06921098 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063444998 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068836963 seconds)
  done (took 3.489068752 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.393219027 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.617348321 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354330024 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07408991 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.441093782 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.08814093 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.119480728 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132336156 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074100316 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.536932996 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.405847384 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.12567921 seconds)
  done (took 18.025830673 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079594621 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.071658991 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.085355416 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.08496826 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074156419 seconds)
  done (took 2.058062852 seconds)
done (took 108.295126758 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.084607841 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.611740995 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054752035 seconds)
  done (took 2.359798831 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086746711 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086221358 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086790142 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08472015 seconds)
  done (took 2.011207337 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.077255145 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077779901 seconds)
  done (took 1.814033539 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.233999026 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164234618 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.097286973 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086430081 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080783456 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081776699 seconds)
  done (took 1.917425527 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075895485 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076999926 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.074114381 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079243836 seconds)
  done (took 1.969064763 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.080901816 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.054019541 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055674026 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.059218511 seconds)
  done (took 1.915614806 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091240656 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080268372 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07953757 seconds)
  done (took 1.914183611 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104739953 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.087325551 seconds)
  done (took 1.856293073 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084797353 seconds)
  done (took 1.743171734 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098862204 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10188329 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133045807 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112325009 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14137503 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110757585 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085937626 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08712958 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077560613 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08797233 seconds)
  done (took 2.691368176 seconds)
done (took 22.43477561 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082143818 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.45409915 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361673881 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091265083 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670311658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357775052 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.969958505 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093938806 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116107315 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069516973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085721047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649436271 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959667172 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.410297383 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.948374306 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320444002 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650255908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069252368 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069047278 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069287745 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.950751876 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068984571 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068781924 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069786481 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649743113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373430577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069717015 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.316632872 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069490245 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071099119 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.356529602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069467699 seconds)
  done (took 16.27384845 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073823755 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120756806 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07465956 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086320042 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071503157 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070763411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072548601 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07053409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121910879 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069404798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086322975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068737142 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072596944 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.088924093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088823594 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069576479 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070622952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069930498 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069445329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069349246 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088175413 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06976796 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069797964 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069980447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069481129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081733468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070175519 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06961199 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069891727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071364993 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072111234 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070018882 seconds)
  done (took 4.128281898 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117262362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125084197 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075354632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104600364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112354839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071567299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144376094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094744926 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128087492 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068920328 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086257564 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069644484 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103592066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06987351 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089341851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069745552 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070089534 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069726584 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069066689 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069830373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088993395 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069551961 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070033038 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070508155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069750467 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083242594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069751996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069718308 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069784502 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071538818 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073347339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070122052 seconds)
  done (took 4.365592072 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076428015 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076288508 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084933079 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085308207 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070715765 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.073630427 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.074581738 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.071030457 seconds)
  done (took 2.290324121 seconds)
done (took 28.720966472 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081875743 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070109002 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073795956 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084006607 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074941357 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079968633 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068777057 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.077369583 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073681355 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074771693 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076165415 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068704701 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072511464 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.068365814 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075089902 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.069074062 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080598355 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072802253 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080429696 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.080248658 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071426645 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074417402 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075598666 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080612812 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080202204 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080506176 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.079068165 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074424073 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.070446247 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071747417 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.078367567 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.085231733 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069643126 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.080612427 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069071641 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068826359 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072782424 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068695279 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08044251 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077448483 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070911428 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078321584 seconds)
  done (took 4.818185856 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.091485229 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094398516 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085887968 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062955135 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068130478 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066617075 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090541488 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.061265452 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.061336077 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089411626 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056768886 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.061249108 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.064894373 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054659129 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061263033 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057752819 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.063098926 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056812782 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061630256 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060870598 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.092332856 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054859866 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078496943 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064728176 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.057162489 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062951348 seconds)
  done (took 3.467290264 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.077466519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086883754 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090423127 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132667465 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.10709981 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.08065437 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080567765 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096649809 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.0905323 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068280013 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07234499 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093965318 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091418203 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074847964 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068323566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087806153 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084712565 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07033017 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075179715 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095612086 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.08793656 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086860411 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098048579 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084910449 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068437348 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070967932 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072655097 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082988564 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073392351 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078201401 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072392809 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072382885 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070840852 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07995343 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072338667 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069988262 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093388872 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078987128 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079806401 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069324816 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077279835 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070098971 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093433181 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126775637 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.06845048 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075244204 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.083635225 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078550843 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068643519 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089152328 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080219947 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068481486 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.072012863 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068098873 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06859918 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082040148 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.07101913 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071039408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077833703 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074755759 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093184413 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073217002 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.084650376 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068587973 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076862771 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068054768 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069344404 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067658505 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096726524 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070211431 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111979588 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069616276 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069986919 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077377186 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076449996 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075204245 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069011618 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084600086 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079511366 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072690345 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077954816 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071853294 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071552059 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.092742756 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071152363 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070393505 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069777149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074766226 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071612929 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070247316 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.083507315 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068083568 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071480366 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086297916 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06836073 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070210728 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074466693 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073666255 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06851005 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079965568 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073536883 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069705471 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078730597 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069321664 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071954525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081930888 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075491475 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068345693 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07310442 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074531717 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069587734 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070218649 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071495521 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070303288 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077836745 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075633669 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073506869 seconds)
  done (took 10.829986896 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.167529247 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158465781 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072147758 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149948218 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078552762 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081027 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.155173836 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096593305 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069036127 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.070195814 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070178152 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113085921 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107728153 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.117524936 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081182353 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06933395 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.086452784 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116927831 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154736855 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.149040041 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.086792348 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078462201 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071256274 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.0700584 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071800086 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080324437 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086971756 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078202784 seconds)
  done (took 4.511639661 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084492893 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106726316 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075617359 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091759493 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.092306929 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069197879 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071713429 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071239431 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082606116 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08005012 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069232119 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074559697 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075796182 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072855365 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070165234 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076707158 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.0764731 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070180644 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072127517 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074491249 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079596341 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093624401 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072919934 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068596051 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.073729234 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068696674 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065331181 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085840659 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069342631 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.0970863 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067331926 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074213077 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083678215 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070102872 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06902486 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069012479 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069044223 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069031885 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070923459 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067734458 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067787957 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058819882 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068393085 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.080687133 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.076053146 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.05798149 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073757972 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.07454376 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074404501 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066550531 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072191516 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072265759 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072207882 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076876615 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072739435 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074606162 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070322468 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075551025 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078314359 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069062776 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066378002 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067760759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073795581 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066751611 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.078229763 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073936355 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067798004 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071057309 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071488066 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.076504125 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068682935 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073273243 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066640564 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071436777 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.074172398 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070886591 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070604855 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067666765 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069018313 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.070020376 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056311443 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069337359 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054577179 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072279088 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067432803 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067858226 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069305187 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073729844 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081114935 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070751455 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.075095016 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069915812 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068462802 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072334075 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061877019 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071709146 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085149506 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.084182894 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068959519 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067622324 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.083101977 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073762499 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068028759 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057557456 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074334812 seconds)
  done (took 9.36617644 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094171222 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072258753 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085923202 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092379274 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088611926 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076465648 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07972862 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070749322 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084428061 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075626965 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078303275 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.069169338 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079652813 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078830731 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071805442 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.079037871 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.073646186 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.08586343 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084662376 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069839694 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077496732 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082443879 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091597919 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083838057 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082267227 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083701808 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092125385 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078838481 seconds)
  done (took 3.989241905 seconds)
done (took 38.654542548 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.763026885 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.932146477 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.757712946 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.132293312 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.962060559 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.768780735 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.954092002 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.753207768 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.857787315 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.788292584 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.956587891 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.896592399 seconds)
done (took 65.215242474 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.84319366 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.891865884 seconds)
    (2/2) benchmarking "String"...
    done (took 1.981684404 seconds)
  done (took 5.564581097 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.971374427 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.313682974 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.0026165 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.754094894 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.754258512 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.088076461 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.564082787 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.266730025 seconds)
  done (took 30.432750931 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.89011554 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.975710174 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.439911349 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.469226658 seconds)
  done (took 15.518071311 seconds)
done (took 63.101565503 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.747537006 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.779191742 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.791489202 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.734800053 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.810677205 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.766550133 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.347752794 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.817722489 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.750209187 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.741557095 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.751417118 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.179860098 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.767280009 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.167243252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.751372026 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.752367 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.828599471 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.218492318 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.909424402 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.765179587 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.771227752 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.750837317 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.749461187 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.749684385 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.798670763 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.753394391 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.179596083 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.75180691 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.364471711 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.750331272 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.778901369 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.289170308 seconds)
  done (took 203.757153382 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.74738775 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.751707809 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.756229984 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.800200748 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.133430507 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.932937708 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.871258267 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.18441113 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.757801816 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.773522241 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.990495775 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.750263443 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.003329377 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.718443152 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.783223877 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.855579108 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.940916798 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.000255576 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.780745561 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.924684947 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.754648733 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.813590191 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.768200613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.959866094 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.763922127 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.818815438 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.92243242 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.778653886 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.948543469 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.917029191 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.772186338 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.766196249 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.977206957 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.62995103 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.771802908 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.767175766 seconds)
  done (took 169.277227897 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.150332566 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.756815187 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.754375988 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.761122435 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.769059153 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.757552265 seconds)
    (6/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.759779672 seconds)
    (7/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.756517139 seconds)
    (8/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.87626949 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.878788798 seconds)
    (10/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.369816329 seconds)
    (11/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.499853475 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.808096749 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.584027737 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.756148627 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.825918266 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.768726958 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.756212818 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.774055026 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.782849647 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.758887248 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.756586916 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.8836011 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.771131714 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.245468436 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764893895 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.758567502 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.761298331 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.127779447 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.756762637 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.762301212 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.013012248 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.756611183 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759507278 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.647339525 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.980537332 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.756770182 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.841319961 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.760225976 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.764283991 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.757632825 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.978867785 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.759459029 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.760840038 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.761783048 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.914100662 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.755860393 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.881558198 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.758035162 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.258795386 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.756556552 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762212276 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.432493161 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.415288516 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.757850612 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.758072357 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.762042816 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.758627369 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759159318 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.762935133 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.446334171 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.829871605 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.759947137 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.763913087 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.763093277 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.75731179 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.888053383 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.759641962 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.000128409 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.814652208 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.987587135 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.880845612 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759511189 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831092338 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.851981842 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.758961553 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.759273751 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.759994099 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.759554284 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.843728717 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.759184563 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.759225503 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.880418332 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.76833115 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.762333352 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.811018283 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.833051524 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.758289754 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.647894408 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.76182121 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.760346483 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.069818312 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82951636 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.757454703 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.758763658 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759635558 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.890031351 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877235428 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.538357502 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.760975238 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.410894534 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.763205035 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.910293944 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.76115706 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.930866207 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.760319157 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.844912147 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.766443599 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.763015371 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.760718027 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.792788649 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.762432631 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.824872389 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.75958393 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.133551179 seconds)
  done (took 401.50695473 seconds)
done (took 778.43555156 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.430053949 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.373299342 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.49490795 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.408541685 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.378244882 seconds)
  done (took 13.783923534 seconds)
done (took 15.482815022 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.84904121 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.857002701 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.785593778 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.855201643 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.781117117 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.852142092 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.835150824 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.787934624 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.820991626 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.789045212 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.82195847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.78985125 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.77577243 seconds)
  done (took 25.301871979 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.011225505 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.002864942 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834450657 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.000495169 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810713161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.012584858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.945642246 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919995053 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.919959787 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780772977 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.779756077 seconds)
  done (took 22.717667263 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.998650167 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.01097417 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.840532264 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.007077192 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.813221628 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.005147509 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.931386312 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919988955 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.921660523 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780520435 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.777976218 seconds)
  done (took 22.709219277 seconds)
done (took 72.425741026 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.77144482 seconds)
  done (took 3.470167781 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.798249045 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.954119361 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.779364054 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.775485752 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.772431257 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.775984392 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.776965753 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.774114761 seconds)
  done (took 16.10894792 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.770126502 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.770390297 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.77196691 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.773545032 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.771747001 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.769973016 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.770145792 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.776141077 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.77495757 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.771882468 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.773766987 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.771172587 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.770617013 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.777276327 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.768694651 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.773312497 seconds)
  done (took 30.060471848 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.771685275 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.771976453 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.778053274 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.771894795 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.771223599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.771290975 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.77124374 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.774780602 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.771049966 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.771995724 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.772680608 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.770834679 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.774188443 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.772202491 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.770278104 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.772749129 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.77456395 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.771566706 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.775749906 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.771123101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.770997368 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.772896008 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.772916709 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.773467773 seconds)
  done (took 44.244481154 seconds)
done (took 95.582260537 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.680156003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.177432907 seconds)
  done (took 8.560223314 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.774363231 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.774423486 seconds)
  done (took 5.291716623 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.772560983 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.775915032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.77655997 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.775132243 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.775567403 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.774021491 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.773485485 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.774631378 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.775571515 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.773201041 seconds)
  done (took 19.453403977 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.775359048 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.777452818 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.774183502 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.773414236 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.77588094 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.775379438 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.776513467 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.774229083 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.77787059 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.772478844 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.773885416 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.771062937 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.775287676 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.775890924 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.775712079 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.772172247 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.772038855 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.7732005 seconds)
  done (took 33.64668922 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.775281453 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.775869628 seconds)
  done (took 5.25489149 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.772985258 seconds)
    (2/7) benchmarking "second"...
    done (took 1.773353679 seconds)
    (3/7) benchmarking "month"...
    done (took 1.773361498 seconds)
    (4/7) benchmarking "year"...
    done (took 1.771560739 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.77223154 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.771919017 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.771469163 seconds)
  done (took 14.111157643 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.776460127 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.936421403 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.010128528 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.426386033 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.775354174 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.779216129 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.740643601 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.779006905 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.779018286 seconds)
  done (took 19.707212429 seconds)
done (took 107.727899875 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.586594033 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.771851791 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.125311117 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.845589649 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.782146713 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.06957327 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.797538844 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.0756218 seconds)
done (took 42.757158985 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.863766368 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.322318188 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.358797023 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.086713823 seconds)
  done (took 12.472089464 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.755289807 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.320068011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.813524946 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.434718928 seconds)
  done (took 20.227866526 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.141963882 seconds)
    (2/2) benchmarking "read"...
    done (took 2.126000461 seconds)
  done (took 5.97888186 seconds)
done (took 47.248284009 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.776817649 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.77254704 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.778823414 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.77346895 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.777144932 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.775540126 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.772668869 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.776987118 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.776882085 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.776954558 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.77818517 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777439365 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.775243828 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776600608 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.777309521 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.774518342 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.778389878 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.774427076 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.779032533 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.774285719 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.777771887 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.77656899 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.778514121 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.775789089 seconds)
  done (took 44.337590265 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.779219723 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.777014666 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.780845817 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.781215074 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.777965109 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.780175036 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.778748419 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.777799285 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.779724021 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.777340442 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776125436 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.777163865 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.776901544 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.777462039 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.780821187 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.777130227 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.780734119 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777778252 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779269253 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.778981538 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.780279416 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.777967844 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.776607281 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779382903 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.778034787 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.779946986 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.780630548 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.780126036 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779481052 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.778564398 seconds)
  done (took 55.071062577 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.785134406 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.788389084 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.779106364 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.780395385 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.780885704 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.781626817 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.781630596 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.781851069 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.781109355 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.781836383 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.781887392 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.78315236 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.781109664 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.782230777 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.781247299 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.781936166 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.780925635 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.782806068 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.781739889 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.781205084 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.781815275 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.780074277 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.783980087 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.780439659 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.782122375 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.7836705 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.781778079 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.782542751 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.780555734 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.781298545 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.781918358 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.782068005 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.782531332 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.780984438 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.780424735 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.783034884 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.787724301 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.79076078 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.782615013 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.78284787 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.782856326 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.782084308 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.782209102 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.781936172 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.781852792 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.78195345 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.781983849 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.783410592 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.783174049 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.783099636 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.781891176 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.780640102 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.783805759 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.783781051 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.782461674 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.78340407 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.784375186 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.78326286 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.781967042 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.785613407 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.78227252 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.784364147 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.785623752 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.78515066 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.780565457 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.780066608 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.781349167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.780803437 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.78134596 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.780717996 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.780204113 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.780255731 seconds)
  done (took 130.042711142 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.780025214 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.778104344 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.777067965 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.779461725 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.778729805 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.780123703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.779979638 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781889963 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.77972832 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.781650075 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.782662366 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.780259692 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779826011 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.781451822 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782331614 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.779889199 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.782141017 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.782074649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.783734204 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.782146525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.782286041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.77920034 seconds)
  done (took 40.885329121 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781241906 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.783529617 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.779799784 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.781385938 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.78073851 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.784010971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.783461642 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.781495514 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.783849008 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.781629139 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779415675 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786330537 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780262156 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.781791025 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782237085 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.780804417 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785291982 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78095417 seconds)
  done (took 33.791668271 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.780134109 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.779734445 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.783044405 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.785140039 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.781825308 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784903911 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781756382 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.782635935 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.784348801 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.782164137 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.784165822 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78264512 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.783746338 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.78204566 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.786127781 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781098693 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.78387759 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782063188 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784147967 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.781232531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.780983431 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.784844834 seconds)
  done (took 40.93409546 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78488134 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.783165567 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.786109159 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.782302905 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779933407 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.785807465 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.784599161 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.78246717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.784495431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.783992731 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.783220389 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.785652816 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.782788841 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.782646677 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.78525661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782960385 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785942488 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.783456614 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.786383144 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.784483121 seconds)
  done (took 37.394062026 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.784378384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786796832 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.787266585 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.786236363 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789214334 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.786223937 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.787657524 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.788020711 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786648629 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788790886 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.785896533 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.788657655 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.787617526 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.788922117 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.786570183 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.790497341 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78734122 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.785841649 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786673353 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789394199 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.788121964 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78957737 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.788311735 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.788274468 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.786998003 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.78831273 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788346226 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787997175 seconds)
  done (took 51.770154685 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787494737 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.787196135 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.784963848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.788142325 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.78468627 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.784476654 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.784681438 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.785354394 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788332414 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.785673985 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.787171912 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.787983439 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789985149 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.788206072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.788336006 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.789206577 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789241458 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.786064382 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.788407284 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.786937213 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.791892016 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789212994 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.78914517 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786702239 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.785714596 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.789478721 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785981318 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.78616532 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.789325931 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.78755124 seconds)
  done (took 55.340580456 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.807681781 seconds)
    (2/2) benchmarking "in"...
    done (took 1.806202913 seconds)
  done (took 5.330077211 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.786503409 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.788567421 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.789349729 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788670629 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.787289874 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.789656695 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789611201 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.785980005 seconds)
  done (took 16.023504704 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.789237585 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.790607292 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.789847231 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.7905099 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.787813753 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.790084374 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.796341886 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.79126705 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.789170136 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.791354209 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.797934056 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.799740491 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.793544045 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.791573177 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.790750268 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.79268193 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.790559275 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.790397067 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.791686917 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.791289532 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.790836398 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.792787353 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793210824 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.788706757 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.792646461 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.802238222 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.793353926 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.793715845 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791984433 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.795209756 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.791571918 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.789092135 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.792418222 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791629704 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.791566148 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.789628105 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.79885264 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792529588 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.798591396 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.794893745 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.791394147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.789984903 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.791808198 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.793202742 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.794545253 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792284916 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.792531392 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.791020543 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.792733715 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.794481111 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.798822346 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791206126 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.790361965 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794428972 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.794438736 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797811375 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.793268453 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.794094206 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801007868 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.802862232 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.805641401 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.801747783 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793937697 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.7936684 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800519211 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.818227661 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799070289 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.789854649 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.789130962 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792367739 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.799867349 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.806299741 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.80423049 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.793616206 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.793381428 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.79315693 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.794376512 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.795901429 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.799149382 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.796550554 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.794112458 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.795530221 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.804875477 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.817927099 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.793668746 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.794215098 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.792991115 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.792805006 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.794776451 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.805683894 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.794914293 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.794713962 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.792592783 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.795571628 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.796564243 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.795694374 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.79470323 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.796163903 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.793810853 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.79613002 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.79739174 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797303338 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.805317001 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.793919242 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.796382109 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.802939869 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.797740384 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.79493285 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802712326 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.796622658 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794265776 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.798129023 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80181486 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.792274017 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798346161 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.803597226 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.794114294 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.797134386 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.795626255 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.797193063 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.8061796 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82388552 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.796066871 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.794678138 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.800304637 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.808996917 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794236071 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.798337113 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.796159047 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.79353685 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.794615646 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.796994574 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.798173369 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.795821849 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797748032 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797702331 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.795510999 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.797502658 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.797423208 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.797189933 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.7983567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.798838323 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.797675425 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.799161805 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.800387846 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.799131327 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.803783857 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.798771514 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797727794 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.800052014 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.795583372 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799431413 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.79893749 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.798357499 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.796936792 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798347336 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.798139268 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.799280441 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799961961 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.798210123 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.797908543 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.799668629 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.803610914 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.800471151 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.802485709 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.797778703 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.797363998 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800365777 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.800517931 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.798860509 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.800247979 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.798514458 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.803678807 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.806818855 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.800855235 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.799946793 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.802455962 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.800268944 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.799733472 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.798905841 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802516256 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.807878272 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.799222702 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.804982102 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.800786099 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.799268464 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.800243358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.800259976 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800484335 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801040385 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.804563223 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.810495999 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812436975 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809996593 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.799866385 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.804893736 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.803693744 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.803754324 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.804936541 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.802182092 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.802551563 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801997276 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.801400739 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801083566 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.802597157 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.801239809 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.799413676 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.80099708 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.802204433 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.800915058 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.798522808 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.803375366 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.802609516 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.799097831 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.80273597 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801449269 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.800606159 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.799350679 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.799704701 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.802403116 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.800542893 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.801208181 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.807277641 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.798048179 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801471703 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.801142111 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.799372209 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.802400998 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.802396206 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803578637 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.801997189 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808886299 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.802629935 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.80248018 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808364151 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.800815531 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.799700497 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.804354552 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.802563057 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.800342912 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.803075418 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.812063326 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.802979545 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.803244797 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.802545259 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803645742 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.803416836 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.809468613 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.799949752 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.802730013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.802757859 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.802528652 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.798527764 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.803625867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.802735231 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.803464553 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803562588 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80207064 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.802806214 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.802909346 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.803597111 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.802898343 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.802834741 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803654994 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.811455481 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.805212217 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.804830764 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.804051092 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.80416684 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.808827348 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.801681669 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.80418792 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.804327148 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.816021211 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.813978598 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809283733 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.806053022 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.806247536 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809787842 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.806344513 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.808630578 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802972744 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806410019 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.806078996 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.804297509 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.803043916 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806021185 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.806508984 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80447411 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.805102292 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.809507867 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.805708044 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.803709743 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.806254532 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.806030891 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.806697279 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.803903474 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.806003994 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.806272928 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.810271612 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.805761305 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.80622355 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81024839 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805684101 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.806653506 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.806780602 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.805457112 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.804856615 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.808005599 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.805563752 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.808238039 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.815880545 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.809318887 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.816354481 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.806902466 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.815178923 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.809209094 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.808252556 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.81422624 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.803443486 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.8040965 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.807679186 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.805868479 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813076477 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.806840471 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.808316721 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.812368823 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.80757523 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.806901557 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.807782238 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.806397474 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808142534 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.809375092 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.812951892 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.809196767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.811049924 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807279721 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.803813954 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.80598793 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.806171621 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.803538304 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809762252 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.80691687 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.807956877 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.807269892 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.808259619 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808520397 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.806830965 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.807800719 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.806152095 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.808422168 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813520988 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809065267 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812424467 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.809155912 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.816651147 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80766347 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.814284951 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.809511198 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.808516865 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.808406916 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.81007075 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.809724162 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80820168 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.810478881 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.809368937 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.81032743 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.815395386 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.810379905 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.810672582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.810321886 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.810135745 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.809788872 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.819656193 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834562112 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.809859441 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814455494 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.808265044 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.811386554 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.813869913 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.810395165 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.808800038 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.812465187 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821212153 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.816886406 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.809913153 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.809915312 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808383111 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.80978448 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.81021104 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.811517325 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.810242582 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.808738068 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.81177536 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.810083485 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.812527757 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.811166583 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.809898413 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.810892468 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.812811696 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819590538 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.811815882 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.810858424 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809441572 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.811430848 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.810709144 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.812897507 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.809528203 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811654194 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811456177 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.812592123 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818059265 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.820443371 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.813611226 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.810851795 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.811495157 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.810581409 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.810511614 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811740911 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.811522526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810790882 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.812508501 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.813705093 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.813810217 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.810860725 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812408514 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.813184153 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.813911137 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816561528 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.819832046 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813245437 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.809017928 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.814595446 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815074039 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.811748489 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.812519136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.819647263 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817773425 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.825245739 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.821086714 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.817820376 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.814266099 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.816988068 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821223082 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.811952435 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.815732191 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.813516161 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.815617828 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814343858 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.81800262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814337412 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.820506958 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.814980315 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.81436435 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820902029 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.815134691 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814127854 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.816866737 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.819701764 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.815476148 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.812931076 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.813923883 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.813802707 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819954062 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.814117793 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81318127 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814623151 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.812977743 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.816277522 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.820388531 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817105711 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.81707605 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.813479115 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.816088791 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816334255 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814230589 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.812207416 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.813615918 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.814736852 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.817870466 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.822715724 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.812710229 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818539217 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.814369663 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.815829212 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.815323077 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814751541 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.813232133 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.813329442 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.814961418 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.8177278 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.816495192 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.818549725 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.814423014 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.81723027 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.817463964 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.817245787 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820090247 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.82732532 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.825595164 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.811236114 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.814485366 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.816585628 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.817539394 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816042586 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.814442271 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815455934 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.817605131 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.81495248 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.815655178 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.817054684 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.819474367 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830736049 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.818140376 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.816227208 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.815257259 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821892236 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.818592223 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.815760527 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.815941791 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.817564146 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.817773391 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.824166416 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.814911948 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821563733 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.818587299 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.820410643 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.822443824 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.820931573 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.825651389 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.820179595 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.817941101 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.817641342 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.821535238 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.835939634 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.818190348 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826003034 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.846546156 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.820311737 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.818751705 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.817258152 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818278257 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.819640212 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.819819726 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.820338216 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.818765046 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817330171 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.818713264 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.819955991 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.826451532 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.819859333 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.818421782 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.81760411 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.816425734 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.819070358 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.814829624 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.818300098 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.818746529 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.820811021 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.818952743 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.820189273 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.820381836 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.832569426 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.829893231 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.820021543 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.818844421 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.816329974 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.82364169 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.823510702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.830746385 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.826824261 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.818958104 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.81888604 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.821054969 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818400564 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.815138419 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.819344728 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.819717675 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.819063647 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.815719373 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.833616485 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829010752 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.823691415 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.820342308 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.820191314 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.821885714 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821731602 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.820947065 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.822214174 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.821807189 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.821907578 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826524499 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.820116989 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.818868244 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824464005 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.83016278 seconds)
  done (took 1078.902944918 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819367163 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81930734 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819609821 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.820653494 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.819917265 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819542967 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818599575 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.821087839 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.820566212 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.8184485 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82045581 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819278704 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818329497 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.818619242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818692347 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.817493879 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818487949 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818362865 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.819410939 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819186813 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.818857637 seconds)
  done (took 39.95267212 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.822727977 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.819486248 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819199117 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.822245353 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819539385 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.822154266 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.820084656 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822573128 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820435665 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819475559 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.822158079 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823222035 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.821343717 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.822324348 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822529912 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822536725 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.82303514 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82083107 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.823058896 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820951004 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823981727 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.820078379 seconds)
  done (took 41.822634487 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.822102506 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.822364884 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.823865416 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.820950137 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.824149431 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.820252874 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.82433701 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.823458791 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.82358311 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.823686611 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.822180013 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.822841089 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.830996889 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.828705959 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.824139805 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.822314922 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.967064012 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.823897854 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.823876613 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.823002332 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.821756161 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.82965436 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.820417934 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.822719023 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82326743 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.823410121 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.824586153 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.824317101 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.824515245 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.823794632 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.830149887 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.824731512 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.826088789 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.827011375 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.823618454 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.825039977 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.827745617 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.823427247 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.822221764 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.824659868 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.833649675 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.847949311 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.82483102 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.8306833 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.824615033 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.824785055 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.827811954 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.833078765 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.823118359 seconds)
  done (took 91.332448458 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.825371981 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.826499054 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.823406358 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824426273 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.824638278 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.824250319 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.824931145 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.824790375 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.822301746 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.82195828 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.826405076 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.819145085 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821358759 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.824306883 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.824958566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819240777 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820534715 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.821117579 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.823894715 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.820663438 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.822159652 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.8218221 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.823594654 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.820896397 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825066095 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.823075032 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.823879092 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.825159554 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.823094104 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.823541777 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.82261788 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.825567725 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.82475622 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.82356943 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.823865937 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.826535374 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.8281466 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.824684264 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.824727385 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.824108655 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.827926084 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.826217309 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.827219519 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.827448523 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820672065 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.824098592 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.823500815 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.82524647 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.823456302 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.825727065 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.824185935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.824522254 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825682821 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.824291172 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.826954272 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.827225173 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.824202213 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.824456474 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.826127888 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.824445975 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.823172201 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827995639 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.824277792 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825625117 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.828168504 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.824507277 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.825636201 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.827400452 seconds)
  done (took 125.808849331 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.827286207 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.828849501 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.825547213 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.829564914 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.829232977 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.831234862 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.830824638 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.828242389 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.829960377 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.829655582 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828927862 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.830352037 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82800217 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.828283227 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.828161048 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.829981763 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.828157686 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.831026216 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.828805366 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830631704 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.829334313 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829725275 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.829368458 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.827626288 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.829873616 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.830185281 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.826982494 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.829054522 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829791465 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.828005837 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829925795 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.829987177 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.829130194 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.829839304 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.829652818 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.830953138 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.829714765 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830802493 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.831858464 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.830134764 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.82911019 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.830825615 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.830600444 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.829865158 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.82928392 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.829851054 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.830528291 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.830338232 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.83061583 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830072022 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.831010272 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831256135 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833026803 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831644797 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.832557372 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.830264042 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.830118871 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.830577895 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.832614427 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.831424823 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.831900344 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.832414665 seconds)
  done (took 115.209375138 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831380901 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.832171344 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.828562462 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.826541944 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.831719679 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829314816 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.832060653 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.831058683 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.832255219 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.83142494 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82933005 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.830427787 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828817931 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830076353 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.828493158 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828847925 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828563583 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829428987 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.833015452 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.829923894 seconds)
  done (took 38.361469292 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.829450521 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.832281179 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.831605887 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829408148 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.833206969 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.830434592 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.833066434 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833279846 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830189996 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832040177 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831819531 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.834540528 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830206412 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.830555054 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.834040919 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.829246147 seconds)
  done (took 31.063237258 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.830217159 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.83283747 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.833348963 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.834905614 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.831400581 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.83311117 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.834585832 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.831469797 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.832804997 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.83489861 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.83311329 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.834000833 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.833599468 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.835017802 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.831343218 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.834540271 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.830509338 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.833912713 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.834968844 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.834353689 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.832829811 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83052593 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.835622425 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.834960455 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.833386631 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.831217848 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.830312513 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.832260829 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.832179108 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.834126892 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.833739718 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.834126467 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.8326917 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.832629199 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.837135476 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.831433769 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.834446744 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.833607661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836239623 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.835115571 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.835868556 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.833769611 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.835366185 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.835426981 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.833739603 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.834568773 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.832755726 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.833276848 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.832423413 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.833388307 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.83599809 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.836236453 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.836514685 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.835968312 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.836136198 seconds)
  done (took 102.614338181 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.837259119 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837227431 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.834308233 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83766106 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836414279 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.834229327 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.83866051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.833456784 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.833017097 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.835242007 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834884374 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.837922403 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833205111 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.837048761 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.836192263 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837663378 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.835039675 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.835375292 seconds)
  done (took 34.807192938 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.834057363 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835240735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.836628387 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834885206 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833291059 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.837308621 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833057708 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.83807353 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.839207477 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.834785149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834926913 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.837535049 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836883396 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.837958305 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834608685 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834316026 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.839127839 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.837740954 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.835600069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.835642322 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.839110217 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.838474734 seconds)
  done (took 42.162492737 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.838349358 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.838309176 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.854356423 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.86187674 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.859990683 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.876285315 seconds)
  done (took 12.891732646 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836978207 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839090729 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836727338 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838558027 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840095127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83493506 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837022062 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838345991 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840574411 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836577963 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836178913 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838804787 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840034179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836980911 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839942362 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839924989 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837562879 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838082304 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838153637 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840148435 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838522072 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840269167 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837714156 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838884969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839104729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839399766 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841207352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841474172 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837898135 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840915881 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840440531 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838738515 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841219044 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837575519 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839411708 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840591737 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83760022 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83934914 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840429729 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838768367 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841245452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84215888 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841387403 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838561496 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841367133 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839506616 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838143711 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.838398062 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838139271 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841543128 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840942173 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839653827 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841884228 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842622289 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.840594531 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842229066 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840080276 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840524227 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842320031 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839595046 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841123039 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841772276 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.839592112 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839421424 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842903007 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838540508 seconds)
  done (took 123.173250139 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839562094 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.839434145 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.839547096 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.838550549 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.838913201 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840762255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839688344 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.840308834 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839411577 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839315383 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844054979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842355216 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840474623 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84114501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841164991 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841001111 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840095555 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.840836536 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.841518741 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844096083 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840015426 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.842585085 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841251611 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.840290685 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.840924334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843094535 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839875115 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840495449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840618458 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840706937 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8413028 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.841534545 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841152425 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.841311903 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84288098 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842124928 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842044227 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842351508 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842740333 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844810392 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841443266 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844612367 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842539024 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842382953 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84241169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842258174 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842351618 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.841733971 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.843321704 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.841960246 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841737485 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.842187365 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844201519 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842984475 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84337081 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.843670505 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842488391 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843043119 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842708085 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846593502 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842828111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.842974683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846071161 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84325892 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84338681 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.842734358 seconds)
  done (took 123.334129739 seconds)
done (took 2514.063615522 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.870670339 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.880485849 seconds)
  done (took 15.521389551 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.00587142 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.959953903 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842982543 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.887814199 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.841916532 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.861861055 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.855379078 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.844172763 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.845575907 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843521043 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84389875 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.030810893 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.842580989 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.840122918 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.843982715 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.936925378 seconds)
  done (took 51.904407943 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.847172382 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.851637101 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.861258437 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.851848382 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.847869238 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859830933 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.882632402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.851789092 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.891003187 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.86374273 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.923842851 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.857276526 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.84856076 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.898728683 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.858498289 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85982488 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.947319359 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.923265861 seconds)
  done (took 35.499096531 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.926606333 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.851833092 seconds)
  done (took 10.558509512 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.841628996 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.877915069 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.910677447 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.868460267 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.869443091 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.849057973 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.86515962 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.885979391 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.865083375 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884681116 seconds)
  done (took 70.494658373 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.860191936 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.855772447 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.854684351 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.851748261 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.844332055 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.844098299 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.852449588 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.84788388 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.512352191 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.885364676 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.857222968 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.860657734 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.854803351 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.858014746 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.853618989 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.87830233 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.979653482 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.851553328 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.852837516 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.860931918 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.853482451 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.910095742 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.869588783 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.858207161 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.888951543 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.521038813 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.857890828 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.860598026 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.975591308 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.852841947 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.856340827 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.855422155 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.858732555 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.243553499 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.164443566 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.854553079 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.867281545 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.863298763 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.852550548 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.982232322 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.855005112 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.862740166 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.691631777 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.160629921 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.963438709 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.904643959 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.213175405 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.870404403 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.854421107 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.887637094 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.859636807 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.858625957 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.870410644 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.362012613 seconds)
  done (took 131.760734329 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.852805358 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.110426841 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008742931 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.853462467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140480904 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.059213479 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.849146447 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.902881427 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.851434563 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.080274809 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.013631637 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.961410631 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.850316927 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.847887729 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.850010667 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84795378 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.015122337 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.925794425 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.851293612 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.849898836 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884352712 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.100594488 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984055126 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.850320059 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.873645749 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.066215196 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.988259584 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.95892231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.129963301 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.852405112 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.920053699 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.851457293 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.853468385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84656918 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.009265863 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.948761539 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93834642 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.852801877 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848890803 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.848490589 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.523918008 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.053898114 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.949627305 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.997718241 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.107110764 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.05735782 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.63979823 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.851585576 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.589188237 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.015574581 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.090392595 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.090013848 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.977521555 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.851124701 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.123810106 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.851000091 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.852365294 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.086544586 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076849757 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.956755749 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.853245956 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853453628 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.85206466 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.102001747 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.85498188 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.947643487 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853605565 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.848731216 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.951443911 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.955609184 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.082520038 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068191271 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.886470461 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.156040202 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.322513804 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.102881873 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.918921848 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.084407662 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.85061313 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.847975672 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938911323 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.807479889 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.011685134 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.10298882 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.106224189 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.888945048 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.575230675 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.852405696 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.078840559 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.074807995 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.107990269 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.093907011 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.008009837 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 4.989943738 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.850723755 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.852353911 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.093890485 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.9901032 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.856215657 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21628606 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.085956337 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.444846313 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.882495686 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196173986 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984609555 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.855385563 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.496036598 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.853591403 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.081446412 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.89880992 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.852115915 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851277873 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.071469822 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.840791276 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850522015 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.661809051 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.916304614 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.853079762 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.085051397 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851640123 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119113847 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852121477 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.091194041 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.250193381 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.886674345 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.025165928 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.095284812 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.854017523 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101257632 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.09647903 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969097405 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.129329807 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.777312476 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851413662 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.14169481 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850741246 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.850715454 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.024317858 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.852608209 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.000160683 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.855688279 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.143075697 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87814544 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.006876048 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.854499916 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.107238636 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888324259 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.903804476 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850409682 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.984371691 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.853824392 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.835379339 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006776352 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853626521 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.85001003 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.3869931 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.847845726 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.010263298 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.088357832 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876860942 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.925359363 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.525828751 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.852075802 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938159345 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.878259172 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.185057144 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.846934402 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.004678376 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.851938483 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.390177176 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.848877553 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.089683118 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.084070926 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852746723 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.846138306 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.763926102 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.847129944 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.847637163 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008363595 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.533448294 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844819831 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.050153352 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847220774 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981895359 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.840896715 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.927167881 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.191932379 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.835033997 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.835374693 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.840079459 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.836023681 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.831741789 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.038016805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862126156 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.351658303 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.971123541 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.110161037 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.149692373 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.084832036 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.877478314 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.83697572 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.076619292 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829870944 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.892222735 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.82900035 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.846151351 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.055816487 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.825707396 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.037693117 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.105042006 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.750815708 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878015929 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.822332274 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.82473141 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.738575317 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.982382157 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91644331 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.824391236 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.82143885 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.94831738 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951686787 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035751 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.822145399 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.154854737 seconds)
  done (took 898.506756565 seconds)
done (took 1216.015228578 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.817186157 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.816850706 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.804793779 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.818061763 seconds)
  done (took 29.006084784 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.830400441 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.820307001 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.822994684 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.820456203 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.824590609 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.821252714 seconds)
  done (took 12.688870427 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.884129624 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.815106821 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.815764796 seconds)
  done (took 21.266370614 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.894856917 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.20729307 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.934047156 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.246177528 seconds)
  done (took 10.030463519 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.819954 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.819536614 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.819826225 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.825299329 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.81648003 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.820916852 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.819519481 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.818264636 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.818477844 seconds)
  done (took 18.127897307 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.21752032 seconds)
done (took 97.087265494 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.760827257 seconds)
    (2/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.972392761 seconds)
    (3/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.04815432 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.870501958 seconds)
    (5/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.139318161 seconds)
    (6/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.08045661 seconds)
    (7/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.863403627 seconds)
    (8/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.012207108 seconds)
    (9/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.944362996 seconds)
    (10/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.954225791 seconds)
    (11/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.860252487 seconds)
    (12/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.065023134 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.019439272 seconds)
    (14/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.111810285 seconds)
    (15/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.439107874 seconds)
    (16/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.844234596 seconds)
    (17/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.318694988 seconds)
    (18/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.34864306 seconds)
    (19/309) benchmarking ("sort", Int8, false)...
    done (took 4.821588628 seconds)
    (20/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.8833506 seconds)
    (21/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.133602457 seconds)
    (22/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.114208441 seconds)
    (23/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.920961687 seconds)
    (24/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.985231642 seconds)
    (25/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.943956928 seconds)
    (26/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.88688013 seconds)
    (27/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871919098 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.244633553 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.137859207 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.548115241 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.855462577 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.592569799 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.849111525 seconds)
    (34/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.912604874 seconds)
    (35/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.862640675 seconds)
    (36/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.851939538 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.113867166 seconds)
    (38/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.884585782 seconds)
    (39/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.064639796 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.127237323 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.16794857 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.943960939 seconds)
    (43/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.892645188 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.971582749 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.043685681 seconds)
    (46/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.953587951 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.202757202 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.172695299 seconds)
    (49/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.938595273 seconds)
    (50/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.285850454 seconds)
    (51/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.866584215 seconds)
    (52/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.081512341 seconds)
    (53/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.546851334 seconds)
    (54/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.204826836 seconds)
    (55/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.97657557 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163828704 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.852360466 seconds)
    (58/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.963356505 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.990028769 seconds)
    (60/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.045809718 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.664726556 seconds)
    (62/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.077943973 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.114339342 seconds)
    (64/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.165085626 seconds)
    (65/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.352192338 seconds)
    (66/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.978069699 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.931001084 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.913302004 seconds)
    (69/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.018967066 seconds)
    (70/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.118585545 seconds)
    (71/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.054566682 seconds)
    (72/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.952593321 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.912915851 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.031789329 seconds)
    (75/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.867697824 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.088821082 seconds)
    (77/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.925470306 seconds)
    (78/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.931010833 seconds)
    (79/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.869187593 seconds)
    (80/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.142867514 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.874253741 seconds)
    (82/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.561082388 seconds)
    (83/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.067522049 seconds)
    (84/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.002052973 seconds)
    (85/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.877213391 seconds)
    (86/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.931700224 seconds)
    (87/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.333047766 seconds)
    (88/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.869009113 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.517660503 seconds)
    (90/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.045805029 seconds)
    (91/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.871407684 seconds)
    (92/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.950373558 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.939297762 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.962175573 seconds)
    (95/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.031384958 seconds)
    (96/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.215462042 seconds)
    (97/309) benchmarking ("sort", Int64, false)...
    done (took 5.589798256 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.880784598 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151192644 seconds)
    (100/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.196489311 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.896249093 seconds)
    (102/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.998758544 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.10928486 seconds)
    (104/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.866483492 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.981917441 seconds)
    (106/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.881715993 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.248191293 seconds)
    (108/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.143236074 seconds)
    (109/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.022383021 seconds)
    (110/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.03666371 seconds)
    (111/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.046858251 seconds)
    (112/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.26171911 seconds)
    (113/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023680424 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185015423 seconds)
    (115/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.084696871 seconds)
    (116/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.764819207 seconds)
    (117/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.390208135 seconds)
    (118/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.107665998 seconds)
    (119/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.973595743 seconds)
    (120/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.067221346 seconds)
    (121/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.853198704 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.835664946 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.336316145 seconds)
    (124/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.026483889 seconds)
    (125/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.987211288 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.49960064 seconds)
    (127/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.855601027 seconds)
    (128/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.985644859 seconds)
    (129/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.846944087 seconds)
    (130/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.521873053 seconds)
    (131/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.925714815 seconds)
    (132/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.933465138 seconds)
    (133/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.932032947 seconds)
    (134/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.843677941 seconds)
    (135/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.700234226 seconds)
    (136/309) benchmarking ("sort", Bool, false)...
    done (took 2.290921122 seconds)
    (137/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.86472077 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.117984584 seconds)
    (139/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.827990731 seconds)
    (140/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.033581132 seconds)
    (141/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.058569641 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.107249537 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.160021244 seconds)
    (144/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.84118712 seconds)
    (145/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.013623163 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.839623087 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.839349872 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.944516273 seconds)
    (149/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.145730296 seconds)
    (150/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.872190178 seconds)
    (151/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.0919954 seconds)
    (152/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.223859346 seconds)
    (153/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.799112475 seconds)
    (154/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.960471483 seconds)
    (155/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.840134179 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.150800634 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.866105911 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.178852478 seconds)
    (159/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.381514049 seconds)
    (160/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.841803925 seconds)
    (161/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.223630256 seconds)
    (162/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.979205878 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.897443231 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.795946216 seconds)
    (165/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.142998824 seconds)
    (166/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.135444321 seconds)
    (167/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876545917 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.166350122 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.827077049 seconds)
    (170/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.916545448 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.859707326 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.188112716 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.84408663 seconds)
    (174/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.825987837 seconds)
    (175/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.313089492 seconds)
    (176/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.169633185 seconds)
    (177/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.032606567 seconds)
    (178/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.86435209 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.066574684 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.847699008 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.929455789 seconds)
    (182/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.032939028 seconds)
    (183/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.319125645 seconds)
    (184/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.125393469 seconds)
    (185/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.755185783 seconds)
    (186/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.870056046 seconds)
    (187/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.175458471 seconds)
    (188/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.825920796 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.949240781 seconds)
    (190/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.840382415 seconds)
    (191/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.870758739 seconds)
    (192/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.30443491 seconds)
    (193/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.832428562 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.462848211 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 3.222160842 seconds)
    (196/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.971734756 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.02859707 seconds)
    (198/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.703274944 seconds)
    (199/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.133344544 seconds)
    (200/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.904757845 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.761653802 seconds)
    (202/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.846654901 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.589799211 seconds)
    (204/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.843553749 seconds)
    (205/309) benchmarking ("sort", Float32, false)...
    done (took 7.058161 seconds)
    (206/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993317576 seconds)
    (207/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.93164821 seconds)
    (208/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.940754024 seconds)
    (209/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.959547774 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.059620807 seconds)
    (211/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.842986147 seconds)
    (212/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.036926814 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.264910592 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.644768653 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.046247591 seconds)
    (216/309) benchmarking ("sort", BigInt, false)...
    done (took 6.843748869 seconds)
    (217/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.875619396 seconds)
    (218/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.448710087 seconds)
    (219/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.074652305 seconds)
    (220/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.045997072 seconds)
    (221/309) benchmarking ("sort", Float64, false)...
    done (took 5.617077589 seconds)
    (222/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.93443135 seconds)
    (223/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.043538716 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.865890828 seconds)
    (225/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.830676901 seconds)
    (226/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.789630249 seconds)
    (227/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.007817794 seconds)
    (228/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.233674815 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.383293821 seconds)
    (230/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.464356877 seconds)
    (231/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.886397722 seconds)
    (232/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.977636073 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.842716143 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.153898511 seconds)
    (235/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.950510569 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.832093949 seconds)
    (237/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.072044266 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.854631371 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.775836894 seconds)
    (240/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.878105008 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.664606084 seconds)
    (242/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.050121055 seconds)
    (243/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.868463572 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.143247311 seconds)
    (245/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.989489363 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.987887719 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.951382034 seconds)
    (248/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.958238275 seconds)
    (249/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.987720961 seconds)
    (250/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.930201174 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.939632998 seconds)
    (252/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.86131301 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.818461805 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.150037248 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.834901931 seconds)
    (256/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.949431156 seconds)
    (257/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.203956331 seconds)
    (258/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.914267995 seconds)
    (259/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.940721644 seconds)
    (260/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.444056721 seconds)
    (261/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.115555526 seconds)
    (262/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.869147427 seconds)
    (263/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.190512826 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.92495693 seconds)
    (265/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.875215176 seconds)
    (266/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.674545501 seconds)
    (267/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.328597776 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.965181581 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.483862999 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.920994755 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.921225238 seconds)
    (272/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.82208248 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.012756452 seconds)
    (274/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.355104536 seconds)
    (275/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.949131271 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.931800371 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.77703439 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.919606291 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.815509771 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.0279464 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.791199697 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.858264317 seconds)
    (283/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.056366414 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.981942583 seconds)
    (285/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.599602776 seconds)
    (286/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.850981899 seconds)
    (287/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.850939202 seconds)
    (288/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.657652157 seconds)
    (289/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.375394803 seconds)
    (290/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.287257574 seconds)
    (291/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.846558799 seconds)
    (292/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.349608977 seconds)
    (293/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.808095951 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.492210838 seconds)
    (295/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.902812162 seconds)
    (296/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.950096591 seconds)
    (297/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.339005773 seconds)
    (298/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.264618844 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.823038039 seconds)
    (300/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.149774803 seconds)
    (301/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.913086717 seconds)
    (302/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.593612668 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.83620585 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.488701826 seconds)
    (305/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.805313204 seconds)
    (306/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.355310373 seconds)
    (307/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.959806434 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.186764396 seconds)
    (309/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.813357101 seconds)
  done (took 1003.185576414 seconds)
done (took 1005.043682401 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.842941496 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839267342 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.822799813 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.844431524 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.936085637 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.855344174 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.833029421 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824699874 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.87247915 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872881885 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.823464172 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.852260786 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.82627035 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.823470901 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.822979343 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837571027 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.137139831 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.852899127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840304306 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.830670028 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.841213769 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.82345507 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.872842835 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853045506 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.826497312 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.825741142 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.82755496 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.844133257 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.937039248 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.827940632 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.824947394 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.835360569 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.135753624 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.850148967 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.819022044 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.844973327 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.836083513 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.833659764 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.826959574 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.856255129 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.232679889 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.859604272 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.826839911 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.824113494 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.825886317 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.827829703 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.827423863 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.829705556 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838799501 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839500807 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.226986304 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.87648807 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.830053023 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.82542805 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.835328395 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.826001023 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.827767188 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841876618 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.84716637 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841960806 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.128747824 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.856779687 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.827831233 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.843255759 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.834652101 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.262487763 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.858312846 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829222121 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.231972258 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.864433158 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.263509958 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.868901707 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.826826363 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.840735963 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.859275468 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.138190504 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.847210091 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.825807317 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.834546549 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.825687275 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.835521774 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83956375 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.831294661 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.827029229 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841404146 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.859077077 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.836355499 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.829118185 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.83440105 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.847712373 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.836619412 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.839900381 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.830718034 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.824101812 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.836859307 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.832798211 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.832451251 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.831590486 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.832786632 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.837399654 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.23094078 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.881215289 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.824345373 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.825057225 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.82750869 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.841612693 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.229464582 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.865981115 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.849582933 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.876063967 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.829969409 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.130374692 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.85934292 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845049074 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837160681 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831273828 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.825172667 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.130314585 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.257557876 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.880240623 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.829422635 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.828488349 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84514074 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.830779193 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.825593982 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.591520924 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.856907722 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.843619108 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.951196036 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.840261669 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.861971464 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.829238597 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.833881418 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.862271625 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845437896 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.86177632 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.831574383 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.847743916 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.846977228 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.826459113 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.841649098 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.83954435 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.830280924 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.835155394 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824533737 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.864219395 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.843387542 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842971363 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.851576136 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.951855751 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827414323 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.134281999 seconds)
done (took 287.928693019 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.897091864 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.820661573 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.927679531 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.826091441 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.909222285 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.913763916 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.82251081 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.823339075 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.824145848 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.197078907 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.823521139 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.8255452 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.817935065 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.824666645 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.910941558 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.825983778 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.82485775 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.15961798 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.828304985 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.898764535 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.823155258 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.824165015 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.826753985 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.199083678 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.826416758 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.820108486 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.900138661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.828040455 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.165328324 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.820230935 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.82042216 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.166590484 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.918800114 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.84736057 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.839749231 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.837495203 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.912184181 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.833028525 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.908607191 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.909064568 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.928636198 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.870007305 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.82468895 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.823278221 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.831449779 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.829489889 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.825741066 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.856409904 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.828777673 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.826511619 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.162765463 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.838859781 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.836087516 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.826465387 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.825735157 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.851483252 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.825633702 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.830987069 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.920976465 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.830913263 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.890994759 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.200776239 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.229088965 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.828742149 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.825724636 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.828181641 seconds)
  done (took 181.481359789 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.898009396 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.90502144 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.895842384 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.833517609 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.880674343 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.897032897 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.831412614 seconds)
  done (took 14.899099716 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.834110439 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.828142022 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.877980202 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.874776762 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.826117618 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.974539638 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.824955348 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.842002949 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.820982658 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.876332854 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.825061853 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.824523604 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.833974718 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.820108819 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.869197862 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.832930882 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935187169 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.819566708 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.82006442 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.970019449 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820770103 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.824151144 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.872165391 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.829209722 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.817188364 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.822826095 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.407285226 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.816702495 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.812407372 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.815961852 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812694607 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.858965994 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.814822763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.815402922 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.810875758 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.929689493 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.814374907 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81116716 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.813753821 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.808722932 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.814747682 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.814566636 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.814457618 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.811425183 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.814426674 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.838608649 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.814822317 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.814712132 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.816104111 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.815384416 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.864697307 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.814499111 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.813623383 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.812608356 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.869404359 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.821897429 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.816116777 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.812429803 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.815941554 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812248552 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.965183126 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.863622794 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.814536589 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.861317014 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.816321824 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.815649338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.814132618 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.81496715 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908667005 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.815127829 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.86204607 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.812383169 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.973870543 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.83724779 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.815916557 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.818600905 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.817189531 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.816612339 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.810028701 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.820375472 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.812850865 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.817594704 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.820957787 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.813802224 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.812912655 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927073096 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.923077632 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.813281456 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.83097901 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.822673152 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.811768662 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.868237346 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.813997524 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.811975159 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.867735037 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.927470307 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.866342817 seconds)
  done (took 200.679439626 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.818228721 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.82169506 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.811549195 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.825497405 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.810633446 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.809103108 seconds)
  done (took 12.635630768 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.810393306 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.809655541 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.807748036 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.808972494 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.808951647 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.808085646 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.808250394 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808779416 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.81286026 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.807743874 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.810014458 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.809285349 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.809659266 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.807947283 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.808021669 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.80935681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.809619745 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.806512095 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.80996747 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.809893878 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.966768958 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.809288255 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.808909058 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.809590345 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.815163973 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.808148014 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.818259873 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.809479545 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.809557841 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.818775059 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.813030683 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.810275122 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.809772271 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.817146741 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.816344381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.810018819 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.814089191 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.810208156 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.806015845 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.811216195 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.811184077 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.810604928 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.809479684 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.811915591 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.812674835 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.814116967 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.814571484 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.81923661 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.810427226 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.811744477 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.8124724 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.811239308 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.811256524 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.813021844 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.812189708 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.816018344 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.81591678 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.812127603 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.810986772 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.81104614 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.813118752 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.808982573 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.808773443 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.813065591 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.80460353 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.8127987 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.8058158 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.810378073 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.805215421 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.80528412 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.807063735 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.806395944 seconds)
  done (took 133.267146188 seconds)
done (took 544.731114314 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.006196024 seconds)
  done (took 8.734669379 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.009113265 seconds)
  done (took 8.788410007 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.130504046 seconds)
  done (took 9.87608311 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.822991604 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.839462398 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.820543106 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.819094669 seconds)
  done (took 29.067166911 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.971689062 seconds)
  done (took 8.716700932 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.833238339 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.808274299 seconds)
  done (took 15.418272753 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.977031074 seconds)
  done (took 8.720071024 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.31589086 seconds)
  done (took 9.083163619 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.822965463 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.840760686 seconds)
  done (took 15.422710857 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.79372415 seconds)
  done (took 8.536841858 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.402387969 seconds)
  done (took 11.244790792 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.823986168 seconds)
  done (took 8.674456975 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.813348067 seconds)
  done (took 8.555838091 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.83750948 seconds)
  done (took 8.582209626 seconds)
done (took 161.150459172 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.814096486 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.812530203 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.809468516 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.808385347 seconds)
  done (took 28.986465654 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.851126 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.850463279 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.8537372 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.86253157 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.856434452 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.852369231 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.844315448 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.843538438 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.861654547 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.854784767 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.854248179 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.855628106 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.85356292 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.843152121 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.853803464 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.853996898 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.862638622 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.852312595 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.844403272 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.854540387 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.820493908 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.862394231 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.854700775 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.818214573 seconds)
  done (took 46.15969151 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.01884004 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.888408365 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.96985878 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.870386165 seconds)
  done (took 9.490382808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.871442657 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.873196635 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.883609706 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.922976665 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.945997862 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.881596735 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.846069373 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.841507258 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.829044061 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.873054739 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.949180224 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.869409 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.972218898 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.820964255 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.006770341 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.820655377 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.81840483 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.871642008 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.923472452 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.937563136 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.819593718 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.87107193 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.87545008 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.867225911 seconds)
  done (took 46.93784043 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.8189045 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.826109083 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.824153863 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.818747909 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.819312528 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.820000967 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.824584741 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.820519538 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.840947702 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.8202789 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.819767213 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.819756795 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.817921923 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.820098824 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.820262275 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.831879199 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.832988787 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.819072154 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.824558939 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.824778945 seconds)
  done (took 38.211064347 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.813430637 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.667701226 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.163929689 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.06890089 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.815474812 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.81357774 seconds)
  done (took 31.089963238 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.833248024 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.825396659 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.818868789 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.877150228 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.959399017 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.827900755 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.818523105 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.834120981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.86747455 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.884637431 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.839158056 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.849239516 seconds)
  done (took 23.98440403 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.815798433 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.826243204 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.815651 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.843461 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.832174454 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.827342029 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.828506434 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.813872633 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.833137494 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.839455662 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.827707792 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.835497109 seconds)
  done (took 43.689821586 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.906571686 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.708537663 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.873232839 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.540863051 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288481504 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026518034 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.815665113 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.163171013 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.820955385 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.092573114 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.88976835 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074623479 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077549011 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938474085 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.822600455 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.317483784 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124675534 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067161672 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852444495 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59116167 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.985028489 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347646471 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.648971989 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.989988076 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069560841 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.991825588 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.11828998 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.823147021 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998423215 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.897716963 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867855919 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.858848044 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133077658 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238947662 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957040554 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869427227 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519132387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.582433374 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.874740644 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.617138603 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.832244842 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.002465488 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870466674 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862101498 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.79694665 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.352536616 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.205347305 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.867533954 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.574181008 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.863546581 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872955839 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951156154 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.867203354 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.679607 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.818550616 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.143381094 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.86011369 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868833342 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.435147335 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.971044265 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.473290647 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.807489868 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.065582454 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72429032 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.352858357 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.022478482 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.873840411 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.874563954 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805340926 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.630066939 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.999031093 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.016972414 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.892245986 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520923348 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183722817 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.990138292 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.961968324 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165998769 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.642686796 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.807381095 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.099910924 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.828772203 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.805645249 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.731452439 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.805966939 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.156327898 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911019321 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.51033837 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913203901 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.209114141 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.884131842 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889560896 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879926345 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.096567661 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.754680281 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873712349 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.690621534 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.206619984 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895373969 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.209380687 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807695932 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.876792025 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.128845369 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.083543912 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.084670877 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.366969703 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033960173 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.875041116 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.959338626 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.656557061 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003088838 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.155392237 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.932387892 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.968685723 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01387204 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.835819543 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186060059 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907521856 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.053053675 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.929054653 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.154784696 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.21785928 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173476708 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945845442 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890765514 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.880797248 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.642771646 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.513263783 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.152959119 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.885459357 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.247812859 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.99453886 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.886079292 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.820388489 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.48379832 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936480226 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.000288497 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.11316113 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.707883958 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.259453007 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.82100885 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.031838608 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.00059322 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.109122006 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.546396516 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.971565746 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143807771 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.24330637 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.083631441 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997076087 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.906455717 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976702927 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90956167 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.176642059 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.239446437 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.889885718 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.891300822 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660040658 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967439197 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893498365 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.899286672 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.69030273 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183848807 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.923560196 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897311087 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.782903324 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.907476795 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960708252 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.89939749 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.904831591 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.445429754 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661950375 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.905707361 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.535912888 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134242061 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904739302 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.65877122 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.090829784 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982059967 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182731326 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963179116 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.833150611 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.609958285 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.591616586 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.89951255 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.834365137 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.898891086 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908466405 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.910010445 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.280202832 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.18579843 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948837812 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.688008019 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.023366479 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.915310322 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.908665239 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903539828 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.428099722 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.026693634 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405340983 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.013428141 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042476677 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.918186663 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.839298675 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.909023101 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.909733086 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9049625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.862656294 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958421565 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.662188823 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370092881 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.165450881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.600273195 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926274691 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.735252304 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.042645837 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.932035625 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.721424244 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855670658 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.999584396 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991156649 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.934060765 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.693245245 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.710123505 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492473267 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241118613 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.244031185 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37939334 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.26937071 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290133164 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.263188846 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1601436 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453338071 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.986676887 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.276447659 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868479837 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010005887 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.584739627 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.284817881 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939944675 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152909264 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325922687 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.796354393 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092219704 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136276049 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959093604 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.702757961 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951460352 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.129550354 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067949177 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.803810616 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149798302 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258205363 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.732092579 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.043417528 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.923836056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.636341416 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009479735 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.635677871 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286963617 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.427957168 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.02585588 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423890751 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.929433403 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371339609 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287484822 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.227094407 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.011652251 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862242981 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.936840976 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937919183 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.926342919 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.901592488 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.858225761 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.210060062 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.93810886 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161741496 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.169762994 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.197374321 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.837022216 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933381333 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926873306 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231210806 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.587910447 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.163539521 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.248223929 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.501770253 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934667046 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861849434 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86181179 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.621159724 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.93610802 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902341243 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.158933329 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.115602763 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884122914 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.294535638 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.23626697 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182562269 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.942374725 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.212183637 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205939873 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.662923827 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958033127 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.028663661 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.732774586 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.053230469 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.198163051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164049093 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725989863 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158990237 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.982779631 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.745793694 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.928559523 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.143602832 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.198519857 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041347683 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185495914 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.652329193 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.941683183 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300608013 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.988928273 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.962104847 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.107338978 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.123631852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93956599 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01344865 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939902995 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.941227501 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.94095966 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97683125 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.986209675 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.070716022 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.943630387 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018397537 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.038177895 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.521611717 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.939519679 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217626158 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298882092 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.267415755 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994427565 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930777943 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93085103 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86511168 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067787889 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376462968 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205118151 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.061694643 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.230509269 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957401608 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.739586269 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.197943304 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.238912338 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205922199 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.826861709 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932127266 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.038057888 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.198854774 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942410472 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.142190357 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168623771 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256626549 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403335032 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.047199403 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.365810613 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205680303 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.300006036 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933236646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.521638108 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.949903337 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.693460989 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.975712781 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.997528112 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222630611 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945619257 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321899369 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954931348 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.130497145 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.450737269 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.76347467 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.299950968 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.924102486 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.99720365 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220119363 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33893185 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.248146041 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004405465 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945296253 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.646364873 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071389228 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.89697885 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.24947292 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933862447 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145356732 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.644585416 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94437705 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22144572 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.245982001 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.931451545 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.922324974 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992664612 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.949784985 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157628381 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.212314749 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.187411457 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945055744 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.942380315 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.753955326 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.221434465 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997320923 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869772449 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.939004169 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035524171 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183237058 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.959847019 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.622898586 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.646222543 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239108488 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.856219887 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957069668 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313685276 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.380155304 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.274782414 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.486912299 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188883312 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.495198232 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.764347432 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.305646955 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.940777429 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.315243743 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.308119562 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.939559742 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.423807488 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043756305 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.218895036 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.260672635 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.953708496 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.103922979 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.993577256 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161018843 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.611129662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.881078717 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.939550307 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.998933562 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.938500205 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.066479094 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949396264 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 3.045102706 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.994715469 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.741922799 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430477881 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.944040756 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.924208268 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.739506791 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.583347643 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.053835472 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082387975 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.946684562 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.657276463 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.231333106 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.193235316 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.514132403 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.016159602 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.942808698 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939554223 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.867385552 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.138238564 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.320391042 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.238559088 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.356331364 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.057577755 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943825884 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.156292343 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151381508 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.902763738 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.09570136 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394720038 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059557527 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.710829587 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.619838181 seconds)
  done (took 1708.256561906 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.949486536 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.960894293 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.942127158 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.959629073 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.949559641 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01605337 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.96383205 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.986246028 seconds)
  done (took 57.600224229 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.939247485 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.162416007 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.949369598 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.940367524 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.975087611 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.94050454 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.143805511 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.951764471 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.978806442 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.950758304 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.941249798 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.940419098 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.286990657 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.969184177 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.940583656 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.947416843 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.949506918 seconds)
  done (took 75.789302971 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.939876027 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.226851043 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.978722075 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.966680602 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.942619916 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.957050803 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.083138623 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.968876203 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.947039571 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.183702891 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.282855701 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.956000091 seconds)
  done (took 91.309925176 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.956746383 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.948610832 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.949309375 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.949021182 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.947933623 seconds)
  done (took 11.635346784 seconds)
done (took 2214.898511987 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.194016786 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17059661 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.175760509 seconds)
  done (took 6.221975151 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.09033155 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.137565758 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.257396485 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.262541699 seconds)
  done (took 10.624704939 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.2329349 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.32893678 seconds)
  done (took 6.43534341 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.315039173 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.968180459 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.343920748 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.940964702 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.943913005 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.946876589 seconds)
  done (took 22.709189076 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.943713804 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.948196352 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.944978503 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.947364676 seconds)
  done (took 9.658199991 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.925413485 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.676782376 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.928774249 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.940559655 seconds)
  done (took 21.344939885 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.692549276 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.344024092 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.689330855 seconds)
  done (took 9.599513704 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.480087153 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.783142874 seconds)
  done (took 9.137874462 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.202694322 seconds)
  done (took 4.076967517 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.972844171 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.215432204 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.488197831 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.473027308 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.550027039 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.790491074 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.261344688 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.183721452 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.390817276 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.403600174 seconds)
  done (took 25.603310064 seconds)
done (took 141.107294 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.320642944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.328372205 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.188548158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.285731227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.18422355 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.156807282 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.144583566 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.271792852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.797479562 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.785151056 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.333899003 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.183684274 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.092352915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.330643617 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.100610787 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949911683 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.174296695 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.342262313 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.991097102 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.210309799 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.168058899 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.940353026 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.229105353 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.998587781 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.197405483 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.107736426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.546143108 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970568959 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.201385044 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.618273474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.141426731 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.413738995 seconds)
  done (took 171.581165843 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.768352909 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.974607964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.977572246 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.944534711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.449100621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.973224978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.944451703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944453556 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.401841144 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.379757187 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.970604124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.405987846 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.969488886 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.944710265 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.97167524 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945526239 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.567912648 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.826906988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968123702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.969602287 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.972040418 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.212841254 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967260389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.252629653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.516607385 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.966908912 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.945437498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.967289888 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.969944411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.968845083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.967747446 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.945819883 seconds)
  done (took 211.866638572 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.922936307 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94757334 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950345935 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947438935 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.960397462 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.955693093 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948809795 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947120551 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.558507506 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.596514606 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.965994975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.951151894 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.961983164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.946457498 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.967287861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946840558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.96917454 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.970678622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.969121874 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.964293923 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.966564345 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.6191929 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.964262737 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.574630843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.94889641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.952891864 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.947698259 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.95608949 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956894396 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.96003597 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96374032 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.948034331 seconds)
  done (took 223.01042304 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.153454593 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.954539195 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.95557858 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.890843567 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.955424724 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.954656553 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.894196178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.145831428 seconds)
  done (took 19.806412273 seconds)
done (took 628.147212223 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.447238148 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.295320112 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.130469656 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.979455752 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.212916024 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.011405959 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.974984823 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.041245851 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.713389689 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.048532309 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.669574724 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.995141367 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.756770106 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.003299906 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.097059563 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.035030329 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.520139163 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.61474435 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.157083722 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.028274267 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.14793415 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.91330942 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.059630066 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.729412557 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.777600312 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.961974015 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.164025361 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.527835015 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.986409752 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.142931381 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.723448422 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.392833452 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.989666657 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.974229271 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.032379465 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.010514599 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.337538216 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.988423089 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.094236515 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.715914136 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.037223865 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.588801468 seconds)
  done (took 106.910269041 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.945212548 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.944640938 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.943489093 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.944744536 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.945416215 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.943825076 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.943212169 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.942534826 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.945363256 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.944667482 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.943493847 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.945200641 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.943574756 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.944746916 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.943387979 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.943629714 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.944936333 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.94682647 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.944678661 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.944010299 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.945336096 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.944022854 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.958621341 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.944534662 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.945524658 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.945874458 seconds)
  done (took 52.463587365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.959009706 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.111281258 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.222355396 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.978995595 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.957675504 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.960357116 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.976917045 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.963595713 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.959897619 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.960466471 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.052061418 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.965353558 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977050764 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.222338452 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.975847054 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.959323664 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.959200964 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.958772029 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.118263111 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975125373 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.97748738 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.965287708 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.979187837 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.971769129 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.959749416 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95912871 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.963266183 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.4311531 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.973841608 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052242329 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.005196984 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.984693267 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.380234326 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.23405374 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.017626868 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.970629605 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.960513822 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.055124463 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.966815301 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.960012574 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.978675802 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.965621611 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.222118937 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.460431699 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.975529951 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.960152473 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.453368535 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.065047881 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.001032981 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.97081205 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.224587476 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.97983451 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.962374089 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.961730022 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.9973171 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.970496843 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.960244993 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.287712467 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.973685562 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.978936196 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.967016 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.961686824 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.126005066 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.970071116 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.111076153 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.970819781 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.968220204 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.96250131 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.223555622 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.979464988 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.467501244 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.97711295 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.962363442 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.054297476 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.119400813 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.475088377 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.975986917 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.126566753 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.398069702 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.988240142 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.969436933 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.421425433 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.992091143 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.970880841 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.964156874 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.964377447 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.964300221 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.008571259 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.978319742 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.390855878 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.472369498 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.305855252 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.993003795 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.978355681 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.96298549 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.284689403 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.973719894 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.962834017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.21846572 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.477232215 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.978820279 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.971160673 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.453011511 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.98022813 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.983111254 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.973970781 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.231517729 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.980501714 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.009324945 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.964429413 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.969891962 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.966183949 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.981838067 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.970052511 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.964123653 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.442516185 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.076520001 seconds)
  done (took 243.156109794 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.958781049 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.960228816 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.958482141 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.984262595 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.956844871 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.963213833 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.957868526 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.958492528 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.963447429 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.957859141 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.956892983 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.958827154 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.958986155 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.965860861 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.563522465 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.964620445 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.617597111 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.957671229 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.957816251 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.969187207 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.646757536 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.965266241 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.959705621 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.983827385 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.958919411 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.958956473 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.965835331 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.08836752 seconds)
  done (took 170.911269031 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.966567295 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148607864 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.985391653 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.007053986 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.975842929 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.964402352 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.989708218 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.989242349 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.971208218 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.963509769 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.963962796 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.026190935 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.979918762 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.108436067 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.998529759 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.998524121 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.071272216 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.975055988 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.965013268 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.964168469 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.995260447 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.96128576 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.027557501 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.09759042 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.985597042 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.084388221 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.972849665 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.968109501 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.967667133 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.085410813 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.98606652 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.028399574 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.996448113 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.985569299 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092086626 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.08804222 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.076397875 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.998548712 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.972427402 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.965816091 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.9666791 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.95539125 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.085430835 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.987127979 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.967988822 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.076504672 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.989434533 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.969860983 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.977342278 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.967152604 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.981200206 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.986150162 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.036540041 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.102431729 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.00464961 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.993837413 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.992985769 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.267948145 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.978513499 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.068954195 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.961829872 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.086816289 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.991848146 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.955713559 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.968404762 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.973339162 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.996220066 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.00082129 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.074091835 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.976276987 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.070119413 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.005526711 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.975874166 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.968839745 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.971532047 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.089101137 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.091769664 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.005789913 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.007021728 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.001132763 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.965110325 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.969557593 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.958737079 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.987249168 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.973786867 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.089031004 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.090121907 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.979508698 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.971243674 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.971706601 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.972191816 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.994458911 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.097410852 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.005620794 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.06816042 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.039228089 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.044840072 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.984614193 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.982151023 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.973842355 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.034105834 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.985718667 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.981844579 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.319337292 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.042436546 seconds)
  done (took 213.253882893 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.427005418 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.024611077 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.028687372 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.296596021 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.3927243 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.8454925 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.018758481 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.020328144 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.043034737 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.204941521 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.094296957 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.038505414 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.005832859 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.994493638 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.019940328 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.041053734 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030568143 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.357307756 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.13822488 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.146677014 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.002852962 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300713886 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.340934861 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.443184873 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.055053964 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.359126324 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.691932592 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.161772048 seconds)
  done (took 64.428470351 seconds)
done (took 853.00225325 seconds)
SAVING RESULT...
DONE!
