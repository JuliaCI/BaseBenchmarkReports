cset: moving following pidspec: 18934
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.642084786 seconds)
loading group "shootout"... done (took 1.223552572 seconds)
loading group "string"... done (took 0.421366363 seconds)
loading group "linalg"... done (took 8.002338105 seconds)
loading group "parallel"... done (took 0.155501489 seconds)
loading group "find"... done (took 1.323947767 seconds)
loading group "tuple"... done (took 2.020459587 seconds)
loading group "union"... done (took 12.778008332 seconds)
loading group "dates"... done (took 1.36959941 seconds)
loading group "micro"... done (took 0.20429641 seconds)
loading group "simd"... done (took 4.440177806 seconds)
loading group "io"... done (took 1.02458196 seconds)
loading group "random"... done (took 8.856795443 seconds)
loading group "problem"... done (took 1.549650792 seconds)
loading group "array"... done (took 19.675970201 seconds)
loading group "misc"... done (took 1.517998425 seconds)
loading group "scalar"... done (took 40.194454414 seconds)
loading group "sort"... done (took 3.077205883 seconds)
loading group "sparse"... done (took 11.977763672 seconds)
loading group "collection"... done (took 17.449046608 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.502090337 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123055174 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.125657925 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117452256 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.148977803 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122601864 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126087234 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084961196 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.9130115 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.142658613 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112195153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.413750291 seconds)
done (took 5.271431719 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.167123655 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.090776178 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079593702 seconds)
  done (took 1.307274943 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064592392 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.132949634 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066219915 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066541211 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066531298 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066015868 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065450276 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065820257 seconds)
  done (took 1.667054194 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072375132 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067391462 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064879063 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067281432 seconds)
  done (took 1.412751968 seconds)
done (took 5.774159658 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.240391723 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.101555788 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281313523 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.392450287 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.458415242 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092196678 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073953685 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069347929 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129436709 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323166854 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106030958 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.184966592 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088199456 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.174731879 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.987435321 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.118747053 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.083255561 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121168038 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091102061 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.13426729 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.395697581 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075636153 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071828831 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.068005253 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066965222 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.643522489 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.680793267 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128396922 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083057885 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.099604071 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11450576 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.642199208 seconds)
  done (took 10.496448656 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091440748 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.08973232 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.066960189 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.121707063 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091145438 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.067322895 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073035972 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.065748008 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086336952 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.122186663 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087806905 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.09711767 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063606438 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.066981476 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073909631 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196687891 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07855791 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079057372 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066082125 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079797836 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10610363 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.07845926 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078131287 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.07852545 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129311478 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170548295 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099892498 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09645781 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065948269 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079785076 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118651051 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126027909 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064118085 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063005009 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118618984 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092799491 seconds)
  done (took 4.521114769 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.96611221 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.092332326 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103017632 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.627069531 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.064597812 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.153960498 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.243720065 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072878755 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.407972967 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.144929214 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.139976467 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.147761869 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.116841398 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068951978 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.211766977 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115807287 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.511805618 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067180483 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065900157 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064774193 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.067866062 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066723396 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062231675 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.069055141 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093952629 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.087087599 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.188283342 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.927856961 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.244352403 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.067227732 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165238772 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086999206 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.357296256 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069702028 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.083607094 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.41222608 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122252222 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065765081 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167154591 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.117187305 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065036344 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.118103033 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.078341137 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068552907 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068688168 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063257803 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.06796789 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070971306 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078284239 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101775074 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066771537 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064423507 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166153238 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064619979 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066277038 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.066580946 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.148600364 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065050742 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.142195269 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063673359 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068574365 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.101420424 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06813154 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.088933513 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.100782223 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066306757 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.345875663 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.067068421 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.0653849 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.200797941 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075159167 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064228401 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.069075936 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064543569 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.065669423 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.08422305 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067533747 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.073492288 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069457865 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068520969 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107861746 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066916264 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069522107 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064559064 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070097288 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.096883956 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065405741 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.47922488 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096712194 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.066249502 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076916734 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10610495 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.067235358 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072721729 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.063224668 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066931143 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066846685 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065302086 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.178179985 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069984452 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.096238228 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069532721 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112703206 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.060122122 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067020068 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066223552 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071972667 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069205269 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069480042 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066399339 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069416915 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068141776 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064632561 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11175185 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067011732 seconds)
  done (took 21.992246046 seconds)
done (took 39.114025371 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.260019587 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.081203104 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.081183824 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081134672 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080823691 seconds)
  done (took 1.814146176 seconds)
done (took 3.03364402 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.108780943 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.062861336 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.10028448 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.099259303 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063565251 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.063565702 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.098241152 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.063852082 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.098089183 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.099262712 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.101362907 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.100767534 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.063269813 seconds)
  done (took 2.351579238 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.068202123 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080518724 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082617439 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061346028 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.07135507 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.0812335 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060876395 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.079894748 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.089710701 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.083654035 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080683492 seconds)
  done (took 2.056499008 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069191358 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.081061631 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.083329959 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061137852 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.072748596 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08140207 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061051274 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080882123 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083880348 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.081320051 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080400597 seconds)
  done (took 2.044946902 seconds)
done (took 7.663507038 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.066846789 seconds)
  done (took 1.258838198 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.524843619 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.541675423 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066668681 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.08484157 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186880959 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.094768738 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.218180652 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.070721439 seconds)
  done (took 8.163832006 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.095541391 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06830924 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069178177 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069686347 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067407597 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.068330391 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067425735 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072911758 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.067638897 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.068774874 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068241838 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069486092 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06799819 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.06750736 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069203391 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06740613 seconds)
  done (took 2.421758919 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097187323 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095563368 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071502841 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071743457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069188512 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069828084 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.072629778 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072504827 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068719149 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069757657 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071201676 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069902209 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069436901 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06076113 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071442772 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.073310832 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06911457 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.072653501 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.073132425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073720121 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073236172 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.062097382 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071126824 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.071818761 seconds)
  done (took 3.063376934 seconds)
done (took 16.116541082 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113045395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.073409892 seconds)
  done (took 1.391371109 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067966489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069195185 seconds)
  done (took 1.354690403 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074999296 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059442191 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.082106022 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070380523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060782667 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.060462754 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.080069987 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060858789 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060822109 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.061502231 seconds)
  done (took 1.890057671 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061995294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.069876019 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068275641 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.069505898 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.067642941 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.062483944 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065088682 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.062345141 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.069852285 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.061069796 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066113928 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082028503 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.065683523 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.083497014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.065489793 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066175411 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068343657 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065773951 seconds)
  done (took 2.446328511 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059544972 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061353481 seconds)
  done (took 1.345185549 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063727168 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061474013 seconds)
    (3/7) benchmarking "month"...
    done (took 0.064897437 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064374704 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061688781 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060977175 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.061783151 seconds)
  done (took 1.655977041 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.413692796 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120181227 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333911856 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067085978 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07562016 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252195306 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062669806 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067527682 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067673982 seconds)
  done (took 2.723130741 seconds)
done (took 14.036876597 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.0790641 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082524245 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087368552 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.415032246 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.089213586 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.064686554 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.110594862 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177816032 seconds)
done (took 2.349023774 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.216870425 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.31713954 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.79616963 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.181139933 seconds)
  done (took 3.521101582 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346175285 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.07963749 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076971075 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.0672345 seconds)
  done (took 1.808638681 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.063824397 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071822259 seconds)
  done (took 1.364172491 seconds)
done (took 8.152465996 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06256394 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090835094 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06253823 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.063280837 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062830274 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063410949 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063414788 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069088721 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062922644 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06279921 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062703759 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063225812 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.062872108 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.062657456 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062374395 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063030588 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062947834 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062776565 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062745635 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063002598 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063040064 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063121689 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063085223 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063003667 seconds)
  done (took 2.801165245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078649693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.065108712 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.06725658 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.067067852 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067000633 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.066456599 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.066803733 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064821616 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.066395888 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064798046 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066989409 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.066882855 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064915816 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067218296 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065622437 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067173337 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067021994 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065488456 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064614169 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.06704113 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.066574399 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064981577 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066680568 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066121684 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066829421 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066876334 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065156338 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065012791 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066629711 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.067271328 seconds)
  done (took 3.240010401 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064440196 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060010891 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060687971 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.06888325 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059709815 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059993039 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.060162189 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059011603 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059556053 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.061189819 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.059816625 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.059297187 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060024123 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059632421 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.059382886 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059934214 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063448737 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077459591 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059531612 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.059290232 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063235032 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059399255 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.059273559 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059268293 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059933497 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.059900706 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059404695 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059595261 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.0591825 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060308656 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.059166883 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063622174 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073895958 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059383123 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.068783294 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.063786287 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059492179 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063031887 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.061137058 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059337863 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059332598 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059372043 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059494176 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059263709 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.068438626 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059593832 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.060796947 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059902464 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.059475704 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.05892083 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.05926969 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.061421435 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064764205 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060661104 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.059183228 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.060495855 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.059383931 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.060363335 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.059658111 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059600935 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.059113186 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062429761 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060990916 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060383691 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077416564 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.061484296 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069166096 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059543963 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060309884 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063004937 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059820837 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075272721 seconds)
  done (took 5.680414944 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087267197 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087390508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065027168 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065484391 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.060867538 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060310854 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067929486 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059951152 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064386974 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079546452 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060303759 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064262791 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064629994 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063612181 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060231506 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064776342 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.068402118 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060194747 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.059751761 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064171214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060123604 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.067895407 seconds)
  done (took 2.71711247 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.139332236 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065762719 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103326326 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076541387 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068547791 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075791092 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065452393 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065724901 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066431326 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066589495 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066524387 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065737512 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068633031 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066548597 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065881725 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066008977 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066000207 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06641417 seconds)
  done (took 2.57278502 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075333862 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065571002 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088203562 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065597546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065711234 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064953642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069810446 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070420966 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064878106 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06547784 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.069947037 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065365046 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065104183 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065465468 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064760078 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06565819 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065001933 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065693612 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070040275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069745408 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069557129 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070345462 seconds)
  done (took 2.752186221 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073618758 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064569587 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.078119168 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066235365 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059741448 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.060299006 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.065518031 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064196761 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.064974187 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063822638 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064633675 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06002571 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066173553 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064839856 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066584787 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064671021 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063981275 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064893575 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064803869 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060116726 seconds)
  done (took 2.547574101 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085065838 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062864138 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062890018 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081963636 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062744404 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.062777571 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081365278 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.062749423 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.062988988 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084904242 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062976383 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062619556 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081916964 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081497271 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06310885 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081595882 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081840722 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081862192 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062888092 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062909356 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08467323 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.06286258 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081483662 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063068458 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062770338 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06306627 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062905048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081680699 seconds)
  done (took 3.243702436 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.061911944 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06256561 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.062831272 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.062651837 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062865284 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062732804 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.062557313 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062832566 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062700567 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062502069 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062794689 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062872722 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062571492 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062286667 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062609206 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062377584 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062728712 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062605139 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062712803 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062992456 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062494576 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062671196 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062812402 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063499769 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062769919 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062458846 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063113987 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062917881 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062208112 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062780601 seconds)
  done (took 3.131892004 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072298835 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072002628 seconds)
  done (took 1.397238833 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060764714 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076572802 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.060015536 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069956413 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068858477 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063045085 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069418369 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068949983 seconds)
  done (took 1.787623132 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.066683537 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.090888907 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.062269955 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.062872105 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.065620116 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120041521 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.076681656 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072137748 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074040679 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063346499 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.062477494 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.073958563 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.064673318 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073195952 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063216703 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069478569 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067837868 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0729454 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07342892 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060103426 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072451485 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062357024 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060132189 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06245334 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.061290241 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06768241 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076538792 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072888861 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069216919 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05897046 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079806057 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.060525384 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.061701845 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069953026 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.065402892 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.060009112 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096279216 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060825178 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.066049436 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.059741811 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072159795 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079680888 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073985852 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.07797688 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062003865 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062514553 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059922189 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.062414495 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063311365 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069170518 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060152716 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066953583 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059888762 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.062028141 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070226308 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060650678 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.06648394 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069550575 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07315931 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070569038 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072812281 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074891507 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068878501 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.069133588 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061050342 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078725012 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.062132221 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072764695 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074260238 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.061552916 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074024324 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060170907 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059016368 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059707705 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092380103 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.062297533 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.061042604 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059884721 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059895401 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.061899007 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069246938 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.066317028 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066762384 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063915187 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075530466 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069382536 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.06002058 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.067937463 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.078013691 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063182413 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.060618188 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.076296283 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063238631 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059967561 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077246198 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069507746 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.062247688 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.061326759 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063222167 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073634864 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061742065 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058714517 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068109245 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061734688 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.063082887 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.065272045 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067302003 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059493916 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069060591 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064985925 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.061728825 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.058260678 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06452679 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.061107883 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058318522 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068739475 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.059184321 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073790252 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065739076 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.072567367 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072957298 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06967046 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074253591 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058825416 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057963297 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075931748 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.199044929 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.06203989 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077569982 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.060703725 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.07131835 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061111044 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.062561327 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.070625393 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.059864355 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062995259 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060632422 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.066539209 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.062411668 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062936214 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.064490235 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068798199 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072593852 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.062728312 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069320244 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060919239 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076230452 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069877633 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.064863252 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065240751 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.061189527 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072504079 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067085195 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069876953 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059474176 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060437166 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.059507919 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069604719 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.068609854 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.061882046 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067756366 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.063334912 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.060258641 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059823566 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.060725932 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063389292 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064768325 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061433709 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067671636 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068852266 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.075068099 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069252562 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068813086 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.059554116 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.060060056 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064927854 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059999022 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064190629 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069387025 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075009446 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071908816 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080227074 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.060670712 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069500375 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062202175 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077032164 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072929304 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.061830923 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.066149566 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059466463 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062186738 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069525316 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072005573 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.074672535 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074703279 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065070424 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064690248 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060628876 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074628841 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060904072 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068384094 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069497193 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.065665924 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060480336 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062455975 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069317693 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064701851 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060800022 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.075412635 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.067416198 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059868917 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073813354 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060727984 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.071161173 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.06018734 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063518567 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06560888 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062651799 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069399549 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075210204 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059302183 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061125611 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07555188 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.062226927 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062122725 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067695664 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.074401104 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064302722 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067615974 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070345826 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069894629 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064111414 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068687227 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.061335348 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069148663 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.06384727 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071981314 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.060018997 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077244004 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059074913 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074974856 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.061013988 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070976399 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060679147 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069098094 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.06122724 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.076551489 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061756558 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.060812497 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070602072 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057898459 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068359022 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058859289 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.064129804 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065527824 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068243852 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.061514497 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.204698872 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062950883 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070367627 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06624297 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070034638 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.070331898 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065280299 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.060605879 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068717161 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07238977 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068878261 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.06324684 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062863523 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.061550497 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070162524 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062949825 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06237884 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068576392 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065276087 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066587571 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.062525341 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.063247961 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.062698194 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06909685 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070669566 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079354852 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068624905 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067845877 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069392656 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060634156 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076202532 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.060898076 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067783943 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059611164 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067554554 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069688888 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.061327672 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.080071375 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062502794 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068329803 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073218222 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068647124 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064153446 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078469313 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.064528791 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.06831331 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068275607 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064746188 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066206816 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.062503867 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068279429 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069754646 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070937568 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062211991 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067744043 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068815041 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062696879 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.069611468 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.062824025 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068101481 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.062626157 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059227019 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064708182 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071821086 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065101535 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065628904 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.061025914 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.059117587 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.061057389 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.068937002 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065353798 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068786067 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075317724 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.06003551 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.061625171 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06037464 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.06396817 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078477289 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070684819 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.06780109 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065094442 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062541622 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.062733021 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.062800752 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060843379 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.064482535 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059389789 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.060170342 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070933742 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.062614733 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064869515 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060804745 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.061753123 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069272145 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065886961 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060833877 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066609158 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.060414109 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064939831 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059592573 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06222893 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064466943 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059997409 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064076026 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070683857 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076096462 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066626277 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068403967 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060960272 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067425566 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074900332 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.068402759 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06090988 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068855682 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059036229 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.077701249 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.068762386 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068029876 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069768079 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061740674 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076550894 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064140865 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070036069 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07496158 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060613588 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066682109 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.058923673 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.073987024 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063966852 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059189705 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.06709768 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066560016 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06524049 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.211211536 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.061267814 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068312481 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066488416 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062928732 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.062749149 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.061736204 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067835136 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074563545 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.06094396 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065144705 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066767237 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067255236 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063853988 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071474534 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068101062 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06220075 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062931701 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064269804 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062060754 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073164386 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061351265 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.064958708 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064697231 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060318871 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.066895496 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076117787 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068288071 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069031137 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058947154 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058580574 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.076453786 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.062867568 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.064708692 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068599923 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069525477 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073240309 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069793086 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077472867 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061580076 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066391547 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073312141 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.061715428 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060400039 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06405974 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062246572 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069187659 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070220228 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067500647 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062778714 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066989033 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073271129 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.062048942 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065088162 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.06590694 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.061391623 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070462159 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067982736 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068775452 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06227462 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059958667 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06338858 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069149144 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067599317 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069255287 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061532554 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.068285402 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.074566739 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067941462 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.064475537 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.060487422 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.064357357 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069146685 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.066107898 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060513653 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065089187 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063845886 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.068754423 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.070084464 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064614159 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060452096 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077211425 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06854248 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.069677543 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.062594349 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.062805698 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060914399 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060397049 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071595617 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060121329 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.062253366 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064532954 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.062698385 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.078037171 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068499451 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075796449 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061938851 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064832964 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060281204 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069820616 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064989203 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.061146124 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070788284 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.05974642 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075960066 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.072846018 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.067209924 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06008093 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064703886 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068102663 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076950086 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069695986 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068548737 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063957215 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069344968 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061861107 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.07051035 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059588503 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.058687578 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069455406 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067962979 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072276801 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.059361713 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.069488955 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061939401 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066767317 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.06697277 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061535755 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060904139 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.061153003 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068500005 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.202072544 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069436503 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066344565 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078293601 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.062846911 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.0719213 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069882794 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.072486861 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074323364 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07351775 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069462318 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.06172074 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06805815 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069255394 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.062327323 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065393102 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.064831936 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.082488 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.063348465 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.062952294 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.075619936 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.068551273 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061332891 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068570852 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065639312 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.071531122 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.061696653 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.071121838 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.06566425 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061459034 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065066989 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065449838 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059519363 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.060694881 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.061051254 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070902397 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065312824 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06111206 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079740822 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.062710682 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068595396 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071726122 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067080772 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.06263116 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059594112 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.062342314 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072896476 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075332448 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063536098 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068214047 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062479556 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.06939437 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059343874 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068868083 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068550594 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086329239 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.060447668 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061118124 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074675841 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075885846 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065073514 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069719463 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069209233 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.062442686 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085051945 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069200058 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061722066 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071030001 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063197531 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059888245 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060048219 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.062265891 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.072160396 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.060386808 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063484603 seconds)
  done (took 41.532932093 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098339958 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061847479 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060808909 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060890432 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072653158 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061431191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060592889 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061515806 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.061471965 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064065036 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.060643942 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060953585 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072879979 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075127035 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071535486 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064924899 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060190148 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061900073 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.060302097 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061121134 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071571985 seconds)
  done (took 2.749333996 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066400291 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075491845 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.073081656 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078349908 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069129255 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065297541 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072584968 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065392974 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073124528 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07090588 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073751575 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065330078 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070763983 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.070805265 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070489924 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065505339 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073239178 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069265176 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.065129309 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07314769 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065667236 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.072898309 seconds)
  done (took 2.885878096 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061210334 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.061116066 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069479745 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06030314 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059984524 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064685122 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059808942 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064325303 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063968875 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064374829 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068414641 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.061123596 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060111112 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065333029 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059920675 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.061170152 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.10404243 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.061455474 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.061444999 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.06000053 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063267824 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069606203 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059984754 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060610927 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.06716532 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064126905 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.060369358 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.06296587 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060842997 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064395411 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061527941 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059896867 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068417714 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067948888 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063895281 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064251562 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.062412535 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.061206256 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060387935 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059732061 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067878486 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.061574635 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.060882648 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.061267834 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068873575 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.060197148 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059629593 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068612644 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059975796 seconds)
  done (took 4.467883288 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.07115529 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111404325 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066442144 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09176489 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074592372 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.067827953 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.066284538 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092671462 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.061443178 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.062750494 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.07546888 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.076013018 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063813803 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065279113 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.067708802 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063947435 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06451521 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062590387 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.066702824 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.063380975 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067093415 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067511547 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074188451 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075493763 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06465909 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062634304 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062955011 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.064832722 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074345081 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067065718 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065094641 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066217301 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.07518983 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068304223 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062826146 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062925196 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.076182377 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063960411 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.063574097 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061373844 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063109464 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.065051913 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.067761079 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075892071 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063899537 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068309103 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.063710143 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061341037 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075056608 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.063722775 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.06850092 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.075928095 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065461032 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063993857 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065658251 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075166445 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063990279 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.062198964 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.063780574 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07434056 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.061865814 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.064880013 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.075359913 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063070736 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.06779741 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.075638371 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068230733 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065036299 seconds)
  done (took 6.156517379 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069649683 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.090887303 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072258128 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072280941 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070804942 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071042323 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071937759 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071564152 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071597209 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072308651 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07194564 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111194228 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067394358 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076728088 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071349444 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071412126 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071452206 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071491886 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071611834 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071438083 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07165645 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072314121 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07233075 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072221423 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074483092 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067406037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071198102 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071660534 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07226149 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071485143 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.075168565 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071818561 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071630388 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071958635 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074532797 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071266059 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061806273 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071579681 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071695162 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071837172 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067457988 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072410425 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07144958 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067575733 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071690275 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071474881 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072782037 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.075038163 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080001291 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072672819 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072337927 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072653318 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071581827 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071626495 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072906762 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080354989 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072452897 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072596079 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07193069 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072460459 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072689945 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.080422467 seconds)
  done (took 5.902048851 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075046205 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067057004 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078958972 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059229254 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060584672 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069999037 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060416799 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.060245439 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071509724 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068370984 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07093295 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070603897 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073147562 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070599439 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070644137 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072982888 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070601795 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070842226 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068602516 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070203862 seconds)
  done (took 2.751883242 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.072717388 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078331135 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066534836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070694231 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066182707 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.07058557 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064454358 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065643386 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065116718 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065086902 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072560662 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.070594863 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065528937 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069646993 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070910953 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070517356 seconds)
  done (took 2.463785959 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066238793 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.06744165 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.06798817 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061005238 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064325245 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061523396 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061599881 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060967632 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.061079359 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075482449 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.061550401 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073490752 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.061920163 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.060414017 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.061297126 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06735256 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061283486 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.061589763 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.061573986 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.067134905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068443649 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06266488 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065432039 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.061848143 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06704344 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.068881253 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06372039 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065762266 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06218883 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.06257775 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067398804 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069012022 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.061792095 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062570979 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.060848181 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06212657 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06160403 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062363298 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068158783 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062260814 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06013109 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066431443 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062218825 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.062668664 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060803756 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.062390223 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.060781752 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067472356 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061897806 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06720026 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.06185477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.064025704 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062469441 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.068477128 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063144326 seconds)
  done (took 4.882746119 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.074943947 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06547647 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059470956 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059010219 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064830508 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066496614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0658642 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065375284 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066642457 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.060419224 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066869591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06565394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067141575 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06635315 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066612636 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066267407 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060160722 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.065809313 seconds)
  done (took 2.544509014 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.06999666 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064553715 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.06977721 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064974551 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063891132 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063962044 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059707567 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.05956132 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060534106 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065334531 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065348352 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06480881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060749063 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064684323 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065593059 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06560762 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064931936 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061054703 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065386571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.060769032 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.065400921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061032903 seconds)
  done (took 2.77455594 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.088354305 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084799562 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.125485047 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079638981 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.088036401 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071318798 seconds)
  done (took 1.905624266 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089929875 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102336627 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065751383 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065662048 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075293207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069085658 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069198701 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069459779 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076404294 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073791773 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069400236 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076171871 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076402327 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071299735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076100699 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078835801 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069329373 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069307088 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065449839 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077558016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067874253 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073828181 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067568818 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067335953 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067433576 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069710415 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076733676 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071835251 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06774723 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073990222 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077156334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068356373 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076071403 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077364584 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065984436 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076023062 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0696188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079055077 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076792285 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071439412 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065928591 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075922074 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076215027 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071447856 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079387902 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069595216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071497589 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06986929 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069777733 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08189712 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076493464 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071913265 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076093018 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079438331 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079605018 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081581851 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074064002 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071603972 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07629057 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074118429 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071600603 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076113897 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071429443 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074454848 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079522785 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071438174 seconds)
  done (took 6.239592049 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097474136 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066997663 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070822712 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074663179 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071830415 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06993377 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06986499 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069931841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070072462 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066115499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104637482 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069793068 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072590713 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072341319 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069644017 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069505085 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070074637 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071884034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06657408 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081551782 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069607424 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071378828 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07195102 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071818538 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074462795 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079158458 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069393645 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069546651 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068922089 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069902616 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071376477 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069703797 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07163014 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066125621 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071334189 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069577895 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069222634 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071238195 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069787962 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075376173 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071061038 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077820091 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069430515 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069742738 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0738864 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069316797 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069231056 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066297951 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069556315 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066310789 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074368107 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074231309 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074704488 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072010911 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069707117 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069807241 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069496658 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069454783 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069407076 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07895223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071457053 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069253248 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081520052 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069238258 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069145454 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071467445 seconds)
  done (took 6.149481106 seconds)
done (took 126.512225462 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207701149 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.1823327 seconds)
  done (took 1.746857715 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.072959327 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095936007 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074613628 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133191312 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.069446627 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103681736 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10277379 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.073783484 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069204639 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.071309188 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071040327 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073738223 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13734269 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069539297 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069248584 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.07200933 seconds)
  done (took 2.736056599 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104697807 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.181654125 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.112995734 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068619223 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105209039 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074411186 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067215796 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077831699 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07128142 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.07090608 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074586495 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072619739 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070525359 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072695754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070762923 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074138535 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070690545 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074383607 seconds)
  done (took 2.896200247 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.092651542 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083742985 seconds)
  done (took 1.559681567 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154352444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103577937 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.142650992 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.322437106 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.13434284 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.127617265 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130274596 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125500505 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.10899756 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122568448 seconds)
  done (took 2.851041538 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.101710248 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.176936552 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30820204 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120759402 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07568992 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.102682681 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121264098 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.079758995 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077933933 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077606962 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077652412 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075040808 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095645684 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07445556 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074974058 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077760835 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099147512 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073709027 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073759867 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.0738518 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098670142 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067920392 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074369101 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073435873 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07604216 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07622967 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069119419 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067462406 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073788814 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073696384 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076439001 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.097664566 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076185717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.100402204 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072104995 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10137168 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.072675274 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072489904 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073827198 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071967567 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075395781 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075439391 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076907196 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.074824644 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06874371 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.072689485 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.069193997 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067488262 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077125652 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068927988 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077073688 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076086168 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.099968496 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069206979 seconds)
  done (took 6.063017666 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107085816 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105226987 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068651614 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112778647 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103089137 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068474053 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103595947 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097529192 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107144161 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067467571 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066858987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067389656 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.075557735 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077785447 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114825054 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106552421 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069643343 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067575789 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105437689 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10611277 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067038735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099277322 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097830102 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105248053 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066156457 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067573286 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066237032 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067044285 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072723245 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.074162083 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066783337 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075066261 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.079932061 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074258116 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065902673 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.066173216 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066517954 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.075924675 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074873142 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074787912 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074018177 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065603771 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066095629 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066745759 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067267976 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065820226 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073736487 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074551082 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0737166 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066964306 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066778223 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066853757 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066667785 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075004588 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072867612 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.075228721 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075178765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066164738 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066961957 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069062244 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077789052 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078164446 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07745619 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069274646 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077843664 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068150276 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079988991 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081007564 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06626135 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067311601 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066758584 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066186104 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066809026 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.073126161 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073867005 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066544197 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066005 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065793787 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075276543 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073323141 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066159719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072572993 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065624978 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06625977 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066874564 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067002009 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072993706 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074755631 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066911387 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065953498 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06614654 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066541566 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066020184 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07341549 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073939397 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07419512 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07344778 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066892122 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073600307 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073290072 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066768699 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.07324961 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065454242 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065465406 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065409633 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072542198 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.07245257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.075822721 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067242515 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06660609 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07357328 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.209900533 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067959151 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.074725282 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076516086 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.075584435 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066777816 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077641172 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067310128 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076101213 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067301301 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076198483 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069612937 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074638121 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06701592 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066431864 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066709204 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07525564 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068292203 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068807152 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069345988 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068667435 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.076680585 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079688039 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067811589 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073919374 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074097024 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067427267 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075237808 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068757549 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077124781 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068430131 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06894547 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068180618 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079192144 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069109216 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068791932 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068273223 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078257539 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068978782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.07830454 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.074803545 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067953255 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08172961 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076466174 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.073302258 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076228819 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067653354 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066888971 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066676626 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066799759 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0732887 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07557192 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069051231 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068602754 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075223828 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.078692178 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067854431 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.074440889 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073948983 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.07367529 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066746983 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066747665 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076874611 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075806458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073873085 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073661438 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074435123 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066575338 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073247519 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074069107 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066993862 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080170552 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068071167 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.079608794 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076713299 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073917808 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07464894 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075609338 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07584321 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076020544 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077591235 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066042025 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066001539 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07354745 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.066291759 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066399438 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073437213 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066960027 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.067097728 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.079150845 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066438196 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.076057841 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065848889 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074851038 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066240943 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067948625 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078219242 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066112216 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066834754 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073536448 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065961343 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072731405 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075453243 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.072714087 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065639437 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066760618 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.072465213 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07240329 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064809513 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064966433 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065344721 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071034913 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07069151 seconds)
  done (took 17.936897919 seconds)
done (took 37.188454773 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207536796 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.156825498 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190960696 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112578331 seconds)
  done (took 2.15665279 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.094615238 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.096711329 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.07617632 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.063208929 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.081500942 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.063101808 seconds)
  done (took 1.901669152 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274986033 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.191387028 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173071406 seconds)
  done (took 2.06174987 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.216816437 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200564016 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.478023204 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.291977022 seconds)
  done (took 2.716364284 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.131838654 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.079008425 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061531287 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072577121 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.109752361 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.14166812 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.088259538 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.112585817 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075233155 seconds)
  done (took 2.357923213 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.133184854 seconds)
done (took 12.781221054 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.290140738 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.0989093 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067036547 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.171649834 seconds)
    (5/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074395391 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.220045397 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.196915373 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072796763 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084016764 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075021187 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.117584149 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.084727246 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.192907914 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071974937 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.1878032 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.148992081 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071725033 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.147828854 seconds)
    (19/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.170876841 seconds)
    (20/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.184107418 seconds)
    (21/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.224452266 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.169974397 seconds)
    (23/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.077443471 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074286536 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.455762299 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.175597444 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.187366918 seconds)
    (28/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.073066093 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.178571553 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077117225 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.107449327 seconds)
    (32/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.202829744 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073342498 seconds)
    (34/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.201507943 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.077440638 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067182759 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.063083229 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.136509704 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.080460087 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072080181 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.221108894 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124811365 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.063328302 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072946417 seconds)
    (45/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.144587274 seconds)
    (46/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.082774718 seconds)
    (47/309) benchmarking ("sort", Int8, false)...
    done (took 0.170997669 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07607379 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.223896311 seconds)
    (50/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.074399234 seconds)
    (51/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.065365146 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.173400929 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.115057926 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078893953 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 0.148842971 seconds)
    (56/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081906894 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072762676 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.066022693 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074626836 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072083249 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077791304 seconds)
    (62/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.137898837 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.064067824 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064716173 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.075756521 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.172369128 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08542256 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.190419371 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.17436186 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.064447994 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.166956059 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.064402456 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073593593 seconds)
    (74/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.167857065 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071325358 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.143467954 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06304952 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225186202 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.063892189 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.169972139 seconds)
    (81/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.292853974 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076450219 seconds)
    (83/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.076311131 seconds)
    (84/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.130901748 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.143303448 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077458397 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088575097 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064884061 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.190267242 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124797473 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161497382 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09137239 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.160545978 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.126142008 seconds)
    (95/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076283348 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077044797 seconds)
    (97/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066689996 seconds)
    (98/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.150468074 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.215823393 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194704693 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.064283098 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.064490108 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.210780077 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09305333 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065079638 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.089914787 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.064898153 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073835467 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.066366201 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066701562 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.072168194 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.086410465 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068109233 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070690466 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.067426028 seconds)
    (116/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.0734973 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089984796 seconds)
    (118/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080506095 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.083444717 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06436255 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.078478978 seconds)
    (122/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.066651044 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.128704437 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.072656244 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094866565 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076789436 seconds)
    (127/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.06471253 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073511597 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.122642959 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.121147647 seconds)
    (131/309) benchmarking ("sort", Float64, false)...
    done (took 0.134248039 seconds)
    (132/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.20274175 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088925795 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.203932556 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.065435932 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.075203917 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.164058254 seconds)
    (138/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.087095458 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.191561295 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065285672 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065397545 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.187860699 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144482454 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075899824 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063177524 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064580759 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.069148278 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076975732 seconds)
    (149/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142426866 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076002035 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115404691 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072128872 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07303259 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071626433 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.151650211 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064524878 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.1713562 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 0.134957202 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.07985795 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072447196 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065544408 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066236185 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137069795 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167462055 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.064909834 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.062048906 seconds)
    (167/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.140501239 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063650827 seconds)
    (169/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.069927792 seconds)
    (170/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.062808542 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070116 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063471786 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071552575 seconds)
    (174/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.197501599 seconds)
    (175/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.069984875 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063833628 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.063268075 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.062096183 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070140166 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.185952261 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063038927 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146257131 seconds)
    (183/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.065545236 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062083058 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.06174461 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.062952933 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071422963 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064973523 seconds)
    (189/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.313018239 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.076427591 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065607157 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078872712 seconds)
    (193/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.16560509 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.066588389 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.127419522 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066217686 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065459475 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064056078 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180942884 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066093231 seconds)
    (201/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.064241437 seconds)
    (202/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.068991143 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066282752 seconds)
    (204/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.065142138 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075445217 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064361849 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090653399 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.07557708 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084083969 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.064660065 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.063644207 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.06306448 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.085580174 seconds)
    (214/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062455716 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168169804 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06475947 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.108993581 seconds)
    (218/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.064230967 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070661299 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.064917182 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.071989664 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063793468 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071379992 seconds)
    (224/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06617719 seconds)
    (225/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.067494906 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065272371 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07693867 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077222579 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064562242 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146328575 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087780364 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.08629853 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072189502 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069643976 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088657127 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065579291 seconds)
    (237/309) benchmarking ("sort", BigInt, false)...
    done (took 0.251158893 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073146528 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.092432122 seconds)
    (240/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063241021 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.064629137 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.064598368 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063373817 seconds)
    (244/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.063720427 seconds)
    (245/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094290249 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.065768109 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066256064 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090459533 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.076816606 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.066260624 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.066302026 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066224921 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.062461555 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157759733 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063255167 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.06436274 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.145946443 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.062077947 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.087192019 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063208048 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063050713 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071397846 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063520887 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063776414 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150984963 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06427565 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.066056136 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066724596 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.131622942 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08020849 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.0728026 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067648773 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065423234 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064127477 seconds)
    (275/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091663848 seconds)
    (276/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064414854 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.062705219 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.13174337 seconds)
    (279/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065846888 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087133329 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076707247 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066268946 seconds)
    (283/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.06510823 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064564502 seconds)
    (285/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.067202341 seconds)
    (286/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.073103348 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066281234 seconds)
    (288/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067766982 seconds)
    (289/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065279322 seconds)
    (290/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.062358839 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070493198 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06271083 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087598194 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.062698304 seconds)
    (295/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.067559352 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062843928 seconds)
    (297/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06410346 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074345181 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.062018689 seconds)
    (300/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062512678 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.063505695 seconds)
    (302/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.064632716 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071707118 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.176911099 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169230944 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.117961419 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062718354 seconds)
    (308/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069357314 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062869725 seconds)
  done (took 32.788287811 seconds)
done (took 34.230919508 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085114524 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088860676 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07113046 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083503518 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079659227 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.094121404 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.071469334 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076534339 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.078782601 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.077553158 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077143899 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070550272 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.072847614 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.072990935 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.070588951 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086617358 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.078059183 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071818535 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072361587 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062775833 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072154411 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.063910014 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062992478 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.071147049 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074954403 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070389674 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072943572 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073106612 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.063749181 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063978034 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068299314 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073048912 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.063656179 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075959059 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071537286 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072297572 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077005022 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076441063 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.062626621 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063585399 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074346979 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.063391103 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071840436 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.069971808 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069030389 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070778911 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072186669 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075666214 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089628992 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069940254 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076431706 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.07689288 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076461253 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069194123 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069413716 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072174344 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071078493 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088941837 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074391655 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069919207 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075512096 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074937508 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072122796 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073996056 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.074028445 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076725999 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07782442 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071164363 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074388975 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.07095034 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.063248249 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072344242 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068169432 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.063387384 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07474048 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.07711127 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062271817 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068233754 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.07174845 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071803867 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063136677 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068045416 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062480588 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068568556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067477722 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070043033 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068399408 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.070740561 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062487201 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072061561 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071038852 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071151835 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062544706 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076414008 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06316998 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070292317 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.064447267 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064460742 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062244059 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.068589394 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.063040219 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067410866 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071405981 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062385419 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.06841144 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077078522 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.063542539 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071043039 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062705583 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063198057 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074137058 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074508233 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.063803057 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067745941 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062594433 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069226343 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06259108 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065047449 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065192112 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065460055 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070021704 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065214478 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068864798 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.06881575 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.075614355 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063141949 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.068266199 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067491236 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063248609 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069658008 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064010955 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.063272346 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061970278 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075591443 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066686306 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.062714152 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067842516 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066561954 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071046297 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.061450087 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071366957 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.068593419 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.207648795 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071537977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063121938 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075908866 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068362061 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068138989 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.063175795 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063706257 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.062337554 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06368311 seconds)
done (took 12.400591271 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.065041568 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.093328531 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072450279 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.080501694 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076422302 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065317624 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068581461 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081776324 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067071667 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.0839989 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087052387 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084752075 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.091325359 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062890106 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064613353 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.06507242 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062902571 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.07093407 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.080120195 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086384571 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.09453597 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064413107 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.075126684 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.081779646 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.07701548 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082832395 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06702239 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.065572374 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066920273 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.082213308 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088422563 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063918983 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065262053 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078466176 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.077662256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071503469 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.064909855 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068401738 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066519902 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06616229 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067613173 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.080406714 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068427836 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068514488 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.06465534 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.065205792 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064688543 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070364225 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.077629928 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068200768 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.07206629 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076636544 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065938621 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.063826172 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.062447527 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068313538 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063843043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064729346 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.064576319 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.063815435 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065651525 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.068543482 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.06667811 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.066677753 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069627145 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.06939277 seconds)
  done (took 6.243898435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.082682221 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094042482 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08186048 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081482885 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063850732 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.064998155 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.064656356 seconds)
  done (took 2.084590866 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066065317 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077371337 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080643739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080812289 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.07314971 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.082845388 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.065166935 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.094982315 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.063786504 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077364864 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110997542 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082135021 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067696398 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075704722 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064840641 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.07207869 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.06492119 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073532682 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072655175 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080748644 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068608476 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09212291 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078574043 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065088596 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085510671 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069087179 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063911192 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065160583 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066130483 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065998574 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065830493 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103879263 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.06881368 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078943013 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066115712 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.064218884 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070591046 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068081078 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.06739193 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071301048 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070349016 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065835162 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.0633846 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06571952 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.068016246 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.070866322 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064955142 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068043241 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.067159659 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.078686451 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064063391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068897911 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067734751 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069965562 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070529886 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069108642 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.072874397 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066081294 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076699783 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.072386921 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066070168 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.074419096 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.109830644 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.072416574 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.074939165 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.070811983 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.070815741 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.071319174 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065598806 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066428414 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066285243 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072764585 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.06425805 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06660427 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067961327 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.066324068 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068841067 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081369128 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081181194 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077294623 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066571302 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065938024 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068652406 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.082352431 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.0702718 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066148842 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068970285 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.064355875 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069728939 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067599007 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072635971 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.067461834 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.074685297 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068609326 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070124087 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077973729 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064469299 seconds)
  done (took 8.524752945 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067614058 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066046821 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067398959 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.066123801 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065777244 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.066783013 seconds)
  done (took 1.98206655 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089259704 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065327625 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080007613 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.067540043 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103209081 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.07471738 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.075100298 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076319622 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080594164 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080558292 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.074867283 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.077534585 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.07439918 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.068915323 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.074411581 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068181613 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.074133228 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.070983939 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079539549 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068208878 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081131059 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.068750049 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06895771 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.079170405 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069970622 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.067855137 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067473167 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079746184 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078586652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07472183 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.066624297 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.067826921 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073150053 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07679977 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07267603 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072869256 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064828729 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070862078 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067176517 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068108405 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.074532345 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067025565 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067325142 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070852709 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073987153 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073111042 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070911359 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069726059 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.074168252 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.072808123 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072586657 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.067685119 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069948441 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072876204 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075213104 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07604675 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.072985822 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.074622401 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.068610074 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075287544 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.066894946 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07035646 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07579612 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069776162 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.071093965 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.072876164 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075138936 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069255049 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06885983 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067261481 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.072797783 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.06665343 seconds)
  done (took 6.790547469 seconds)
done (took 27.152837531 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.946448865 seconds)
  done (took 2.471371146 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.565980455 seconds)
  done (took 2.130648102 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.720704501 seconds)
  done (took 8.279766648 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.297990077 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.338061904 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.725167155 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131197734 seconds)
  done (took 3.080262198 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.729154848 seconds)
  done (took 2.300258221 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23469839 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223256346 seconds)
  done (took 2.038523628 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.348720554 seconds)
  done (took 1.911828706 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.102566609 seconds)
  done (took 2.658834762 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.225417045 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157880563 seconds)
  done (took 1.953236828 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473758792 seconds)
  done (took 2.035084399 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.353589219 seconds)
  done (took 5.924327571 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.231972044 seconds)
  done (took 1.842875583 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.234838837 seconds)
  done (took 1.803657147 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.71564627 seconds)
  done (took 3.285463043 seconds)
done (took 43.288657721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081055446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084224164 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.083876888 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079198071 seconds)
  done (took 1.876165528 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072002674 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068018096 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.071146311 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071758156 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069850428 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070807147 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.0709358 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067416893 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069500506 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.0677418 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.065854985 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067643895 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070537608 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067278748 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070362927 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071390251 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067283785 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067644154 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.071380459 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067320676 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070588127 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.067323831 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066154236 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06755871 seconds)
  done (took 3.22733556 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.076672261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070841164 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073524882 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069603123 seconds)
  done (took 1.868363284 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.073216302 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083245699 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083946824 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.090966657 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072890193 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.073621279 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080778971 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081414438 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.063504373 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084766446 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.065862126 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.064449851 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.064663097 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.084970971 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080767232 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061104291 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062106208 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073451206 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.072935659 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.074927812 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.065696556 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.063425637 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.073149402 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072484536 seconds)
  done (took 3.345387208 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07717397 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.063869645 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077162561 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090242242 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09206833 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.063654327 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077718345 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092415871 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125184958 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063622174 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06940535 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063449272 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10504803 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.06419043 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07852522 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10574517 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.108387683 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067118987 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096665375 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063633151 seconds)
  done (took 3.231970455 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075623325 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067585614 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06886041 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064493267 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076629252 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07256373 seconds)
  done (took 2.013951613 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.066801476 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066399837 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.065985815 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065156088 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.069866775 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066016948 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.064132894 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06622952 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.065622842 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.065220926 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.064815565 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064158879 seconds)
  done (took 2.370053224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.160680162 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067548475 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.067967767 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064453112 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.06949048 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.064513725 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079705175 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069420353 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082863817 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.064975041 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.064509309 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.066980769 seconds)
  done (took 2.503789567 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094900854 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093009073 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132496027 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1111904 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090794827 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.089260918 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.145580784 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133386196 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109785402 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.068011705 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081439738 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104674831 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098300623 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135601649 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.108655509 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.07055906 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.098704781 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080026545 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103478684 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110705054 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108013793 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110398514 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.08740692 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100395332 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102908654 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.112740452 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.069275218 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.068646701 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135485901 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.096311834 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.08886598 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091338248 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.1088405 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.066702814 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083590136 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.097500456 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083363098 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101591359 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.0853284 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09424758 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076305564 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.124817601 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099280034 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104492977 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.120393269 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091582731 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104018955 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.09876762 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081848316 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.113869391 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.094714607 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090201414 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074326333 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.153461724 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.089811513 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103642999 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110033267 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079428006 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086173874 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.090874451 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.12007143 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.245047565 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109391431 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103248634 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.087453632 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090573669 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133098628 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084007588 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102021699 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129227671 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.089826718 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074434194 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.090090539 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068506246 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.096463136 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100755756 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09386716 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110069075 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075741151 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119971182 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110439214 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071270937 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.111803743 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091330975 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.15471992 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097371221 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101402948 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090936388 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.144184724 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084215846 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.078723711 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094597138 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.13494763 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089498443 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.096048193 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1250298 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089127172 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081927495 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073408221 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083683589 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093621122 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109701948 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098086304 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088407085 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081210017 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088632893 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.073731673 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079678305 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.096061911 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087744142 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117319134 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102986263 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113399142 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.076382186 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10689726 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.091706199 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136945131 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.12073627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.086184132 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.113162515 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136359682 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108654993 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084910879 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.102229303 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.113874077 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106019221 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.23813177 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.138282683 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.115527515 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087919279 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.089787032 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092578206 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.105810479 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152614617 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089824483 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109041217 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.139855197 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.107098886 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093552157 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082860607 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089743113 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.107768422 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.14022682 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.091659595 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069905092 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095387046 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131535483 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076180583 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0969502 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.089901954 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.083380615 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.08044101 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.066134845 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098628484 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.135061364 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.112011133 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10517584 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.09587483 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07033882 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100026698 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097198608 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.149951246 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.11564582 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098556799 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.091715871 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100318584 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078614064 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.132084522 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.130333475 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092885001 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09131781 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.128656016 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.092287689 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.104797629 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113067621 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.108477419 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.098136415 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.142182035 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121293291 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.118328049 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105395973 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124793187 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.079349353 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106423456 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.227822655 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105764136 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.078758719 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105447463 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078151131 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.112245658 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.081306824 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.103991109 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.070555256 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075869063 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.108554546 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090497609 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087169904 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.135983835 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127661333 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.082928143 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.0952256 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100185589 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098149779 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106771782 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.086825885 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093206524 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077366624 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.080003135 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091634814 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096194646 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104178806 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077250267 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073410609 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.144585771 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104425206 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092173021 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090954471 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.115677594 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082697086 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081656019 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105128865 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.138120387 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.119013308 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.079283522 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.092515303 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068070081 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.082927774 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.075201307 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110753493 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073329162 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.1138074 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.066515348 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.130925844 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089177693 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102333231 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092970619 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12452317 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084540649 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124936328 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087739906 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109848758 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095027391 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.090116732 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.106473492 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.091377084 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100331033 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.106461268 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088391988 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091354706 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.125136716 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109425099 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117671556 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109962783 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.136186354 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.265357002 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074796619 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105703761 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093270164 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155741021 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.101135652 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084929802 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089302372 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106683647 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083381452 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143476347 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086476894 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.080659253 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.117297987 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.091440592 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088675909 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.076163079 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102920304 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086310653 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112276797 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.095962811 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.092749281 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.106669858 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108654222 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086370777 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.086109679 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125692432 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.128991735 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.101987971 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088146077 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087877147 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100053824 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.093462519 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.111258132 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080576164 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074844992 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.066059585 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.070414876 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.118829085 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105672742 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.094679494 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09382729 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102462901 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069775576 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087355327 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091204551 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.082262079 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088857342 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.112050545 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.105108811 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.131533902 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.104519941 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095091084 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143047109 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132106489 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090556387 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094299359 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101041077 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075659818 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.155780963 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117772816 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.07799208 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085886594 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.077586158 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085392502 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.068793746 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103161643 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102729101 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.073907685 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.2544797 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096225448 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.120110869 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093430088 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078867927 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082339367 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074589143 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074284492 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.099264614 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076422118 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0773318 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126875328 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104455883 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108858898 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07965354 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074650952 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.13408789 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.067512725 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.134917504 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.082763796 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108970978 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.079636635 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078275089 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09051461 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103945155 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.108967577 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.118991562 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070810322 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.103544443 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153250081 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075786285 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074321236 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073356339 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114743474 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090874476 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153573288 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092419713 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091225469 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078177845 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.126457192 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104499889 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081741132 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125255522 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078751374 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070356231 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081770953 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.108501817 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.070230143 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.073663231 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112071226 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.623485798 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090762951 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075496389 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084663073 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126163378 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081773683 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110617429 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.117506333 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107691494 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.180924148 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073762403 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092666579 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.106070118 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098102618 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08981159 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0781929 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.08602946 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08660675 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.07773063 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.260675368 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.081410951 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088861684 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.080059818 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107227645 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.134111417 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089412204 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.102318257 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091221529 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090235664 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102914643 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110984944 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106640505 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.088819567 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090986957 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.109585926 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084401737 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080986796 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103497196 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.078374169 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078857659 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.117089589 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.088539448 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.094383484 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108773999 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.086823996 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.114587121 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.124142149 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11744146 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.100772632 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079724134 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08763797 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.090405673 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074495626 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081086612 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077018502 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.071010674 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.112334633 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089809989 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083026167 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.10392921 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109426967 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.103563058 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111574393 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093161071 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098859648 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.104817283 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.131959605 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.157423107 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102650888 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.122149496 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136507557 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078090039 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077063511 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.079745462 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.136904824 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.081871046 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093998487 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.236027937 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.078955076 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.082371832 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095145665 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110913409 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083003221 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081874251 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098219985 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112008107 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082770977 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080102617 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092951287 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.260261885 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.132216534 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.089478675 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.076446317 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.111402865 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103309793 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124988005 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.072416969 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081668788 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.13088474 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087118011 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102430504 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078719566 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119422217 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.135203947 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074598504 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.090259131 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071992457 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088443677 seconds)
  done (took 50.898128064 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.152979384 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.146486192 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.080377028 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096090575 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.191815567 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.208185031 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.117441745 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.093441448 seconds)
  done (took 2.793656555 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.065734501 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.080772657 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101120122 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082002355 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065505318 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066121986 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198296356 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080628848 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064440249 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104953474 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074039933 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.066499646 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.36361788 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066119318 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067124861 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.07589345 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067820099 seconds)
  done (took 3.383820659 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36043919 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.59797904 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.325431308 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072728413 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.98464943 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.089896805 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.273858667 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138130721 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.080088491 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.557388589 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.374120637 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130470037 seconds)
  done (took 18.687882559 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073743338 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072759181 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077009151 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076346433 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072474931 seconds)
  done (took 2.061190097 seconds)
done (took 99.871416638 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080393376 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.169072163 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066984148 seconds)
  done (took 1.967671079 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081313589 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.079943774 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079964673 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077288629 seconds)
  done (took 2.024519727 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.072393942 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.07417928 seconds)
  done (took 1.843141036 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243226372 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.162713881 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.089637465 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081120848 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078546963 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079553333 seconds)
  done (took 1.945470802 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070313392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.070157862 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070010738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070920259 seconds)
  done (took 1.976722637 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065783237 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.064619158 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067525945 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.069708069 seconds)
  done (took 1.961223233 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081954676 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082743484 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.076750561 seconds)
  done (took 1.935632369 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103338148 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093799159 seconds)
  done (took 1.890044088 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078450163 seconds)
  done (took 1.769426424 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.087123935 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.093261181 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.150525288 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109581737 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.149033868 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.132179051 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.076809461 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.077289595 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072700786 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070662256 seconds)
  done (took 2.711056831 seconds)
done (took 22.290954477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07669362 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370120052 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357542634 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084101143 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685792838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.354334885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.990448298 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088288686 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096880786 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066131618 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.082526004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.668569498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980348525 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.323734573 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966699673 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326915645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646652122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.066519057 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065450421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066235282 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973603678 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065582345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06621651 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067080907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648306258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371157981 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067004923 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326956637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066742369 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069141211 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354408522 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068395549 seconds)
  done (took 16.178196698 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068175172 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.119021369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071410866 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081443857 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.068855015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067952773 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069527711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.066657634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10765642 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066972895 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083427356 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065931002 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070247915 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06868676 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086476104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066816439 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.0688488 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067819848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067145899 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068278066 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.084944979 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066150196 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0678273 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070378704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067654997 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.07978167 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068206932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066822673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067219616 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069564209 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070579513 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068607986 seconds)
  done (took 4.056741201 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121249629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124853432 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071671621 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10613997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117733945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068992465 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149656797 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089321143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11221854 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067132677 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083204791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066144231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102306438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07127735 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088734465 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067010559 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068263772 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067643404 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066726346 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067664712 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085685759 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066508669 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067797734 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067676511 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068224599 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081705726 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068231278 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067186602 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067792054 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069921245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070937093 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068174644 seconds)
  done (took 4.342193386 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068266893 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070339879 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080291005 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082132915 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067772951 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068794994 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.070493583 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.067155034 seconds)
  done (took 2.292297361 seconds)
done (took 28.577135389 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.076706886 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066272118 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070064352 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086900833 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073847032 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.071302674 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065351966 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074095854 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071206732 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071154719 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.072240231 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067428242 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069786055 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06506445 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071574885 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066635006 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.074467395 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071264134 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.072384788 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.073076853 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068337649 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070266378 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073727828 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.069898213 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070125331 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.072573252 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076358605 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072054526 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.067390077 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069473486 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.068972198 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077062075 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072022928 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072300385 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066672619 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066548733 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071299372 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069187186 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.073390174 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075593019 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068748333 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076273217 seconds)
  done (took 4.683328568 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083452781 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089232468 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.081540661 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08060594 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.099804441 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081432754 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085555974 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077088801 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.075732804 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084491946 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.071858317 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.079295131 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077238889 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070769965 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076320149 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073098089 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078832441 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.073739014 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079268693 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079199394 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.088430713 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072848129 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080160984 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080741541 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074812896 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.080909436 seconds)
  done (took 3.799934189 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070841124 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085673429 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090477774 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.145912196 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110040506 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082730222 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081900911 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096821538 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.100474548 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068498857 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072193929 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.097065754 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095584461 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074916067 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.108343139 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086214308 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079491958 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069852967 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075300059 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.100917347 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090139326 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086705471 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.099922485 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.08695288 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067418772 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076568547 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074510924 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081134656 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074360648 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080088072 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071365793 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070079811 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066295737 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077022788 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070298521 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06395761 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08741187 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077909574 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079338451 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105464024 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.074944106 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.066825771 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094407152 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.131045788 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067495321 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069637313 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069346079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079426133 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068654665 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.096419418 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081752499 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066586598 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083794128 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06700522 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.06822715 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084270475 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069079487 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069248011 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078029915 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.071502015 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08585412 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070375835 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085378176 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066125816 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076294546 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066781054 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067354987 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.064407194 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.099251211 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072158849 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116383363 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066618599 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.063580104 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078052243 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076398999 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07179514 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065187736 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083655968 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077772091 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071283608 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078823651 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070946039 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070837803 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101764068 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.065803152 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.064004056 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063904554 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068176959 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068588023 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06619707 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078572454 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065028935 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068683825 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080595528 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.065391997 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066223068 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068328496 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067247905 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.064934721 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077756368 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069127115 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.066729504 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077511643 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066243743 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.068683369 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079755198 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073074266 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.065276517 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.066916925 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.067942563 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067260326 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069488844 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.06901051 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.067155372 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.071376122 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072355625 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071567363 seconds)
  done (took 10.799173897 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.16051297 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.151375357 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067872337 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144524879 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074036115 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.070896031 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145005898 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085326301 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066744609 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067541091 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065640117 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094588283 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.08940008 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.100474994 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07078254 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.066808251 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088944566 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098304257 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147779176 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143658847 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090123615 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073139121 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068848424 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067614846 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067233601 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074725012 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.081874333 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074364796 seconds)
  done (took 4.358511287 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074783862 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.091811261 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070188991 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.077703143 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085886883 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066569553 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067772092 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067918916 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080118723 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074438628 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066248208 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070687214 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069667883 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068749736 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068677334 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073853209 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075289511 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067188265 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071832273 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073557527 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078845624 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09392683 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072659553 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06793944 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07030598 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067719671 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076561371 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079112155 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067142389 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.083902658 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065481088 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07245677 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083211232 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068692367 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067608949 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068453527 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06700766 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.065585691 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066628309 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064323355 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063784485 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.07113419 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.064900016 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073289287 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079642022 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.073424154 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.067407729 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.068249611 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.068003545 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.062816881 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.068875171 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.068866886 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.068438638 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075187805 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07165503 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.070261777 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.06957278 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.093408099 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073922379 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067332852 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066886404 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069407813 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.069024855 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.0773529 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084604668 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.069028085 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065481207 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066501202 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072029544 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.07994796 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066825938 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072803673 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065285826 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067975676 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.070332907 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069249168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067276279 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064497723 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065611769 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.065878217 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.066383672 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065792559 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065592065 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.068687085 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064086358 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064353015 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066475285 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.066982231 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073656874 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065866932 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.071416001 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069056659 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067069952 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070837108 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.074028306 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.07121929 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082650654 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078523014 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068680256 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066359884 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082090886 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070379553 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067041116 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074479514 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.072702813 seconds)
  done (took 9.234178195 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089274666 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067614064 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085129259 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091952287 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.076383099 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072447967 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077146143 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.067298593 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.082541062 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.065354984 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075226918 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065005287 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079113258 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076353427 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.068226536 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076884527 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068710624 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085702315 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081121096 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064978561 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074325496 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.077949493 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078470393 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082617251 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082285093 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08374829 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078322497 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.068599062 seconds)
  done (took 3.913464367 seconds)
done (took 38.501714955 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.796871986 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.964784984 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.789565566 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.965123716 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.057451242 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.899793279 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.831204878 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.785394709 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.869082372 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.838313815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.089938579 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.158786203 seconds)
done (took 65.832335001 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.798231201 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.950606278 seconds)
    (2/2) benchmarking "String"...
    done (took 2.020383222 seconds)
  done (took 5.694873255 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.961975795 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.42766882 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.057642461 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.786772261 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.793961042 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.250349697 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.602341751 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.236392083 seconds)
  done (took 30.876135467 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.939803301 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.017280466 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.462269686 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.495369905 seconds)
  done (took 15.674779797 seconds)
done (took 63.819135927 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.814270259 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.788662161 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.867709917 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.813943383 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.794317979 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.789181396 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.788246773 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.789302328 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.820886764 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.898519861 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.789674491 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.792586799 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.789880513 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.835203653 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.567307028 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.847866708 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.79450172 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.794107945 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.791631902 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.81508858 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.79369905 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.794975138 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.256890332 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.975903914 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.404172792 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.165537178 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.312922705 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192659845 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.794966959 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.78974224 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.868153489 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.136603409 seconds)
  done (took 205.192422007 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.79058323 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.853258415 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.896686679 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.830438643 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.304042627 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.963576275 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.883124591 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.352306811 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.791377477 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.812322647 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.033631696 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.791510447 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.052394595 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.734251917 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.82610487 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.888922415 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.054197929 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.048968888 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.828020887 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.939421322 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.804511445 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.880971716 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.844036868 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.005420046 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.837428396 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.886347188 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.800241433 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.807249114 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.981829297 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.036885294 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.834337654 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.806224738 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.955627796 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.661672503 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.791992244 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.798313167 seconds)
  done (took 171.133718111 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.978158892 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.797885531 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.791158532 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.843825154 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.914301564 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.794498822 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.439723156 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.799293534 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.503086665 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.793006732 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.791032039 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.79070227 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.79066048 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.802849762 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.869042506 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.793756637 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.805651455 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.7941241 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.815877266 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.794848985 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.791346818 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.791469543 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.792463532 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.794234688 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.791276395 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.792427244 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.267761782 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.032921472 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.795344244 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.793776515 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.915307228 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.809960357 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.32138328 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.798567581 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.883190015 seconds)
    (35/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.846977221 seconds)
    (36/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.896973939 seconds)
    (37/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.795912116 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.009877864 seconds)
    (39/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.866400073 seconds)
    (40/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.793642671 seconds)
    (41/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.792135901 seconds)
    (42/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.855659254 seconds)
    (43/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.806071585 seconds)
    (44/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.793902195 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.792524202 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.795437495 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.797290791 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.856482751 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.055679112 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.798394584 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.915857081 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.283892081 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.797054066 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.79374688 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.794720071 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.374339473 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.797480259 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.794273985 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.799965113 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.800388456 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.793059764 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.795242841 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.18183236 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.865288618 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795952337 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.845998408 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.164422937 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.796018228 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.532612061 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.981791092 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.795359293 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.795064755 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.79467154 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.796155026 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.795805282 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.795804122 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.797128259 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.915274443 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.806301173 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.909374934 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879105012 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.922193578 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.796526243 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.805912296 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.612090777 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.868501367 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.830162112 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.615496777 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.799389222 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.167625633 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.57362507 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.799263483 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.796426134 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.795467922 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.809104854 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.796059624 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.796345338 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.796864138 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.874719792 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.795682698 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.923981104 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507477844 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.196035135 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.971554877 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.79653646 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.802694055 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.891110769 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.972137981 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.800873405 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.862938996 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.802791035 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.798801022 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.946261787 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.798388184 seconds)
  done (took 404.702959958 seconds)
done (took 784.790146109 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.361947633 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.341133558 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.452773513 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.349382159 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.327338641 seconds)
  done (took 13.564351152 seconds)
done (took 15.298401956 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.810185809 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.802224032 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.859735558 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.881484654 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.813646776 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.814101722 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.878133993 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.817550804 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.847305427 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.851791777 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.88040477 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.882005309 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.821003004 seconds)
  done (took 25.691286935 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.806651824 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.943388442 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.0285487 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.83919725 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.806956492 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.026246994 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.86350838 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.93943149 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.942945994 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.028670923 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.033667381 seconds)
  done (took 22.993361835 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.80723487 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.946403691 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.030589545 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.842144134 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.808721584 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.029971455 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.871840817 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.945549353 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.9486782 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.049412721 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.038602868 seconds)
  done (took 23.060791486 seconds)
done (took 73.477300756 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.802015186 seconds)
  done (took 3.536544526 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.820177113 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.970690582 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.801815121 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.799358532 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.802212386 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.800651026 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.800250468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.802118184 seconds)
  done (took 16.332119554 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.805032749 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.804454312 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.805086751 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.803769262 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.804400912 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.805263419 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.804809831 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.804797474 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.804834325 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.804350521 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.805281411 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.80462227 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.804187546 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.805325682 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.805446151 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.804593626 seconds)
  done (took 30.61064563 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.806415383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.806133104 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.806210953 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.805746229 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.804827828 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.807186532 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.806935735 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.805670207 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.804772249 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.804304025 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.805860569 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.805524892 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.804721439 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.806557153 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.80490729 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.806254931 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806901621 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.807139406 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.810671771 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.806319946 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.807195928 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.807535655 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.809028853 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.807091758 seconds)
  done (took 45.089037213 seconds)
done (took 97.312298088 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.588031833 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.536470452 seconds)
  done (took 9.861744144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.807309509 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.808079551 seconds)
  done (took 5.354575087 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.807333285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.807476544 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.807148982 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.808985263 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.807900361 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.808986485 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.806986005 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.807592773 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.8071651 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.807563716 seconds)
  done (took 19.814077595 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.807079396 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.808061265 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.807746186 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.808419188 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.80815396 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.808001229 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.808182981 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.809256962 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.808415863 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.808658322 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.808466976 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.807671465 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.807271981 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.806545279 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.805799139 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.807972105 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.807316476 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.807473531 seconds)
  done (took 34.277919971 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.808636955 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.807523228 seconds)
  done (took 5.353714137 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.810240521 seconds)
    (2/7) benchmarking "second"...
    done (took 1.806724283 seconds)
    (3/7) benchmarking "month"...
    done (took 1.80792342 seconds)
    (4/7) benchmarking "year"...
    done (took 1.807036901 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.807509789 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.808725782 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.806450519 seconds)
  done (took 14.392006448 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.807535121 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.953483473 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.008883824 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.665703947 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.809455817 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.812309165 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.111392598 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.810538946 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.813364831 seconds)
  done (took 20.530604158 seconds)
done (took 111.3233897 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.598400166 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.804211495 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.023083391 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.865908067 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.826096293 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.14370628 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.803672587 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.448808773 seconds)
done (took 42.252124417 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.892877524 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.804715975 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.834799186 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.83501598 seconds)
  done (took 22.211866537 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.806221442 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.132282698 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.830059094 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.675377152 seconds)
  done (took 22.201308437 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.186950688 seconds)
    (2/2) benchmarking "read"...
    done (took 2.149700679 seconds)
  done (took 6.078844265 seconds)
done (took 59.125057302 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.808789539 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.809532883 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.807951329 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.808833691 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.807777202 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.810961871 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.810677285 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.810623294 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.809779324 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.807758851 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.809370402 seconds)
    (12/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.80885696 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.810666689 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.808780074 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807694149 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.809303548 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.809391484 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.809124973 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.811189686 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809810434 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.80942145 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.810269724 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.810589777 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.811777504 seconds)
  done (took 45.166867651 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.811046097 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.811046851 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.811952648 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.812810975 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.810635582 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.810370403 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.812468179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.810670582 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.810717131 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.810705074 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811258386 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.810747494 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.811652135 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.810224471 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810980131 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.812392489 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.810429372 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.811171016 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811946619 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.812312354 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.811418169 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810775147 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.813214972 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81268764 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.813478613 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.812081134 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.812092066 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.813429619 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.812651665 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.813356676 seconds)
  done (took 56.091456843 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.811695186 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.813036974 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.81286989 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.812317896 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.81134078 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.812746617 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.814289823 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.812456434 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.812355173 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.813293563 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.812034056 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.815118687 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.813680801 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.814476473 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.813803846 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.81262653 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.812211696 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.811897546 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.813825337 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.814094798 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.814242586 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.813023658 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.814365203 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.814148606 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.814366947 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.814551592 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.813126747 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.814482448 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.8157653 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.813499413 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.814417336 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.814340734 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.813891955 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.815341748 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.813947754 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.813300778 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.814496257 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.815181652 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.814333512 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.813108832 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.81398639 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.815055096 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.815111129 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.816583751 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.81421713 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.815710076 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.815599021 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.81706164 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.815656039 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.816851146 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.816587126 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.816813885 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.815436865 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.816329559 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.817373139 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.816248711 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.817248879 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.816369042 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.816750767 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.815570525 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.817550316 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.817989168 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.816980341 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.815813827 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.815290116 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.815949439 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.816447236 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.816143401 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.817214279 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.816442578 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.817174505 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.816120653 seconds)
  done (took 132.407557147 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.817280952 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.818052917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.816202343 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.816999802 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818136398 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.81662305 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815873677 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816311362 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815796936 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.814702923 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816928296 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.818260552 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81516737 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816901653 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.81715929 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.81581354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816817807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817231983 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.817193903 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.817899798 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818270401 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817089071 seconds)
  done (took 41.716509145 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817566074 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.818033286 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.817601336 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.817669585 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.819590142 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81667207 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817520452 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.817747538 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817410303 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818812225 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818652529 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81813145 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.818488897 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817827248 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817944335 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.818198914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.8179222 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.816806575 seconds)
  done (took 34.469774695 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.818011948 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.818141667 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.818064243 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.819623756 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.820902444 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.817954733 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.817277156 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.819480972 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.817919561 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.819207205 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.817011716 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.81924219 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.82110334 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819363661 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819146562 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.818558081 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.819838795 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819094581 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.819058689 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819490424 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.820981878 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818539198 seconds)
  done (took 41.766293406 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819025161 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.820073551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820352752 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819571863 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.819230596 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820219591 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.819973901 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.819133002 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.819174784 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.820637279 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.820873925 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.820583912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.820513377 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.820509274 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.821278129 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820012816 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.82039704 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.821235411 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.821431315 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.82134453 seconds)
  done (took 38.154035854 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.818122332 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.818056725 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.818495313 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.817979065 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.818407867 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.81710951 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.819046045 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.817982087 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.82067438 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.819059244 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.817362342 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.818678104 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.818822632 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.818287225 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819013746 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.819448732 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.819077532 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.817922294 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.818598512 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.819352741 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.819090226 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.819446144 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.820923852 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.818651304 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.818677353 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.819139681 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.818437576 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.819896841 seconds)
  done (took 52.676890624 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821939819 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82240725 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.822716425 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.822501209 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.82193388 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.822753359 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.822282029 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.822351032 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.821890935 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.822539801 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.822448498 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.822303872 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.822540213 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.822309365 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.822653893 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.824231015 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.823479392 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.823279037 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.824345272 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823747739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.82312187 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823485035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.823457243 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823265363 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.823332958 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.82439902 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.824157009 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.8240272 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824371003 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.823458231 seconds)
  done (took 56.442319252 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.844892135 seconds)
    (2/2) benchmarking "in"...
    done (took 1.844892847 seconds)
  done (took 5.442498709 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.824035182 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.823868577 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.823862884 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.825003581 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.824742388 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.826615632 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.824600207 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82574369 seconds)
  done (took 16.350527138 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.82474025 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.82607686 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.825720464 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.825687594 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.821569703 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.830973454 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.823598976 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.823300651 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.824469382 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.824067187 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.828348639 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.826283939 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.830475494 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.826937901 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8251509 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.823671097 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.823559896 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.82473924 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.8261165 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.825013504 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.826727954 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.821413235 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.827617703 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.822898583 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.824987046 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.825413952 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.834151029 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.824001541 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.825876494 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.826773829 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.831344949 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.82745832 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.823962599 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.825220577 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.824151775 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.826146637 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.829958848 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.824649749 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.824182677 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.828730114 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.825476567 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.827745171 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.829145854 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.831372923 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.824619253 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.827010158 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.828479271 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.82515212 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.824193589 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.828057205 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.835124342 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.824315396 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.826712534 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.828974633 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.827062045 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.824560917 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.823756574 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.82745445 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.831575995 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.834512367 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.829433881 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.845491932 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.83455786 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.824816574 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.823891092 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83470738 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.848988378 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.827513951 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.828631511 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.828344234 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.834305587 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.829580869 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.82849753 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.83027823 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.837787322 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.833366906 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.826954998 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.829768424 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.83011576 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.824746084 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828590911 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.827133926 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825724746 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.825392172 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837381778 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.85132902 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.826857157 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.82659075 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.82866618 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.829075259 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.831245409 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.829849732 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.827579793 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.831768977 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.827366267 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.831334595 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.827467406 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.828984161 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.825640058 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.838017844 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.831930479 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.830884837 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.831232716 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.835231797 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.832427895 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.827877595 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.829707927 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.826164131 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.837031304 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.829446504 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.827742095 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.83150204 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.829679778 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.831487091 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.831077905 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83138743 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.836374474 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.837349732 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.831898156 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.833206956 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.83227501 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.832418297 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.839238637 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.854540687 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.831448703 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.833387897 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.834510416 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.840650911 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.832614201 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.832274785 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.832369828 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.831786838 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.832608339 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.830843417 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.832655125 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.828381487 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.832615396 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.829603152 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.833598803 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.827775475 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.833019856 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.830472868 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.83204363 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.830460266 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.834748081 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.830075143 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.833333617 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.839210803 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.832547333 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.830096302 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.833877511 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.832667348 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.832526003 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.832150697 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.834969101 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.832773591 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.830158101 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.833403831 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.833668034 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.832472042 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.834349077 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.832693032 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.838863593 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.830446865 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.830981361 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.832197781 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.833208493 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.830883132 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832360907 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.832223181 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.835925866 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831576799 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.837424918 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.834975708 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.835471 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.831794009 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.83631189 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.831956794 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.836627349 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.843597565 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.835963118 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.841845771 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.836119586 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.839606929 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.837641982 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.833865672 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.833770414 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.834210516 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.833474015 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.836058032 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.836559061 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.838210862 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.855433422 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.845027533 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.835061798 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.834985902 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.838975423 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.840151764 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.839292438 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.837118555 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834507504 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.835977443 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.832423961 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.833304979 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.836081558 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.837013711 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.834485816 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.836361837 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.839298954 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.834217686 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.838201516 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.836050675 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.838035527 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.835641242 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.83850343 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.83282937 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.835474732 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.837762077 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.843171806 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837655516 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.838751686 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.833187771 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.836763096 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.835130327 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.837571676 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.835816108 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.836594856 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.835180651 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.834884414 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.842689338 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.83505712 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.837008171 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.835458993 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.83763276 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.837005246 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.840016228 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.839148766 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.847050444 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.840735232 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.839892866 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.841397026 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.839706805 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.838306591 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.8353927 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.836695352 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.83458015 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.838069571 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.836616319 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.837819649 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.843026735 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.839982312 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.837012834 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.839222256 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.838865402 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.838006733 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.838868561 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.837673651 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.840470561 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.84355972 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.842921978 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.838702321 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.840619046 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.839993739 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.839838952 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.844158412 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.838238181 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84894251 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.847187125 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.841653704 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.841393848 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.838360621 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.839727142 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.840941984 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.838149404 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.84596669 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.838960428 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.840187725 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.843275284 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.837193161 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.83886135 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.845999762 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839276958 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.842744457 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839800082 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.840157559 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.839237742 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.840935592 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.840097763 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.838067461 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.840394342 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.846355651 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.841617658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.83793069 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.841217239 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.848570376 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.843149216 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.838476152 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.847357648 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.841188274 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.83966362 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.841375079 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.841598305 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.839356122 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.839022179 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.840027654 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.841978509 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.838022963 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.844349531 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.849371446 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.842923047 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.847514147 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.841904061 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.850209051 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.84053736 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.844690439 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.839921823 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.843236068 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.847583058 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.843507599 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.84005265 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.850127035 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.84568821 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.841920605 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.845970978 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.843002646 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.839435007 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.840345157 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.842214088 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.844967339 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.844306814 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.84450159 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.841157364 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.843144496 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.840209154 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.84537659 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.842381551 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.842830193 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.842091571 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.844851631 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.839458167 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.840432305 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.840933119 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.841225183 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.844810766 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.844148768 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850123078 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.842343325 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.841146772 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.844962108 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.84617531 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.851557231 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.842457319 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.843151228 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.843151324 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.845891754 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.846011541 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.845347579 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.84217023 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.840714689 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.846624696 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.845011932 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.854107187 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.850472595 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.846430344 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.844435271 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.843666317 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.844063235 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.852884406 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.873558349 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.843306865 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.847200259 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.850113489 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.850297094 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.845680193 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.848900485 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.847589053 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.85132923 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.844490486 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.842779262 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.847153058 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.856201375 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843954338 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.845208804 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.84588449 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.847356631 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.847238044 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.845450968 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.844350432 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.846705958 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.847148693 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.857315699 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.848002741 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.844798648 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.843631395 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.846016137 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.844477373 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.845569639 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.84411037 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.846082823 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.843796847 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.844122752 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.846526547 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.849312984 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.844058276 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848372526 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.855404534 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.844674389 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.843529247 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.844376729 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.844511408 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.847759301 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.844889053 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.845777597 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.848507779 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.847064776 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.846355974 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.848879816 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.855233067 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.847598077 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.84934164 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.848683922 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.850343108 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.847670069 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.847180181 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.847431267 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.85701652 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.849095534 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.859774874 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.856057317 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.84570987 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.847104862 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853977095 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.855924906 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.8448751 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.846350112 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.84622489 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.848400067 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.847096165 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.848364022 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.844395583 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.848334674 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.850528649 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.850669059 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.84629971 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.845874968 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.849614684 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.848883667 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.84746777 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.852563832 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.850269473 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.848685489 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.845814706 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.844920422 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.849595492 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.84953896 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.847413634 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.850234988 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.850100312 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.848071909 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.854535799 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.850856539 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.850647454 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.850619547 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.852113228 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.850453251 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.848310792 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.848016632 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.850720698 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.852218352 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.856170579 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.851590579 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.849948821 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.850267931 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.851852781 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.849340899 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.849431845 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.849858064 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.85153031 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.857239405 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.853107938 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.848020476 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.850120205 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.850628008 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.854637204 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.849972034 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.853174813 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.848244917 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.850565194 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.853742645 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.853054897 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.858736855 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.854332654 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.853420582 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.859269128 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.853653589 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.850021733 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.854383548 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.852938728 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.850744161 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.851583699 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.854012491 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85136683 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.853390551 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.849245231 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.851053638 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.851338427 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.852079315 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.852609889 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.854468522 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.852873249 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.859816137 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.859749852 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.853759355 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.85290736 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.850038434 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.854598513 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.863954644 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.850228612 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.85029448 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.851303396 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851273526 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.852613863 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.8576041 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.860524325 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.85427475 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.853085128 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.857187549 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.872023862 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.855285233 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.860394878 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.88526422 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.855264148 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.851928052 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.853553029 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.853427406 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.852922253 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.855701092 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.852585075 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.860685304 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.851472024 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.85610388 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.862110093 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.856771344 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.856774157 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.851667866 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.854213878 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.856459338 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.851964344 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.861444894 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.851986067 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.856833767 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.853492411 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.855666657 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.855836835 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.854091595 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.856805843 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.855292643 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.857528108 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.853401321 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.863674441 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.854736622 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.855376689 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.866275955 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.865091924 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.853720572 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.856979625 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.85336579 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.860550949 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.855792871 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.857957981 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.855780782 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.866461438 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.858197931 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.866380163 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.855543638 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.854366258 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.855084547 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.856220102 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.852426511 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.866945039 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.865758041 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.854777286 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.856067488 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.861710142 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.858784076 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.863493276 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.863430895 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.855332472 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.856581852 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.854046414 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.859089621 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.858907721 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.85867475 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.859081857 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.866943759 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.856395521 seconds)
  done (took 1099.691223929 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.857953625 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.857438481 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.858351904 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.859639662 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.859124785 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858416084 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858862232 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.858563875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.858318845 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.857848085 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.85759185 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.858358459 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.859546307 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.859391682 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.85748745 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.859511646 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.860171103 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.860133103 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.85593565 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.858341442 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.859556668 seconds)
  done (took 40.815987934 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.857382903 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.858432219 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.856797357 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.857797293 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.856211005 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.857701739 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.857812092 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855709635 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.8551537 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.855900767 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.856220952 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856900171 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.859843198 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.857853131 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.857446503 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.858323903 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.85851214 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.85893463 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.858045432 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.857727861 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.858886553 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.857688747 seconds)
  done (took 42.652548941 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.848434598 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.852125088 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.852300568 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.855861539 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.853316987 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.856399944 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.853666023 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.854282518 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.850177755 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.84987535 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.861464032 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.860331014 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.851062968 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.853822757 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.849828889 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.848657017 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.000606613 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.848914075 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.850048985 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.851744002 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.847463147 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.859310373 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.84573961 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.846456703 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.843336321 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.845104663 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.850080619 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.847007644 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.849329044 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.849025989 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.847386187 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.847802937 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.850565436 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.845055141 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.84357758 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.845573222 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.846855364 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.846869799 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.84404715 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.850206914 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.853732925 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.874181887 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.84780636 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.84526685 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.853394212 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.848227231 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.847127466 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.84856101 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.858949433 seconds)
  done (took 92.616678842 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.846591741 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.849103635 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.844736885 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.849353016 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.849550357 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.847673326 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.848026064 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.848699961 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.850903614 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.846566904 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.847705898 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.848724946 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.848305414 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.84736522 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.850053434 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.847679255 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.847985031 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.845434832 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.847960025 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.846069538 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.845366154 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.847609033 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.846888951 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.847300834 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.846027561 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.847411548 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.8472332 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.847776343 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.847070211 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.848118688 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.847557734 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.849358896 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.846970014 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.846916177 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.848240421 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.846836444 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.847262007 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.847696336 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.846788171 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.848159746 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.848883957 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.849349044 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.846687882 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.848160062 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.846656773 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.847603315 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.848321204 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.847470399 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.848475112 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.848092419 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.849745965 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.848458175 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.85148423 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.848687542 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.848989414 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.846932786 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.848665759 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.849855298 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.848357435 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.848981894 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.848127383 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847923966 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.848370773 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.850807449 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.849259403 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.848458513 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.850525632 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.847307289 seconds)
  done (took 127.442199866 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.845694331 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.846032094 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846860204 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845778673 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847311017 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.847872472 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.846005896 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.848901513 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.845152614 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.84552593 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.84812162 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.848718966 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.847388384 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.848730013 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.846844417 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.847314158 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.849631896 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.847132524 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845798911 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.8458114 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.845905875 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.847054454 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.845404009 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.850604777 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.845285086 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.846611952 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.847805975 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844414508 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.847246966 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845654826 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846568157 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.846613207 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.849570128 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843843795 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.843269154 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.843534499 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84490763 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.84842152 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841483012 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.841757954 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.841421071 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.842162715 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.841088071 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.845357202 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.844434155 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.842154046 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842653826 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.844187384 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.848174332 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842280436 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843432198 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841769344 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.841751506 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.840385734 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840982347 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842205663 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.840870375 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838878426 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.841317248 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.844315919 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839957663 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.840499307 seconds)
  done (took 116.164076711 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838040763 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.840371123 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.841731502 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.841305152 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840506098 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839925077 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.84086048 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843425355 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.838034873 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.840825654 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.84070549 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842185695 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843404597 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839960568 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.840381508 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.840258554 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843030449 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839844537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83667325 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.840331897 seconds)
  done (took 38.578625851 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.837932651 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837949186 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.841750217 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.840166047 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.837747629 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.838381191 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.838589253 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838308 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840652388 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.840785779 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841948989 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.839845727 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839347481 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.840987487 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83901517 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.836317194 seconds)
  done (took 31.19458033 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.838420957 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.836504134 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.836847132 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.833700314 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.836079688 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.839940247 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.8411733 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.837966845 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.835992955 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.839162917 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.837895617 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.839280385 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.83850664 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.839403828 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.838175888 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.837445167 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839281208 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.837739416 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.838898794 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.833683604 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.838837443 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.839450135 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.836751631 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.84149165 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.835569034 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.836986141 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.837076341 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.836343988 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.8370422 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.841053791 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.835834354 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.835695554 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.83759837 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.835777085 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.837576677 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.838330462 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.833269616 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.83446247 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.836440175 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.835853541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.84289664 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.835535204 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.839750321 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.838099996 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83800328 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.839816586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.83638558 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.836386145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.83657485 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.836404993 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.837921931 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.835165282 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.837265134 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.838236007 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.839675564 seconds)
  done (took 102.830436752 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838775548 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.835755332 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.836356767 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.83577832 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837034056 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.836825136 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.838294591 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83460951 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834067596 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.832753527 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.837732579 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836365482 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836278073 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836111212 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.838837346 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835173249 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.839728125 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.836701118 seconds)
  done (took 34.820109207 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.835665124 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.835067934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.833455728 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.835560049 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.835208734 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834228168 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.835348238 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.832994213 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836937496 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.835677169 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835793317 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.833573327 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837697691 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.836546523 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834949612 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.832999678 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.836905337 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836511799 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.836501004 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.836544997 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833546407 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.834426247 seconds)
  done (took 42.137653923 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.833010762 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.83361621 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.849056162 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.855032412 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.850635754 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.8634441 seconds)
  done (took 12.843846911 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.839180143 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837247305 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.836692154 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835918773 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837909345 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836053825 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837577566 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834118045 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833844854 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837364607 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834187755 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837657028 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838993845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834599629 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83564728 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835146549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834849533 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836585327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834111024 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833859202 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837273184 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834523 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834937876 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833487576 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834243321 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833337638 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833112658 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837629752 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833371231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836910372 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833232106 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836103132 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834257583 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835612773 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835874715 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833079639 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833554321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834659317 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836951448 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835375229 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834473506 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834672536 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837252058 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83595443 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834636038 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832996821 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836366414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83339796 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834114093 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836328127 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832923829 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833027644 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835051544 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834704631 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832525439 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835714203 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834321485 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833287903 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833364015 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832692835 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836991582 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833182626 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836091883 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834295374 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835426604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835164385 seconds)
  done (took 122.881001351 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834751664 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833839224 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83511674 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832446468 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834270924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833053255 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832540198 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834148399 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834929375 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835967695 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83817606 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836246647 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8348846 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833697123 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835507513 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839130921 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835682645 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837185364 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837782819 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836990195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83651894 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83667455 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837182913 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837318835 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835086471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836593563 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835628067 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83753087 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836218867 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.840534199 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838840968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836620481 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835493745 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83664508 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837662846 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.838191927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.839484448 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837529051 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836263448 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838108039 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.837356841 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838320215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841365135 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836450477 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.840644092 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.839594488 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837345755 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833630803 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838691335 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838959271 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838403806 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.839250383 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829527638 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833071 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.828874213 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830714623 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829828426 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831051051 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831218093 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831316359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.830609533 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834049222 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831078996 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831468689 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83219423 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829446231 seconds)
  done (took 122.909028336 seconds)
done (took 2550.011344923 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.857935989 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.905876724 seconds)
  done (took 15.517309281 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.990028073 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.945108858 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.829759003 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.858892844 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.826899409 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.84803504 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.849473874 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.827167608 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.830669031 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.830502918 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.830669803 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.016745411 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.845559969 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.826940388 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.831048592 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.924003962 seconds)
  done (took 51.671350557 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.834437641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.836196428 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.845637965 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.838086887 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834441241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.846728477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.866828117 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.838106672 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.871902687 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.849050604 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.905609305 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.843033471 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.835624233 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.886391991 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.853105696 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.848940154 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.933276505 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.910304998 seconds)
  done (took 35.232453348 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.914985918 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.838074616 seconds)
  done (took 10.516147636 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.847097438 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.846422165 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.85844114 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.830525644 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.84549971 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.848346881 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.831979905 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.86290634 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839662441 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.859680477 seconds)
  done (took 70.231149568 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.840452002 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.836372044 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.835889982 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.832322402 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.830754395 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.834205703 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.834025013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830853271 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.521951935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.868042119 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.840527204 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.843141769 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.833953323 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.839486242 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.835081235 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.864684728 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.947644042 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.835952807 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.840814778 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.838950742 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.83594517 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.8928232 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.848593809 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.838107596 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.870007603 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.516843596 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.841325654 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.840642588 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.971250969 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840342283 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.836133907 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.020221742 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.841035828 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.310201414 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.152619229 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.838140437 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.852343562 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.840483852 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.835037139 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.948317337 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.836742211 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.840952885 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.7892646 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.124766513 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.935665798 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.878223976 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.172402924 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.836913983 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.836906624 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.876156866 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.837591646 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.837044101 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.850445438 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.354751799 seconds)
  done (took 131.12266692 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833073329 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.177814513 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99743534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.833532999 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.118418041 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034687585 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.832410646 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.878394514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833440993 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06707485 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087405902 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.935195187 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.832303562 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.835426386 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839940739 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.830091935 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.971450782 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.900305327 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.836804291 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.832347884 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864948288 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.073548902 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.952722896 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833990481 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.861096164 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040459341 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.950936217 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940864551 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.611579575 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.832909201 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894310825 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.83440531 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.833757197 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.832533851 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988363998 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92437998 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.915448753 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.837934506 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.833382406 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.834397484 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.487989216 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.033956842 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.924883468 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.950277431 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086360975 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.032623478 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.606998222 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.829482614 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.566928055 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.989998188 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.056085066 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.063697065 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.946518545 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.832040826 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.356572152 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.829293314 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83044911 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.080135772 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.05094094 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.927125493 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83526306 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.831738586 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.834560401 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.066766666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.832098291 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.92249803 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.831927459 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.828959468 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926216098 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.92674624 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.059268499 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037936374 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.859174856 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.168110533 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.337434179 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.077072564 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.895502415 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.079147461 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.836571338 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829043602 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910568871 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.663219011 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.085182465 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.069227684 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.07878848 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.861789061 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.555872786 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.832040964 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.058088423 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.050122645 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.078462624 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.079372369 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.069115848 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.142074037 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.832657136 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.834738997 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.077782463 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.944880867 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.834529171 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.184737297 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064745018 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394337462 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.863061466 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.138775704 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.96432662 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841688138 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.459204657 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835016788 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.060835784 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.875574222 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.842153793 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841402965 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.055094066 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.829791448 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.840681401 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.707070272 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.902692453 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.840168036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.072556644 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83629114 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.095905653 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.841629328 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.065594058 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.258229046 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864631386 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.063797659 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.082648451 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.847433876 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.077996896 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.076533896 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.95046137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104487928 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.71581868 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.837768806 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.127217179 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838735752 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.836026493 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.0065865 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.839549204 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981141213 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.841554298 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121431351 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859608195 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.075524334 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.84279599 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.094373549 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8700964 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890430147 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843772208 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.963612512 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.844724698 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.689073156 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.004179594 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842248316 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.839481969 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.637462446 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.841052814 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.988398104 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.069772969 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.857730033 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.909107771 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.500272127 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840034735 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.921954546 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.859124566 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.228628152 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.839312723 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.092024195 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.841526373 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.839364797 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.841696038 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.072199729 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.073121842 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.843396061 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.84024846 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.736860303 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.840327462 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.840125947 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02270524 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.146502995 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838893878 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.039732672 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841805319 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966470625 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843682618 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.899216125 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.180465742 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839694985 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.841262951 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.841272599 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.841432145 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.841209688 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100912983 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.862735946 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.356923013 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.976323545 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.106942702 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.147739497 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.081022964 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.882331889 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847169729 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092635324 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.842042128 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.901877839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.843870294 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.861448851 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070822249 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841993318 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.104987916 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111444513 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.792570015 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.888606598 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.844296194 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.841559592 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.842011951 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.980483561 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922354559 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84400618 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.845143356 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956649279 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.960817136 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05076945 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.844457235 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.01541608 seconds)
  done (took 896.115905444 seconds)
done (took 1212.164501455 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.843716572 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.841783346 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.845698247 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845156173 seconds)
  done (took 29.147783938 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.845594603 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.845237835 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.846140384 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.846320666 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.845758655 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.846728643 seconds)
  done (took 12.84719578 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.891903872 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.841530941 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845561516 seconds)
  done (took 21.35015334 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.917149971 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.256055239 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.981147318 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.269184848 seconds)
  done (took 10.197548828 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.847568823 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.846418057 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.847332705 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.847331618 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.847098303 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.846487352 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.846902694 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.846549801 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.848986344 seconds)
  done (took 18.398337923 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.938488806 seconds)
done (took 97.651731856 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.60618177 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.913799714 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.983413246 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.977530177 seconds)
    (5/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.865941743 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.095156038 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.227593253 seconds)
    (8/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.872290648 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151956258 seconds)
    (10/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.984542059 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.713392719 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.230168491 seconds)
    (13/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.947441737 seconds)
    (14/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.004034766 seconds)
    (15/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.092794207 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.884117814 seconds)
    (17/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.871631815 seconds)
    (18/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.875426284 seconds)
    (19/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.921544689 seconds)
    (20/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.967618136 seconds)
    (21/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.161203126 seconds)
    (22/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.848849509 seconds)
    (23/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.00616272 seconds)
    (24/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.629799965 seconds)
    (25/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.281905217 seconds)
    (26/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.995278316 seconds)
    (27/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.954729216 seconds)
    (28/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.001191582 seconds)
    (29/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.008017513 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.939933191 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.393029925 seconds)
    (32/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.609149585 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.9478317 seconds)
    (34/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.293564281 seconds)
    (35/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.850575423 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.992223833 seconds)
    (37/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.146149313 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.979320795 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.139483036 seconds)
    (40/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.017952966 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.908406806 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.976633075 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.945415363 seconds)
    (44/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.864592303 seconds)
    (45/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.088960973 seconds)
    (46/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.708632675 seconds)
    (47/309) benchmarking ("sort", Int8, false)...
    done (took 4.790481539 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.495555289 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.64898227 seconds)
    (50/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.082143134 seconds)
    (51/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.929819959 seconds)
    (52/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.993139044 seconds)
    (53/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.869714607 seconds)
    (54/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.274616232 seconds)
    (55/309) benchmarking ("sort", Bool, false)...
    done (took 2.067237842 seconds)
    (56/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.622932857 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.884173618 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.465330017 seconds)
    (59/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.414736963 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.20612362 seconds)
    (61/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.855626169 seconds)
    (62/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.93023671 seconds)
    (63/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.955198159 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.184896436 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.107323286 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.021014761 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.34493698 seconds)
    (68/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.645846442 seconds)
    (69/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.918748154 seconds)
    (70/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.939093919 seconds)
    (71/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.855647476 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.065362931 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.87690823 seconds)
    (74/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.05346908 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.095048821 seconds)
    (76/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.025769954 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.949485738 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.267129344 seconds)
    (79/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.240183727 seconds)
    (80/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.946895922 seconds)
    (81/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.930576501 seconds)
    (82/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.277366552 seconds)
    (83/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.344757786 seconds)
    (84/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.522717243 seconds)
    (85/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.415350242 seconds)
    (86/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.884459372 seconds)
    (87/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.078595451 seconds)
    (88/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.333826928 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.981869739 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.642984014 seconds)
    (91/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.18174545 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.469905251 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.13583005 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.865893106 seconds)
    (95/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.973730668 seconds)
    (96/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.959593797 seconds)
    (97/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.972748199 seconds)
    (98/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.155723503 seconds)
    (99/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.199072332 seconds)
    (100/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.039358861 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.078459335 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.349790504 seconds)
    (103/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.864756947 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 9.662136611 seconds)
    (105/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.288762653 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.633064185 seconds)
    (107/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.066522119 seconds)
    (108/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.903678164 seconds)
    (109/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.866255919 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 8.361225359 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.958702819 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.867762504 seconds)
    (113/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.87972951 seconds)
    (114/309) benchmarking ("perf_sum", Float64, true)...
    done (took 3.656516534 seconds)
    (115/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.928286982 seconds)
    (116/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.893796724 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.532828891 seconds)
    (118/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.38213155 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.867175058 seconds)
    (120/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.67444502 seconds)
    (121/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.957504043 seconds)
    (122/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.208123155 seconds)
    (123/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.992133099 seconds)
    (124/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.950718388 seconds)
    (125/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.866152181 seconds)
    (126/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.299467536 seconds)
    (127/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.868347609 seconds)
    (128/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.950407463 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.992907768 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.872013203 seconds)
    (131/309) benchmarking ("sort", Float64, false)...
    done (took 5.658076667 seconds)
    (132/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.260405044 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.755645139 seconds)
    (134/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.193461821 seconds)
    (135/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.221475962 seconds)
    (136/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.906839353 seconds)
    (137/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.025555202 seconds)
    (138/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.579194428 seconds)
    (139/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.251843273 seconds)
    (140/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.128227445 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.265133548 seconds)
    (142/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.189575669 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.873257201 seconds)
    (144/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.137386682 seconds)
    (145/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.950360354 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.203814334 seconds)
    (147/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.959594783 seconds)
    (148/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.124136809 seconds)
    (149/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.193667689 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.876854062 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.000500931 seconds)
    (152/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.87639221 seconds)
    (153/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.895893189 seconds)
    (154/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.88470251 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.872577718 seconds)
    (156/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.190751361 seconds)
    (157/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.875369819 seconds)
    (158/309) benchmarking ("sort", Float32, false)...
    done (took 5.524283853 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.178782239 seconds)
    (160/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896824593 seconds)
    (161/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.257257832 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.869560083 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 8.380389968 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.869154949 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.953928946 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.894887161 seconds)
    (167/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.972495833 seconds)
    (168/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.56090316 seconds)
    (169/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.383531569 seconds)
    (170/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.26429363 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.101970113 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.871966044 seconds)
    (173/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.646466457 seconds)
    (174/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.302084034 seconds)
    (175/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.014680261 seconds)
    (176/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.212655772 seconds)
    (177/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110008851 seconds)
    (178/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.063082267 seconds)
    (179/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.893082654 seconds)
    (180/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.872265394 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.279591347 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.872730153 seconds)
    (183/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.567919285 seconds)
    (184/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.076960379 seconds)
    (185/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.076973579 seconds)
    (186/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.549622139 seconds)
    (187/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.995738243 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.935829295 seconds)
    (189/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.073365458 seconds)
    (190/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.975891482 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.180959219 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.977972838 seconds)
    (193/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.359057157 seconds)
    (194/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.36165343 seconds)
    (195/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.988369405 seconds)
    (196/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.085257625 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.222002618 seconds)
    (198/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.189660811 seconds)
    (199/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.882748606 seconds)
    (200/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.29660857 seconds)
    (201/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.627624426 seconds)
    (202/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.950365131 seconds)
    (203/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.873184233 seconds)
    (204/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.349463927 seconds)
    (205/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.524037442 seconds)
    (206/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.066828454 seconds)
    (207/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.899751623 seconds)
    (208/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.348103934 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.791139971 seconds)
    (210/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.261479308 seconds)
    (211/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.137805649 seconds)
    (212/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.188342631 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.761634948 seconds)
    (214/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.01513938 seconds)
    (215/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.160771165 seconds)
    (216/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.12879562 seconds)
    (217/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.995447012 seconds)
    (218/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.506148373 seconds)
    (219/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.940814365 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.102292507 seconds)
    (221/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.90310687 seconds)
    (222/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.988183526 seconds)
    (223/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.111005424 seconds)
    (224/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.116884605 seconds)
    (225/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.876188243 seconds)
    (226/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 4.12242489 seconds)
    (227/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.184511672 seconds)
    (228/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.594931919 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.177535581 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.877994936 seconds)
    (231/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.789345461 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.740679074 seconds)
    (233/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.909969042 seconds)
    (234/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.975648828 seconds)
    (235/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.938914946 seconds)
    (236/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87749887 seconds)
    (237/309) benchmarking ("sort", BigInt, false)...
    done (took 6.951487642 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.90503933 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.853854496 seconds)
    (240/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.331597952 seconds)
    (241/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.059229184 seconds)
    (242/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.562897003 seconds)
    (243/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.389033212 seconds)
    (244/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.004550989 seconds)
    (245/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.902634479 seconds)
    (246/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.874123685 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.947591721 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.54485263 seconds)
    (249/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.890332476 seconds)
    (250/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.876594845 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.531191579 seconds)
    (252/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.111748192 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.115309784 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.142712104 seconds)
    (255/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.142792729 seconds)
    (256/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.876277808 seconds)
    (257/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.148317815 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.988104361 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.212410934 seconds)
    (260/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.053967738 seconds)
    (261/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.068159909 seconds)
    (262/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.904627539 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.136840997 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.878346222 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.954537095 seconds)
    (266/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.886754102 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.876849497 seconds)
    (268/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.094661365 seconds)
    (269/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.015313995 seconds)
    (270/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.662446959 seconds)
    (271/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.909542377 seconds)
    (272/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939200929 seconds)
    (273/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.878573053 seconds)
    (274/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.160418328 seconds)
    (275/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.912295305 seconds)
    (276/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.030381876 seconds)
    (277/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.988098973 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.986190488 seconds)
    (279/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.990641665 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.041025496 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.357612529 seconds)
    (282/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.882109555 seconds)
    (283/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 3.751847179 seconds)
    (284/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.054992341 seconds)
    (285/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.964896404 seconds)
    (286/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.903719648 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.188288661 seconds)
    (288/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.967571537 seconds)
    (289/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.970592906 seconds)
    (290/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.400717118 seconds)
    (291/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.95833215 seconds)
    (292/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.198097349 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.658989417 seconds)
    (294/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.287522554 seconds)
    (295/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.89756608 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.981677744 seconds)
    (297/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.201514164 seconds)
    (298/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.802751345 seconds)
    (299/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.95859585 seconds)
    (300/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.979818252 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.228640854 seconds)
    (302/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.672333646 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.909191732 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.879414924 seconds)
    (305/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.879000322 seconds)
    (306/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.797981253 seconds)
    (307/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.197144836 seconds)
    (308/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.885933336 seconds)
    (309/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.881546695 seconds)
  done (took 1012.514343504 seconds)
done (took 1014.366068935 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.904698716 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.899134415 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.880650387 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904350717 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995630846 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.925905589 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.897160746 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.887346387 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.931969657 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.932392792 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.881421944 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.925989086 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.883531209 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.881697425 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.882770303 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.900195036 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.193575647 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.910806234 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.900845218 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.895227664 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.899860398 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.882183004 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.934975303 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.9250171 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.888876682 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.889828581 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.887213461 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.9030285 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996528432 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888679046 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.888212862 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.896813439 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193377185 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.909252953 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.879585896 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.903785385 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.898489706 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.899969278 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.889156446 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.916231947 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.338107152 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.887171308 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.886217175 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.883652605 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.883951761 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.892286241 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.885461659 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.894692312 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901171868 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.901010329 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.333117042 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.905076055 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.889557967 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.885787759 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.897292953 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.885168844 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.889598475 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902101448 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.904875479 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.9018599 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.181010821 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.918665327 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.888016214 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.906196192 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.894732705 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.368304385 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.887827016 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.89180189 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.340243942 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.897506939 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.367721619 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.900189572 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.88927218 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.901567393 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.919648736 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.194181457 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.910438241 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.884443178 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.900510601 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.884620993 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.896122458 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900120598 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.891175811 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.888255476 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902791085 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.931113212 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898535026 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.887457192 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.902694024 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.907718498 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.896929109 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.899832532 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.889929947 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.88807515 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.900403229 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.890683558 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.889692675 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.889965134 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.892565243 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.904571804 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.336803502 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911549664 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.883327943 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.885215897 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887715752 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.903811335 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.33564716 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.892603566 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.911297533 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.938613898 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.889766133 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.181874938 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.916828632 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905652242 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.902407983 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.891065332 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.886726433 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.185010868 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.360353827 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.908587176 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.888705532 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.886778917 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905929742 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.890068059 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.886730537 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.195726513 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916956851 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.906000303 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.012135341 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.902647953 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.922294267 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.887095543 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.894322508 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.934688981 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908469998 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.922112843 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.893307757 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906139726 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.90714275 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.885454535 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.900447494 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.90269377 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.888610769 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.896382851 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886045894 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.936225779 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.903603785 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.904527141 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.911674623 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.011527239 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.887616568 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.184704406 seconds)
done (took 296.82056905 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.965079537 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.886899568 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.006766056 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.891622486 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.976092519 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.960446616 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.892267779 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.892356841 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.892419216 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.382545404 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.892799784 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.898152123 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.886602939 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.892248635 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.95832673 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.892119707 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.892675847 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.330698238 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.890874998 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.969595752 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.887704165 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.892941862 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.894198171 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.389510541 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.89132763 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.889794066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.970197977 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.892546296 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.33534216 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.890261682 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.889910579 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.337779976 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.969376296 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.920303586 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.901698746 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.898236679 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.9772714 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.904705811 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.956538888 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.956877263 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.006965037 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.923823143 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.892703946 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.890783245 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.897153343 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892201339 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.893210817 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.924690036 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.890220439 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.902390295 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.329361859 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.899027443 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.900684705 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.895173573 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.894459645 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.918409274 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.893331043 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.892284602 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.970493924 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.891470263 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.958507387 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.388741612 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.385500853 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.895335937 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.890188433 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.896269905 seconds)
  done (took 186.724864504 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.958070736 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.964066022 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958553919 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.898016715 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.941474593 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.960873712 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.897347931 seconds)
  done (took 15.39375952 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.900065787 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896391484 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.940427655 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.940476701 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.893331589 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.078143756 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.905860076 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.901284562 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.921050704 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.892667398 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.545353544 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.942046546 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.899722145 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.891590356 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.905540127 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.947319371 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.894668169 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.892732227 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.001874778 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.04087337 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901513176 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.904151908 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.919828223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.905651687 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.896737678 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.89327883 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.893803601 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.901284891 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.896557815 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.897645961 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896856517 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.946049613 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.896235943 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.894346453 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898831593 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.898256729 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.893876045 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.896736455 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.896974834 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.892525416 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.897234526 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.895865897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.897374802 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.895870727 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.897573112 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.917936087 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.8985592 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.898531073 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.898477229 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.898486321 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.921270466 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.898151059 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.897124509 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.903633303 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.938278125 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.903191145 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894420309 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.897823724 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.897446691 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.899024944 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.899178382 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.043890895 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943117323 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.897583917 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.944834378 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.049627143 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.898786892 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.899066869 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.898638549 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.983292792 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.899425492 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.944530406 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.900469972 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.010083139 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.898780572 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.084093646 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.920244487 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.900058671 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899594771 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.895514366 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.904333926 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.901750154 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.898343164 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.903475136 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.904691001 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.900378667 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.899113528 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.898311633 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.90391242 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.901538912 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.947412736 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.900017883 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.897121668 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.030773426 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.899359866 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.006619182 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.924761467 seconds)
  done (took 208.549759015 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.903890894 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.904787641 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898018801 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913411727 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.900480141 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.897915729 seconds)
  done (took 13.2386475 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900654077 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.904936532 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.901363255 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.900833293 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897590796 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.899222895 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.900488117 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.901158839 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.902107026 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.90104737 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.899927656 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.900378588 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.898954157 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.898991516 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.900930048 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.901920958 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.90263087 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.901582177 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.901646665 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.899193788 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.104361611 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.898904965 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899875386 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.902875178 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.904604072 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.90356095 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.910831914 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.902734217 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.901492917 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.907594985 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.904353781 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.899161513 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.90111135 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.905194124 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.906087463 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.901989813 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.906424309 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.901950864 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.902434993 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.901334955 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.90182225 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.900985214 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.903197891 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.902840424 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.900901366 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906390751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.906998164 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.912381888 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.902421042 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.902627598 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.901998869 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.90298872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.901304351 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.902356329 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.903883199 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907016049 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.907955015 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.902587731 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.900246221 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.903216599 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.909441897 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.901798677 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.904573928 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.908923443 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.9126821 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.904164041 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.904228754 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.907111111 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901881666 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.904048765 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.903226358 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.904455352 seconds)
  done (took 140.045235342 seconds)
done (took 565.78344751 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.57783226 seconds)
  done (took 9.402062182 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.993000823 seconds)
  done (took 8.823079758 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.720351313 seconds)
  done (took 10.555808304 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.917930392 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.915288441 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.907498801 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.904549445 seconds)
  done (took 29.481153138 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.927873265 seconds)
  done (took 8.754670163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.916560769 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.899832324 seconds)
  done (took 15.68415678 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.950874158 seconds)
  done (took 8.776728912 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.328361815 seconds)
  done (took 9.171846104 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.912030121 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.922493603 seconds)
  done (took 15.6893315 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.904488062 seconds)
  done (took 8.732930387 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.178020967 seconds)
  done (took 10.09688469 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.925125905 seconds)
  done (took 8.795999652 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.955035499 seconds)
  done (took 8.784486389 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.965483635 seconds)
  done (took 8.792679082 seconds)
done (took 163.366493991 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.906899965 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.906481244 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.903473607 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.903744472 seconds)
  done (took 29.448169217 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.940644741 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.938277846 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.950801594 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.94254155 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.932461198 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.934285893 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.943866225 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.94177635 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.932486869 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.939575405 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.938921654 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.937693266 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.943499181 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.95179008 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.954463115 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.939958853 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.962075359 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.944507974 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.930415768 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.949436622 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.940415264 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.939686625 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.907828758 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.903689113 seconds)
  done (took 48.373193306 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.090884458 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.968544934 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.058762945 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.94878227 seconds)
  done (took 9.898469873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.908289858 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.973813795 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.960830979 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.956024021 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.960083106 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.018235755 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.959450405 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.045356899 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.036178526 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.031168872 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.916000838 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.930173027 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.934391046 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.954859411 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.014605548 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.910127981 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.911957217 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.036997336 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.970672818 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.097307636 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.911406215 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.964333459 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.962048618 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.962064194 seconds)
  done (took 49.15824141 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.912628787 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.919830274 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.915541471 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.908759858 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.911963527 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.907354353 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.91730577 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.911869414 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.931799051 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.912263662 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.910152246 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.914196734 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.91696575 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.912603704 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.912244093 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.924076408 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.923633528 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.912651507 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.916149295 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.920682812 seconds)
  done (took 40.144839696 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.905223061 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.755791686 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.252908845 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.159156534 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.906666317 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.903029056 seconds)
  done (took 31.716522066 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.922400695 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.918240945 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.908745995 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.960999868 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.042862204 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.913874964 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.908788543 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.920673072 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.951418489 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.972925816 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.927986816 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.935387417 seconds)
  done (took 25.114840971 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.907412877 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.911867179 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.907557599 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.922330677 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.918570095 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.914058699 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.914272415 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.907371673 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.921099018 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.925966491 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.919492637 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.919330211 seconds)
  done (took 44.825381041 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.125149526 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.136159409 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.137688211 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.420119064 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.900891663 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.80154881 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.663487526 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.665010525 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.210970275 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.892581218 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.875143533 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.814087389 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.152144149 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.910479617 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.169389771 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.844019729 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.914215216 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182285362 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.913592404 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.913992925 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.199609452 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.970617436 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.124973451 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.951892874 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.125447605 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.301309039 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.159734127 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.16851248 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.250027422 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.99491814 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.992756263 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.960393661 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.920527302 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.922255758 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.911075712 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.921574066 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182905921 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.91276691 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.940631252 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.906119795 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.838193578 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.294487384 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.036736507 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.327909924 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.043776046 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.154872454 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.917556702 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.00115019 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974685726 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.212111002 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.029237959 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.126845622 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.838858695 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.302244367 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.04811889 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.915458549 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.917473971 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.612717118 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.153569598 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.993134878 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.290052397 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.037574938 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.915965245 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.002017312 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.912776502 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.028278088 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.10053366 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.917993708 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.911979206 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.920897045 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.010891108 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.127397075 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.915210523 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914448904 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.929831547 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.916574437 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.266586452 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.387447642 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.910009102 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.473323142 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.304480013 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.884249646 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.34345123 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.960277957 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200708878 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.133821608 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.993422358 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.159449648 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.780294147 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.919573636 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.72273756 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.995290052 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.978583444 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.915099661 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.995523687 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.266523644 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.042818283 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.915175589 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.841183573 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.926523981 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.118355167 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.309074941 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.973810064 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.914712743 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.917741103 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.918965406 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.916698405 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.932736796 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.926248523 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.836606802 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.204217559 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.035944906 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.177018812 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.911870695 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.598892947 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.18788644 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.048221087 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.528697699 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.050326022 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.907442871 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.062391942 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.929433681 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.919400365 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.103069816 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.328792876 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.996487473 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.160044027 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.00343514 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.948482731 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.922210089 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.99928936 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.143603896 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.91453046 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.171848422 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.168797726 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.603476206 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.002319937 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.989499193 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.925397582 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.13669834 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.999054806 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.449123543 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.143184142 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.400181133 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.903832732 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.514715495 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.231192639 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311634097 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.932405389 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.995586051 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.952175907 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.617903424 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.842649124 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.923200143 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.259547159 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.963515068 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.012200657 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.920296831 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.919175594 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.926232817 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.000102068 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.992352725 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.99255894 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.847312945 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.921366346 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.921038161 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.919224304 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.454357279 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.624992697 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.210740997 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.918626037 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.994602391 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.921223195 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.516209724 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.922218604 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.953858156 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.985824015 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.695082945 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.949095778 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.2285922 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.336209283 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.041761076 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.920467014 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.919853882 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.619234315 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.930061065 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.620448836 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.209507779 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.921405576 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.369107663 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.985324233 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.999329349 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.93402154 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.92182611 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.93092919 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922730477 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.123088845 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.433201418 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.317576339 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.269355093 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.002440886 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.192648906 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.11717048 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.305871691 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.613631817 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.443465065 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.145219691 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922021088 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923744653 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.382871501 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.927246719 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.1362215 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.12362374 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.200487103 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.227831319 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.343576724 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.926131973 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.932082437 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.163669157 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.921678947 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.357031188 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.025435889 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.329450411 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.74413699 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.192578138 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.991293433 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.933630523 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.576222397 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.06912674 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.87690111 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050644438 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.848620357 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.69198025 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218228618 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.199927369 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.908748721 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.269092261 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.221877338 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.249568889 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.5647362 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.91707036 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.980283369 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.004626215 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.931762583 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.383705356 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.96535845 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.979414499 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.928005182 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.923139743 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.924443998 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.601151281 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.001523624 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.056620602 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.704359354 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.342754275 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.835069687 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.195552868 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.986782546 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.385950935 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974108333 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.136867416 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.929187269 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.394319121 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.974782476 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.206927436 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.887611833 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.138077025 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.136305569 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.952753741 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.931017877 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.850199914 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.798243263 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.92861856 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.008690313 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.808280595 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.928739379 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.219925061 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.452042825 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963304942 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.926573932 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.313027141 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.411937518 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.113722855 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.933743506 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.139311657 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052608941 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.84661319 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.409365841 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.509723669 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.626475412 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.937658069 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.128766031 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.325021182 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.131214237 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.968391757 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.004334042 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.198082737 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.912002705 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.928819037 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.447731349 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.024811628 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.167413278 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.246131936 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.366713073 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.394707294 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.179460642 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.916778131 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.152036201 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.308673304 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.178738654 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.984448304 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.018582406 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.142399017 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.215085051 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.810797938 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.637592769 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.170288403 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.933248412 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.856129745 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.136278547 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.427283008 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.290099809 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.471982418 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.021185224 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.958326098 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.410688062 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.944170041 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.86447164 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.929803512 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.878862866 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.146212222 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.02060261 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.976068996 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.488060134 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.263522147 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.348023 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.075716484 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.972413989 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.859575734 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.654564636 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.88371467 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.047144506 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.97584502 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.004361054 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.935949929 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.135249115 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.37185986 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.988792448 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.469002018 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.148779155 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239695175 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.207950084 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.255985009 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.894781439 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204925651 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.882550945 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.487117968 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.022071832 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009554789 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.935056717 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.936187612 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.204829677 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.333402789 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.446321438 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.972076498 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.340007951 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.04584439 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.935452991 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.93864797 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.32948146 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.172751432 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.14911116 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.01076528 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.130403499 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.006809102 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.447383757 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.938948028 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.937507484 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.071664726 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.933693179 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.752181699 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.237111465 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.68498681 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.138404166 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.454704861 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.835341588 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.032684947 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984592595 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.934769912 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 7.059957073 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.941142441 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.176416334 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.20722039 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.70388893 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.941020022 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.933863498 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.93340619 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.630840811 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.175194025 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.947956735 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.998700246 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938599607 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.053447143 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.937265574 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.20330046 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.992383878 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.936404717 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.944210523 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.149784418 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.450685857 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.95207827 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.635668722 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.138881612 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.942304952 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.417101686 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.388069106 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.095832178 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.981069286 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.029499282 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.193803013 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.461951526 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.026918236 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.936224056 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.164330051 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.939958883 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.208087897 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210869291 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.938154521 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.152776428 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.32760479 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.227043086 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.945971975 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.813413528 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.942911635 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.203157083 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.988845753 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.937353698 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.947067923 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.933851819 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.676888953 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.445297232 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.120536526 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.283390305 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.733681712 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.695471782 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.940380339 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.940846899 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.684522644 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.651552668 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.152931052 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.22035298 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.886456578 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.140746558 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.64285451 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.936810608 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.212919813 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.865709615 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.941563043 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.344775369 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.212700286 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.873771739 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.944154223 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.545708299 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.934793384 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.023199486 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.940426783 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066473573 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.208778993 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.345567429 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.058326038 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.579511814 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.615969428 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.880937403 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.993578493 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.745702796 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.502015041 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.676276912 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966899089 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.956908838 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.866053213 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.943593003 seconds)
  done (took 1665.202020315 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.93945139 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.028809071 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.96403755 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.994008352 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.984109165 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.980457376 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.961724297 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 7.054874848 seconds)
  done (took 57.772523769 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.937142042 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.952018851 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.942553356 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.938902218 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.944843963 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.937697104 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.097323477 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.951427035 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.941565926 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.944470978 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.93980747 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.93796237 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.209256053 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.959342334 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.952455414 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.938690194 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.941948085 seconds)
  done (took 75.340543267 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.938523872 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.147546985 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.994494098 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.939713061 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.89839548 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.944040231 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.895420072 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.98967548 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.944173722 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.168804615 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.241646419 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.956761284 seconds)
  done (took 90.925181707 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.944303462 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.941122679 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.938829195 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.939339427 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.939385463 seconds)
  done (took 11.572874086 seconds)
done (took 2181.391630683 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.333843555 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.996941268 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03766051 seconds)
  done (took 5.901104486 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.085688376 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.131678889 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.243870403 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.006549179 seconds)
  done (took 10.341624448 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.194691407 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.309093433 seconds)
  done (took 6.370236021 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.294035552 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.959057032 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.312539672 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.94364627 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.948386274 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.945455508 seconds)
  done (took 22.708873308 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.944917028 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.94467261 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.945156699 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.944978969 seconds)
  done (took 9.647227582 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.940628762 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.653181788 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.943121925 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.954973494 seconds)
  done (took 21.360034957 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.08854103 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.05896545 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.087002939 seconds)
  done (took 8.101293423 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.092025835 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.149471277 seconds)
  done (took 7.108398196 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.089838629 seconds)
  done (took 3.957170073 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.972513727 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.214543516 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.440719869 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.466926833 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.600918636 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.680465271 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.252136043 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.175420899 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.362001826 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.366603838 seconds)
  done (took 25.39956797 seconds)
done (took 136.662279263 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.297569238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957681615 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.138957628 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.314023402 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.342805706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.147613776 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.159007299 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.30385946 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.988147267 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.97623232 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.310785416 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.335566129 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.103728538 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.961237112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.110562712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.961092042 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.179837729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.322612084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.988837361 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.206898059 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.163423936 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.955936599 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.155620168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.968997582 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.16846692 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.095930783 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.49955405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.965086113 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.139689948 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.510952365 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.096500111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.353665612 seconds)
  done (took 171.051357455 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.9435626 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.944402517 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.94388359 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.946242742 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.24001209 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.94475379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.947421821 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.944538941 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.155997524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.142807622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944626085 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.224414465 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946181017 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943717872 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946560228 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.944918185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.305149213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.945562946 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945150809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943778394 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.944794547 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.086381902 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945393951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.094669829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.295851511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.946739896 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.946562781 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.945239035 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.948119727 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.945045872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.944295325 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.946142969 seconds)
  done (took 210.104907825 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.945194741 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94686214 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.945254301 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.946739673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.946369986 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947181546 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.948689975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.947868338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.713142226 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.703795569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.946641181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.946838806 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.948587655 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945555461 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.948206989 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.946798106 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.947014877 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.947448266 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.947291409 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.94668987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.947357701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.63753696 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946531454 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.653107149 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.946062493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947979064 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.948514222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948062581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.947368407 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.947238205 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.950531775 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947631276 seconds)
  done (took 223.104437203 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.192170962 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.950909804 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.951848585 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.001590026 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.952060925 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.951108842 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.959589307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.200033216 seconds)
  done (took 20.034081611 seconds)
done (took 626.17828892 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.317994848 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.152676099 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.121828115 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.972722681 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.220554244 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.011810365 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.9676334 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.030582998 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.805757864 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.042386263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.621410426 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.989471084 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.722144344 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.992891204 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.091241936 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.025593552 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.534522444 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.633503834 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.11066363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.033807272 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.144284067 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.913953948 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.044173531 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.859760782 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.643362568 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.956407338 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.025839565 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.538717234 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.979224275 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.125311285 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.619518332 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.248629146 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.985381087 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.968736722 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.019939249 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.9989119 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.201699717 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.981375799 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.095500613 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.710062575 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.037638296 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.697856525 seconds)
  done (took 106.071380081 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.960721615 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.957200027 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.957809943 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.956660392 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.966018423 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.957020879 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.956338685 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.958149088 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.95721399 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.955970717 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.956865604 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.966589192 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.957273324 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.966638139 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.957187848 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.956416096 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.956780107 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.967785273 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.957356295 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.957043621 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.957383861 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.957600348 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.952959311 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.957381597 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.956440727 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.95696351 seconds)
  done (took 52.81158603 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.955817404 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.124708366 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.195250328 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.971191559 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.952853708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.95683202 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.969852077 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.961236835 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.956304404 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.956958413 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.063157116 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.96232246 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.971779355 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.194573663 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.967765558 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.95624219 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.956095069 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.954326494 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.132080437 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.970617223 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.972462935 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.963746694 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.972615675 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.970650418 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.956003644 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954772507 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.959106878 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.400128429 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.965175328 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.061232415 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.998750434 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.976119364 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.343059534 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.20602999 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.00777249 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.964377652 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.957578481 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.066326365 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.962212767 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.956308194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.973062459 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.9634734 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.20015438 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.484858071 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.969900366 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.958082439 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.4100461 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.07783722 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999898973 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.964758417 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.202762034 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.970890994 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.958719736 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.955292959 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.99185217 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.967960256 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.955832365 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.274283041 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.971399016 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.97256777 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.966129276 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.956916093 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.138584567 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.966516136 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.124756264 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.967076059 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.962790886 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.957672574 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.20146885 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.971374743 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.501592666 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.972571457 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.959136374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.063841098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.132113727 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.43584965 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.969939927 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.141168862 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.360291568 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.983960792 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.968149712 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.390281194 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.986597785 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.966031842 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.960142614 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.960622583 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.960700138 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.004836696 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.971545024 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.407719028 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.494968658 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.289437212 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.985725445 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.971206212 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.957938749 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.273164642 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.972567441 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.961238555 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.191675859 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.505400073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.972985105 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.965211543 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.479259587 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.97447732 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.977533478 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.968781878 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.208023715 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.972262974 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.007492001 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.960408475 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.965150342 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.961538701 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.976525947 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.968258888 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.962181738 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.467339887 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.085057366 seconds)
  done (took 242.635283559 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.958572103 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.95936433 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.957839788 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.960178931 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.958215867 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.95799938 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.957417251 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.957652908 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.960131052 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.957919174 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.957228927 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.959034809 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.959593619 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.960995583 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.995127365 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.961181372 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.448342663 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.960413945 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.959254832 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.959471972 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.523056806 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.96511567 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.960560786 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.961450807 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.958849478 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.958415512 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.962983795 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.991930867 seconds)
  done (took 169.875285728 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.963894707 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.07111158 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.977641243 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.989155373 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.973552235 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.963781052 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.055979134 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.978553991 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.965979437 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.962612434 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.964282366 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.020197469 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.97620082 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.061440007 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.992441112 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.069882403 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.065281973 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.972512757 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.965882842 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.967192043 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.989414454 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.971980534 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.021078445 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.081129795 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.980410254 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.071718911 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.977454744 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.964625476 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.961781531 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.072495355 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.982605556 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.024777153 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.990356122 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.982342248 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.076096592 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.074096854 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.069177403 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.069036062 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.969469113 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.96545674 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.965638712 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.962801389 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.073851263 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.982327885 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.963517923 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.077821979 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982447257 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.967257958 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.966631621 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.966009579 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.977589162 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.979386181 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.025200403 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.089118107 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.997433612 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.991229071 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.059698319 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.079780119 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.96574759 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.060303006 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.972252015 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078970024 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.983934704 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.964263679 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.970290133 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.971690993 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.997030813 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.073632831 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.068235623 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.972938733 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.061711269 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.00355841 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.977653822 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.967913597 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.968254453 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.077022379 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.07919073 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.003438407 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.002483531 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.996496635 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.973564069 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.965234632 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.967494834 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.981396604 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.975459694 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.080601343 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.075906906 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.974911441 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.969068223 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.969161343 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.969202537 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.988974089 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.083623135 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.998351078 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.070732415 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029975147 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.035335968 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.980897968 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.982428377 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.972505767 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.027235506 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.981618748 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.980000682 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.23555563 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.02541811 seconds)
  done (took 212.762233054 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.376539246 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.008741347 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.021576605 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.303280016 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.334380251 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.916530576 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.008727474 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.01631181 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.045804116 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.23526743 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.08293527 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.036683784 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.002665929 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.987338726 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.009843157 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.049886689 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030315087 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.352018201 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.231136637 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.495466425 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.999322702 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.285961977 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.333520125 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.601507157 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.061269879 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.424992061 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.635836048 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.174333068 seconds)
  done (took 65.960051149 seconds)
done (took 851.992517211 seconds)
SAVING RESULT...
DONE!
