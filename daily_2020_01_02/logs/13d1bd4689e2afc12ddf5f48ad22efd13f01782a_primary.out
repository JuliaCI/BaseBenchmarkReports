cset: moving following pidspec: 32107
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.383028027 seconds)
loading group "string"... done (took 0.581027392 seconds)
loading group "linalg"... done (took 7.21198483 seconds)
loading group "parallel"... done (took 0.160011753 seconds)
loading group "find"... done (took 1.139849939 seconds)
loading group "tuple"... done (took 1.749981387 seconds)
loading group "dates"... done (took 1.226842292 seconds)
loading group "micro"... done (took 0.216126271 seconds)
loading group "io"... done (took 1.016960386 seconds)
loading group "scalar"... done (took 38.226932674 seconds)
loading group "sparse"... done (took 12.084257713 seconds)
loading group "broadcast"... done (took 0.94436751 seconds)
loading group "union"... done (took 12.204511306 seconds)
loading group "simd"... done (took 4.484712806 seconds)
loading group "random"... done (took 9.059266402 seconds)
loading group "problem"... done (took 1.840815992 seconds)
loading group "array"... done (took 20.777212428 seconds)
loading group "misc"... done (took 1.678049076 seconds)
loading group "sort"... done (took 3.315713363 seconds)
loading group "collection"... done (took 17.231292996 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528433681 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125194003 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.119068498 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120140632 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147593775 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112914358 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12561487 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08624938 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.85215568 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149270472 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117504518 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.42991903 seconds)
done (took 5.220790073 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17654657 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08272649 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083093148 seconds)
  done (took 1.295069839 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.065173734 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122630389 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06674143 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067289805 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067461596 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066412517 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066420681 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066356706 seconds)
  done (took 1.653651497 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073054324 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070008809 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065913611 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06833327 seconds)
  done (took 1.406776013 seconds)
done (took 5.736541606 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.784524606 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206328976 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.187274575 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412065553 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131196414 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159169652 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643313356 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.316813401 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188291494 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080976106 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109444457 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328108844 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111199643 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628126748 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074687075 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091353129 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136553516 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.452575925 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067336279 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082302564 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088909629 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128243493 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087788518 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074557151 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148198245 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067602157 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136411121 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080768022 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067652185 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214034158 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173158622 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.649590263 seconds)
  done (took 10.276239442 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095452523 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096854911 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069166118 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123001544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098979219 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069888611 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071201452 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067437583 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086325204 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127827662 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088478474 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101533547 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065832428 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069177845 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084791389 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203869948 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080799416 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081379509 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071321234 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075333972 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105033206 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078072798 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076807869 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076828052 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129758525 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183461924 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099669467 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098876265 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067208119 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079141284 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115071227 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127071268 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.067793699 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066367584 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123692864 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095645103 seconds)
  done (took 4.58568506 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.997756934 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144301473 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090329479 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135121929 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064967496 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109233954 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065429352 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081196709 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209531642 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.455226497 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.592165601 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111282112 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104371052 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06752312 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068466929 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067449758 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.51120522 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098557389 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107989073 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081739579 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070939037 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069510218 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.371995814 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070793111 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065130736 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.0684877 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057378274 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125934623 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068873631 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.942265831 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126003645 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066248783 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100577694 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161344203 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.109313511 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08749386 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.274789078 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068743549 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064952261 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154462762 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069945013 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066813569 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.08452169 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103782068 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.112439841 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065306735 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067014965 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166382476 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065510631 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079830481 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.642521184 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15374903 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080201926 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065742382 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254571686 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088287416 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06976598 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064932938 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.164830704 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133000185 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065305801 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068395268 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067201616 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068393453 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070155378 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.365635221 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068338127 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.839548512 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069683925 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.078170579 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069355358 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070488974 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0637794 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073210558 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072805653 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.088152429 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067146683 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075229628 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066191594 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066370761 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067220839 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06417137 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08363761 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.381217719 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067096196 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068597765 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064913763 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089559029 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097434185 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.0668859 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065722878 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100068004 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068561316 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066566474 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.106568009 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066971758 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083681088 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069755931 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113419735 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068393509 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.183718126 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067101248 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096251563 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069811113 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099343581 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084091408 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068996428 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.427959482 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066047573 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066088221 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068898694 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065440114 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067937794 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066952635 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079054297 seconds)
  done (took 21.109343984 seconds)
done (took 38.097147472 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236696462 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080440325 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074376841 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074529995 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074189281 seconds)
  done (took 1.762697213 seconds)
done (took 2.964161813 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122786485 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100903785 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064770117 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097647404 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064400206 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102032296 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101463541 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082352342 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.101042943 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064389783 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098169636 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064858555 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064525788 seconds)
  done (took 2.350841221 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084285191 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084260736 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071344989 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083121168 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063761207 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08334321 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082020233 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088995662 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081721413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072953091 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063848217 seconds)
  done (took 2.0543073 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082769495 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085305402 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069693257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082689563 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063233764 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08299622 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082055319 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086373203 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082694402 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073879913 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063920282 seconds)
  done (took 2.048761461 seconds)
done (took 7.642914167 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077954409 seconds)
  done (took 1.263488063 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593934338 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.081337877 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081842656 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111644125 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189730644 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118487757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.270449325 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086972356 seconds)
  done (took 8.903093724 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102470037 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070668646 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070165295 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069426219 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068940765 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072567875 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068745865 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.06904376 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068887876 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069834779 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07105395 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067779779 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.07223627 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071673152 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072027757 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071153063 seconds)
  done (took 2.414087669 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092688565 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091500865 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073970783 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074669401 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071952897 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071603471 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073828233 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074268035 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070925178 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072487541 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074390266 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073859169 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071649179 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064737393 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074025833 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075538204 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070984757 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.074119295 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07425352 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075464757 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074350338 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064602565 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071242889 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074054136 seconds)
  done (took 3.074835332 seconds)
done (took 16.849444634 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114479985 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071732595 seconds)
  done (took 1.378649369 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081666444 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083200574 seconds)
  done (took 1.364761589 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08246973 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065949676 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090202434 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077951576 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065772406 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066015744 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087476018 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066407922 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065974984 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.065975966 seconds)
  done (took 1.934647744 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068540752 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.078145677 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071360286 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081490109 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073550976 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06437024 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071883131 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067632057 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.076629886 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062890001 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.072291909 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083022113 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070963169 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084346787 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072462612 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068590326 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070815429 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067942098 seconds)
  done (took 2.509958263 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065370121 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067171381 seconds)
  done (took 1.336546431 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066721892 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063868703 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067500962 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066679703 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063496906 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062462649 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063228468 seconds)
  done (took 1.655141312 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.38534221 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113227745 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.311149009 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071166334 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08237351 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.256277582 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065906014 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.07050692 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070587543 seconds)
  done (took 2.672253146 seconds)
done (took 14.058745115 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079762692 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086889276 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096032501 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.37558824 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091675725 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066208487 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114792872 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.189007094 seconds)
done (took 2.31640694 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217759789 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.63881637 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.404123582 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.20492532 seconds)
  done (took 2.456270393 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344487568 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089281145 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059581754 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.06768746 seconds)
  done (took 1.779436046 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067502359 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069771077 seconds)
  done (took 1.352873912 seconds)
done (took 7.021352773 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086257045 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065938931 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063648459 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06588027 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.064226382 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066617461 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064023727 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063968593 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066579285 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066183291 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068609245 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066120713 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066316295 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06404666 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063664504 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066487096 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066531731 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064287233 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.064500608 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063857157 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063753297 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066185805 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06352346 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063473281 seconds)
  done (took 2.834509814 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.08544693 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066151669 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071489505 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071756394 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070018484 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070768729 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071125811 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066236632 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071539988 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068501975 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068982509 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070092259 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068791746 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069096644 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068438973 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.070053802 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072131647 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066468754 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068813623 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069696279 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071884191 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066240291 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069785292 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071760536 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069244567 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071091417 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068686521 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066371021 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071097353 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069585072 seconds)
  done (took 3.323944622 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070059446 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064131282 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064519158 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071063866 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063163645 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06468136 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063272597 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063806849 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064658384 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063673125 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064986143 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063678362 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063715077 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064305454 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064644394 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067600749 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079639217 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.064236739 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063836667 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064077952 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.067511183 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064082639 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.06400248 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063700416 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063824765 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063653363 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064583739 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063557314 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064797665 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064162919 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067149188 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06774804 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063746009 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071218568 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067522872 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063827056 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067854693 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06371082 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064633095 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063496186 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063698 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063474131 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.064395136 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070482174 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063906802 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065707428 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063940395 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.065033877 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.176966022 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066206052 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063001257 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063573484 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065494158 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065167102 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068773994 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063197715 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064534427 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063383275 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064498519 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063180786 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062910571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062892354 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066359608 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06432652 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078637526 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070381831 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063390518 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064970838 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064012544 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066510553 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065463655 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077129936 seconds)
  done (took 6.058846057 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090365743 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08781752 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06541337 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065624858 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061576871 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064117556 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07036665 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064511193 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065340008 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082156879 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064295079 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065323813 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065476947 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06765345 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064204043 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065482106 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07215762 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062142178 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063483427 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06754026 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065241171 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068826708 seconds)
  done (took 2.743681816 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.156304525 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070955351 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105905587 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.076070078 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070192083 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074966886 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070287997 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069740129 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069427424 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068349553 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067969303 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069870094 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069724563 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068053504 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067696606 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067600156 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069732789 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067774754 seconds)
  done (took 2.609633534 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076751666 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066276548 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087358156 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066505435 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065795793 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068647141 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070590681 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074490585 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068573495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066245235 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073673662 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068397055 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06903597 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065862619 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068598639 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065911319 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068216912 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065711661 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073756802 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069869854 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.06980105 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073516303 seconds)
  done (took 2.773510249 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080624901 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068006872 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081488274 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06876812 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062475863 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064368156 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.070352773 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065660313 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070391896 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.06758789 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065741401 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064696971 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068579589 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065313099 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068973438 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065501464 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067514093 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065706841 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068009424 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061396003 seconds)
  done (took 2.592366694 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086876595 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068195307 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067772303 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07548649 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067104969 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067390943 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07504843 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067215149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06757514 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088761706 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067732795 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067575023 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075031843 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071992892 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06771391 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075229125 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074518979 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074770527 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067658773 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06722473 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088377454 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067642483 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074846995 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067179939 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067781367 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067745541 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067729085 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071930341 seconds)
  done (took 3.247066616 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066888059 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.06625751 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063190126 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064164233 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063951133 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064232929 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064007641 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063378677 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066457097 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063447674 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066066265 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06633774 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066096737 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066374748 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066093617 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066665728 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066250942 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063838721 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063661692 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063942492 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065854171 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066215542 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06650696 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063706194 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063932099 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066078642 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063322289 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064347455 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066075403 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063251249 seconds)
  done (took 3.186683973 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074688534 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073530708 seconds)
  done (took 1.385111115 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063327457 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080286963 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062704693 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071317882 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069787729 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066565521 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073205932 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070037466 seconds)
  done (took 1.791133572 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082214898 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078417665 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067908165 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078785625 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076946383 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084255567 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135732335 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067176761 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073185128 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064373669 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080178876 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066320625 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073116933 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067564858 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07278551 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073502896 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064187405 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071880312 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068873087 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064750438 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067789051 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075379327 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069015573 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061664892 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067649332 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088589733 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077422918 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.0653924 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069520636 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073736828 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071907491 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060633296 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066631101 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066720187 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064635181 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076195981 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081395388 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069325272 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.075602228 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066944794 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075394404 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061690346 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070937432 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073908705 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076267022 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066783759 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066608533 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060970876 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064193175 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068338411 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061352126 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069100992 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060755091 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07407305 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070014953 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077608427 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065058508 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06850513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069622936 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069939385 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073061873 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068353985 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069033016 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066274066 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076673332 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071476343 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075118814 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061781645 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060370348 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063891175 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075958838 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089483251 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07296709 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06711702 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066989428 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06372661 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069309862 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067112646 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071370521 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072518399 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066221067 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07130961 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073046577 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066658827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068275979 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073857334 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064248015 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069860835 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064126493 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083580243 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065325652 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064383266 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06456957 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076873352 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070039492 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066134443 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064295077 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073204692 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060433168 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066283233 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067117912 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067297773 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076673043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069958593 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069961842 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074357926 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07249868 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06562046 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068055092 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061882627 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065916103 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064414095 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072836417 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059160802 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067748313 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066182764 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065635883 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.073647201 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063270575 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.064747994 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073184729 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071011842 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189527659 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.064057346 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070968296 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06703016 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071013037 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074554845 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066019248 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062035921 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062422582 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071409874 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067073543 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071304113 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071596493 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069769092 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061207879 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064703572 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072141423 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.076470769 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067215771 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068521975 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073594767 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068378126 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066258058 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073465295 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070228593 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.066317796 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073046558 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067959491 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061578208 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069257946 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069904107 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065120249 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071528752 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069367199 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069658192 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067419383 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065896116 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072589221 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067374552 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.066227931 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066872682 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06569584 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077509588 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068937171 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.0615423 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064261943 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075333392 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065223903 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065850646 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065707764 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069868493 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067085923 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064696408 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065640494 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068566839 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077557746 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070557473 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067038774 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.07309804 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078461352 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066623004 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06949194 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066550189 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068232878 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067570181 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075794153 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072161464 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071498516 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068942351 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062507352 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072356446 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073908967 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065897014 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063740415 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065405883 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070449219 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07148981 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069793109 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066511341 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064473609 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066736807 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069305672 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068953252 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.065551537 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065530374 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.071705251 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064136924 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072523591 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066428087 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076774014 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.06961495 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061090449 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069419737 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064484667 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072594669 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.060769613 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064186602 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065834088 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067443048 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065493784 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069055216 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060553672 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073209832 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07375881 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066723713 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065765014 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066040406 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073143073 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.06762504 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069963694 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068109684 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070815227 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076214086 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064279604 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068434741 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075000747 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064898656 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.05945992 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070455813 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063240041 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063697787 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064442663 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063683683 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067862719 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071977126 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071414022 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.187330881 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070225936 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065790802 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066235094 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.063121619 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071566244 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069780218 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068206837 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073100599 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067962644 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066985062 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070734719 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066508352 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067267403 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067983548 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07085732 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066942139 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.0684963 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066328805 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070649369 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065866065 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064211312 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069154886 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066755865 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067426924 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071920067 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066838344 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067248565 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06946304 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067008653 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067603086 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066905285 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06584398 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069697314 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06767308 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067014604 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068868827 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061698838 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07427531 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066765637 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074930288 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067243816 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063051868 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073887018 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069057723 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071778348 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.068164265 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067170025 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068944135 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06685166 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070455313 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074369238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06465561 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077805156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074058948 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067958218 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069649683 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067563985 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067969715 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065247479 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067429749 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067538184 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067608122 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066540375 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071413777 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069315515 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066987134 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068508258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067607436 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068026175 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067555297 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061362135 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065738639 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066403488 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066430459 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075385908 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067083087 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066327129 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.06567294 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067005322 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065683627 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063211014 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074414511 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074878036 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067146502 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073552148 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06622348 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068039307 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077253686 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060530498 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065010285 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064193934 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065063046 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073950046 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067189824 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075992021 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066568052 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066315889 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063770115 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.067428994 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065938126 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061260992 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065345106 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070460187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06579782 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066055926 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066535924 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069742477 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06772704 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076109966 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065932202 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067335703 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066147778 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.06341292 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065203009 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065156496 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.068496176 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066412299 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063469648 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06291491 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064886918 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066479402 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067363941 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067582884 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067037748 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072352933 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065758119 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068240848 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067967318 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059915525 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199633943 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068183427 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067773261 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066478035 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0713927 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071369864 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067626179 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076427572 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067431953 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067249083 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067029472 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064919985 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067232345 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067222625 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066273929 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066238736 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068722918 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075709255 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064627204 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071256625 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067588638 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067374427 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072919507 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067585663 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07085716 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073064576 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067705752 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069969637 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076382454 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070578218 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070483396 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068410857 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068208952 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073111266 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067358876 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073718571 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067949815 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067611259 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069197635 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065707352 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066912512 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067599667 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065912077 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.07349302 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067864258 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066994278 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066800919 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064977737 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068731362 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070239513 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0748847 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070317946 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069980547 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062131729 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.064014372 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067979582 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064277275 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068774182 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069007199 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073048291 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068993293 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067330775 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066368545 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076663067 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072681442 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070336159 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065049527 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070030403 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067932854 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069066368 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.068253025 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067424769 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067971691 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070446667 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068005952 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066268292 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073376315 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069878752 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06726429 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067841029 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067084896 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066767974 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061674271 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06658231 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068192475 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070983893 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068470327 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066586081 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076636034 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064047893 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067147974 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069716556 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065261895 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070743035 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061182915 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067879371 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067454903 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06703554 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06145369 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065442765 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063832821 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068421744 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065586249 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061295444 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076846211 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075820452 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.06952415 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065634908 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064946258 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061386512 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060816308 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065840837 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067015268 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068235482 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076131068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064917737 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064573593 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060801838 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065164885 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068284406 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068415056 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062297315 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06036821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.064218505 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.0682186 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.070793702 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063730615 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065180217 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068240954 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067285996 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.194264457 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071092493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064131655 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071243408 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079057417 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067715545 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0680783 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072946594 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073989237 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067636761 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062440014 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067018487 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070695478 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067578797 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068155677 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06760936 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082335628 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070243089 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066743512 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065247242 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069948878 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066480528 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075428082 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067871513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067484549 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071734981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06882736 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075113327 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069648743 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074472121 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.069890084 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07014045 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066286162 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067644587 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06522365 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065763863 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067943361 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068004395 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.0710236 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075304203 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066102998 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077690094 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075752704 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.06896493 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063151319 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065958327 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065888174 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061404192 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067557267 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064478975 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065457437 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065519561 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06679317 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068206556 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072234499 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067638892 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067428716 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06732564 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06032717 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069422027 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069420959 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067439963 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06370435 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067200454 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067714863 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070888087 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069749798 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064714415 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068992727 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068692459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06735373 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062316477 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072659077 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066348791 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068859305 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066024153 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066319178 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066700457 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069635772 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071102293 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067400818 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068688298 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069977737 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068425362 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063999657 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064029126 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071908185 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064253656 seconds)
  done (took 42.645051195 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100220961 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063868912 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062765669 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062637428 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074040084 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063153955 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062081007 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062879477 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062932038 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065075224 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062085045 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062109976 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070738235 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078042905 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073837847 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066355812 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062036796 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063088262 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062167926 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063002752 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070301937 seconds)
  done (took 2.754055158 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074677789 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077906853 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.075594875 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082910215 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071178198 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070505015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.075471096 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070495588 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078454934 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07258629 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078561124 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070417929 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072317449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.0721263 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07222911 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070951186 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.078687508 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071010494 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.07028748 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.075287567 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070876311 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075504624 seconds)
  done (took 2.941029803 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06865166 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066393355 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068175074 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062134486 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066894569 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061962614 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069708565 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064254843 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070214155 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06596868 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065969308 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065568468 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068776828 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061189481 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066450056 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064111351 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106910578 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069936128 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066396848 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.067412878 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061561318 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068146584 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061715165 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062116114 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065259655 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.06945796 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066372632 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064329415 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066228848 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065173641 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065873011 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064457786 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067930235 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066319824 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065304769 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065490012 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065726038 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065838029 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061481085 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063863012 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066452395 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061341525 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066498741 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06682998 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063393085 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063514033 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06775754 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066075673 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061010057 seconds)
  done (took 4.568680377 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078413467 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109854752 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067034983 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091779117 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079800563 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072541865 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070129889 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089859321 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063753993 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065504547 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081366006 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.079125173 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065919235 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070348282 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072226172 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065483237 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066997279 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064376999 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069090709 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065314827 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.0691442 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072106549 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079992674 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077789829 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069604265 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064495078 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064648806 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069850524 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077522397 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069387891 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069613683 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070452653 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079797884 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070950362 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064365878 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06768883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081029822 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065639372 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068308929 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062826211 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067359372 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06993206 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072532658 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081762251 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065242723 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070420203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065024766 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062885774 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077683235 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067524334 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.072869846 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.078766126 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069649512 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065408108 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069692673 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080166313 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065148869 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063849823 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.067843162 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076463837 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062655482 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068873514 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078240164 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067357178 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071714178 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078303564 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07000215 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069001807 seconds)
  done (took 6.338880158 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076579726 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095803858 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083866291 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083870198 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075799429 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075656876 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075588712 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.07549939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075042252 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079920255 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075517129 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115335402 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071436734 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077527486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075382339 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.076052028 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075528035 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075586431 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075436444 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075826562 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075628866 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082377007 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075510902 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082662087 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079430215 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070580873 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074748513 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075147903 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082954125 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075197443 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088635398 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075063281 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075686507 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082678408 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07943739 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.075350229 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065248702 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074811513 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074995 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075082158 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.071075064 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082793707 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.075391287 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070783935 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075348388 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075056774 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082400827 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079380032 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077714956 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079653097 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076242832 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083006303 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075209426 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075316374 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082821351 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085193079 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082904919 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083335995 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075972685 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082585038 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082790245 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085435464 seconds)
  done (took 6.211686157 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082100376 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074823541 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081201688 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061761429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064602885 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071582738 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065032706 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064290154 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073978133 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073866118 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076153179 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071663436 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074544613 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07655383 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07132239 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074338823 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071912083 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071780007 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074008721 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071796704 seconds)
  done (took 2.786880204 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074874928 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082892813 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067258127 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071880238 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.069244437 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071383174 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068906203 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068980465 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066670326 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069292921 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076250022 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.076657673 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066865041 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071415867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075839339 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071285861 seconds)
  done (took 2.481696481 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083761448 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073206594 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080363428 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066259821 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066747362 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062753618 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065487387 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061665459 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06269537 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078148217 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066576715 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076313333 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065608085 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065437042 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062721917 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070787996 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061965855 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062843194 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066385172 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078730528 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069440685 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063793026 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068986083 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065800909 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067845034 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070039957 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064731953 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065719313 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063129694 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065672644 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.068498266 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069237458 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062175101 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063608239 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064426715 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063453531 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064810602 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065571219 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070655028 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065550706 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06382197 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067716466 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065536698 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066474635 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061647798 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065804572 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061450933 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067633802 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063359421 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068095647 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065911633 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.06811007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065530934 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072221826 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067817524 seconds)
  done (took 5.025927383 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079514892 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069497327 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061465683 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064361756 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069400684 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067243837 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069279366 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066914788 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067046802 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064257352 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067667239 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068896789 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067769768 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069464364 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06689994 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069292433 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061708114 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066911576 seconds)
  done (took 2.561627723 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071286203 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065492547 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073385491 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066515967 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066025311 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068773012 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061740685 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064445584 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06440831 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065765829 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065687625 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068634382 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064421084 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067837285 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065738712 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065541398 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067998955 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065128774 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065386981 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061754703 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067914211 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064548912 seconds)
  done (took 2.795608697 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094130754 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082742412 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139656623 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078942881 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084549214 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07113639 seconds)
  done (took 1.890024676 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090706038 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100306169 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066353428 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069350846 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075442788 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069283267 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069975567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069726043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078447736 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075808841 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07007891 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078306244 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077579346 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077354765 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075150348 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075287198 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06992217 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069322682 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066052916 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08276221 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069859685 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077321468 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069379768 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069766483 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069813362 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07726282 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077847899 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075342805 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069705598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077830956 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075337484 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070331693 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078118691 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075590159 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069023548 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078338797 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069819917 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083100054 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075471886 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077574898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06857555 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075663465 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077743318 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074379495 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077993988 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070309801 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074943716 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070060714 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070608658 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085955275 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076475535 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077399323 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078625435 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07889917 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078146202 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08552664 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076248533 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077260226 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075853881 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07607875 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076999209 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075518031 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07690422 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076082492 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075618023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077699644 seconds)
  done (took 6.323151953 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104330995 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066644839 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070193519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076298628 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077879164 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070173384 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070524458 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0699676 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070124469 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067187058 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107941697 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070285475 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077555004 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07790787 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070716514 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069631378 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069927461 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077517268 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066718474 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085261589 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070241616 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077240299 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077442133 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076822878 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07603625 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075376365 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070216581 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069886211 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070070639 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070406033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074692184 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070204688 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077330393 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06684047 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077463553 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069748942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069263493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074726389 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069537472 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075387277 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077023743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083597553 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07037347 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069722082 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075694829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070118703 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069666361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066587287 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070109263 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066625266 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075730156 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075442593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076224118 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076637044 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06991619 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070466991 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07047947 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070324792 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070532854 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075391294 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077484572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069972718 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08548827 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069994458 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07018252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077539461 seconds)
  done (took 6.234996208 seconds)
done (took 129.319559541 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18723236 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164986816 seconds)
  done (took 1.689529248 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069207795 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098789047 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077099975 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12784035 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066273151 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099911145 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099259244 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079026249 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065746099 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.066261479 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066070601 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068660361 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131808067 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066115266 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065822924 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068620883 seconds)
  done (took 2.667196988 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099466752 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162219318 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102501965 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065444102 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098931846 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072730549 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065240493 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075357614 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070959331 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064821457 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073300921 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071148915 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06517675 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070625254 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070704374 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072975861 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064952068 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072613431 seconds)
  done (took 2.791202497 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099368823 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091617491 seconds)
  done (took 1.543782295 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.161854168 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.107224068 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147822873 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.351289094 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162849034 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148167329 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148047111 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145899074 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.121079491 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140290676 seconds)
  done (took 2.983588284 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099350445 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154339024 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.265596833 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117139025 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072811523 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093606457 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118939047 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078407709 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079907521 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079944047 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079711352 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075796691 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098908283 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073247913 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073551182 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075743304 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102940198 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072610774 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074055403 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075437944 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099900138 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065566496 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072903155 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072672719 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076537255 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077290782 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06631682 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065970434 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075653222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074382143 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076064552 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092551607 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.0770984 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105107433 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.071055624 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106037384 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076507339 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073150177 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074197154 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073211919 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077892089 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077891644 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072914181 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076453491 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066197683 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.07599625 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065988938 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065514443 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07727469 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.067320022 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077241651 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075535184 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104835429 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067687339 seconds)
  done (took 5.955551191 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103064008 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.10653076 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072295421 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113939794 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10442531 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072177495 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102946372 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095656456 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103525261 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070160414 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068903045 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070245196 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081762058 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082505701 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.114779837 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106497282 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073657328 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071245159 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106328349 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104371778 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069057701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097308131 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090593325 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103016981 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067743826 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070323378 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067905369 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070098572 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076394546 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077997733 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.0700993 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080495049 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084925427 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077653486 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067548854 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068610957 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068261773 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079407071 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079258226 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078775968 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077443416 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068395107 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068066449 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069330573 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069759271 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068020275 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078563977 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079958512 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078266755 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069431982 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070390455 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068183959 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069413252 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.08010917 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.07745112 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080732368 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079927119 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068324988 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068445631 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072193827 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080823293 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078506601 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079438604 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069534687 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07848055 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068276845 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080005937 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083704485 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068704237 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069870252 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068533477 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069373595 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069657627 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077567484 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07753322 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069552722 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069143506 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068283587 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080131634 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078236941 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068220218 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076477513 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067260827 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068521963 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069901598 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069057203 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077293803 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080020309 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069362857 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068228586 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070079479 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068657277 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067206523 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077158544 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080265336 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079429529 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077879537 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069558445 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077414161 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077211679 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069025901 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077144319 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067739116 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069023578 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068372824 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076627268 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074926039 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076824205 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197744642 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06858502 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078655194 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081048719 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068826013 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077951526 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080553295 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080568697 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069152544 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081920645 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069467618 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080430552 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070118685 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080031903 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069600331 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080340934 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06882623 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068363959 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068574737 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079809829 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073599876 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069742143 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070050992 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070523161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078857199 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082277116 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070677425 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077970068 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078672763 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070897683 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079341613 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069095327 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078632985 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070341687 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070969192 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068238975 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082131887 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068679152 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068120457 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070166888 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080224566 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068983051 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079990688 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078194257 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069378163 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080773306 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080256828 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.0776962 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08092614 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070459495 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069795951 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068760539 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069564109 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077870286 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080212756 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070305163 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069231113 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07777632 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080087307 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068152448 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078478278 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079752373 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079341015 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068233622 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070612571 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080387349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081172622 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078891148 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077960952 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079090899 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068908409 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077099727 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078229012 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068721162 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084220557 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067997396 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082712397 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078539027 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07682164 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078679951 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.081031446 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080141973 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080603683 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083239551 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068296719 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068026917 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.085764283 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068565153 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069590921 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07839303 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069567586 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0696021 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082961613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068814305 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079624994 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068185058 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079130451 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067618815 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069239858 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081890661 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067178279 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067923057 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077263433 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068437067 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.075823813 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078737995 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076740244 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066525041 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068527412 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208541406 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07997424 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068532087 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069453068 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070909585 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078794331 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077391972 seconds)
  done (took 18.657646222 seconds)
done (took 37.649091107 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.209434611 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152123963 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181555256 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118483835 seconds)
  done (took 2.1200861 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.116093082 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101139299 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093119316 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065251435 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099508153 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065401951 seconds)
  done (took 1.933750161 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310883785 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210120696 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.187498397 seconds)
  done (took 2.099089103 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20160481 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188471292 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.418407895 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.261876701 seconds)
  done (took 2.567593311 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.145145899 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087934256 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067439902 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083510416 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133465844 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160760861 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100687559 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125098954 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.07958029 seconds)
  done (took 2.425261126 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149207713 seconds)
done (took 12.686747534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.256332758 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.110795954 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.198781233 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.073983049 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.083659167 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.082954835 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.220941109 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.102973376 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074232121 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078200552 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.215552067 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.239667803 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073943929 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173258551 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.122769122 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.199046832 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.07262731 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.09232363 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.094774892 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.21264535 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.13499774 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.187211755 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072366736 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.205079334 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.079262167 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.139098903 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071744082 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.210207054 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.155314293 seconds)
    (30/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109948834 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.224034051 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.089541093 seconds)
    (33/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.162637526 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.098440162 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.116333685 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069285861 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.114101307 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050969466 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.162224651 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.100624952 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073571311 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.1180385 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086163475 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.156760179 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088410533 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.0806334 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.051275718 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.107267638 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.072796616 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.094144265 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073008718 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.06697948 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190273423 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070199837 seconds)
    (55/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.149603873 seconds)
    (56/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.07554011 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.154932837 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.060729075 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076237075 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088882064 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.152430096 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06627303 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.073538213 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096724271 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072555032 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.071460552 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.089979518 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069254735 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052106456 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079844645 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.167306779 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072351607 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.053237806 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068062215 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.110930869 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.06619605 seconds)
    (77/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074192877 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.091846691 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064762945 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146494683 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.160743363 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092023389 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.194066718 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081828376 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084554241 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075532993 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.153265876 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.237077891 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07217577 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051658921 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.075926282 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066702069 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.094687943 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.075438083 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.143695198 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064949693 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.195443887 seconds)
    (98/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.077194027 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.162019504 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065879273 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086976251 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.064680188 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.138497205 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.067360579 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07431295 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.14573689 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109087784 seconds)
    (108/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073818539 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073753285 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071986132 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102044172 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.192948895 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066050086 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.149253509 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.076958162 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.155143042 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 0.137186347 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.050688261 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074563251 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.099916582 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074447416 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067981163 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072960526 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063972627 seconds)
    (125/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061894509 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071130507 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068413185 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065363691 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.065932057 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050414988 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080141084 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.201686536 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072137037 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.050498984 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.176333144 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072449197 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.05148296 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065857035 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089168607 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.051576526 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074705585 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.06591027 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092711574 seconds)
    (144/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072056997 seconds)
    (145/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100531628 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.051760225 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072216858 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.099376807 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.154278282 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092346401 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.111162384 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.075589747 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.174394303 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.116314956 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.064664983 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072706305 seconds)
    (157/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080383253 seconds)
    (158/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.194119866 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.075651174 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073080712 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 0.131268361 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051039844 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14027644 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.076588093 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06633356 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.284108203 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063999848 seconds)
    (168/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.154334252 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.068245707 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062413479 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.05221104 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068882365 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.090992189 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051152802 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.112502201 seconds)
    (176/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069434224 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.050509147 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087418728 seconds)
    (179/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073336488 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182876677 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126299167 seconds)
    (182/309) benchmarking ("sort", Int8, false)...
    done (took 0.140795276 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076898756 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.052028744 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160831086 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.050813502 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051484169 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071429637 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.12028544 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074690943 seconds)
    (191/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072371362 seconds)
    (192/309) benchmarking ("sort", Float64, false)...
    done (took 0.129330363 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071819883 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.125912136 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182708538 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07373617 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051002359 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051225348 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079056316 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06463513 seconds)
    (201/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.249246477 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.053225546 seconds)
    (203/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.071597957 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066661283 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.052051446 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065774034 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089593386 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074117514 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066101721 seconds)
    (210/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101977241 seconds)
    (211/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061421634 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075869454 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07339281 seconds)
    (214/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.155733233 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.05097194 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052349908 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066259013 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074047003 seconds)
    (219/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07421494 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065636402 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05064313 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052079225 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051227601 seconds)
    (224/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.06742661 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.070931025 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.090146143 seconds)
    (227/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07574579 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051837587 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064608839 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070705092 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053238156 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065519421 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051378339 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.067594297 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089166633 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140518577 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.17214673 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072103466 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091244382 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065934287 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077952081 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071860547 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051505186 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066235093 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051776377 seconds)
    (246/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120162493 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06617264 seconds)
    (248/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050430608 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.092863802 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.051220435 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128371881 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.139751378 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052089527 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.051039223 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065668393 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051009114 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074176704 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052101211 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067302233 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066334614 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.05185903 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068586033 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090281766 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089369658 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073035844 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127528559 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.099418866 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.066597704 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.05425727 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074159653 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.180064204 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.068091175 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.140096774 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.088321931 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065027655 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076138765 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051411269 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.050982276 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.065172906 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092142714 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.108976546 seconds)
    (282/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061806599 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073125264 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050935505 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096985331 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063910688 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.051833722 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064148173 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.050755344 seconds)
    (290/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051669435 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07319909 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.066446557 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066054913 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066372496 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.080348143 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051057179 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.06688612 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071902744 seconds)
    (299/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052533474 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 0.187719298 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.053049613 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078954045 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.061069234 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.067395929 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065088704 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071407441 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061218311 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171156139 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177815433 seconds)
  done (took 30.919110163 seconds)
done (took 32.320569825 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082060739 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092376807 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074876358 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.09333907 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08022099 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075845307 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072826782 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078051042 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079878613 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081455562 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077946716 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.053861158 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074088507 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074384672 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074391449 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091160192 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07830238 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073044127 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073325627 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064555738 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072315519 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06565127 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067380884 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054706913 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078208816 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072022341 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072206946 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073640013 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065582912 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065858344 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068850767 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073223186 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065146452 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.07807755 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072354034 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072754098 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074915595 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076320869 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067211916 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065756546 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074201631 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065477846 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072731929 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.0738856 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072142501 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071188777 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073468802 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077440556 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091803261 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067649923 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074651543 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076133436 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075785638 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072540657 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069414375 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.0731442 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07097646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091044228 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073414899 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068032422 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074147356 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074455296 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071461999 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.072800912 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072667548 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075515889 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075249636 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071498477 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074948705 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071489315 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.0652859 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072720397 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069007888 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065079586 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075674087 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077377291 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063774021 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071236137 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072688785 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.07098319 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064605774 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067071219 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066770516 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071814081 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067399275 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053948146 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069451874 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072400466 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.064345794 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072684279 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071995099 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072220928 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066496916 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075313275 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06460322 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070514618 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065188452 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065242792 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066952551 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069494982 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064868561 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06719486 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074226929 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066514415 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071802266 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078766985 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065176375 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072307901 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064480849 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064597057 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079660392 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074752015 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065287715 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067525615 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064290925 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.0731665 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064565799 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064973267 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065433538 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065321272 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071392888 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066102132 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067847844 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072584784 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07877989 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064773196 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06807093 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065984577 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064210636 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.070280994 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064582439 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064568201 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066303207 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060797317 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066231272 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064241269 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071801597 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066335798 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.205520913 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068023363 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074716062 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070961413 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072046019 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071795082 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064765468 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059220144 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067953576 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067843988 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067490779 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065929899 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067222099 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06559845 seconds)
done (took 12.420066162 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066987543 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.139472871 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097598819 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095840298 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086400864 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067296633 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076047353 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101341058 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068019784 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.102562649 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088025248 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08596624 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114564895 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064999103 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066256434 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070216005 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067260226 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082167539 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100975348 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087043745 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115980283 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065609158 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093316466 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09006892 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088977647 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.094908598 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.06952223 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069842122 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069724445 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10260088 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088685055 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070520949 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067660452 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098841041 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093916886 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.084179653 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066612446 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083803061 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067140999 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065786808 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067545553 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099213424 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081013414 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081004342 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070310212 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070161489 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067121797 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083711664 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090318563 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079324558 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087085688 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10186602 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06934781 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065546362 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064295696 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.08644758 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.066392914 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069442607 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066169559 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068907305 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066283452 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070169375 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081597722 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080387307 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.06992031 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079942896 seconds)
  done (took 6.823120825 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083994524 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091945282 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083993776 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084502874 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.065240196 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067076101 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066574165 seconds)
  done (took 2.038670122 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066659638 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088734975 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089416961 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089479736 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082038335 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088663859 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076418203 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066641232 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.088078762 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067775712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087818368 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10115637 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069584263 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074341156 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091125408 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06667881 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091180641 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067417263 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069706996 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091063539 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069066655 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095970131 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070230923 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.0665332 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081327307 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066887146 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114732184 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0718721 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068073752 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069447614 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064420424 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107189297 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080565993 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074267563 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066750433 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081374613 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.080981097 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065035045 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082525408 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.075166488 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080299989 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066635484 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067599633 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.0644636 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070835596 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07629021 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067330265 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067056873 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068773642 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08729636 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067000204 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07995892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069942275 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072119083 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.0680783 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072997763 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077039606 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067602002 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086674447 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068022072 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083660453 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083349038 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081016404 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082924889 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06901954 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080168111 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080356294 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069152853 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068194439 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070080465 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083001205 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064732066 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067960966 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076894899 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068708323 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.089830264 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089218488 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068563278 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.079637527 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066977759 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06635191 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066925419 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090077348 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071701451 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066167182 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070490095 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069421033 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064770036 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06592968 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069955092 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064522761 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067817869 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069074465 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069240046 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069385188 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082983891 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06882027 seconds)
  done (took 8.814829633 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068261482 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067313742 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069398861 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067097538 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067743435 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067695509 seconds)
  done (took 1.926200909 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093688462 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06908841 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080206166 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072319236 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.104215038 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086907352 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.08673882 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077889379 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083634489 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.07795012 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087631628 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088441935 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09226034 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.07272569 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086967619 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070869487 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086597923 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074725656 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077887046 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07244847 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085917351 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072389807 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073066332 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.081833167 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076180887 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071308957 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067481329 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078745833 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078034827 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07824625 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072099846 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075661293 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070657378 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077732706 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086684274 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070700704 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0715067 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077287637 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072283604 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.075698549 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088523575 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072331203 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074202846 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07745139 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077729935 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070931024 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077322073 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075286995 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086517108 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077227181 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076694671 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070889044 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075369896 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07695198 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070104934 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077563569 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077185515 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086905979 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071948103 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070491022 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068213757 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.076177106 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07708554 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075241379 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078819326 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07701061 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07052443 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072405075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07222689 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071241218 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077098002 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068573698 seconds)
  done (took 7.070286552 seconds)
done (took 28.155211577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.529718929 seconds)
  done (took 2.015761241 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613107917 seconds)
  done (took 2.122550491 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.452239909 seconds)
  done (took 7.956449309 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399047989 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.522684155 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.720505684 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131804019 seconds)
  done (took 3.313609862 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.700213218 seconds)
  done (took 2.218467859 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214342855 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201237675 seconds)
  done (took 1.942639047 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375238279 seconds)
  done (took 1.881776935 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.130881672 seconds)
  done (took 2.639152146 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.257128472 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.175029685 seconds)
  done (took 1.946492871 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473134879 seconds)
  done (took 1.985799524 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.855915071 seconds)
  done (took 6.371401096 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.211302979 seconds)
  done (took 1.764970933 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.240338999 seconds)
  done (took 1.753595231 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.703823507 seconds)
  done (took 3.216305162 seconds)
done (took 42.642555354 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080708165 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081106177 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08152391 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078815803 seconds)
  done (took 1.822761881 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077013328 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072663543 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076715977 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07388498 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077723223 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073636199 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074970594 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075661988 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07321832 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073839232 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073380878 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073455239 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075222859 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074649288 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071548656 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075442393 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076729866 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073378164 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076485992 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072772325 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071332067 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075483573 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075258242 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071858546 seconds)
  done (took 3.302283525 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078179306 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073229684 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.07502189 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072115647 seconds)
  done (took 1.820524488 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079179143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095502214 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089966007 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.079026774 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.094008952 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087301608 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069173601 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069703171 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070894636 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078091746 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068339819 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096863393 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.088839514 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077679127 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079650065 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066420723 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068679976 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087603606 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078575029 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078862852 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070834884 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078078363 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068017784 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088585418 seconds)
  done (took 3.428799381 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.087155244 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.106282655 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082100214 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090247999 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.091736389 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065916528 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087883498 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.092828502 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.127732593 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065925441 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07074377 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06554183 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073409539 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065467901 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081291057 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.108099817 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111844839 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06882003 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097385934 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065600825 seconds)
  done (took 3.232929386 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073326097 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070443392 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066145948 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070140899 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078378714 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073841922 seconds)
  done (took 1.962194645 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068443788 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067576926 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06790628 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066848208 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072905102 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.06758595 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066790822 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068427292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068068849 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067403246 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067360185 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066472844 seconds)
  done (took 2.341005811 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203184949 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069695296 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069338647 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066440596 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071085846 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067088031 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081407856 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068032493 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091743142 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066997557 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066903266 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068976625 seconds)
  done (took 2.518395983 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206915269 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076319072 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239567979 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151075782 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110805413 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116079009 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112526279 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114238316 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.141881874 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100819694 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168340375 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166807067 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107862912 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136723729 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089502212 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101057435 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154744794 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163249659 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10612761 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16758577 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145893293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12675661 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153742529 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102455143 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106280714 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121714611 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07161436 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079983442 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170023723 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133031458 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144059331 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111059532 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092249404 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176601696 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172153878 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140878729 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147354928 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084384198 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105221773 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134001187 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19962111 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088140131 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162737964 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1093067 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219548561 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135208535 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121704778 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.122109164 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.10691796 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090689116 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148100214 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184669298 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138109122 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087937105 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124370838 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114220421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.114904749 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11471908 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18382304 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163075493 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129517635 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.072161539 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109456321 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155116091 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133750437 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.109191125 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125788693 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091738413 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13464764 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156067903 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121186478 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145414788 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.117028456 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089353427 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120453715 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141000402 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127607506 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161373358 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124548293 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073335907 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124048886 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101948874 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081530091 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.145601146 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075493119 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177088527 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099404033 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109332263 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125745114 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109745065 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109082863 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160695833 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144350554 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102821224 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065067368 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246053634 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.122758744 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146316531 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087693533 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110740025 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118403767 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078440877 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138463244 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.075558623 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124520191 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079146075 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128358866 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131135045 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077764073 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122835079 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10489179 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10166374 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133779912 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162040704 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089658011 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083099221 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169423869 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124027352 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103979529 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146488 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158485506 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.102251232 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10127569 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149887552 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180037109 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089868077 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164304348 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107613148 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083819098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088438197 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123863316 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112186899 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124083028 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082063744 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118561 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169685178 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074985583 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095781601 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13448351 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079667787 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081294833 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106076472 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105047967 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095840914 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100031434 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102731518 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136375734 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123390281 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105563472 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12317767 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098117624 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313979427 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089440369 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.103110622 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105919262 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070649187 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136591287 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159182609 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080013073 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166644367 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124774753 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117604801 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120931311 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08359373 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14078775 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080294508 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070776896 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145225914 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112156414 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109796044 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152035204 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117198429 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127197583 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120389385 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134070724 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132347158 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130765787 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107564807 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089777341 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113175453 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127195322 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073456586 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091623004 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080346859 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104656912 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096819972 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083063778 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141600144 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124141613 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110115921 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112991068 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096746792 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148819007 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076699711 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128652996 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120085867 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09603192 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15370803 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153235947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13173717 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099113888 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1364781 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070429791 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073964198 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087882088 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122253056 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082797046 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083182318 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258386552 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149007118 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131129261 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137521686 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124054185 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122069024 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15774296 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071261138 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.119331369 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147386823 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122826152 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.105848302 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090799323 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100312581 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144466246 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108679807 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182912128 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116936015 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124778664 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153838467 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101741278 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07997943 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103518862 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136713777 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104792322 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144863143 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100308649 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089224651 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110897464 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.074805737 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099570074 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127426627 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118755211 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135679092 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116120833 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133248691 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078130516 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115961562 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122434057 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122385306 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064590477 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121018233 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162736776 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094775097 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118885995 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153308373 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078730542 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134290505 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174998161 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14488953 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084396473 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252476767 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121333205 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129858203 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121510929 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141923681 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108918845 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138981889 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111101674 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087773304 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089293311 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09888784 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10566261 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096640177 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107087179 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114091388 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096999394 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132481964 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10431769 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111278184 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118793067 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09824799 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091752822 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097661359 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178124772 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119084998 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173075457 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100937766 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.146451399 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166050763 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075311026 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079911829 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078139584 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141535953 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084783482 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131506032 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107724522 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117840239 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12468447 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143708061 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095906187 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068630252 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109663678 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133240731 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124686297 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09887326 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103589229 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165030935 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.101667365 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079918107 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113985231 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115759097 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102492476 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170546308 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061577778 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106043821 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07667696 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080164785 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127097112 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292235783 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081451061 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104267831 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121535537 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113442183 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12933772 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101344787 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112629948 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126868835 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151554049 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128750361 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.090274883 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112315587 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129640477 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158007042 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105552095 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098264009 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175273917 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15455881 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161669727 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087969361 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114613831 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115213224 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110276988 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139658688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083480925 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165280564 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082449598 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137932357 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104149461 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090063839 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1287449 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108699786 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088425335 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1489939 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117913753 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083159389 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077716537 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118122415 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120366624 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106381815 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076243094 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139115024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074074348 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133206636 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15964749 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081546982 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107922452 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09636354 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079469012 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106022325 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101772736 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087143793 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239564668 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177704919 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089232909 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151378312 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135033096 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114648683 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137808179 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104340596 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.642321767 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.079005491 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154909146 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117426269 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176780924 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101516766 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120298802 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111887449 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123604908 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146958225 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105497262 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181682986 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13299166 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115623743 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080309661 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10318964 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105322581 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089040533 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10797907 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115544212 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116923386 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093168655 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117106383 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125175263 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082106055 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096399544 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157288588 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117352593 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143872502 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141493899 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085978885 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119104607 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13920008 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080458927 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121290986 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152646601 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106053756 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099584505 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080765831 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100058711 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157798535 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073613914 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158006251 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117340119 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.253382131 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115385674 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114440075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132589883 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108416933 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123778387 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093089531 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111426905 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115472516 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082077526 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077750702 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10648337 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112555867 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.099477078 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098989125 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.099461147 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153441014 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073844047 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100118594 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116132901 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144504882 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176450774 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089600293 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083637714 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119472933 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114673529 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113544789 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121600713 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079307794 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082043805 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081447793 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078925522 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110285074 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113586285 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115374387 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111622939 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163680127 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08349045 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.231220412 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095934599 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10555169 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.07110349 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078687567 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097027105 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098574113 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107864253 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110344431 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16031262 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096175351 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090728184 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091921254 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074622826 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083626377 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129292024 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109753212 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118111442 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098123599 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062614912 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106420591 seconds)
  done (took 59.250388756 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110539325 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083829243 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095302278 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145825073 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122896743 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.202817861 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155020736 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189460803 seconds)
  done (took 2.759412922 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069248267 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096640239 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10374124 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084460169 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067734529 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069130144 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.233891493 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082299199 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.067800083 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099428476 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079793212 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069607937 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.430518578 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066368235 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068001365 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062538885 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06809803 seconds)
  done (took 3.446243233 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.389590712 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.608077295 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.353319523 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072767369 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.477295927 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088884623 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.149984408 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131747048 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073965275 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538509544 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.404364557 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.128332861 seconds)
  done (took 18.056405493 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076202432 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069843376 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.08554433 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084736704 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073394974 seconds)
  done (took 2.027692122 seconds)
done (took 107.53493848 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082095122 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.60679194 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053471109 seconds)
  done (took 2.324795332 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084128765 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085824297 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086467792 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084517069 seconds)
  done (took 1.982573278 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074485457 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077457172 seconds)
  done (took 1.786944981 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234675098 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165031851 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096684576 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083169807 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080440891 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080875552 seconds)
  done (took 1.888245272 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073165944 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075544627 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072820942 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077396052 seconds)
  done (took 1.937965414 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077467396 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053635264 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055675848 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.058261038 seconds)
  done (took 1.884875528 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087781234 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080182341 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079687286 seconds)
  done (took 1.8885876 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102664078 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086803114 seconds)
  done (took 1.829967275 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083339584 seconds)
  done (took 1.725628667 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10009633 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.102891122 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133215796 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111606684 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14044481 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110446646 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085666805 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08631107 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076830133 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087391713 seconds)
  done (took 2.67672967 seconds)
done (took 22.140252299 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079921507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370215772 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361465819 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090849924 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671782697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356802626 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.987813929 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093421626 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115973447 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068501879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085714646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65155486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.980684881 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324845451 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.964626777 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.413414906 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651438207 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069052039 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068647638 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.0683797 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.973545092 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068460179 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068524263 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069409843 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649521849 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373366593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068812688 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413824457 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068362761 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07048452 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355370339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068847425 seconds)
  done (took 16.352425673 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070812702 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121084408 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.0736527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086043341 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071945838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070583097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072532942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069465713 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121817865 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068782803 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086248315 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068515886 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072405737 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.086885158 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089165979 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068848454 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069211532 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069132688 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069285128 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06894034 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088696707 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06836487 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068825784 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069414273 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068812551 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081551257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068670347 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068861904 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069147373 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.071071599 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071908495 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069280142 seconds)
  done (took 4.092551992 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11711062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126114675 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074651322 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.104324399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113108482 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071094243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14423284 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094536338 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127930503 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068232591 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085881398 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068445123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103718251 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069244759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.089026424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068760864 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069803281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068996752 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069092659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069094714 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088336102 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068277191 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06912497 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068892331 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068864696 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082640019 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068711735 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069173109 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069264088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070646846 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071987818 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069499267 seconds)
  done (took 4.32469403 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074219906 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076736468 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.083853498 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.085212386 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070549479 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072800173 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073832445 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070001377 seconds)
  done (took 2.266595374 seconds)
done (took 28.684246325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079350146 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069578154 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072993739 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.083270286 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074402429 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080959372 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068764191 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076182947 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073712472 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074120245 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075837427 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.0680894 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071704083 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067965999 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074829034 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068067052 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080188804 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072712223 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080412669 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08028673 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07068283 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.07341814 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07545147 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080029795 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079977562 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07983727 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078534804 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073149103 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069390287 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071033248 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077365123 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084407612 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069048189 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079666253 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068098692 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068174416 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072046739 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068383228 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079873402 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077287491 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069989729 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077259953 seconds)
  done (took 4.775491561 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.08908264 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.094571824 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.086024086 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062294913 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067323125 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066393012 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.090113681 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060139112 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060051449 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089008135 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055752407 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060373628 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.066401844 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053839428 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.061158736 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056992107 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062263 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055846021 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.061171808 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060195617 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08964607 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05449939 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078325507 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063879997 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056109094 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061771946 seconds)
  done (took 3.429083441 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075677034 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086356441 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091118809 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133106871 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107028826 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079300735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079774098 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096452317 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089610305 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067562042 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071856034 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093434253 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090789882 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074553447 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068234243 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087139307 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084346651 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069975675 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074388896 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095500908 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088382228 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086676479 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097715756 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084630293 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068262759 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070923623 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072524898 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082804052 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073711404 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078096921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072592609 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072535074 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070342354 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080748602 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072258909 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070106599 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093639306 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078904889 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080097995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069947604 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076743899 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069989865 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094794977 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128158962 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067847583 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075211578 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072568506 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078890848 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068789831 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090180595 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080397883 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068972934 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071672387 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068290195 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068463859 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082448925 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.071135944 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070980623 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.07861231 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074423812 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09458109 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073680449 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085062405 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069195225 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076657761 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068088454 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069615827 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067940793 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097470337 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070519735 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112840378 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070228755 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070143471 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078060195 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076527697 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075132772 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069363949 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084193578 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079897251 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072148714 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078173958 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072289321 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071492645 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09378377 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070960028 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070860943 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069465499 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.076035751 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07128979 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070126288 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081976323 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068414773 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072011318 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086046759 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068085563 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070232229 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074412968 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07327992 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068449899 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079623471 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073519942 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069667237 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078120404 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068476153 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071792738 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082573857 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075002766 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067594776 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.073005361 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074419266 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069138008 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070126871 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071232917 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070500875 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077420196 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.086074812 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.073092217 seconds)
  done (took 10.808064964 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166531848 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.160041065 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071744995 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150331649 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077025385 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080407445 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151980313 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095735408 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068440028 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069277635 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069260253 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111137211 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107033507 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11790803 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079569877 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068538196 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085986004 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.11629295 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154192492 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14873574 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085680975 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07785747 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070772711 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069901268 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071085268 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078962838 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086541404 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078134255 seconds)
  done (took 4.463990145 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08162143 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106762523 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.076365688 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092223192 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091817883 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068491092 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070875985 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070526931 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082407336 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078946483 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068873562 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073960444 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075823246 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071845371 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069380345 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075829423 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076429821 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.07009326 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.072492033 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07390474 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079463963 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092363266 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072546224 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06767644 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074004902 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.06819448 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064198441 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084826809 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069233719 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096380498 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066128574 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073556193 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084214 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.06998451 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068323047 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068901844 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06830804 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068586254 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070904782 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067199962 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067042205 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057875452 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067779948 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.08003753 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.07595362 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057530671 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073496651 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073695168 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073778064 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066109206 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.0719372 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07171104 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071808155 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076450617 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072773025 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.074596946 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07008051 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.07526639 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07811379 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.06869678 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066575572 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067677686 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073437798 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065824243 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.07735605 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073078691 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067290284 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068638391 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070561109 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075785511 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069019653 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073153256 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.06641742 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070371497 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073814733 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071130636 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070145635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067193088 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069014491 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069229622 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056355923 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069064048 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053700428 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071622394 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066907423 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066921384 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068141841 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074002224 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080461276 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.070265992 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074530464 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069430658 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067850236 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07201841 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06161067 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071629635 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084893447 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083502041 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068498374 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066965545 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082037399 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073215277 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067827006 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056656305 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073903239 seconds)
  done (took 9.293050974 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.091834713 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.071315534 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085582189 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093362653 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088785668 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076033737 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078347128 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069902985 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084698994 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.075036652 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078094569 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068690266 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078865957 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078675585 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071521686 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078887955 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072884993 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.086632597 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083635219 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069573878 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.077675141 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.082162492 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092363706 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083340541 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082576697 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083309667 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091883088 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078725858 seconds)
  done (took 3.95637067 seconds)
done (took 38.378772231 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.756433238 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.88556837 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.73908217 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.092864177 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.007404784 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.856680628 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.872109505 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.733671347 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.273241516 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.771087876 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.968806572 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.848720366 seconds)
done (took 65.478074349 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.747621885 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873854872 seconds)
    (2/2) benchmarking "String"...
    done (took 1.972357139 seconds)
  done (took 5.52053536 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.960291634 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.297010559 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.982006158 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.732239625 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.739611826 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.058441105 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.537588432 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.250672984 seconds)
  done (took 30.272536597 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.844599151 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974749003 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.417201852 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.447121252 seconds)
  done (took 15.404424492 seconds)
done (took 62.663819255 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.7410286 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.784445562 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.744458164 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.719149247 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.792279352 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.740058257 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.094251513 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.981635276 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.735141468 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.719813849 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.737696507 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.171652309 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.747118282 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.159668154 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.735907236 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.733225069 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.767666559 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.393403762 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.89397127 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.740303899 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.745232861 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.749808593 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.736939539 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.735753235 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.76667112 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.735205458 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.149859188 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.73746917 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.3588085 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.740240176 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.77404019 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.233613967 seconds)
  done (took 204.271490066 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.734221612 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.8038536 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.865637726 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.773199199 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.232649349 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.918539124 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.853659806 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.283246956 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.740483721 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.757503448 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.066466766 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.735440578 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.080412242 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.683376568 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.764850901 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.8280654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.009413879 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.066795459 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.771115656 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.859174351 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.750636864 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.027432951 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.994363753 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.013202818 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.753813232 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.824411148 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.905261304 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.770230301 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.931056443 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.963955402 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.772186581 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.783199135 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.961493165 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.609809306 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.743526145 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.750985935 seconds)
  done (took 170.061935588 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.15101608 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.737064425 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.73690282 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737486774 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.748982428 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.738091936 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859077515 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863465875 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.342493275 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.481867417 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.79221689 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586059652 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.739762646 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804488329 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.750147771 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.741905212 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.753463348 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.763629972 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.740027373 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.73741053 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.863004711 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.748619141 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.303802713 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74819663 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.737588614 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744599033 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.111284731 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738542375 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74459022 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.997786424 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.739521769 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738931385 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.644870447 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.42096377 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.746929013 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821575797 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.74033528 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743922012 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.738329425 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.958372971 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.738330265 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.739661728 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.741915135 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928661773 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.741279079 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.863148527 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737477273 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260131291 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.738805741 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.738190482 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.41673822 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.456776247 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.742344214 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.739384202 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.742291647 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.739566157 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740165455 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.745649216 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.336660106 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.814203653 seconds)
    (60/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.73957168 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.73991971 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.74230284 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745264185 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.74001204 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.885101937 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.739698984 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.740124604 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.795706746 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.977730622 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.861227668 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.743473272 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.740584187 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.807821286 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834514249 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.740614554 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.740349325 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.741101839 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.740058159 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.822347545 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.742151229 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.741046557 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.861430809 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.74942709 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.74471438 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.794791448 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.813855639 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.743817103 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.646183077 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.743717252 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.74126964 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.094251762 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812713539 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.740890903 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.741104076 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741277646 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.868625226 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863564286 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.537023754 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.743854375 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.395073091 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.744938994 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.895453831 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.742028399 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.936950294 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.744371396 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.824048329 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.746866136 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.744427051 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.741806551 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.774946323 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.742977218 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.799900424 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.744780846 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.117611845 seconds)
  done (took 398.859174884 seconds)
done (took 777.073627043 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.404436478 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.353925317 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.459963841 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.377655463 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.347723706 seconds)
  done (took 13.626697129 seconds)
done (took 15.308030938 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.828778158 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.834945476 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766057624 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.832043507 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.763193182 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.831604102 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.815129294 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.768354169 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.799235443 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.768023511 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.800942209 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.768078174 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.755220457 seconds)
  done (took 25.014760438 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.984393864 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.980779112 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.815852868 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.978809325 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793843765 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.972295337 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.903111995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.89590984 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.893436163 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.761588264 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.75751856 seconds)
  done (took 22.422079122 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977551902 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.984200301 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.82077526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984484836 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.795574425 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.975758601 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.907329421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.899570761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.899916775 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.759021145 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757092364 seconds)
  done (took 22.445952985 seconds)
done (took 71.563809135 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.75379562 seconds)
  done (took 3.439255314 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.777091723 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.93606563 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.759562695 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.757520505 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.753610733 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.754534265 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758339079 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.753146992 seconds)
  done (took 15.936035829 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.75393853 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753578396 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.750642938 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.750649039 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.750029707 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.753423586 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.751168053 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.750719212 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.75036245 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.750582659 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.753572433 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.749678095 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753288638 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753861304 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.753229255 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.753423954 seconds)
  done (took 29.719041514 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.752955575 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.751478647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.750606111 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.751802617 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.75076941 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.751458209 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.751705729 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.75176971 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.750706284 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752434667 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752453346 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.751907543 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752309896 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.751753092 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.751536095 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.752588713 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.751707688 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752707189 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.757149562 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.751865692 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.751747716 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.751959809 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.752916292 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.752424017 seconds)
  done (took 43.740810249 seconds)
done (took 94.518638595 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.622678282 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.134929064 seconds)
  done (took 8.444579507 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.756549082 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.754812268 seconds)
  done (took 5.233291943 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.756681379 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.756333856 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.7559539 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.754683169 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.755852989 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.755014431 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755434186 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.755826039 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.756817074 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.755131197 seconds)
  done (took 19.246919911 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.756009478 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.754572421 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.752671065 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.75658058 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.755525187 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.753061825 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.756119305 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.755527684 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.756295651 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.75270336 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.755690644 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.754149506 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.755968197 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.753936089 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.755748448 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.753383904 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.753605812 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.753120246 seconds)
  done (took 33.273739386 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.756254842 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.757068324 seconds)
  done (took 5.202611144 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.754462911 seconds)
    (2/7) benchmarking "second"...
    done (took 1.754127222 seconds)
    (3/7) benchmarking "month"...
    done (took 1.754426204 seconds)
    (4/7) benchmarking "year"...
    done (took 1.754670406 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.753811572 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.754649082 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.753689465 seconds)
  done (took 13.969212548 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.758408844 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.915383916 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.985644276 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.382313271 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.759193066 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.7603759 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.676684645 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760613228 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.762316834 seconds)
  done (took 19.450191713 seconds)
done (took 106.506668179 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.57067786 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.752196286 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.143986423 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.799841117 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.817115344 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.097046954 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.794873452 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.066598175 seconds)
done (took 42.731410055 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.759539482 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.290999792 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.321691613 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.944974023 seconds)
  done (took 12.248304628 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.737047529 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.294935514 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.7969954 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.407798489 seconds)
  done (took 20.115723621 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.120499125 seconds)
    (2/2) benchmarking "read"...
    done (took 2.102360463 seconds)
  done (took 5.918764052 seconds)
done (took 46.732600528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.758013064 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758620271 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.756502943 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.758783218 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.756634021 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.759771252 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.756857438 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.755519152 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.759661283 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.759635099 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.758841985 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.759340359 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.75973778 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.756877662 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757299692 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.759797897 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.760087382 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.756843037 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.75736377 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756780484 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.757142221 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.759417865 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.757798969 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.757069256 seconds)
  done (took 43.886393578 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.759824639 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.758071302 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.759522374 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.760545379 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758054921 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.76072788 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.759803417 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.756694676 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.759976464 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.759833379 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.757590009 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.756929072 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.759864275 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.758159013 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76039251 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.758314568 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.760168045 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757928915 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.760726741 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.757939318 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.760644048 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.758761571 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.758723012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.760338302 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.758441067 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759161983 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.76164988 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.759507064 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.760962584 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.757860453 seconds)
  done (took 54.471010915 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766920561 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.769153522 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.761371346 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762731356 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.761918338 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.761223674 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.762186266 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.761728731 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.761405137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.763295015 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.762909556 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.762181529 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.762293527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.762201559 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.762362274 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.762465748 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.762507147 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.761569634 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.762234798 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.762393465 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.761672371 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.762248838 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.762283618 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.763216116 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.762162412 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.763421575 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.76274689 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763348211 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.762204244 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.763091737 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.763509915 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.763073902 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.762542929 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.762913006 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.763572513 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.763291498 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.767791989 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.770963254 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.763324995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.763697956 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.764167676 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.764014492 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.762670101 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.763150187 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.763502274 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.764164203 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.763093097 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.7627183 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.764114635 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.763480694 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.763413922 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.764090795 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.763752722 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.764511705 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.764279864 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.764376318 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.764551859 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.764018035 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.764868268 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.76441656 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.76504138 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.764616164 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.764712086 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.763997512 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.766210526 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.764434729 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.764808576 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.763646532 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.764277442 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.765928751 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.765361037 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.765401061 seconds)
  done (took 128.678056272 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.764931112 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764430036 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.76354444 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761644851 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.762732152 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.764837736 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.763023355 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766331793 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762966788 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765779525 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765636681 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.763182586 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762977036 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.765596624 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.766700189 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763019062 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.765441439 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762944079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.765865951 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.766346089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765279153 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763544695 seconds)
  done (took 40.515008392 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765612458 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766548948 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.762586298 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.766382069 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.763712517 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.766115393 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.766375203 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.76629717 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766710772 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764565985 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764043636 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766928408 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.764314257 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764443985 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.764069474 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764050425 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.767062406 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.763907243 seconds)
  done (took 33.472747502 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.764656003 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.764015693 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.766949108 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764077645 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.765663557 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767279686 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764775922 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.768091796 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.767505085 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.765423065 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768766585 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767763166 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.767795387 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766560442 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768384392 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767154209 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.770494243 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.767755672 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770855571 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.767519341 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.768010716 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.771045736 seconds)
  done (took 40.581204862 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768672428 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76753567 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.765709245 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.766115075 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765912809 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.768423183 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.768248426 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.765714078 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.769070214 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.768419086 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766643053 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.768407156 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.76629746 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.767048974 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.765837999 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.767023761 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769295141 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.766860884 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.769083059 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.765640862 seconds)
  done (took 37.048223147 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769604096 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770728269 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.769927957 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.769394176 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769945415 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.769816371 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769832115 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.771472836 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770447574 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.770727284 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.769954995 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77114148 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770808011 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.770966606 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771164475 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.7710951 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.771590261 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771147831 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771903873 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.770722665 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.772334212 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.772530133 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771342796 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.771329844 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.771364934 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772074007 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.771608301 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771499392 seconds)
  done (took 51.289133403 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.771374266 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771269409 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.76847218 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.767614227 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.76887765 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.768926471 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.767944266 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.768477892 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770734643 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768446036 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.770140053 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.770762782 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.771786092 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.771522883 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771319219 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.770955999 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771461663 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.769252079 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.768658649 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768954352 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.771279915 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771763428 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.771784411 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769894269 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76879953 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771979521 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769776568 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.770445087 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.772403119 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.769153741 seconds)
  done (took 54.808879079 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.79050459 seconds)
    (2/2) benchmarking "in"...
    done (took 1.790302447 seconds)
  done (took 5.285004959 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.769108028 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.772238186 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.772121291 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.769548398 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.770265375 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772611939 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.772552447 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769824887 seconds)
  done (took 15.872908756 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.772558188 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.773776508 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.773164228 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.77456278 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773128766 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.773053592 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779558158 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.773599031 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.773603661 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.774097606 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.780051419 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.781470306 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.774680735 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.773691525 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.773393187 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.77524688 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.773620954 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77412196 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.77450043 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.773591945 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775849197 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.774742182 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.774437504 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.772555572 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.775885466 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783287553 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.777499419 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.774329765 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774159366 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.776209112 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.774045564 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.772212991 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775409354 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.775324757 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.773730783 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.775315823 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.781968023 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.7743952 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.780071684 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776434365 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.775015379 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.772834752 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.776425175 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.775533229 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.77564307 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.774899222 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.77580923 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.772980061 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.77472578 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.77813374 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.780800515 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774183605 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.773202958 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779904543 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.776566723 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.781291258 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.776244449 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.778918182 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.784928839 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.785389642 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.79152208 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.78419742 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.778531258 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.777227484 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.786040848 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.801117603 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.782065408 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774532297 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.773577879 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776546436 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.782878884 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790272849 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.784328671 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.777851039 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.7767626 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.776958275 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.776840087 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.77774818 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.783060901 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.779235758 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.77722177 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777644061 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.787319897 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.799785473 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.776287667 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.77743465 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.777803204 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.778755428 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.777974512 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.786934862 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.7784966 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.777205647 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.776735072 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.777245744 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.778229964 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.778155294 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.776977464 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777775576 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.776244287 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.778161778 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.778856329 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.780346692 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.786739632 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.780811029 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.779126496 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.784794763 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.777877389 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778107095 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.784222144 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.77980245 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77897073 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.778676902 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.784256214 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.775697599 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.782200277 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.787442869 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.779946864 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.780258545 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.781371639 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.778832019 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789062875 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.804541021 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.779481228 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.780098028 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.784748483 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.793018635 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.781119412 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.782410052 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.7800034 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.776987101 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.776936216 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.781739812 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.779630956 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.779822737 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780657451 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779990623 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.776836582 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.780433146 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.780457658 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.780364008 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.781716127 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.779534803 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.780814066 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.782317508 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.780676132 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.78202036 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.786282409 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.778973965 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.780414985 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.780293512 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.777368595 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781298912 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.780991176 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.780309034 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.780306804 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781918449 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.779867225 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.781209885 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.781295669 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.781063302 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.780965539 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.782184172 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78512776 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.782312769 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.784093819 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.780914663 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.778280368 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.781487269 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.781616982 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.781381667 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.782169053 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.780468168 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.784929801 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.791446391 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.781933697 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.782739242 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.784199954 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.783322591 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.783027832 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.78301178 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.784852653 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.790378079 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.782334937 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789366252 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.783062723 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.78317196 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.78335474 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.782303671 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.781660791 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.782726713 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.785563 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.790442761 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.795188151 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79017923 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.784015258 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.786933526 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.783132866 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.787923695 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.785661185 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.783489038 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.783251598 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784459652 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.781958193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.783562148 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.784506815 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.783470344 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.782920623 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.784073599 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.783615741 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.784460503 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783531 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.784343313 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.784177865 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.780664331 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.784166525 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784963421 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.783027557 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.781502518 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.782346963 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.7837445 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785680523 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785455173 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.790795669 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.781075608 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78527493 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.784784424 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.783285491 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.783433403 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.785381415 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.785500745 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.783637213 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789957866 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.784292445 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.785033963 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79000335 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.783086881 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784727317 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.786919344 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.785723468 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.782333432 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78763549 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.793996671 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.785916136 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.786952364 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.786676601 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.785202148 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.786785411 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.790227697 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.782805986 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.784677283 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.786071829 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.786379326 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.783147845 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.786160901 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.786137224 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.786725755 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788558416 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786119748 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.786379732 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.786093397 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.787522108 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.786407105 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.787022597 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.788487763 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.795060298 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.791045038 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.786146877 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789105427 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.787382079 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.79046298 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.786231596 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.787640994 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.786193101 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798987791 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.79558795 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.792618136 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.787039826 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.787327495 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.791654165 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.788619008 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.791129717 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786863842 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.786903738 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.787097163 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.787253857 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.784713616 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.787876037 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.787953382 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788526718 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.788479785 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.792621804 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788234462 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.786847092 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.788875104 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.789353346 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.788118049 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.787188201 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.788021794 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.790136844 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790413849 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.788572675 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.787970913 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.793420547 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787902283 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.78837369 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.788452112 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.788174175 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.787554912 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.789667781 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.789179752 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.791533663 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.797250101 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.791710421 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.797957303 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.789759212 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797672837 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.789087562 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.791781033 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.798076152 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.787165218 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.787586447 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.788528437 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.790616516 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794632145 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.790230977 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.790070452 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.793822496 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790314762 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790823677 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.789972091 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.790012346 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789776223 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.790902462 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.798056081 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.791237159 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.793060736 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.791261615 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.788274671 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.791664994 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.792352018 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.789265901 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.79404119 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.791875851 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.790795991 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.789952192 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.789391601 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.791090602 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.792200152 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.790616867 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.78742084 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.79139543 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797506644 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.791529062 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79583295 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792028233 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.7976666 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792218121 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796711471 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.791415104 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.790937221 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.791549815 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79092446 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.792984058 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.790884777 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.791646647 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79211988 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.793645055 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.795526167 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.792796721 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.793337314 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.79174506 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.792290003 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.791353659 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801444028 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.816483923 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.793946891 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.796374122 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.790026852 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.793435294 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.796994527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.793041164 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.791055314 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.794729926 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803547618 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.800737157 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.79276714 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.793226831 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792781882 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793720701 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.793228411 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.793822972 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.794411613 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.792848539 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.794179935 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.793574625 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.795388623 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.793887228 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.793657264 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794315026 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.794498888 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.803927017 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.795871299 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.793352383 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793640454 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793798328 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.794698255 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.794022252 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.795111155 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794837453 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795290295 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.795659044 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.801178051 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.801725821 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.796084941 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.793649666 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.795273671 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.793312755 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.795375298 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79576993 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.795387214 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.795766715 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.795875257 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.795182476 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.794452028 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.793689701 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.79483126 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.796089917 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795382645 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797601279 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.802697754 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79520853 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.791552747 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.79469966 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.795418647 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.794895701 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.795531323 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.802087581 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798593941 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.806079133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.804469707 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.800949987 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.795829552 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.798764117 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.804100748 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.793898905 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.795665731 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.795987168 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.79630563 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.79686828 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.798580065 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796819269 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.802059265 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.795333238 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.796248854 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805104709 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.797981666 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797456386 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79832545 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.800466516 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.797354181 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.793938612 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.797814955 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.79610953 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802882342 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.798650615 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798056324 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.79855503 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.7950511 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.797934692 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801673397 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.797298431 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.797055048 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.795375619 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.797166276 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798268432 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798351605 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.794352035 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.796954389 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.797790886 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.800056513 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.804254118 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.794710283 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.799416544 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.797289322 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.798718173 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798705668 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798242909 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795695601 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795488446 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.797456058 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.798537481 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.79781999 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.800642126 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.797431597 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.799273222 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.79921355 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799297649 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802061312 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.810022923 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.805865608 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796108579 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.797901595 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.798349344 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.801768439 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.799093309 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.799711166 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799507704 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.800338769 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.800192218 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.800632344 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.79914014 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.802021394 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.814925337 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.799591356 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799008597 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.799186262 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.802738399 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.800393593 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.797441218 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.799053382 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.801713848 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.801825285 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.808212842 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.800789375 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806388294 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800186673 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.801125126 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.804718374 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.802757886 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.807735266 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.802216411 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.800495155 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.800672737 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.805212979 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.816991104 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.8011151 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.80958751 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.830032498 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.800782064 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.801167335 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.801455847 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800287424 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802059286 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.802699877 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.802255997 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.800861668 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802012988 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.802062612 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.802938766 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807186675 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.80291944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801848051 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.801448894 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.800867799 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.802996674 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.799383633 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.802521897 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.802782812 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804065998 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.804988584 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.80537879 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804421736 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817070489 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.812322001 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.801939842 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.802915865 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.800635635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.805933925 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.805140322 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813408105 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.810193567 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.803532209 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.80285218 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.804166918 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.803204831 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.800208568 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803738988 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.803214042 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.802183447 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.800714684 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.815566848 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813581701 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.807608205 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.803058482 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.803994447 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.803345133 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803603936 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803561046 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.803854316 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.805329425 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804311643 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.809120976 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.803995097 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.803685284 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.80611901 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.812125542 seconds)
  done (took 1068.62640039 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801212817 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.801476232 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800954951 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.801462975 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802150591 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801066865 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.80204634 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801579932 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.801483433 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.801468067 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.802000202 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801276574 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.802539947 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.802108918 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801758645 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802019579 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.801755834 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.801307899 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.802247928 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803022091 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802033211 seconds)
  done (took 39.572207307 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.805005048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.802714142 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.803688965 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806545702 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.802417093 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.805301391 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802347887 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806293399 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.805961317 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802557679 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.806116501 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80544849 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.803200007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.80282646 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.803169407 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805353154 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.806049859 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803707797 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.806010076 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804217797 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.806730435 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.80292568 seconds)
  done (took 41.436000308 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.806679197 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806440999 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.805659641 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.802967804 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.806078228 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.803639999 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.807323595 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.806884145 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.806588441 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.806663127 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.804982989 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.807482558 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.812932123 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.811793876 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.808698567 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.806310555 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.952763857 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.807972277 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.807955923 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.808527346 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.805174588 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.811968329 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.804778367 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.804414311 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.80567575 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.808124316 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.808399598 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.807554642 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.808515229 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.808850124 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.812670437 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.808017598 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.807292267 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.809641979 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.807795603 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.809614885 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.812064265 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.809486422 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.805140508 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.808822576 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.81737606 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.829157865 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.809119212 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814499975 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.808337575 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.808361784 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.812197236 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.818209213 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.805892814 seconds)
  done (took 90.514701289 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808734167 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.809321071 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.806478354 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.808862034 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.80885071 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.8083371 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809293945 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.808163516 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.806430817 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.806603181 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.810223478 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.806355535 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.806469833 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.809026461 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.809823851 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.806718572 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806300288 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806369464 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.8065481 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.807407343 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.807046612 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.810213392 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.810538735 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.806913859 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809602961 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.806539476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807225829 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.810660782 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.8072096 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.807643955 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.809927073 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.8090946 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.809574534 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.808568129 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807035707 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.810060281 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.810463452 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.807620679 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.81065047 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.807791513 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.811105521 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.810531164 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.810496145 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.811421507 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.808405323 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.808785667 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.807887344 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.808910237 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.808336597 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.812030972 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.811441794 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.808326597 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811479599 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.80839464 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.81155212 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.811732701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.808036123 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.808380841 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.812091535 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.808816943 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.809192682 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812238063 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.808445843 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.812024704 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.811472675 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.810101759 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.808911916 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.81209115 seconds)
  done (took 124.755999949 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.812319328 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.812682497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812558788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813290343 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813228246 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.812900541 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812568298 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812627302 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813220226 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813223518 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813338316 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813337688 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.812868734 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.813480387 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.812874783 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813559122 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813930106 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.813745101 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.813706419 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813532941 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.81303188 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813987779 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814316343 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814591725 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.814389368 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813675838 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.814811729 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814099674 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814296041 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.814109156 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.814318595 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81528569 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815262665 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.814450789 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.815430587 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.81457772 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.814453504 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814347439 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.815108953 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814668342 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814273675 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815611128 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815300319 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.815169942 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815746999 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.814714462 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814717547 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.81563084 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.81520679 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81562358 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.815537731 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815668231 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815780677 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.815707077 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.816020665 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.815102324 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.816177543 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.816492672 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815749727 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.81556353 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.816310129 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.815179182 seconds)
  done (took 114.238446016 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815506277 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.814702062 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.812920996 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.812279615 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.815627929 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813275525 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81531442 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.81500254 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815588776 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.816189362 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815592863 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813207831 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814107126 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816457749 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813861736 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813833546 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813559624 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81390759 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.817141109 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.81421817 seconds)
  done (took 38.0387934 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.813593354 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.816993535 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.814489267 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.814178381 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.816472308 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.815682504 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.816674665 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816609286 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814352365 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81627368 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.817265891 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.817011198 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813804973 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816145754 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.818384046 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.814482614 seconds)
  done (took 30.800095399 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814614583 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.817128702 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.817723444 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.818255861 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.813984965 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.814029001 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.816850224 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.814748707 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.813911095 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.817624235 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.817550706 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.817857965 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.817622339 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.818043922 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.815071927 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.818025303 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.815410779 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.815587072 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.818236308 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.818492995 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.815660321 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.815502568 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.817810573 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.817863836 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.81548433 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.81671938 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.815559984 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.815946325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.81612806 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.818602023 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.816326039 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.81642098 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.815770005 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.81623083 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.81920046 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.816487989 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.81969829 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.818537865 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.819791206 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.818754147 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.819222149 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.816493779 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.820080332 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.819938875 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.816513349 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.819228046 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.816149382 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.817540029 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.815917843 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.817455466 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.819752371 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.819743864 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.819676303 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.820083747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.820630439 seconds)
  done (took 101.701806907 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.819074541 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.819772493 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.81686453 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.819521474 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.821039171 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.816901502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.820747325 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.817313996 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817291812 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821173237 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819280787 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.820265405 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.818185914 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.820613668 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.818493225 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820769727 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.81737218 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.818233459 seconds)
  done (took 34.494026051 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.818462236 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819618649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.822021402 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81887768 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.818185788 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.820921893 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818831145 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821398985 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82078626 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.819349808 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818798195 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.82139491 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821139752 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.821468776 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819651687 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818844408 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822424713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.821901767 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.819260549 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.819239719 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.822055667 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821842609 seconds)
  done (took 41.798885259 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.820746385 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.820651432 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.83785921 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842211419 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.843905869 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.855678609 seconds)
  done (took 12.773962486 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820372868 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821956618 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.820044317 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822706723 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823458265 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82087532 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820282514 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819225445 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823287074 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82047801 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819903649 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823470188 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823228654 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819911874 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823450676 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823478376 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821036485 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821974217 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820661913 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823916909 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820892677 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823342513 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821838213 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821221316 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821517546 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8210563 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824076324 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821129247 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821458619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824368339 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825071328 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819146032 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822434438 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820565347 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822660459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824695072 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819547421 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822585704 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822668547 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81995411 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.822617107 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823835453 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82181526 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821093647 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822788181 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822028508 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821559369 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820359479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820713437 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823587444 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823817728 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82120268 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824689479 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823869853 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823287478 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823996837 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820686505 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821352882 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821383629 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819045629 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818033483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822105212 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818170911 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820071816 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82148791 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820220451 seconds)
  done (took 121.993208851 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81863976 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.818665031 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818161109 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818827024 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818385233 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818500402 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818649217 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818202172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815553069 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815788266 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818956749 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815636535 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816276841 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816007291 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81558962 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815940348 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816434561 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816264382 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815666859 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817159228 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814959561 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814032719 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8155847 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815621083 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814933301 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815860347 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813992026 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814406984 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814051315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814531444 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812923322 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813485138 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.812971051 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81355858 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.813478364 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.812992716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813851267 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813868784 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813396237 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81611571 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814470735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.816381941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81388861 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813289294 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815667706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.814856078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813500565 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813773218 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814989541 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814169001 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.812818807 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814329279 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813551972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813578248 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814634221 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814251775 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.813346195 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814991255 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814546904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816967162 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.813647665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814268418 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81823177 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814092291 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815223263 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814626673 seconds)
  done (took 121.561419848 seconds)
done (took 2489.904092105 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.879911849 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.88707859 seconds)
  done (took 15.514572218 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.976962741 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.929214679 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.816282149 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.865260969 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.815555295 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.827169738 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.833971919 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.81508366 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.814992634 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.81542824 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.816256578 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.003213706 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.821141824 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.817489121 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.814660936 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.908156457 seconds)
  done (took 51.441069238 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.819118204 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.820747359 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.829430188 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.820516516 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.818610764 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.830525263 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.852428391 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.823394516 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.861395415 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.83184609 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.894269939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.830546585 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.81739354 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.871293895 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.833677081 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.832771613 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.911243633 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.89754761 seconds)
  done (took 34.944018384 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.896499311 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.823652035 seconds)
  done (took 10.474712173 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.806875342 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.805680518 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.814416394 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.836197184 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814761762 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.814021597 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.842008758 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.833677593 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.83305418 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.820620023 seconds)
  done (took 69.964971024 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.816119677 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.810372783 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.810504819 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.80891515 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.803146124 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.807675624 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.809113294 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.808329064 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.508976934 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.847067262 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.819519155 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.816851709 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.810034261 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.811483483 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.808671839 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.833869119 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.933907632 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.812581118 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.806620133 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.81459511 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.809867421 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.862774071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.826056891 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.809398764 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.838523395 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.506892078 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.817600395 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.814942646 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.935838437 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806156513 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.808350294 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.808849898 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.810054321 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.202241753 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.090894886 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.80786101 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.8168432 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.815737569 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.804270619 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.934923068 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.806933225 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.815327105 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.726092325 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.061342447 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.918092174 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851243021 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.188004842 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.811536755 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.807896729 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.837102617 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.808665977 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808282117 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.821281629 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.312684911 seconds)
  done (took 129.346805448 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.802997291 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.063467373 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.958524772 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.801668713 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092385478 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.01759108 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.804414478 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.85298761 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803802864 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034014432 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024985244 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.913346829 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803913147 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.801683754 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.803583454 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796377774 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.959536119 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.873204292 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.799317714 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.796681533 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.828903275 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043781473 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.928139671 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.799918368 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.819338513 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010164869 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.925305603 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.910402786 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.260120915 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.79562077 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.862153697 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.798478952 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.799378982 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.794636497 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.953657709 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.894100281 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.887042281 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800893402 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.795288637 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.794586416 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.472718418 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.992063957 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.894381736 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.939854052 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.053721148 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.001179556 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.586751557 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.793692699 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.533150576 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956264004 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.028828879 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.029760697 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.920640574 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.79643824 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.061092216 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.792070707 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.791767385 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.031997071 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037785288 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.896682501 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.7955541 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.791006869 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.792299365 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.038757871 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.79355088 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.887981228 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.793236255 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.791171938 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.891617724 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.89710282 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.040808446 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006594016 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.827076944 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.090796271 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.269254844 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.041057692 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.86437493 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.027259465 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.793160493 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.790964522 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.877123023 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.640732436 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.99218046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.042439439 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047617932 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.831846453 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.516640636 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.790642272 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.023616096 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.01787368 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.048012297 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.03452106 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.945097723 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.100508284 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.791262256 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.790912026 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.048241116 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.930008966 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.793933657 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.154661994 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.027739779 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.373061126 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.8256929 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.101541764 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.928608946 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.79575148 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.436979756 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.792058558 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.018713439 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834704069 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.792951145 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.792655465 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.016012465 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.77353763 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.792015156 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.532745088 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.855971302 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.796645302 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.027556281 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.795108563 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.058397707 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.794021342 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030251869 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.149612238 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.825850676 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.965353226 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.03444648 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.794707891 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.051157838 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.039145616 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.911716712 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.067873184 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.719813249 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.793061996 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084904798 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794234005 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.793220008 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.967755293 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.793954918 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.029031167 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.796003097 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.082009187 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821224772 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.951691483 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.795525876 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.056427347 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.833051437 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.849394606 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.797722804 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.927687746 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.797467528 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.671860133 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.948481859 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.794606339 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.79361911 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.347545779 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.795000901 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.952837328 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.030299119 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.821527031 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.871883744 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.469022822 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.793899878 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.886385481 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823678464 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.149623708 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.792790701 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.01151529 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.798481184 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.33469202 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.794134894 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.038690524 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.02989325 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.802632388 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.794683246 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.702996604 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.79495853 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.793939643 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.960728448 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.609463902 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.794102102 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.000137357 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798978785 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.92874931 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.798632678 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.875705213 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.148351072 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.796236166 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.795970346 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.79522605 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.797907292 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.795617545 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005299533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827177243 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.331700567 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.94085827 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.068150923 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.116920075 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.047026972 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.844224252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.80178178 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.044067674 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.797086521 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.861594002 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.797145634 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.818429864 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034072933 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.798471972 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.010126626 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.07860957 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.726700234 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846132432 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.798296837 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.799758946 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.716117122 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.949934847 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889461845 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.797628009 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.797511839 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.914857739 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.922960183 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012558627 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.798584568 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.026365226 seconds)
  done (took 887.179740888 seconds)
done (took 1200.612545248 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.796309618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.797707898 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.78650347 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.796879948 seconds)
  done (took 28.913712467 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.806210901 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.799383396 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.800047743 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.799077535 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.802147927 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.801250269 seconds)
  done (took 12.538150251 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.812113863 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.796403047 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.795348768 seconds)
  done (took 21.138053985 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.868386046 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.214712452 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.910825286 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.241338981 seconds)
  done (took 9.96709262 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.802093827 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.801447727 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.802362554 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.803453121 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.804521878 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.803824732 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.802699376 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.802764928 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.80401368 seconds)
  done (took 17.959518061 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.226428328 seconds)
done (took 96.47544881 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.391599714 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.806565299 seconds)
    (3/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.041877069 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.921239589 seconds)
    (5/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.125949283 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.92657573 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.978048716 seconds)
    (8/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.621149258 seconds)
    (9/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.825475305 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.836028663 seconds)
    (11/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.165260516 seconds)
    (12/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.781394406 seconds)
    (13/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.911405973 seconds)
    (14/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.293417482 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.771022251 seconds)
    (16/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.679089852 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.205893232 seconds)
    (18/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.588959289 seconds)
    (19/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.187976464 seconds)
    (20/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.268141591 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.874181353 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.414489541 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.93907828 seconds)
    (24/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.871640374 seconds)
    (25/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.962144732 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.889215868 seconds)
    (27/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.903227391 seconds)
    (28/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.964065951 seconds)
    (29/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.936734083 seconds)
    (30/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.995321162 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.098442884 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.044765133 seconds)
    (33/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287278374 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.861382475 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.859503501 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.956722535 seconds)
    (37/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.868968349 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.097884063 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.801053834 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.180531368 seconds)
    (41/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.910348376 seconds)
    (42/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.781605735 seconds)
    (43/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.128847125 seconds)
    (44/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.925461251 seconds)
    (45/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.699093067 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.804140676 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.214162899 seconds)
    (48/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.815484932 seconds)
    (49/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.000417643 seconds)
    (50/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.798574301 seconds)
    (51/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.917681898 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.855672352 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.085536418 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.82178176 seconds)
    (55/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.839712685 seconds)
    (56/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.90745178 seconds)
    (57/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.954191254 seconds)
    (58/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.970040976 seconds)
    (59/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.062958552 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.895270968 seconds)
    (61/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.006274624 seconds)
    (62/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.802796527 seconds)
    (63/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.37093066 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.915137887 seconds)
    (65/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.827470936 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.883012185 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.721459187 seconds)
    (68/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.871087676 seconds)
    (69/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.782619008 seconds)
    (70/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.489786016 seconds)
    (71/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.062189876 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.199337515 seconds)
    (73/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.008437963 seconds)
    (74/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.94610528 seconds)
    (75/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.931306739 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.524112741 seconds)
    (77/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.826496198 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.429859727 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.125639149 seconds)
    (80/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902824218 seconds)
    (81/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.980617422 seconds)
    (82/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.80259023 seconds)
    (83/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 3.655744894 seconds)
    (84/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.368804264 seconds)
    (85/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.648391364 seconds)
    (86/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.935407086 seconds)
    (87/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.016629155 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.832729975 seconds)
    (89/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.051579066 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.87598097 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.801748703 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.202626278 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.444228167 seconds)
    (94/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.910588755 seconds)
    (95/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.15668449 seconds)
    (96/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.785543591 seconds)
    (97/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 8.139871029 seconds)
    (98/309) benchmarking ("perf_sum", Int8, true)...
    done (took 3.364058896 seconds)
    (99/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.274818201 seconds)
    (100/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.803212977 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.062465145 seconds)
    (102/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.88070554 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.79745925 seconds)
    (104/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.852396521 seconds)
    (105/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.897346109 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.801037989 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.788809673 seconds)
    (108/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.866702196 seconds)
    (109/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.82710879 seconds)
    (110/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.016599265 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.944419251 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.277903138 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.186319947 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.804062053 seconds)
    (115/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.10193942 seconds)
    (116/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.035168259 seconds)
    (117/309) benchmarking ("sort", Bool, false)...
    done (took 2.251831552 seconds)
    (118/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.906365384 seconds)
    (119/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.822213218 seconds)
    (120/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.928820972 seconds)
    (121/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.429937802 seconds)
    (122/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.906112725 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 3.489988429 seconds)
    (124/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.881821906 seconds)
    (125/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.088210474 seconds)
    (126/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.818478845 seconds)
    (127/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.862168423 seconds)
    (128/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.054230727 seconds)
    (129/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.076894955 seconds)
    (130/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.410238244 seconds)
    (131/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.314397283 seconds)
    (132/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.372611323 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.018063237 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.909969933 seconds)
    (135/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.803989191 seconds)
    (136/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.055836646 seconds)
    (137/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.139548004 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.129747139 seconds)
    (139/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.013375202 seconds)
    (140/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.190841906 seconds)
    (141/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.770265624 seconds)
    (142/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.897445555 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.359709625 seconds)
    (144/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.837237081 seconds)
    (145/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.946560855 seconds)
    (146/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.075971789 seconds)
    (147/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.006761707 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.973647715 seconds)
    (149/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.117383833 seconds)
    (150/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.201777315 seconds)
    (151/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.877733065 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.917029009 seconds)
    (153/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.724285809 seconds)
    (154/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.339934943 seconds)
    (155/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.02479024 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.831068428 seconds)
    (157/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.992548852 seconds)
    (158/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.786688174 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.897512321 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.821961524 seconds)
    (161/309) benchmarking ("sort", Float32, false)...
    done (took 5.523380932 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.178785339 seconds)
    (163/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.804268564 seconds)
    (164/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.824938797 seconds)
    (165/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.746849292 seconds)
    (166/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.192678899 seconds)
    (167/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.013529159 seconds)
    (168/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.915439417 seconds)
    (169/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.467321265 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.275073513 seconds)
    (171/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.662808123 seconds)
    (172/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.944542886 seconds)
    (173/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.892783386 seconds)
    (174/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.790931139 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.815957326 seconds)
    (176/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.924618273 seconds)
    (177/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.89435225 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.829559437 seconds)
    (179/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.815377011 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.804917519 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.907879626 seconds)
    (182/309) benchmarking ("sort", Int8, false)...
    done (took 4.772122327 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.807410117 seconds)
    (184/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.345506954 seconds)
    (185/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006040101 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.985002105 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.85443906 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.837941907 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.459431777 seconds)
    (190/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.913477434 seconds)
    (191/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.983533422 seconds)
    (192/309) benchmarking ("sort", Float64, false)...
    done (took 5.55967388 seconds)
    (193/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.837236284 seconds)
    (194/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.834464532 seconds)
    (195/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.805535361 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.846305172 seconds)
    (197/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.153180343 seconds)
    (198/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.021651485 seconds)
    (199/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.317983611 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.112263586 seconds)
    (201/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.838878899 seconds)
    (202/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.381223458 seconds)
    (203/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.374380936 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.107267665 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.993154755 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.872333013 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.74875838 seconds)
    (208/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.843138402 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.044501481 seconds)
    (210/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.144900673 seconds)
    (211/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.310383322 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.601173869 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.01427322 seconds)
    (214/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.12072767 seconds)
    (215/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.234365508 seconds)
    (216/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.27539367 seconds)
    (217/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.812704501 seconds)
    (218/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.045605563 seconds)
    (219/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.825406085 seconds)
    (220/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.894838323 seconds)
    (221/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.725082661 seconds)
    (222/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.134480203 seconds)
    (223/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.962805039 seconds)
    (224/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.934120014 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.82588801 seconds)
    (226/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.915172482 seconds)
    (227/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.798968766 seconds)
    (228/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.169715947 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.853736848 seconds)
    (230/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.89345742 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.865185647 seconds)
    (232/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.507267057 seconds)
    (233/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.053260442 seconds)
    (234/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.896989397 seconds)
    (235/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.808714954 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.775438473 seconds)
    (237/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.911399639 seconds)
    (238/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.943983162 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.448241095 seconds)
    (240/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.503164344 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.19382256 seconds)
    (242/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.838576978 seconds)
    (243/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.113098822 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.145138577 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.11535917 seconds)
    (246/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.814674514 seconds)
    (247/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.033852467 seconds)
    (248/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.912565482 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.50483948 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.017119722 seconds)
    (251/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.907008283 seconds)
    (252/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.810158026 seconds)
    (253/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.786764488 seconds)
    (254/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.881384922 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.104401702 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.196739362 seconds)
    (257/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.821855913 seconds)
    (258/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.795719364 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.903872262 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.15192358 seconds)
    (261/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.950673921 seconds)
    (262/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.928152035 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.027259507 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.925124071 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.837176852 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.930156652 seconds)
    (267/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.939266132 seconds)
    (268/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.834322515 seconds)
    (269/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.894312827 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 3.492470829 seconds)
    (271/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.810776771 seconds)
    (272/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.954177052 seconds)
    (273/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.830956682 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.738016196 seconds)
    (275/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.219618596 seconds)
    (276/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.917513875 seconds)
    (277/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.175882962 seconds)
    (278/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.890056965 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.505036426 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.912044327 seconds)
    (281/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.753702511 seconds)
    (282/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.133535868 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.895955773 seconds)
    (284/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.11322961 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.964323268 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.995343968 seconds)
    (287/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.277764804 seconds)
    (288/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.963818976 seconds)
    (289/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.101549696 seconds)
    (290/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.817423223 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.547604398 seconds)
    (292/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.815021547 seconds)
    (293/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.862481845 seconds)
    (294/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.831197896 seconds)
    (295/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.814282141 seconds)
    (296/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.918725279 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.892584601 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.84395426 seconds)
    (299/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.375366473 seconds)
    (300/309) benchmarking ("sort", BigInt, false)...
    done (took 6.813156692 seconds)
    (301/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.803571688 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.068607361 seconds)
    (303/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.989111107 seconds)
    (304/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.902389682 seconds)
    (305/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.980147236 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.843539658 seconds)
    (307/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.989952057 seconds)
    (308/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.816700039 seconds)
    (309/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.814799731 seconds)
  done (took 998.168982132 seconds)
done (took 999.973476686 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.845185142 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.839373814 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.822782363 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.84362244 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.934420665 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.853388956 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.833262189 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.824532247 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.870939933 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.872727191 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.821619932 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.85963443 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.825441508 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.824311594 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.822047048 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.8376837 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.130110965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.845183959 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.840974573 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.831904756 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.83949957 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.821875897 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.872540339 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853544863 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.828552348 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.826952924 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.827248933 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.844686307 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.935680654 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.82822511 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.826815811 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.835507425 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.129087188 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.843956003 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.818880753 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.843994942 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.834557058 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.833918595 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.82847924 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.855983257 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.260823377 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.830436914 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.827419223 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.826350271 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.82634868 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.829783169 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.827503084 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.830715948 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.837797695 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.839701888 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.256918647 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.844451338 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.828655838 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.825488321 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.835754375 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.825424137 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.828961134 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.841053859 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.845776741 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.842298615 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.120072939 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.851353658 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.828108863 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.842583256 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.834248881 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.293059112 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.825729729 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.829979263 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.260403953 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.8363416 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.295353176 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.840066584 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.827205465 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.840700276 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.858020399 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.132094972 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.842564806 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.827309505 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.833467224 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.825830941 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.836700949 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.840551768 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.833212348 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.827206131 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.841297121 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.859275112 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.837349924 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.829353535 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.836366058 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.847738026 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.835315372 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.838554823 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.831324968 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.823893839 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.83761267 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.832101633 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.831268503 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.831876008 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.834124963 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.840464737 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.258433575 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.848577969 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.824683265 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.824770779 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.828534897 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.842334862 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.258879248 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.833230532 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.850699642 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.876209477 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.8299663 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.122959509 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.853084622 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.845086098 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.837429547 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.831659142 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.823808619 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.123827423 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.281960832 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.848318227 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.830731173 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.827035108 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.844876776 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.831588645 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.826245982 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.135667313 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.850919593 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.842434549 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.950089531 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.839633932 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.860755418 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.827592751 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.831865136 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.861885247 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845831617 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.862053437 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.833352793 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.845911251 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.846341791 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.826479426 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.841443718 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.841171818 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.831934063 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.835424002 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.824409742 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.863300251 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.844142185 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.842609843 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.850373653 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.952087127 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.827721029 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.126080065 seconds)
done (took 287.292689339 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.897276699 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.826974373 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.92674508 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.828487382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.910167139 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.916106889 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.82563337 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.827018318 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.825387612 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.200293205 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.826811794 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.827082093 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.82453399 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.827049851 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.911177658 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.829384609 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.826079603 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.164077527 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.82973186 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.901413497 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.826163457 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.827804517 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.829007274 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.200095154 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.821106803 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.827259111 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.90070049 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.831186146 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.165856856 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.827130893 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.826710616 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.164421146 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.920830611 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.849438625 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.840368046 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.837564591 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.911506113 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.834880395 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.910826311 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.910095958 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.935302946 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.870141051 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.828032673 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.822611083 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.832020238 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.831025989 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.828033517 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.858272893 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.829630997 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.828583139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.164879288 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.841314402 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.837838882 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.830174233 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.828716256 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.852117403 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.829692884 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.831935065 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.921019896 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.83212837 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.892659094 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.20279043 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.202903524 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.83438706 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.830599325 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.829586709 seconds)
  done (took 181.599430529 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.897383828 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.905782838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.89875957 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.834557718 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.88152642 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.898499519 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.834681639 seconds)
  done (took 14.911321182 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.836742566 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.832922108 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.880815191 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.880712921 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.830530573 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.981070969 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.833050572 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.842470025 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.83035988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.883471651 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.833818283 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.833827285 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.838839336 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.823921943 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.881227507 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.842631203 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.948103711 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.833216466 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.833121797 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.984641172 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830704801 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.840602126 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.887046192 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.843369733 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.83357753 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.837818259 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.41561761 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.834181089 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.830341099 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.836165942 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.832433577 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.873919018 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.834800732 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.825147877 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.831167113 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.948045443 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.833580419 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.837322118 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.834123505 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.824901855 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.834948419 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.834136789 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.834903774 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.831289569 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.834120242 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.8571963 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.835550176 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.834814571 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.83383749 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.835350141 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.886257889 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.836179513 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.832553038 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.832031235 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.888201119 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.842396713 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.838593141 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.833031792 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.8359389 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.833415435 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.986658958 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.885007916 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.835497885 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.882540502 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.836343598 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.836553663 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.837109679 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.835630456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.928915423 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.83509316 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.883512188 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.833397606 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.994916614 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.857925056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.838001091 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.83780959 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.836609346 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.842142257 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.835980997 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.842180865 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.836879664 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.837111423 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.841806759 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.835209188 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.834719407 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950697584 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.944279117 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.835804432 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.850035863 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.843830943 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.836437623 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.892250463 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.840343843 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.835469228 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.894022773 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.954907688 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.895333451 seconds)
  done (took 202.398851788 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.842999649 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.847116284 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.839906124 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.859089543 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.839193219 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.838867137 seconds)
  done (took 12.833815221 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.838907856 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.840230019 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.838748734 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.83919797 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.83939497 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.84100272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.838962893 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840027604 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.842868426 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.840289719 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.840574004 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.839164938 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.840130747 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.839728554 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.83973782 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.839378667 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.839411449 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.83791828 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.842291454 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.838751814 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.997180782 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.84003847 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.839357189 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.839843501 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.844381909 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.840096891 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.847590645 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.841176323 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.842576436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.847177711 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.843101389 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.840539518 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.839998962 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.844801132 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.84547157 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.839512883 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.84337536 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.840551457 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.836787724 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.843509018 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.838834316 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.840129588 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.839668125 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.839988802 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.840897302 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.843513724 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.844491414 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.847752467 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.841224705 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.840801843 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.841305228 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.840455446 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.842511854 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.840570598 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.841086264 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.843394921 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.844513971 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.840524854 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.840824402 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.840249424 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.841035641 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.843567092 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.8419465 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.844317497 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838484272 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.841660678 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.840576302 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.843631623 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.841040681 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.842339856 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.842278545 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.83917153 seconds)
  done (took 135.495523527 seconds)
done (took 549.006614532 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.989004987 seconds)
  done (took 8.758910188 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.963309221 seconds)
  done (took 8.835274146 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.133535421 seconds)
  done (took 9.903922887 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.858284363 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.872150228 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.843600473 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.836573134 seconds)
  done (took 29.191408889 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.985428588 seconds)
  done (took 8.755501676 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.854704798 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.8358398 seconds)
  done (took 15.495812535 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.004141688 seconds)
  done (took 8.774704107 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.902884917 seconds)
  done (took 8.674517864 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.862191965 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.876229769 seconds)
  done (took 15.523374575 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.819043639 seconds)
  done (took 8.586695188 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.571172291 seconds)
  done (took 11.350549601 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.847856785 seconds)
  done (took 8.63403148 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.889759552 seconds)
  done (took 8.663577714 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.963336901 seconds)
  done (took 9.735905821 seconds)
done (took 162.652896601 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.840019438 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.839471108 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.840044222 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.839185719 seconds)
  done (took 29.131721562 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.878124153 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.877407019 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.881162388 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.887902202 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.881147369 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.878185951 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.870297952 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.871376793 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.889305096 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.881149907 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.879591868 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.88104606 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.877687781 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.873488932 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.881252449 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.881322535 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.889003838 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.880412998 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.872358247 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.882069907 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.846782731 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.891003774 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.881368875 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.847180313 seconds)
  done (took 46.8335193 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.043235654 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.916410438 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.998224112 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.898114627 seconds)
  done (took 9.630370873 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.897457639 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.900081375 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.910366336 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.948887732 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.974289164 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.909895945 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.868546307 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.867607278 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.853442862 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.900198589 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.975351115 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.895925126 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.001218685 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.847010567 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.03252233 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.848027556 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.847231818 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.898882263 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.951655244 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.963208496 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.847913496 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.899180547 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.901938739 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.892709358 seconds)
  done (took 47.609085524 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.847068487 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.854623072 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.852136362 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.846753702 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.847801933 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.847216784 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.852111389 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.84802609 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.868149563 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.846894445 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.845935231 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.846114477 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.846410916 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.846760285 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.845781177 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.859348841 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.86156429 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.847909003 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.850356878 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.852600966 seconds)
  done (took 38.789449248 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.841610085 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.021510384 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.192794497 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.09574067 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.838991527 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.839929307 seconds)
  done (took 31.606802426 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.857126331 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.850176492 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.845481407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.901757835 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.980541486 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.851094581 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.846678041 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.85605187 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.888270789 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.907147445 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.865287392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.87085005 seconds)
  done (took 24.296486599 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.840821555 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.84292913 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.844213265 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.859380414 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.857014124 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.853952391 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.854164104 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.840822115 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.859874472 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.863665317 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.852125531 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.859229223 seconds)
  done (took 44.006123792 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93123078 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.730733323 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.926345418 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.570558427 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.31404953 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055579284 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353236579 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.180221937 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.846754458 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.117169145 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990691254 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.948492851 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.096666664 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842388905 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.871263241 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.345508813 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.141122279 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.090211067 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870995132 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.651143402 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894075351 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.249170603 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.723871865 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.902520594 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.054966609 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.976040164 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.106385542 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.802479022 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983566106 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.882654862 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855109884 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.844950012 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.119646349 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228312617 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943759204 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85544331 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.50003353 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.56411995 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.896838573 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.650071223 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.715025047 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.973887736 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853841012 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84489024 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.779174018 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.252419656 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215076173 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.850879749 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.556025341 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.846159414 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856081832 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.932877019 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.848577325 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.65999195 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.796343231 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12575347 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.844536409 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851947487 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417351697 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.01204032 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.283596182 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.813183259 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.036862276 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.688152859 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248890346 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.996653654 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.851294558 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.850622636 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780921651 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.661357213 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312890071 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.993116689 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.86801602 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497003116 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153360003 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.036630359 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.790072251 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146273335 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.525553838 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.816207049 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075266357 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.798806789 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.782192247 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.707694357 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.78295555 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.138984284 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885375247 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.495077462 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889369377 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184209885 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.859273056 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8652646 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856462483 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072043769 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.414247852 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848810334 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.805273588 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.990916335 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.870230862 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.184457298 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784124436 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.85261782 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.10438797 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.060639585 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.160590627 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.383897834 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007153869 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860604919 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.865041367 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.653561495 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894008833 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.135144106 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912273342 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005468696 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907443832 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.813082696 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.165530147 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877484032 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.952334095 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.05479102 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974959493 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.20605752 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.138117888 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914072474 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849601413 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850987802 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.709623581 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402391442 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.116947222 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.850244789 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.24625524 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.89462925 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.852801734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786050997 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.46840252 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055429932 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.824078727 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.075516784 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.69582088 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.157720092 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786579797 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997600699 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965899589 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.074045786 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.510047829 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.936114723 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.108512729 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.238361135 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.002932455 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.89369954 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871785309 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942132815 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874385773 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.146015856 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.139439712 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.856234522 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.856148728 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.736934724 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.854699899 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.853370994 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.856927664 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.653431339 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.139509756 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883797582 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.856748512 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.108360751 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.866923073 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921007661 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.858028388 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863890373 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.392815676 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.60034864 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.862852853 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.471473677 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078817432 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863816024 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.661738552 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963627598 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.934919064 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13381161 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.916996957 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.788560632 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.565457957 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.54796596 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854202468 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.7904721 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.852796901 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864200989 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864947201 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.233600589 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146082043 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.903177388 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.794499968 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.896566524 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865654886 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.860507519 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855151295 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.396325335 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027275929 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.315175705 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.898316911 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992468518 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.867695647 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.789923028 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.8593555 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860008942 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.85571408 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.814087743 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909206565 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.669211928 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231385913 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112528001 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.503119706 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87290714 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.823344132 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.914722209 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.882339193 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.831648173 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.687740033 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.882067521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984939634 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.866331562 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.69792059 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.562667077 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424125432 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.190198682 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.176561341 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313115967 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.224413319 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.156435323 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197896924 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.092998453 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.387121613 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915244451 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199418795 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801634629 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.942083481 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.515893851 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215127142 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.871792671 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086014044 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.256103517 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.745976802 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033725051 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.069763061 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893449273 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857582799 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.809973717 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.061753087 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998354144 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.715793712 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064727543 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197775232 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689858977 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.981105485 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.858472543 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.57349246 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945817447 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.5740629 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.221223881 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.27214446 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.893269312 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336031461 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862833836 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.304761265 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.226181692 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.065453257 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.973399066 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795012627 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.871172004 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.867766003 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.859819204 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.851639909 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.728977133 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.111841047 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.869643327 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094337575 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.021327277 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163406627 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.765934076 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.8649585 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861118701 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167193376 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.549098406 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025189545 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.198370483 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.385191647 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863876381 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.794217243 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.795308838 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.553781431 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870479964 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.838030581 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.094242038 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.04375725 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847393458 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258845848 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.099431806 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.11533772 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.874417233 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.14313441 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.137405797 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.59628314 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889478946 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.960513717 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.674676407 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.972864539 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.13006931 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.095878717 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.660122649 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.091647493 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.935963665 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.678276099 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.859962189 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.075633684 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.130393977 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863127858 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.099090102 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.585760909 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.861908317 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.313604447 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919262069 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.923191127 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.016815785 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.05671878 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871704338 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.946713955 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872694651 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.873889179 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.873054246 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907841679 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929275534 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.991897484 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.876483292 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.951661421 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.028188324 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.398861262 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.869093324 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.148950652 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234639338 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.201021171 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.923939601 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.863124671 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864340739 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798519638 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999898735 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.308525346 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137862244 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995759548 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.162502816 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887414123 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.675129056 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.135173068 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102593746 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138786534 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.760006541 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.863639228 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.896828409 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.131241184 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.874657874 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.076058521 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103346206 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190353453 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336639255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.001295265 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.229951022 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139124774 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.235237413 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.865073497 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.454991845 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.872071963 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.702098857 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.908789269 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.994240636 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133317844 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876958668 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.250911661 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.889378552 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.067459536 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.38341358 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.698931549 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.153353921 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.86183254 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.930122784 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.149687137 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.262124282 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.179196957 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.938334634 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.87603561 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.580129771 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003343384 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.736802401 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.135178167 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.867058411 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076797059 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.576182156 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.87633699 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157584489 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.177396215 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.86511727 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.735937964 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875609102 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.877708431 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.090972364 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153993109 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120496448 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.878507874 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.876887268 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.681415599 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.158083715 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928084556 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801674389 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.871937499 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96944232 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11679239 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89051273 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.384196456 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.578888468 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176807841 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.787539445 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889464009 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454253047 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.246384624 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.208958429 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.418954679 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.109852401 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.427273449 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.720465356 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.167312801 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.873120416 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282800859 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170768363 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.873413159 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.388365554 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905597471 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.147932246 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189111601 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.872887917 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809357359 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.837267704 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092735336 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.462030656 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.810818148 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.871199363 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.926925964 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.870853099 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.998233217 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.88180044 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.740196416 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.696788064 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.6371004 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363470446 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.87493692 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.860819622 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.702894597 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423417069 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902437341 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012688218 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.880799459 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.581096209 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.166278307 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125258077 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.468770669 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.877128001 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.875923806 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.870699624 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.799081634 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.067528862 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.249670882 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.177762205 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.220670662 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.90508191 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.875605529 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.086961757 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082181641 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.918765566 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014899795 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259775896 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.907839139 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.635619268 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.550475494 seconds)
  done (took 1681.595195912 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.88855664 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.923353687 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.878873593 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.941868152 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983139236 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.964927788 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.986745143 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890771025 seconds)
  done (took 57.264057324 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.868880606 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.066936682 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.879529835 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.871546597 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.879332681 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.871017829 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.038163155 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.878026917 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.879286519 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.879425439 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.876462438 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.870265824 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.181694669 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.891883643 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.87090517 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.8579433 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.881943327 seconds)
  done (took 74.394793637 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.873649948 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.071919227 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.911275896 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.897863854 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.817468378 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.891367347 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.826424435 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.924263092 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.87755874 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.091057512 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.213772019 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.88791302 seconds)
  done (took 90.09079546 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.88157237 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.877662334 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.878490506 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.877217699 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.878414224 seconds)
  done (took 11.203216773 seconds)
done (took 2188.252564332 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.121316922 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.091249415 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.095818105 seconds)
  done (took 5.994125711 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.018010334 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.066943582 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.184759578 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.195204727 seconds)
  done (took 10.270309004 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.164461195 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.254504849 seconds)
  done (took 6.221436202 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.271905743 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.884940114 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.264597275 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.869343138 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.871911052 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.873973838 seconds)
  done (took 22.423360294 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.87366302 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.877656091 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.873875017 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.876467741 seconds)
  done (took 9.305546335 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.85316556 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.591314852 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.853158615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.867593598 seconds)
  done (took 20.968233619 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.623268925 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.272580902 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.616227178 seconds)
  done (took 9.315810609 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.4361019 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.777783769 seconds)
  done (took 9.019257659 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.132573559 seconds)
  done (took 3.938182426 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.902627058 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.144632836 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.397063899 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.416050843 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.501204418 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.755631765 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.176291689 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.10781178 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.295662689 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.306783865 seconds)
  done (took 24.807619071 seconds)
done (took 137.613484514 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.247653666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.114665136 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.071262032 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.25841561 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.098813506 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.072143374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.085678486 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.242029012 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.715203362 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.712779634 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.217907878 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.098855425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.026926911 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.107843865 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.031767501 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.231481174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.090607398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.257271359 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.912621364 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.110268919 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.088291557 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.84534832 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.057276042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.858858093 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.094721518 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.023506308 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.435384432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.234266425 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.067553551 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.445583203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.027025729 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.264877365 seconds)
  done (took 170.953475563 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.608762998 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.872651328 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.872260783 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.871991659 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.313123013 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873526898 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872860061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.873904196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.960510094 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.947514827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.873802918 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.297639257 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.874785395 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.873264773 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.876916058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872482118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.143399798 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.6599547 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.884978199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.889073337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.893705762 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.175619387 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.893856226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.230747165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.194220678 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.902793682 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872475564 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.90028149 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.880255422 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.858620686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886632768 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874780024 seconds)
  done (took 207.686091746 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.847313146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.873622628 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.873923357 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.875177731 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.874340327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.87547951 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.87569189 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.87503196 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.461496989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.460394756 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.880709964 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.881405795 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.887188533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.875234018 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.877611058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.87563156 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.882606689 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.891315724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.88207777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.883048154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.888846283 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.617301658 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.884486027 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.631749715 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.883512598 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.883955281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.875691222 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.885178261 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.888237132 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.88921218 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.886745332 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.876850327 seconds)
  done (took 220.625134602 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.072793835 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.882777632 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.884065216 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.822074492 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.884589427 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.883429473 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.835977627 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.080155841 seconds)
  done (took 19.17036439 seconds)
done (took 620.2479852 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.326231585 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.175241885 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.050095954 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.906950062 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.130310231 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.933507472 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.903825108 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.965019137 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.630021873 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.967915502 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.544341235 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.914890207 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.639155222 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.920553282 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.028909028 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.959353479 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.453299281 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546618165 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.075154258 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.960887434 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.072857998 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.862609391 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.978538595 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.648075371 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.657901636 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.902537386 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.083787512 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.45422371 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.910983179 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.063007957 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.640485685 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.270324814 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.910749221 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.89992879 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.957771091 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.93640584 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.259037347 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.908880621 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.022266237 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.66657152 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.952112326 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.504842081 seconds)
  done (took 103.407872846 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.874388986 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.871427736 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.870152009 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.872811135 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.873625322 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.872105442 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.872861056 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.872476164 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.87198654 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.871777427 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.872469922 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.873913389 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.872029237 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.872844184 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.872870721 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.872029866 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.872377657 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.875056688 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.873275628 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.873026106 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.873415717 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.873938092 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.888525144 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.872644638 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.87355263 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.874676686 seconds)
  done (took 50.533305695 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.885904411 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.033410638 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.136267536 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.900615517 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.885094264 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.888765531 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.90431918 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.889883764 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.889526227 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.889064504 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.993821935 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.892559476 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.904908843 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.140410827 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.900179566 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.8884131 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.888209214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.889443162 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.040340309 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899869259 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.907105508 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.892013666 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.90675343 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.900649044 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.891939523 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.88869778 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.891932936 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.364416639 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.894334482 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.994273544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.928204424 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.908008862 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.305428867 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.149353825 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.936005657 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.894416491 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.88976231 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.995663878 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.891593368 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.889229269 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.906789792 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.891976142 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.141706787 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.368136745 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.900220807 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.888542551 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.374655243 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.004636129 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.927185623 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.897727881 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.143062297 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.901225986 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.890565941 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.889339588 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.92636774 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.895662816 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.888547704 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.210483859 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.900493925 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.908851427 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.894568051 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.892885373 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.050124581 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.896202108 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.035933809 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.8944764 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.895538069 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.889959293 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.141636932 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.902268399 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.380658138 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.898269416 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.889802878 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.993332899 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.039623132 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.39747682 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.899298983 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05014338 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.321152295 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.911312331 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.895637249 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.355471418 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.914146324 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.896943227 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.893417573 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.894060498 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.891924874 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.934455442 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.905075159 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.304571195 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.38069976 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.221445694 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.913262473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.905781441 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.891852897 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.206734119 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.89747208 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.891584031 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.136859372 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.386560038 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.902242425 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.898947751 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.366602529 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.90311043 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.908397073 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.899901467 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.147967618 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.902456229 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.935408732 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.892677845 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.89760152 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.896044901 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.909544162 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.897464272 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.893935217 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.366063369 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.012755232 seconds)
  done (took 234.358779032 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.887351725 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.897092438 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.885672505 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.887073635 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.885610918 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.89121435 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.8848965 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.885317746 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.891598706 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.885910532 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.886308052 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.887708266 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.88765566 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.893789044 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.394137917 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.907314976 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.511560895 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.901145816 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.898773746 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.900295851 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.578593605 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.905781147 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.8991022 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.900563787 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.901618616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.899788768 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.900796007 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.932221417 seconds)
  done (took 168.690902021 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.907413688 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.087904961 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.926904464 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.944960365 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.91595814 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.905149369 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.931356576 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.930190855 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.910935374 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.905550798 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.905137337 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.967518769 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.921412207 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.041999502 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.939728262 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.93890877 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.011813645 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.917324299 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.90514277 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.906557974 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.93509949 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.903797626 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.970560839 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.036553054 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.926410424 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.026090147 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.916086593 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.908560286 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.907219584 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.025949752 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.922244458 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.968033415 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.935988999 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.926562314 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.031360768 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.028552405 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.019112646 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.938613823 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.911970272 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.908332853 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.905992517 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.895130586 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025676004 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.927669652 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.909553008 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.016254455 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.929833169 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.910680479 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.919251954 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.907529324 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.922871729 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.927009659 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.975905089 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.04234686 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.945312893 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.934601739 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.934391632 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.178242602 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.919587771 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.010292268 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.902695305 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.027764379 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.931633417 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.896561832 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.909273987 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.915443495 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.93829308 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.939928207 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.017825639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.918565936 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.010490578 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.947333727 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.917349966 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.908707198 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.910691411 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.027749032 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.031408415 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.947047425 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.94660476 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941467099 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.904822828 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.910536419 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.899511188 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.928346188 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.913178444 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.026259268 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.030245649 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.919584486 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.912521087 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.911897243 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.912088363 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.934991342 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.037941844 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.947335156 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.007195884 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.978814204 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.984133314 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.9252837 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.923152843 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.915497996 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.974768921 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.926459633 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.919570087 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.225556764 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.982577189 seconds)
  done (took 206.883263644 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.387458534 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.969089328 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.968496689 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.240464809 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.34515038 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.763649308 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.962999469 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.961560104 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.98334967 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.148558875 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.034784509 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.980640694 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.946469044 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.933840477 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.958286166 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.980722433 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.976338925 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.280415231 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.087823527 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.019078255 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.944079508 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.252444023 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.281586389 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.39542184 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.995964105 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.28469947 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.654970772 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.106286021 seconds)
  done (took 62.68978976 seconds)
done (took 828.372534972 seconds)
SAVING RESULT...
DONE!
