cset: moving following pidspec: 8883
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.5899435 seconds)
loading group "shootout"... done (took 1.192475567 seconds)
loading group "string"... done (took 0.428964396 seconds)
loading group "linalg"... done (took 7.854038131 seconds)
loading group "parallel"... done (took 0.152263911 seconds)
loading group "find"... done (took 1.261401952 seconds)
loading group "tuple"... done (took 1.943946207 seconds)
loading group "union"... done (took 12.773746164 seconds)
loading group "dates"... done (took 1.363866487 seconds)
loading group "micro"... done (took 0.236386472 seconds)
loading group "simd"... done (took 4.472675246 seconds)
loading group "io"... done (took 0.970205393 seconds)
loading group "random"... done (took 9.224210387 seconds)
loading group "problem"... done (took 1.591711033 seconds)
loading group "array"... done (took 20.481744082 seconds)
loading group "misc"... done (took 1.693572342 seconds)
loading group "scalar"... done (took 46.147799643 seconds)
loading group "sort"... done (took 3.635338143 seconds)
loading group "sparse"... done (took 13.84633587 seconds)
loading group "collection"... done (took 19.847494548 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.553319511 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.130829709 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.140216343 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123834443 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15907914 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.119184762 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.128137534 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.085288857 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.97922548 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149956994 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115347153 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.483525498 seconds)
done (took 5.58969063 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172803283 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087848686 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079760713 seconds)
  done (took 1.274830049 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067628107 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128552981 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.068619096 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068765987 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068855664 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068639006 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068133307 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068324498 seconds)
  done (took 1.648835356 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073522115 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069593488 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067465603 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072625206 seconds)
  done (took 1.392416223 seconds)
done (took 5.680872851 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.255397798 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.10952581 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.303150469 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.324608304 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.439785936 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092911505 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.075717833 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.072113781 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129386096 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.326452347 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.118996358 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.195006861 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099485363 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.181595192 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 2.030409017 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.133771627 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08709522 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.126580445 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095041709 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133395296 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.371199793 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.078146391 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.083631864 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.072484553 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.070040713 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.663706972 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.682253396 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.15092342 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.085772654 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.081655024 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.118284022 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.65126602 seconds)
  done (took 10.588557843 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101418441 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101777603 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070864794 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126234854 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100617841 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07091689 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076546681 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069467486 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.090315388 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128283498 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.094470389 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107973742 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068025921 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071125238 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.094738658 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.198244386 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081592955 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.082412607 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070192636 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080192862 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107765334 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079365028 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.081063269 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.080694003 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.130888057 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.172881818 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.098026142 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09940895 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069596555 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081823155 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.116456777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129552652 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069919941 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.067650835 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125649406 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.100990908 seconds)
  done (took 4.657110312 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.192303172 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.095095241 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.103579712 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.618728221 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068115049 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.149682524 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236156709 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074069737 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.459272779 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.159078609 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.152902806 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.143500856 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.123486735 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.074214954 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.335195704 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.124925615 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341759169 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.070501483 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.071029865 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065956528 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076253942 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068602407 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064787752 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.077714773 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.092074209 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.092465379 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.228879852 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.010997391 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.30171969 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.070955812 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.166261425 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.105681184 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.365371945 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.073661082 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.094734367 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067212749 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.394409249 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.128924649 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067195464 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174172734 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.130985187 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066293405 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119856671 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.081891745 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.07314373 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.07378574 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.070202839 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.080439394 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.083684494 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.104418644 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06622954 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071178268 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06696353 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.171813785 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067528467 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067687722 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.069312056 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152656058 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069318692 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.159292376 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067051266 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.070424123 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.096390424 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072621992 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.0890704 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097565926 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.119995159 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.335804661 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.043970307 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.071789043 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.913177992 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081922923 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.06824884 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.084517026 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068403848 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.069991793 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068254154 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.07880963 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071746153 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.070097697 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.112821144 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.07009346 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071944515 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.067069598 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.072789802 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.100845494 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067950417 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.458349251 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101388839 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.070673899 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.078962426 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.10897508 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068765598 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.074252979 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.071041928 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.073534846 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067203761 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.071526536 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073344408 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.065862098 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.097461384 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.070545502 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.217991306 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.048363046 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.074843344 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.068476916 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073523751 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073966104 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.071277237 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.067858894 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073209555 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069878302 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067032485 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.11964238 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067198917 seconds)
  done (took 22.225580935 seconds)
done (took 39.77332821 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.2585599 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082925717 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.083617528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.083734276 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083080031 seconds)
  done (took 1.807510756 seconds)
done (took 3.005623434 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.136196821 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105391484 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066327685 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103138298 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066101341 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107947579 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.106511007 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084499451 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10676205 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.0660719 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103839248 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06611785 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065616531 seconds)
  done (took 2.396877079 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083740455 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086427005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071030173 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08219749 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06400466 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082192192 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081451173 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.088558557 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081657559 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073903548 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063967449 seconds)
  done (took 2.052822836 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082153108 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084434879 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070256521 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082931188 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063609413 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082417029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08277379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086439405 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082509012 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074547704 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064665437 seconds)
  done (took 2.039822408 seconds)
done (took 7.675751089 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.076168145 seconds)
  done (took 1.24975073 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.545863003 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.533500932 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078195173 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.099990318 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.205011101 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.10882374 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.235972933 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.081898 seconds)
  done (took 8.24285672 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100055122 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070848819 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.072412813 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083931821 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070126087 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071414098 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070204626 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071245464 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.070213643 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070259009 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071409866 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070660731 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071190772 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071256046 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071385803 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070459878 seconds)
  done (took 2.445083304 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.100468277 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.099003369 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.074685088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07544742 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073638238 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073325908 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075766078 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075288574 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07271787 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073989231 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07663778 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074122022 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074545741 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065357583 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074630696 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077284411 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.073054637 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075502656 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07580531 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077715563 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075918288 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065235787 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.074335301 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075179763 seconds)
  done (took 3.129142855 seconds)
done (took 16.250718237 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.115399484 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.077803144 seconds)
  done (took 1.377228798 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082103461 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08213018 seconds)
  done (took 1.359518282 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.077177207 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063123703 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.083081801 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07382017 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.064054574 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.063864485 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.081111065 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.064448271 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063800977 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.064202932 seconds)
  done (took 1.8948123 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.065404812 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075743098 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069524528 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082747176 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070302788 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064882943 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068281857 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065494466 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.072236574 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063971227 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069136394 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082855947 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068749349 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084666506 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068191193 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068501032 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070820036 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068025061 seconds)
  done (took 2.478146771 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.06404316 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.064715874 seconds)
  done (took 1.330528386 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067123925 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064662175 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067156349 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066856772 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064728969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063768409 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064653699 seconds)
  done (took 1.656303611 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379653265 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135309535 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.344064684 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072032534 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.080305085 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.254819153 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066239049 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070409662 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071053448 seconds)
  done (took 2.716794136 seconds)
done (took 14.020364875 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081953438 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086866345 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.103420956 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.426045103 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093392872 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068961618 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114826733 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187047875 seconds)
done (took 2.377687513 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.215387423 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.117035936 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.932721686 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.069424243 seconds)
  done (took 3.321670546 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.346148782 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.092877754 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078453001 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068591785 seconds)
  done (took 1.798563867 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.068572037 seconds)
    (2/2) benchmarking "read"...
    done (took 0.07157855 seconds)
  done (took 1.345755597 seconds)
done (took 7.896884799 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066472585 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066499807 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066896821 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065877949 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066310861 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06598806 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093199156 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.065810855 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066432773 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066524056 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066697349 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.065836981 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06645113 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066022903 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066305518 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066432516 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065811144 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.066123642 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066849512 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066414233 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066402079 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066123949 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066399027 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066662259 seconds)
  done (took 2.860541189 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082844749 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.067915456 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.069348071 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06972926 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070093635 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.069596513 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.069521482 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.068396244 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.069741362 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068162273 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069680113 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070047074 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067822981 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069826861 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06846097 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071139762 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.069494818 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067984795 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067323772 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069780231 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.069363821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068291563 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069854997 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069817646 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070344288 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069764351 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067866073 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.068122911 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06971637 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.06972113 seconds)
  done (took 3.308155258 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.0665316 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062352133 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063650371 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072061958 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.062736504 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063579191 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062330976 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06246097 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063355402 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063018351 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063620187 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.062579767 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063044004 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063551943 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.06348147 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066934425 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080057591 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063095491 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062872014 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063593431 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066647237 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062450203 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062762163 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.062309312 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.062417512 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062571976 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065364524 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062362921 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063049128 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063129845 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066744235 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.067207437 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062392707 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071531951 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066710851 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062774869 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066756809 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.06252458 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06344253 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062694592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063098453 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062835345 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062998703 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071630905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063052457 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.063526129 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062532902 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064145692 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063155905 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064788953 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062615766 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06334886 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064447042 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.063997186 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068023575 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063019903 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063882504 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062568504 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063562541 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062954214 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062131555 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062308713 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066088297 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063085843 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080095276 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071333885 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062615346 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063815509 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06302573 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065654521 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.0639463 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077992157 seconds)
  done (took 5.882643101 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089273636 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091868473 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067918063 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067482876 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063189925 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063058566 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071215554 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063323572 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067436127 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081845718 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063032791 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067493523 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067881832 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067337661 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063384844 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067587866 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071576706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063461995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063450943 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067658171 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06341589 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070915814 seconds)
  done (took 2.758380285 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149164287 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068988127 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105679892 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073728664 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071571969 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073141009 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069474831 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068824696 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068965666 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070061746 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069738438 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068760575 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070896854 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06948196 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069398626 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069161048 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069547926 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06935785 seconds)
  done (took 2.602292265 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07936812 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069080386 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088505391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069070918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069059435 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068169309 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072075504 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072977546 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068292244 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068435831 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.072816164 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068617349 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068491422 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068738126 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069353994 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068584512 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068462526 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068704605 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072805441 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07302324 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072863551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073252843 seconds)
  done (took 2.79712192 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079294542 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067864381 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082814185 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069384724 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063328045 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063681707 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069777157 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067943873 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069517431 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067587292 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068105035 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063774713 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070146562 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067801834 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070289293 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067817762 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067758246 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067908934 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067595026 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063069119 seconds)
  done (took 2.603247314 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093585459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066668326 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066084087 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072416559 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066805792 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.065896367 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072140827 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066225348 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066147171 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08658517 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066083673 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066348224 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072109502 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069984046 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06585209 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072577326 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072134773 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072199949 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069002111 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066402772 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086385686 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066806363 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072023244 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065864776 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06607814 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081952547 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066195278 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.06963808 seconds)
  done (took 3.219635493 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066348845 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066436826 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065682227 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.065787061 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066144239 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066100664 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066679219 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.065795815 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066092592 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06631868 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065510438 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065620565 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065889663 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066012979 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066017751 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065818585 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065802041 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066666203 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066256408 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066440009 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065705796 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06544962 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065534684 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066324678 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066195177 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065375652 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065819653 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065681691 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06576265 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065560303 seconds)
  done (took 3.229978265 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075722258 seconds)
    (2/2) benchmarking "in"...
    done (took 0.075026173 seconds)
  done (took 1.399211806 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065094836 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08002485 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062177632 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074163047 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071536738 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066117998 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07216947 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071728932 seconds)
  done (took 1.806898396 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.089796233 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079240266 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065636095 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08274596 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07906533 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.089177658 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132351044 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.064611774 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075415071 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066047183 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.086286658 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066841302 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.075557543 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07023401 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075144573 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.078596133 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06257816 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069200812 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066118426 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063594888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065119917 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081030506 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.074507 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063189795 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.07025935 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09321626 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.083025764 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064319005 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071663679 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.076550706 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.075196219 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061894875 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.064811587 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.064622035 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06314646 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079011614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086941376 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071856078 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.077966303 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065104755 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075318094 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.062841307 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074661717 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075744971 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081609937 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065188918 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065137608 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062918815 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066172597 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070862615 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063084416 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069580633 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062364919 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077010052 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.0723796 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079408622 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06323568 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.070903931 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.071038206 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.071429286 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.076114412 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070785377 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074061675 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064178525 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07990944 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074432502 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078209551 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062320974 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061858761 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.062891629 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.078221881 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.098204779 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074223359 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064576954 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065051247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06290405 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072094169 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065334669 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076207136 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075938389 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.064506522 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07231178 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076880171 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069093892 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070711944 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.070885139 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.062878138 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.067542173 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065824255 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083855627 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.063211818 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063163087 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.06589719 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079578981 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071436625 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066782651 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065867587 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076121934 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061898753 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064377509 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064714435 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06986447 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.077252533 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068160731 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070644763 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076909748 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.075759305 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069149206 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070733919 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061272047 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064251447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065833333 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074599559 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06125674 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070909842 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068277403 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.063612929 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.074162878 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.061736196 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062967382 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075339316 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074303302 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.061940366 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061056813 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.07006256 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.06276228 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064986556 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07653089 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.061561437 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061418 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061496652 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070618197 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.062575478 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07459542 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066521238 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.201711075 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06356127 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064131049 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.069453631 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077067814 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068898435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.07152615 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074887041 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071700706 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064537564 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077071169 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071855483 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067781844 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073793503 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068811081 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063071989 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066518188 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071198186 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.06380488 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072665807 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067261297 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072094904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065744591 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063297689 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070961914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066354772 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067520112 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069388586 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.063667901 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.079044526 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071431037 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06271327 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062260602 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.070880472 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066103744 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063858462 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067568773 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071435472 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.064975394 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.06294988 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.064499949 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.070710125 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075795442 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067294568 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065077619 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074365759 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.081720472 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.06489622 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072263309 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064663226 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065777347 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.064756071 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079037115 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07465674 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068298849 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071497378 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.061912027 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076894889 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077286735 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067406245 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063327238 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067314373 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.068071687 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076081329 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.068137939 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.064864755 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063179025 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070943949 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066680742 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.0714744 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064475317 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06742168 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.069171904 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.063826548 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070025853 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065101963 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078775176 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072098981 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063536595 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067061899 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063120045 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076061849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063002667 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066549705 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067762491 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.065503255 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.063999263 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.071410761 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06227283 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077404889 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077911264 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070430549 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067327789 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064555551 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076831892 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070049895 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072766993 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.071875903 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074267612 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.079347843 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067078547 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.071627216 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.079000043 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064308172 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062301251 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076249708 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063394521 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.063962941 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.063863626 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063577913 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071653252 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07034608 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074327337 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061861546 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07075882 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.062603113 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067438054 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062364782 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072185311 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071142183 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068419723 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076018793 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063885614 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.063528303 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070776676 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.062741782 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.063489441 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064352891 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070063148 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.063941524 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.06981383 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065744317 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069342377 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06592064 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.061616815 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06881681 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063631041 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068556564 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071766137 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062586603 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068481121 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.206412023 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.0660435 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071926155 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06944272 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068074725 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073117448 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071391863 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070539786 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07182073 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063477363 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076287486 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064151605 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0779308 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069623635 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062670907 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070116134 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071230121 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.069372823 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06521151 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.064673471 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070442026 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064623529 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071435607 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077466278 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065826581 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.080449759 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0765739 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071019707 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.0715374 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069778566 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070619706 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066874505 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069142848 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065297212 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069739222 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.063860993 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073842518 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072055752 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070062714 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071490579 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065681019 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070130991 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065906949 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062732343 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067658613 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067762387 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.064925613 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077011113 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065307332 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067942661 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063959951 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065654697 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064553462 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062703379 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.071430328 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074725637 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066412204 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074765926 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067221379 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071093556 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079281027 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062386663 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063333919 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063432641 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066205439 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077494973 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.064773689 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078380341 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069895805 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06726875 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062254402 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.06502519 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.063525009 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062495291 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.062830507 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072662951 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067078698 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063656747 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064509162 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071618793 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065555918 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076769512 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064080387 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069064518 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064700357 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062764689 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067773303 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067094987 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.071373229 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065021337 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067023941 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062533822 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064570151 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069418086 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070793841 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.064300068 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070304959 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077084632 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06460066 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071970595 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066543842 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062553078 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071474096 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064334979 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064215001 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067253758 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07229869 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07235175 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064982852 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078332466 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067269355 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070001596 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06449264 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062634545 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063785369 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.064077647 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.063965923 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066691673 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065393528 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076204274 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.062151479 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069494872 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069084472 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067306373 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073230129 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.064120497 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069829522 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067904076 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065966033 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.069996011 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07740761 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.067026953 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071429372 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.064181455 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.069046883 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073572806 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065978414 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074336017 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069004743 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06345374 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06946728 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.064788571 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063052684 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.062584037 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.203261213 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075334843 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066132459 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068480855 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067875201 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.063750098 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069795234 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066856744 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077613686 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071591539 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072471017 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063005264 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.062704586 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065344921 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066487052 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071139796 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072101926 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074635474 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07117641 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068917397 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.063970314 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.078559557 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074360121 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07232953 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067018973 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072882429 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064915038 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072678749 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069042092 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069535262 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066004772 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072517392 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071066665 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067437632 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07498579 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072700192 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065555307 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070178707 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071010692 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06941481 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062884897 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065030612 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070570948 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073958211 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070989644 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064727896 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080211268 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066511601 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069950087 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066959497 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064545429 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072779291 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062989665 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.071111036 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065352363 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.065088731 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.0630174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.067654021 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066552297 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071543623 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067635055 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063871903 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079626416 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078863273 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070753228 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06407317 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063440539 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.0630948 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063049004 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067139754 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065268604 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.070704992 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079272425 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067524945 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067581197 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062722266 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064499144 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072110249 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.072632925 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062279046 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063102492 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067441083 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070350624 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077108255 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063871226 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064438358 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072562378 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071429897 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.063034686 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06704334 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062357049 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072808189 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081035013 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.064894969 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070919843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075954033 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077526799 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065181066 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063712186 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.064740106 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.07049422 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.070553648 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065117692 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065917574 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083256882 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072077148 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067638072 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063650237 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07147481 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.0678472 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077755745 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067800362 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065263439 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.073326804 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071006197 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070607111 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07465406 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074681435 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070216482 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069688996 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.0633401 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068945255 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.062898864 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066698172 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064891117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.064253472 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06749688 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.070180117 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067075717 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078606734 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077153017 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.066539515 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.061615889 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066882812 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067084512 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062359195 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064219889 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062179208 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.06222112 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062246813 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062859721 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069492502 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072621961 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068135323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.203626987 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06593511 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.063999918 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075765597 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072619702 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07187672 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.062898064 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.065678256 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066300865 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073219414 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067789438 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066972674 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07191461 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070504135 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071178669 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063378506 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07730191 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063933422 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071254711 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06768737 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064887468 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.065843326 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072356258 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068582393 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066999502 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072198612 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.073184705 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066335977 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.062843172 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063302744 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.074237171 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.062947459 seconds)
  done (took 43.026137095 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101699641 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064883984 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063756308 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064351305 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072248195 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064125912 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063931147 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064233545 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06431559 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066424903 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06298573 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063190859 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070119527 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078289806 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073187104 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067747661 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063616771 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064780488 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063114371 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064141587 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070293333 seconds)
  done (took 2.783949859 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071283067 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.077549011 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074711247 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.080036864 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071651194 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068041067 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074959151 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067767227 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075628185 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072964052 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075581868 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067845963 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.072873269 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.072856822 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072860035 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06816252 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076243554 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072056064 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.06810298 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074917728 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068374209 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075105156 seconds)
  done (took 2.941216737 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066188506 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064518217 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070785843 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062911151 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064039161 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.062731008 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.066874543 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.062750242 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066069198 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067106511 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066638475 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066820716 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07081268 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.062943853 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067866114 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062920797 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.108027025 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.066521727 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064359959 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064422396 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062754991 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.071064737 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062792875 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063182865 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066334939 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066381719 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.064210546 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.062593928 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.063999014 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067276768 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064123474 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062461841 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070763788 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070034338 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066720957 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066622121 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.064067663 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064303348 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.066918539 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062715643 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070216111 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063034388 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06478703 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070560895 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.06265366 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062594893 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070593683 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063982929 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062668087 seconds)
  done (took 4.597586443 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.075724711 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113589591 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068747277 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094477801 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07674177 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.069629562 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068722579 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.095368192 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064268437 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065451986 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.077753576 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077524856 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066339468 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.068464749 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.068640877 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066261066 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066742882 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065639114 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068915004 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065671284 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069284965 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.070181002 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.076164549 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07666994 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067418993 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065113073 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06589655 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067583484 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.076180463 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070013379 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.068393308 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.06876728 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077034751 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.069709895 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065850553 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.065900096 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.07786031 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.066494404 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066355268 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064704468 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066183519 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067443718 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.070163844 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.078308291 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066074527 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070965772 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066573516 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064077255 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077593451 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.066097489 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070252466 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07837641 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06715421 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066583712 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068396594 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077193335 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06642788 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065078503 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066730782 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07710093 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064713844 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067147964 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077509695 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.06577179 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.069866323 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077978066 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070931597 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06764583 seconds)
  done (took 6.330137451 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075170244 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095020207 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080073901 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07942869 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074446422 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.074125297 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.07434109 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074067536 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.074225529 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077617629 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073913729 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114568083 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070519929 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076155517 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073798372 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074581818 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074876963 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074319261 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074513168 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074451989 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074381695 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079707587 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073687156 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079573362 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07696555 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070124378 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073654236 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074455774 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079695265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073951667 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076752986 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074485447 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074264009 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079799215 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.076938004 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074346957 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064243723 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073839366 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.07416141 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074170693 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070141048 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080002561 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07437078 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070637188 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074266387 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.073894798 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080024809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.077180618 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076076973 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078384972 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074392873 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080238176 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074079326 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074643738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079942182 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0828446 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080161523 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080405412 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074503596 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079831333 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080376409 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.082563244 seconds)
  done (took 6.131707859 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084104264 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071580445 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083268512 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064127712 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065764096 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07298818 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063149989 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.063552316 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071361616 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.070775412 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072767117 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073070707 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075143393 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072739394 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07276316 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075850993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072734192 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073187244 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070945947 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073208018 seconds)
  done (took 2.818441519 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078613358 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082430967 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069123729 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073199029 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068436611 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073755682 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.06823584 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069000047 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06966645 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069301044 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074586729 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07410869 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069825578 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073332159 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074057947 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07275564 seconds)
  done (took 2.522242801 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.085708942 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071515835 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078665574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065273362 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069534202 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063801093 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.064387821 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062994099 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063605746 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077209112 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06445193 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076089659 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.064925728 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064295662 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064074737 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070047427 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063673866 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064640297 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.064575999 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076665378 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071129925 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065677119 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068576214 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.064584606 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.069742002 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072170304 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066150629 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068215569 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.06467288 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064875029 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.070147643 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071327193 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063917875 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064988613 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.063893539 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064440336 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.064653201 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065451239 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070177296 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.064726207 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063057345 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.069430239 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064959794 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.065376138 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.064458266 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.064921915 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063739937 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.06989292 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.06488315 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.069888494 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065015385 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067214622 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.064876191 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072333925 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067929221 seconds)
  done (took 5.076984617 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082323965 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068816728 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063496384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06304894 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08590752 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069308384 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.068802465 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068966753 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069393408 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063222299 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06926668 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068402964 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069651075 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068925679 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069665955 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06915008 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063045289 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.0688028 seconds)
  done (took 2.63060937 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075912399 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068235272 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073528223 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068462909 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068928084 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067821346 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063718365 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063926895 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063687949 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06875901 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068202834 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068215693 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063812177 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068319452 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.068391439 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068504453 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067578443 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063761585 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068366371 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063576554 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067683638 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063959412 seconds)
  done (took 2.856926937 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098189959 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084725151 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.145543636 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081518877 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.09196702 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073610311 seconds)
  done (took 1.942395773 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095569282 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099449637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068891749 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068905943 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073935333 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071844088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071554918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071947546 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075885031 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076609682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072066885 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07875489 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07593106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077552442 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07431965 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073600927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071479901 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07149677 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068324774 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080209325 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071279741 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07570828 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071779563 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071570616 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071707977 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077176402 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075336725 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076216134 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071911548 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075692417 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073946395 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071357974 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07631939 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076262424 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068407942 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075803102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072223969 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08059853 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073602336 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077300688 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068569251 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07388114 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07530274 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074999023 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075303962 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071492089 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074827008 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07128458 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071537189 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085609125 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07371923 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077360911 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073392332 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075517301 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075538458 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082278235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076457519 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077320948 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073687842 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07623072 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077758104 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074008969 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077530889 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07660581 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074361914 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07807011 seconds)
  done (took 6.335775539 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105702068 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069107198 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071591882 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076345002 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077973862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071923084 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072116362 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071683956 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071857592 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069265614 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105876147 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07212809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077888774 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078007701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071929052 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07174459 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072439435 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077210281 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068884209 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082620509 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07163095 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077592004 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077687588 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077182622 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076432028 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073883486 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071377491 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071737894 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071623163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071504004 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075052911 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071841954 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077752862 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069010252 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077318123 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07197321 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07159574 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075341453 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071856597 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073536378 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077464638 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080566204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071908574 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071575555 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076748708 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071581977 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071634837 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06872583 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071844794 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068838727 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076611597 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0759953 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07599495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077642589 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071487248 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071364912 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072063769 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071497306 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071879752 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073572236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077332703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071622159 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082324816 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071839044 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071524235 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077483803 seconds)
  done (took 6.330154556 seconds)
done (took 130.000914463 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212138526 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.185954227 seconds)
  done (took 1.759042428 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.077491279 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.104220886 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083369343 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.135477706 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.072285796 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.106397384 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.105515473 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083494078 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.071656201 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.072326809 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071908919 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.074711141 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137013304 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.073435595 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071731251 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074682562 seconds)
  done (took 2.803117356 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.10781201 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216153519 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10977554 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.070081911 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.105434966 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077570738 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.072592183 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.083659634 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076650909 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.072152641 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077423773 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075725334 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.071985355 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075963998 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07633772 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077410131 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.072716485 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.077697277 seconds)
  done (took 2.986299176 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.105584917 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094385498 seconds)
  done (took 1.592563615 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.180818679 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133876387 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201813275 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342741552 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150651642 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.415217967 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.136615427 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140037748 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112718721 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.132507337 seconds)
  done (took 3.332989534 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.107117005 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.19852359 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.294899157 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.124772084 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.076633722 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.107787452 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.12510409 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083285458 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.082033457 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081254805 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081194714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078502399 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101316214 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.07705993 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076200677 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078095258 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103844754 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075464121 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077043387 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076938506 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.104508163 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.071389383 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077112398 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075404712 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078985718 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078823314 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.07255911 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070720483 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076783026 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076979069 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079220295 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.105373998 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079256802 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104205779 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075150189 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105542627 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078345714 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07544872 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076424805 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.0753147 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077691691 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078194223 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.079362872 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07796823 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.072629039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078179476 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.072236912 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070876713 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079956696 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07169771 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080224988 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078918393 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103922224 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.072204375 seconds)
  done (took 6.249746815 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110227142 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107544923 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071567819 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113120216 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104732277 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071348869 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106289158 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100527702 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108350921 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071570093 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.0703169 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071294513 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079261518 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08148107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115342039 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108618779 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073537426 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071518298 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108284784 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.10801685 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070361208 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101934352 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098371971 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107454196 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069630432 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071905751 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070294798 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071980374 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076835619 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078870356 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070669359 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079264646 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08418463 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077779685 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069383751 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070551073 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070129183 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078345704 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079068939 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078721654 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077224117 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06966756 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070032338 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071049448 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070664518 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069671344 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077888053 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079031595 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077779634 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070825322 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071159565 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070171974 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070874401 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078266002 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076639151 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079146823 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078389421 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070155806 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07114871 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072075638 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079779937 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078942184 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078764991 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071078169 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079714205 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0729567 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080170716 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083762079 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070162088 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07104193 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070213623 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070178938 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070817394 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077286733 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077032774 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071427737 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.0706388 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070619543 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079621686 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077839031 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070341973 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077022339 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069327758 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070153555 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07136743 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070902562 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077166383 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078861946 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071299249 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07000634 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070398924 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070012374 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.069168226 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076814849 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078825073 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078724937 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077884571 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071296586 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.078958909 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077067012 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070770341 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077139076 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069828898 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070707921 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070315234 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076866877 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.076048406 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078683749 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069712982 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0696174 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.07681833 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079581907 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069672312 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07620873 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078299887 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.076717177 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069055067 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.079272552 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069118171 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077598707 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069582309 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.218127159 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07294667 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08002555 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071800961 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071411196 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071543273 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079092838 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072361291 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071013993 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07196012 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071215722 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078086707 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081627553 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072066578 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078445404 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078422567 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07167998 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078133016 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071138823 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079180663 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071056837 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071429945 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070176207 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080999503 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071150338 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071444889 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071054641 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079262028 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070676235 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080252052 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078022284 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070340247 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081187331 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080657453 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077857971 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079884997 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072234447 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070680623 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070452035 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071514805 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077562329 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078830405 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071305828 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07020127 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077425152 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080039931 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069716288 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077251406 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077474714 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077895908 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070309926 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070953084 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080319422 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080254471 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077894323 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.077879442 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078555589 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071495109 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077970065 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078253838 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070697614 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083646491 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070361498 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082741578 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078218491 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076693262 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078430667 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080218898 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079571668 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.08046296 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.08292398 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070538405 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070170264 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.078374549 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070866449 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071323318 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077652802 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071211673 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071521436 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.082165797 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070700197 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079982874 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070159866 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078354409 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069715404 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071331107 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082975276 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070637723 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071120554 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078025511 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07352483 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077698915 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079683363 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077788552 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070247985 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071476921 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078952392 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078995454 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070378478 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070572798 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071680491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07806448 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.076716864 seconds)
  done (took 18.747349821 seconds)
done (took 38.871320491 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.235932268 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173999225 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.205150403 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.131298102 seconds)
  done (took 2.246678097 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.115779899 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.109619704 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.091536208 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.067132516 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.09832381 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.067147369 seconds)
  done (took 1.974355604 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.349987209 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.236178591 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.208605874 seconds)
  done (took 2.229995207 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.224663436 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.21172346 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465536519 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286830998 seconds)
  done (took 2.732187201 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146286012 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087650856 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066028568 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083216094 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.126549494 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15197353 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.096705153 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121600675 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077179704 seconds)
  done (took 2.451736158 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.158999117 seconds)
done (took 13.249407199 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.105039328 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.073608774 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.070590692 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.437267194 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.22006791 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.257842931 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077519813 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.216010314 seconds)
    (9/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.08492503 seconds)
    (10/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.076469747 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 0.257322397 seconds)
    (12/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076127571 seconds)
    (13/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076478362 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.149159098 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.209554285 seconds)
    (16/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.190933844 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.110010341 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 0.133058835 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.218739807 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.198248387 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.178581953 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.186913441 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.108533531 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085625051 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.17609338 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086104192 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.163630648 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.096459633 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.09112669 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.123253112 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.069418752 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.231823193 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067023621 seconds)
    (34/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.17195106 seconds)
    (35/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.174447156 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.162476887 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.130765156 seconds)
    (38/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.136934901 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.149145919 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.214104993 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06689796 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.075115903 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.083147472 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066064823 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.066242363 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.168152617 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 0.133296576 seconds)
    (48/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067742048 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076572648 seconds)
    (50/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.077008335 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067114432 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.205894699 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 0.159413327 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.137376129 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.076364855 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.164688891 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.150932936 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 0.068515723 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.105994101 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110554995 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.076053551 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146831452 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.088902105 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066885963 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075615513 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.161925853 seconds)
    (67/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.16147541 seconds)
    (68/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.138050822 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076921703 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093057823 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.19131294 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065646818 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06676487 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066489208 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.09312679 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089316077 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065582281 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077350874 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.095123773 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.075406436 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.103306549 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075242987 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.228824349 seconds)
    (84/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069116421 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065469462 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067064115 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100201218 seconds)
    (88/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067247451 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.07613329 seconds)
    (90/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073934184 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12154316 seconds)
    (92/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069038735 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070158012 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.273932724 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.12003508 seconds)
    (96/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.125577322 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.079908705 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076020525 seconds)
    (99/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.07383876 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069755706 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074787818 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072393057 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07782061 seconds)
    (104/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.194051338 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.070074385 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.068525993 seconds)
    (107/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.221347987 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.075519476 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066898279 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067116684 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074051589 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.137625663 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.068323984 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.14262241 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.202655505 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076261276 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076564711 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177158251 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.141359692 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078274874 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.213880496 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067099125 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.074410697 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09893592 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134671876 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068418886 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.141070719 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068317675 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.066536074 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.088916235 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.14147527 seconds)
    (132/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076506402 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076973934 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.165441449 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068519772 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075896696 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133113095 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066923879 seconds)
    (139/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.141235026 seconds)
    (140/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.142370102 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067576039 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.089595959 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076145722 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121844153 seconds)
    (145/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.140650964 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.146067513 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088942872 seconds)
    (148/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.070119091 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075718971 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.096682857 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.241644268 seconds)
    (152/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.140124461 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191622889 seconds)
    (154/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066717329 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078048776 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.066463922 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07060461 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066728819 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087321674 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083555272 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066181258 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.066290764 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.071662138 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.075431623 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092941033 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.075443536 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.144350469 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067745935 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.092288971 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.074161865 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208552481 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.200299446 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06699471 seconds)
    (174/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068108599 seconds)
    (175/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094133119 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.137748524 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091079334 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066491905 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09522431 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077846483 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.066320253 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.067057933 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072191423 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066284937 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.077313623 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067655274 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068179132 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.146833569 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.079174592 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092582582 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.199136124 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065876491 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.088967946 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183287772 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073867371 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182506542 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.202561007 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066223878 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06818832 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173989588 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.079228017 seconds)
    (202/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.137037 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.066833559 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067483804 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074085868 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066266542 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067423819 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066946635 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159243152 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.072304743 seconds)
    (211/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066846206 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067525054 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.238428093 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071752646 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.124099676 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066845916 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067888116 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.072090798 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067168999 seconds)
    (220/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.147897169 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.079063844 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076912068 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.139851791 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090208795 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068365828 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075296261 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.067013278 seconds)
    (228/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.068999202 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070170946 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.093927687 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.075345489 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.068011405 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.068280489 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.211308056 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066808137 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067436173 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13361978 seconds)
    (238/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.071068781 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.083861866 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.074263804 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068356268 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.06821413 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080086219 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.09057609 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.06681158 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068064222 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067605441 seconds)
    (248/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073710651 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068103432 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.066813298 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068842838 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.129533544 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075994395 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066436763 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.080534936 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.071227509 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06712708 seconds)
    (258/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.140960324 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.068095932 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068711395 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075746204 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075828378 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091401215 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067715378 seconds)
    (265/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.068247764 seconds)
    (266/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066850611 seconds)
    (267/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068333297 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06649257 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.066644738 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.089010409 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.077373793 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074217818 seconds)
    (273/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067912536 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074359092 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.06779519 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067396212 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067359328 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067375154 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.068301559 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.06770419 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125167338 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074038886 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067999252 seconds)
    (284/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074082162 seconds)
    (285/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06784158 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094736003 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.067182034 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.067185047 seconds)
    (289/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068091486 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.076066488 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067794945 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177620161 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067768294 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067532261 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066150074 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092916855 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07410708 seconds)
    (298/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.067492408 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067643691 seconds)
    (300/309) benchmarking ("sort", Int8, false)...
    done (took 0.171329108 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067998851 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079530806 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067998913 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.066002037 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069521067 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066754978 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.067893599 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091844288 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183844516 seconds)
  done (took 33.5332955 seconds)
done (took 34.981700615 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.090719408 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100221167 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075982448 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098491646 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083263693 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.096266552 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075455555 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080582458 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083345303 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081863312 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080741019 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073519774 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076860184 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076644959 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.074837834 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097161972 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081007812 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.075968614 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075374159 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067181626 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075944752 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067262055 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067013214 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.073357662 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078613739 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074467955 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076497596 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076307671 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068010503 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067647011 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071978913 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076386154 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067341911 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079459087 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075996767 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075132215 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077307033 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080091686 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066980397 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068135431 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077505019 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06782728 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075742285 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073505696 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072426574 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074144003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075411979 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079338961 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097292812 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071958617 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077528786 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078168701 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078743314 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072945091 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072551938 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075115092 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073777913 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09717642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075654531 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071854508 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076976366 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076726336 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073545597 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075060893 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075474859 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078276427 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079331307 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073775609 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077796771 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074069666 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067131724 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074923263 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071944206 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069704561 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077867688 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079786512 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066757025 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072152918 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075595507 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075368402 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067948398 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070817048 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067004913 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071832139 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071362873 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.073962355 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072563665 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074657559 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066806876 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075735243 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074717765 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075799056 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06666312 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079933192 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067383258 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073921363 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068021462 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067487194 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.066932728 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07272525 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067599014 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072784236 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076460518 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066882143 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072050768 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080603586 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06732685 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07453924 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067405348 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067168395 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.078074026 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077562287 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06729902 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071281114 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067244764 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072865086 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067476071 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067597475 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067216104 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067210741 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071512601 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067233616 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071158467 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072599826 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.079004628 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067006265 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.071950502 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071343309 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067620733 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073670719 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067629556 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067139032 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066722426 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079845698 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070417699 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066623909 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072445081 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07046323 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074011359 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06553682 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07550572 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072389987 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071195739 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072690351 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066422343 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076942797 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070599004 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069899203 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.06587786 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066670057 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06570729 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066297816 seconds)
done (took 12.821227318 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.074166899 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.121675504 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.091709191 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093693243 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.083339684 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068341758 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.074628393 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.089709439 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070130468 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.094592215 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089297876 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088313514 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.107733737 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067271706 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067623107 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068955564 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069218896 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.077582529 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.092207127 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.089615388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.103992832 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068109821 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.08489066 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.08649517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082909948 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.087345092 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.068663764 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068891958 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070570942 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.089444523 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092236339 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07088516 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068651452 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.08779607 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.084871405 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.079489407 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068950015 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.074908869 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.068803475 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06744452 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069144022 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.087633144 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.074336773 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.075198713 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068947926 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.075872599 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069286966 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081973484 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086692092 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075293998 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.081067604 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.088934654 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071135659 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083423435 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067311484 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.081697285 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07570168 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068371659 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069497136 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.073584515 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068416423 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070785113 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077742121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.075998295 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072557083 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081259953 seconds)
  done (took 6.734745473 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090830529 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094953797 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084153323 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084671211 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.067971735 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.068904598 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068552382 seconds)
  done (took 2.111879467 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070750994 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093843994 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.095611151 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095040191 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08803675 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.096096851 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.079331523 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068762642 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.100785697 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067563608 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092562521 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113840453 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.071764993 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.07980787 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.097047746 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.068659069 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092658942 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068591456 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069960838 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095445398 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072270626 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094230605 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079992264 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.068540537 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084557755 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.068522965 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.123074407 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.079017149 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069474836 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069511909 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069738171 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.113298585 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.08458618 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079172283 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069714971 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082599174 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085116791 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071597875 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082415329 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080312496 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.0848606 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069300733 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067485081 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069636563 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071997287 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079930254 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0672201 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069736245 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069559472 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.092070016 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067208986 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084026648 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072634705 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.073349406 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073779914 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074536322 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077337051 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069697862 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.092134506 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069627316 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088483748 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087064443 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084448729 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087073407 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068553361 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.083958805 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084998561 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.06960457 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070147983 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.070592332 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087524893 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.072395867 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070303666 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079843625 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068258246 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.096614529 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.096944729 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068091406 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.081445257 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069383135 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069650127 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.080009711 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09703615 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073064052 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069584189 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073322519 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070695889 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.07129899 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067514482 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072198287 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069763833 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073938821 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069443211 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071938862 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070990513 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087158959 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068105057 seconds)
  done (took 9.207026836 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.07342223 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069584071 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070579966 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069301342 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069773647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070651285 seconds)
  done (took 2.010125694 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09535984 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069181073 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081715753 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070060683 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.116334299 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083945324 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.084354992 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077542497 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08150089 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080676997 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.084168708 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08644074 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.087138363 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070941472 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082993732 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.070465414 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083558944 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07322364 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080172218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071994215 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.081779638 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072062432 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071562025 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.087543561 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072261023 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.070517623 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077759486 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080627006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080713852 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07801908 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071239385 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072341047 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076900806 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.07732543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083709435 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.078797183 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.069949861 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074920295 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071349306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07238056 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086981908 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071879866 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072070488 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.075137158 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077343552 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.076590376 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074903811 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077110379 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083131865 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.075084521 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075267931 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.069869445 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.07203329 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.075317549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076556194 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077222818 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075140342 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083684896 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07094268 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.076865574 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070369896 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.072418103 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077033498 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072259514 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075247306 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075070437 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077026227 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07103164 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071663802 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.06915741 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074886015 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069117126 seconds)
  done (took 7.103562101 seconds)
done (took 28.749756516 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.530222256 seconds)
  done (took 2.059738961 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.636662832 seconds)
  done (took 2.20291025 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.481875959 seconds)
  done (took 8.051111999 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.442302095 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.49802214 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.770912592 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134488832 seconds)
  done (took 3.444542938 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.724922817 seconds)
  done (took 2.307327315 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.256493639 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23787837 seconds)
  done (took 2.082510808 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.351309824 seconds)
  done (took 1.918159191 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.089323008 seconds)
  done (took 2.650972604 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.291129958 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164004222 seconds)
  done (took 2.039393811 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.466519899 seconds)
  done (took 2.038083885 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.331662162 seconds)
  done (took 5.908410604 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.245547436 seconds)
  done (took 1.870899015 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238325095 seconds)
  done (took 1.823974865 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.764715214 seconds)
  done (took 3.346075025 seconds)
done (took 43.32510321 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086727137 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08691997 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.087033348 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.082136535 seconds)
  done (took 1.891942969 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.079121749 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072803557 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075956365 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072057331 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076018793 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07296124 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073718098 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075277383 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072424653 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07287009 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072343257 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07239295 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075043189 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07372907 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071367078 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074942598 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075893729 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072161055 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074962022 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072155542 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070648815 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074481238 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075191656 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071377978 seconds)
  done (took 3.34877544 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.087901608 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074949134 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.076911157 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.073887472 seconds)
  done (took 1.892213935 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081410507 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092796227 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.087989697 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078891291 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093133649 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.088298279 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069349986 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069194034 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072705004 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078209857 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067795889 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096493397 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.090151716 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078150506 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080556483 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065021455 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067041337 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089391265 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.079281567 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079240647 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070050751 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078691771 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068462247 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087903279 seconds)
  done (took 3.486818969 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.093875046 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.068283836 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.088215928 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094846129 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093980727 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068059079 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.095245608 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.094835142 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.139966046 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068077161 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074061073 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068113027 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105710834 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068233137 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.084790745 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110083644 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.11380026 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071629368 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099096634 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067527836 seconds)
  done (took 3.358535102 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.087638151 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071409054 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.07193819 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068028054 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078551696 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074486355 seconds)
  done (took 2.043192938 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072806044 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.069948296 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06901712 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.068689016 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074768296 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071922348 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067514116 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.069738004 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.069643659 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069054442 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069023201 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067853151 seconds)
  done (took 2.424812989 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.168725556 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071260302 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.072533186 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068342356 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073659079 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068530981 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083907776 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070637445 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.086693073 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068613578 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069389952 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.070877836 seconds)
  done (took 2.560976363 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191876252 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07508218 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220457136 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153125617 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101221212 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114620012 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113695297 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112453384 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.137108085 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095509156 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149770946 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159209058 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106378072 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126545857 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088576333 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.123652381 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138164561 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152629304 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099703145 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151261209 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138447895 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119831949 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138002285 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097729892 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099109527 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114057633 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072771411 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077198083 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155396951 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121851696 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131782165 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104753424 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088020823 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164946936 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15323757 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129295519 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143924641 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081491284 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117375502 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126592006 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188561402 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087124019 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146246356 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103339564 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078248912 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119836986 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109191472 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.113212002 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.097471863 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08708343 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.278533086 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169864523 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.130314363 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08418276 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119573312 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103422412 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10933385 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115163284 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16983539 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146118011 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118383757 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071255329 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109557921 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138894114 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124260651 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1035444 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116542086 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088559387 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128711628 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145145523 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12633161 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135566612 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.115866529 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084536082 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114008693 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131499293 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11664636 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157098003 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114373834 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072117006 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111880182 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093113838 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078808271 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.144660738 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074942915 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160089372 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095811558 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.118816208 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127390933 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106314168 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105096374 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143932688 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136636992 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100791506 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.085379744 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100188684 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112946287 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13214499 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084235604 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104507268 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106773044 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077429592 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121088418 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073148999 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111454636 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092749722 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113161709 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116496644 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.077374083 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.267636139 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101590027 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098722174 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125669824 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145624529 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085171103 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078658819 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152206866 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113181939 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.098100439 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134048173 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146778655 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118334849 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095285131 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133725218 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16310375 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08843768 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147710388 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097056993 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08113776 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102967558 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113589095 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105082467 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.117083389 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07862157 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.111015968 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156364588 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.073044385 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093056672 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123176845 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079440056 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07916157 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099613136 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098430517 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093777514 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097347239 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.099097435 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125107544 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114229504 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100067424 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11579974 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093611672 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153025551 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085381691 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099271189 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100767154 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.071655935 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.127505072 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142254461 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076769446 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153834048 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.116013177 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113862236 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111882871 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081706768 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131859982 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077183842 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071888181 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128780193 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106319789 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102767295 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.293479142 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113959364 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.116822329 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.112454346 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120114964 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120654772 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120407472 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102997701 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.0880427 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109107971 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120654188 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072288832 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.087500414 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080424644 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099695672 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090347012 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081647878 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129378917 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115581751 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109229426 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108843607 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093073402 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137551573 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076750451 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117128149 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115475314 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092127171 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140704986 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140183487 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122733043 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097507104 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127256525 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072667822 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073498387 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.084310059 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.117319933 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082337921 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081710191 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106097736 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138074753 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119883749 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123623345 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120664928 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115953915 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145872754 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072030671 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118150565 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133487394 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112955651 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102245698 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087768438 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095569377 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132069579 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098346138 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17217209 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107369861 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115818885 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144326176 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097666614 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077043078 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099273206 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125955687 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252603099 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132599447 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096348401 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084918615 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104393888 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077619291 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094180497 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119000233 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108787884 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127124309 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.106190346 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119881796 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.077071836 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104548199 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114243811 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111514824 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082389883 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112353252 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152143714 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094092809 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110112248 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138740128 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076978809 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.136061117 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157604693 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134168091 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082152674 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098551844 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113261599 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118570827 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113618441 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133933044 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097626455 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128302065 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105742877 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086015546 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083539091 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.092872335 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099758813 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108839939 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.098419529 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.106468903 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.092613461 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12259472 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098047406 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105767046 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110764464 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099178211 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095313956 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093652282 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159468919 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110093757 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155264679 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.096051388 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.130715922 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152224719 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073858858 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077112223 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077557776 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130645146 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081264169 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.274172743 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.111929079 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114449875 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11477357 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133894098 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09272344 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.07097795 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104212822 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120912354 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120293452 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092719682 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.096468855 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146944376 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114198464 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077833087 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112284104 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114367468 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100159172 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159377463 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080307846 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107592846 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075465553 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077563143 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117957548 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139724964 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084622608 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101369432 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113559167 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103982806 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118128924 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09298957 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109937342 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128471334 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135171882 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119177932 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087498823 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105495968 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120659399 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142450668 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099450522 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098148521 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158370815 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138875337 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.147626998 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.083485125 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108564058 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107730927 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104593762 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125396705 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082841452 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153957069 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079888637 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125082999 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095761234 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085875911 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117970553 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.110502126 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085053506 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131353798 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107387274 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237761526 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079700836 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105769465 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111034173 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097405381 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073255371 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129523454 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073569546 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124247569 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155223901 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078934255 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100700853 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092486243 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080406253 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097266161 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097391889 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083953327 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09699644 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15604073 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084520934 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13582882 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124172972 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105927958 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127620237 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100007433 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640603053 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078740196 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137991864 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108523884 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166316232 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096185646 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110606572 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104583848 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111916165 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131748745 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097355486 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178258336 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121875787 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109654942 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077059696 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097175718 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098164691 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085040764 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103134909 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107152613 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10528857 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090592348 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109318428 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113020605 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081249534 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092517506 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141397117 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1088772 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132231337 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13300948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081752173 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110170314 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122699979 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07748557 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.110241663 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.298101832 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101087593 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096330307 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.08200117 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.094374224 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157525711 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072730595 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141976306 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111823075 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104626683 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106679386 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.103015637 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119543026 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096669784 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112679133 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088209425 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.104013266 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106348615 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082021672 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078079305 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100189531 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104579846 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094043851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092388834 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097075629 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138370532 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072107826 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093514031 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112861116 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130540179 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163278548 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10350769 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082129915 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111156428 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111150865 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.106574212 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112405226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.115266012 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079402534 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.07941636 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.098847349 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11910115 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106947387 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115924014 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105973202 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153594402 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082908777 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.22730546 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09226965 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099833197 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087348094 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079171725 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093402253 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092518185 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09931287 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109654414 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158850621 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091885988 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.086765086 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088205746 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073729088 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081060519 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116590309 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103796849 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107916181 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.25321941 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081566117 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099043588 seconds)
  done (took 56.425100008 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.106373277 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.078303547 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098592866 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.150475849 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123395195 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204173064 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15459244 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189286235 seconds)
  done (took 2.80893128 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.072730956 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096853127 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103009995 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.084069809 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.068934541 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069597006 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.240703472 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.083382543 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.068186609 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09548539 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08080547 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.070162375 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.431856311 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.067729749 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.068901113 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078369086 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.068935749 seconds)
  done (took 3.542280558 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395009024 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.602094676 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.386875243 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076499884 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.974405469 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090255587 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.221914852 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.138143939 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083155594 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.521405824 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.370326339 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131599404 seconds)
  done (took 18.705412034 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.085355327 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079607241 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.090558468 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.091046549 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.0794902 seconds)
  done (took 2.128020831 seconds)
done (took 106.232405372 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085232568 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.197834673 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069646542 seconds)
  done (took 1.99323005 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.09431133 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08978671 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089263391 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087393884 seconds)
  done (took 2.076010102 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078370535 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078198944 seconds)
  done (took 1.867765006 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.243435512 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.174655195 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.099988759 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087868091 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081051695 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081767496 seconds)
  done (took 1.960353166 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076798768 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07411824 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07411102 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078229893 seconds)
  done (took 2.002021856 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.074423206 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06822467 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.070438953 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072799229 seconds)
  done (took 1.986783868 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08934136 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.085927578 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080629722 seconds)
  done (took 1.957977539 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.110363848 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.096282668 seconds)
  done (took 1.907179646 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.084637592 seconds)
  done (took 1.787903 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102268484 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.105518783 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132457904 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114056671 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.142185057 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119117153 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.083264361 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.088262485 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078664525 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.085102367 seconds)
  done (took 2.751357587 seconds)
done (took 22.594585702 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083912457 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370612409 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.365834146 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091956232 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672234407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358423418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.991287734 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093325914 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11218421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070527797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087632364 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650908599 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983325803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332531324 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.966261533 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.327139606 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.654184888 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070084805 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069478662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070678155 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.979676361 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069433042 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069991503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070591952 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652376941 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.373993168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07120034 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.328251391 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070065189 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074212037 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35975698 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07157149 seconds)
  done (took 16.288538165 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075766541 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122953265 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078056179 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08631852 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.072284854 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071949412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073397648 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.07151673 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122594695 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07096878 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087929866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070058593 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073981123 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071243814 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09050573 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070707896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072258122 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07109927 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071233348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071865927 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089682673 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070564836 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07190277 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071270537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071475437 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083540833 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072265061 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070763485 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07114284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07479362 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075433988 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072277097 seconds)
  done (took 4.209633765 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122006037 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.126921571 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07896452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107850087 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118193764 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072725624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.146669921 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09418715 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124562842 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071130885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088488747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069974504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.104383812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072632684 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092448682 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071289435 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074452821 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0717631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.070827633 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071222774 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090242764 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070729579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071726783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.071092536 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072169687 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085723237 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072070589 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071126411 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070941265 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074805665 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076334721 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072337895 seconds)
  done (took 4.47015827 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.074284417 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074763373 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081673784 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083399288 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068765835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071832455 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072846681 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06965398 seconds)
  done (took 2.327927574 seconds)
done (took 29.012591194 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082298743 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069866111 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073390202 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.088869896 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075549648 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079741668 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067384179 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075958684 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073868654 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073842873 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076977117 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068969275 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071962073 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067193195 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074003414 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068002289 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.081419352 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072455991 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.080837916 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081274702 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.071045736 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.074143514 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.076816346 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080849156 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080963496 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.080929419 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077937874 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073701512 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069095087 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071935073 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.071273533 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.078756458 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.082545043 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082943283 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068685933 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068566109 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072984158 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071018221 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081983702 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07778609 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070104226 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.078173129 seconds)
  done (took 4.860403583 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088403789 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089635383 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.083085494 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080225428 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.098191541 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.084232908 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087556824 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078287399 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.079329698 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086353176 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.075491052 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.082007804 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079154239 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073336875 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078499928 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075784935 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.080098198 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075838318 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.079434463 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079398209 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087613724 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073742136 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.087674557 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080699595 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075788729 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.08149062 seconds)
  done (took 3.855647862 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076757647 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087519379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093695788 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.144621951 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111989055 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.087285223 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082505054 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094299059 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09884925 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06995149 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074099999 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093484304 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093612313 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076095407 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.111142219 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084736477 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084629686 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071695212 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076068109 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09834189 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089361531 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086129015 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.094510014 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085979642 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.068829987 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071721349 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073761933 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083762217 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072105509 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080069182 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071917381 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072474506 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070023483 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079124875 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07169744 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068665233 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092349574 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080879726 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081998012 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.106101327 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078316847 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.070640268 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094364017 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128354633 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068354649 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.072588839 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072446343 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.080195261 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06898187 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0961995 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081037797 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.069715426 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.070882135 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068987043 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.069385586 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07211045 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070907698 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07100175 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079326452 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075323073 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090544335 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07432624 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088047466 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069368886 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079450684 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068404221 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070512175 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068274257 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097419565 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070900135 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112435079 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070549683 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068357394 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080498862 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.0797931 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07507771 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069179584 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088447177 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079616985 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073451897 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077968076 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072037835 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072627374 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.09922509 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069777804 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069023415 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068437408 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075156831 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072043704 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069860981 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081360191 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068834451 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072248154 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088457559 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.069153625 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070116258 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072420854 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071514736 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068984191 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080106356 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.073804929 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.070862681 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079636147 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069754889 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072597588 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.082332843 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076271872 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068127435 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071193092 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072136146 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.070632185 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070697212 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072623148 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071688113 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076442891 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076456979 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.075228394 seconds)
  done (took 11.022372249 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.169847329 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.16023515 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071776324 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150899417 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077665185 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082181474 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15457802 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.097502231 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.070465259 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07074558 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06970876 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.112308836 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107852974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.118701156 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.08174161 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070167537 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094920534 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.117477209 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.156537344 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14921793 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092085599 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077754804 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.072283373 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.071487815 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.071623887 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.079553774 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086980601 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.078568701 seconds)
  done (took 4.578197617 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081095389 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.104386407 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07468732 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.0927922 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088854645 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070715485 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.072101071 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.071339362 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086061578 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078603471 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.070189607 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075334991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073461358 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073230644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070668615 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076282054 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076970076 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069275761 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074278453 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075222549 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080323954 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.093961753 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075190415 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070125303 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072280624 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069580537 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077527143 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.080804758 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069756782 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105055561 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067933698 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075068108 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083905337 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.070841514 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069656614 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.070357349 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07008781 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069834189 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070701879 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.068608299 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068636321 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.074254922 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068804315 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077534225 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082612424 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.076690658 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071886306 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072745018 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072617736 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067434292 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072889648 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072912405 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072276383 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077136344 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073971481 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073269511 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070947318 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.095864743 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.076084783 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.069717067 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069251609 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069170611 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072242807 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.079228424 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085125423 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072276055 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.068481542 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070023293 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082033586 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082909389 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069770589 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074539076 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.068536407 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.07120314 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072286678 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.07245595 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.071311672 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069132327 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.069576472 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069977711 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070153721 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069985436 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.069405915 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072476583 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.068757786 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068740656 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.070262737 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.074625595 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.077794423 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06947458 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073491938 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071163566 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068754716 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072677849 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.075130012 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072695314 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080594035 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079997724 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070347889 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068516728 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085587831 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072366786 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072277376 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.07531898 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074350749 seconds)
  done (took 9.602821659 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095003381 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07029651 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.086376671 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092956176 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.080207456 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07560367 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.0804178 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069990269 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.086535226 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07485549 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.078019765 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068416214 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080245991 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079522837 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070437123 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080575061 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072717604 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.090338688 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084040743 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068919463 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0785815 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081904165 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.081698916 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084152546 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083832643 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.08461124 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081695305 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078988495 seconds)
  done (took 4.020848112 seconds)
done (took 39.661613221 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.841464845 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.066780044 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.804901917 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.022184249 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.853784975 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.009771226 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.895251021 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.799128504 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.14303887 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.848193904 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.134344029 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.280478846 seconds)
done (took 66.554722675 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.835694778 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.957662324 seconds)
    (2/2) benchmarking "String"...
    done (took 2.053610585 seconds)
  done (took 5.74185237 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017389854 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.465109063 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.068681772 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.804663894 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.809647004 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.231287908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.598000485 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.276205189 seconds)
  done (took 30.988216835 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.017402993 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.026254663 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.565922955 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.571169227 seconds)
  done (took 15.966200107 seconds)
done (took 64.379559508 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.818226284 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.800728446 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.853159484 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.83233884 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.798318345 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.805184021 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.806566453 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.805075671 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.833454081 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.832764132 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.799914551 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.810497101 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.802433914 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.836026811 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.367874767 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.853641165 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.818497508 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.813442533 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.818280336 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.862409021 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.806668057 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.800673338 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.240662693 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.962792371 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.407491641 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 6.977695135 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.167739977 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.206782229 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.814892754 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.801855756 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 7.021173535 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.023306274 seconds)
  done (took 204.932327622 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.806517507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.628723454 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.797155041 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.846226126 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.080274921 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.98454136 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.910605784 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.212449926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.807906166 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.835391913 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.954924792 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.802597439 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.988868946 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746832157 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.847879382 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.823356995 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.963357964 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.013376349 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.84174031 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.968647647 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.80839642 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.805109681 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.757032158 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.942201585 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.814187755 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.831361549 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.820196336 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.811917481 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.996856273 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.931573031 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.80525644 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.826022219 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.011898952 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.67774244 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.825420638 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.82554733 seconds)
  done (took 170.090311772 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.99701495 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.815297378 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.803585321 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.861293942 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.928597699 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.80400685 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.477802615 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.809594358 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.417893754 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.808007052 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.803757923 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.804619688 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.804684258 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.818103024 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.910472376 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.805333114 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.820925885 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.805718293 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.832252865 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.806318384 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.806534372 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.805324071 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.803974183 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.805680659 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.806309049 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.806526889 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.145907256 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.055040957 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.807976719 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.807433059 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.624585734 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.818286223 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.961510835 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.809512441 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.896581528 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.80353367 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.861396951 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.934431917 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.805597481 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026233549 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.887582835 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.806332841 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.808464533 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.872373789 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.817237952 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.802521543 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.808023912 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.818518483 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.868516433 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.094685365 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.812453218 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.809249733 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.932435897 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.305120058 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.812365352 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.810889108 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.808891251 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.423790616 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.810094957 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.810909304 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.815968411 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.813710853 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.808757953 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.805789425 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.194784231 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.808133717 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.883068518 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.978506799 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.080945504 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.810801004 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.903013445 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.037892154 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.812279872 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.812193946 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.810302717 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.811469882 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.811190676 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.814085607 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.933548542 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.808715371 seconds)
    (80/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.929884328 seconds)
    (81/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.887840034 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.925787789 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.805099827 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.811630473 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.623774039 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.875881684 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.836731218 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.644830633 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.804124344 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.178269337 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.594074805 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.807086715 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.805142581 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.8172109 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.805229339 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.804782795 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.8061073 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.885664989 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.801607998 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.807057204 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.92794028 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.523428024 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.056198172 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.806250234 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.805411128 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.810830752 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.887871359 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.924411446 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.805532489 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.872755371 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.810360241 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.804276095 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.904437643 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.803723273 seconds)
  done (took 404.362545743 seconds)
done (took 783.171656704 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.469629122 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.441291167 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.537896086 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.455188468 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.429589406 seconds)
  done (took 14.066384096 seconds)
done (took 15.798574267 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.883997792 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.88516977 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.820962105 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.884979825 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.818202924 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.885217158 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870621817 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.827818774 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.856608402 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.828460115 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.857119537 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.827315545 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813126337 seconds)
  done (took 25.792254941 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.023304597 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.02857467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.873664195 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.027803954 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.846392059 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.03280112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963280343 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.944994155 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.945884702 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.831671853 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.810691289 seconds)
  done (took 23.064861935 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.033259796 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.040031093 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.875377006 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.041854545 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.847319584 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.031557952 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.958083437 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.95634953 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.943818647 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.817030508 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813287707 seconds)
  done (took 23.089684721 seconds)
done (took 73.680728659 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.807559065 seconds)
  done (took 3.540607488 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.825567179 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.983614766 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.810357723 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.807731207 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.808976437 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.80959335 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.809126192 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.80799583 seconds)
  done (took 16.403698146 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.806439645 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.808433092 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.807641926 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.811944243 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.809368757 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.811410994 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.806906797 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.810771787 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.809263395 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.810218913 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.809079243 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.810468445 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.810986034 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.809064687 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.811674827 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.806452777 seconds)
  done (took 30.684857495 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.808848514 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.808274719 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.810800254 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.810508179 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.810805609 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.809412381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.811420288 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.808853039 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.809208433 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.809208657 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.812862288 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.810110044 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.811577679 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.808803602 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.809253881 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.81022386 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.809363831 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.80975509 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.813245176 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.810097106 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.811258178 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.809600188 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.810321449 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.810110124 seconds)
  done (took 45.186994035 seconds)
done (took 97.548409749 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.559907977 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.423354899 seconds)
  done (took 9.717789528 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.816362388 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.810300096 seconds)
  done (took 5.435656079 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.813381596 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.816094524 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.817218796 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.809589728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.812274332 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.811444189 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.813044141 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.810373868 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.814231964 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.81089288 seconds)
  done (took 19.866723716 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.81176307 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.814390006 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.813595048 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.815784317 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.814098546 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.810926672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.814888256 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.812410642 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.816497056 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.808805774 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.810447821 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.814797658 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.813892892 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.813659198 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.813859198 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.812583959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.812658179 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.812140031 seconds)
  done (took 34.375401464 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.811618324 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.814352775 seconds)
  done (took 5.365732188 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.811356034 seconds)
    (2/7) benchmarking "second"...
    done (took 1.815315064 seconds)
    (3/7) benchmarking "month"...
    done (took 1.814368602 seconds)
    (4/7) benchmarking "year"...
    done (took 1.814569027 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.812999982 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.812581362 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.814733576 seconds)
  done (took 14.437158886 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.820818893 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.974997171 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.04154778 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.508419595 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.815661094 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.813808461 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.716052779 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.817394796 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.816137477 seconds)
  done (took 20.063485796 seconds)
done (took 110.996842007 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.640733583 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.80411037 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.092381663 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.887700753 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.820586712 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.141434214 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.834828324 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.056624723 seconds)
done (took 43.013867755 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.817227234 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 6.36390359 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 6.39315883 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.832427917 seconds)
  done (took 21.317414298 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.80558393 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.149000257 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.824653246 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.651209701 seconds)
  done (took 22.209342894 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.161311416 seconds)
    (2/2) benchmarking "read"...
    done (took 2.150734628 seconds)
  done (took 6.041541046 seconds)
done (took 58.118058486 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800239804 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.800643652 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.799797294 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.798903257 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.801011005 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.798994225 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.799836736 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.79998657 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.799025276 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.800022166 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.79870911 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.798536874 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799914012 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.798964246 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798874985 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800254963 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.798439135 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.801850407 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.799185856 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798238069 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800631846 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.799467928 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.798656765 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.800655122 seconds)
  done (took 44.916102016 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.799375881 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.801631845 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.799955338 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.79914617 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.799648961 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.79872055 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.799726565 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.800764108 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.796817606 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.797905757 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799550163 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.800098142 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.799423796 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.797866566 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801667788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.8004657 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.79995021 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800497359 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.8015104 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.799601526 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.798925821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80016463 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.800250351 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798671123 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.802312204 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.799254 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.799342645 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.800113016 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.800637338 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.805235071 seconds)
  done (took 55.724641078 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.800467372 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.799199319 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.799164221 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.800190666 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.800645449 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.802017645 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.800034378 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.799269499 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.799507617 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.802124753 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.800343775 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.801463729 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799492857 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.801845987 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.800357516 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.803094859 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.800550124 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.799246634 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.800203301 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.801077294 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.804841968 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.801670228 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.801332837 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.799049338 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.799021535 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.798162731 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.807272034 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.800468429 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.801467992 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.799803165 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.80011176 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.799854404 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.801866993 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.801010071 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.798595206 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.802390212 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.799759057 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.80229959 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.800525931 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.799519002 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.800077435 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.798832429 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.799323764 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.801055923 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.800061 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.801887765 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.79935712 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.798944766 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.800971217 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.797805882 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.800113341 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.798172532 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.794272877 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.799015599 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.800655763 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.799868042 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.80007235 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.796671035 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.80042098 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.798201863 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.796230971 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798807114 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.797991192 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.797971511 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798355476 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.797466578 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.796605968 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798001303 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.797257796 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.798413076 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.798440584 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.7971599 seconds)
  done (took 131.315044005 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.79674515 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.798329286 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.798430766 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.798200183 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795783869 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.798761543 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.797636042 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.798384193 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797097451 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796398758 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79750864 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.796887237 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797969459 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796543565 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798662922 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794942304 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795708453 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795762481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.795719212 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.793844581 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80196811 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.798246587 seconds)
  done (took 41.260039324 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795068723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798363188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.798669826 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796049121 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795496329 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.79676779 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.798768903 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.798696372 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799217905 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.796381044 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.797722745 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.797094431 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796614516 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.797317703 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794191704 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.798183097 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.795583452 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795821523 seconds)
  done (took 34.066839497 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.796423962 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795285351 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.795746805 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795118068 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.793189402 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.795375832 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.795829615 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.794722901 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.794068833 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.796284676 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.795373379 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794919461 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.796802119 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.795096978 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79621172 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79560354 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.793044444 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.796070589 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796184523 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794178038 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796394197 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.796379253 seconds)
  done (took 41.222433451 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.792412157 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.797035193 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793567297 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.796651043 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.79509274 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797485768 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796698442 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.794627445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.795423378 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.795039773 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794767041 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.807118463 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.797341167 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.796248771 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.794481124 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796124122 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.797963522 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.794590837 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791722055 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.793628302 seconds)
  done (took 37.640440528 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.794926344 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795040668 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.794274843 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.795344108 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.796805302 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.794511361 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79335337 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.793187655 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.794801052 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79564636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.794863189 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.793477693 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.795805311 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.793545148 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.792594124 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.794395454 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.795530879 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.797528851 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.79534654 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.793072772 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.795031949 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.795847779 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.793520292 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.798695599 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.792825439 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.794294418 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.793756888 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.794280827 seconds)
  done (took 51.974709891 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797930275 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.794313674 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.791985377 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.795176221 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.793047194 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.79896458 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.794468413 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.794877992 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.791840258 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.79501655 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.796257031 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.79599403 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795868952 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.794504609 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.796742118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.796101826 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796580224 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.792838773 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793157589 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794758992 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.794729108 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.794397332 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.800416135 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.790735266 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793256492 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.793495726 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796194972 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.797844385 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.79402091 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794933321 seconds)
  done (took 55.571707823 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.814769577 seconds)
    (2/2) benchmarking "in"...
    done (took 1.815706546 seconds)
  done (took 5.351521587 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.794860892 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792265236 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.793388838 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.796686109 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794773518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.795128339 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.793394896 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793805557 seconds)
  done (took 16.074318753 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.793548833 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.794699701 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.793313616 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.791915859 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.79418087 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.794606012 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.800642048 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.794169353 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.7939334 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.794068448 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.79817621 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.799771305 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.799541689 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.794245011 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.792901716 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797734861 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.79061774 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.794648774 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.794709336 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.792176577 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.795039507 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.796807621 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.798075132 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.790403958 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.79513599 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.802931479 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.800156207 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.793952965 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796484966 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.80166285 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.793017935 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.791629909 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.792326065 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.791930288 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.793711657 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.794527779 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8029548 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791226571 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.797565366 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.792733228 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.793369615 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.793016718 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.795417148 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.794434023 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.795621658 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.792651477 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.795047423 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.793967568 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.793420088 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.795534339 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.798469729 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.795311031 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.791971115 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798013164 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.791615243 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802004941 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.794726693 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.79771395 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.801410323 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.804777675 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.802713735 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.801612191 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.796773283 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.792939321 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.8029949 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.816902477 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80212934 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.795571875 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.794640221 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.792645101 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.802045969 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.80554133 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.804868929 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.793164768 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796885704 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.791725932 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79583162 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.792990086 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.803087907 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.800417003 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.793443011 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.794128941 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.802687526 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812034323 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.795254295 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.795703615 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.794195771 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.79259274 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.796064338 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806312648 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.796150185 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.794272295 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.79787165 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.795836539 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.79690501 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.796482931 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.79862276 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.798325493 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.795082063 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.794965353 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795265898 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.7978823 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.802499696 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.797092995 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794976352 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.804243566 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.796852117 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798507616 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.802996508 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.797618194 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.796602387 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.797472582 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.802748842 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.79465385 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798701278 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.804354839 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793654493 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.799513207 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.797565772 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.79344397 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803482365 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.819810839 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.796598198 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.797654454 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.806267092 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.806377803 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799758333 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.800683078 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.796294894 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.801305199 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.795382439 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.799319708 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.797688004 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.798925437 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.798058506 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800428896 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.798380463 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.796343596 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.800428725 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.799165333 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.800947817 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.799376779 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.801727036 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.801137732 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.798232059 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.801147093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.805465344 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.800541859 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.803188657 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.800177745 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.800106019 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.8005518 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.802013089 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.79978185 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.80029598 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.799874227 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.800849994 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.802514137 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.799588472 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.799879254 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.798310063 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.801336735 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.804955082 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.801259344 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.805875935 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.801248634 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.799993229 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.800610561 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.806022219 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.799431598 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.798274718 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.799899712 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.803237576 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.805003898 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.804126482 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.798079739 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.804028787 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801083245 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800526117 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.799505209 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.802019687 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.807327231 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.800665464 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.806940486 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.80123277 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.8027449 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.801195358 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.803334382 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.800978419 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.801137883 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.801629677 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.810265963 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811053037 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.809214409 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.803660738 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.807145981 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.803963677 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.804853155 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.80427568 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.802624134 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.800208089 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.80325801 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.800450462 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.803226041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.804935189 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.801948222 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.800007704 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.803792791 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.803452127 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.802421867 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804423718 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.805320556 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.804484482 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.798567673 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.804216936 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801415065 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.803241428 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.800973386 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.804442449 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.803207931 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.802121944 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.801552248 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.809041612 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.803121291 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806765911 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.804499316 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.805062259 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.802940837 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.802508195 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808631482 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.80564705 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.810628188 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.804747895 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.805504419 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.811038886 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.806743542 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.80338879 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.807601679 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.804266659 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.801165807 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.810318271 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.808233154 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.804250809 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.802271172 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.804534335 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.803607832 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.805731631 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.809579841 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.805009028 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.804176614 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.803214724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.807429403 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.802805126 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.804155286 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.807074524 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.803331448 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80694703 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.80488284 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.804896369 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.806742336 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.802213215 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.803906538 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.807833593 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805340324 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.811406569 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.809446664 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.80578704 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.807769771 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.806532129 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.806163343 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.804883865 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.805023369 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.80512189 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.818348003 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.811156595 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.813174706 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.805829904 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.805353007 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.811652067 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.807371142 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.803798073 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802692041 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803957432 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.804442014 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.807371548 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.803843411 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.808290065 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.805096306 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.807555449 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.806775079 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.808277465 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.80416086 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.807338704 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.80401002 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.808094324 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.806531949 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.806163418 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.806973877 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.80878777 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.808071074 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.80753296 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.811104687 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.813823124 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.808805467 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.807590505 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.804243011 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.806305963 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.808627884 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.808649693 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.806851809 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.80916297 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.813903294 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.812053074 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.816673129 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.808172906 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817185741 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.806287664 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.810446763 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.814074331 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.808338729 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.807790633 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.807462866 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.806038291 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.817455836 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.807983554 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.80941767 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.8124876 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.808057794 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.806500154 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.810574618 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.806466951 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807857032 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.807922862 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.817642067 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.812279945 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.809935392 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.812230409 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.806028143 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.809342523 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.808970156 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.810873658 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813127853 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.809834834 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.809885992 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.808061502 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.806996611 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.808702603 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.807697293 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.809281359 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.806907048 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.808273713 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817981893 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.809141286 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.81256377 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.808549872 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.819056247 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812901484 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.815322921 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.809883267 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.807031108 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.807822395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.808305045 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.815132973 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.809357183 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.810153844 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.810058482 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.807677028 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.816712392 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.808887961 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.812923196 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.810878815 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.812010113 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.811870643 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.820295048 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.829941054 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.81266189 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81366611 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.80964396 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.814312245 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.811851013 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.811399702 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.807060482 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.811084423 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817926977 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817738818 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.810543794 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.810793958 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.811253202 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.81247517 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.81254422 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.810095819 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.812372426 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.809366657 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.811471278 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.811552928 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.816948254 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.810908269 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.812268798 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.814549583 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.810023721 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.819596909 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.811247175 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.813594162 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.810217224 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.813510294 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.812407884 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.813089935 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.810007166 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.813759468 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.81176374 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.811779263 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.818169885 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.818240326 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.815500375 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.812236481 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.811143277 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.811720055 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.81573607 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.813097624 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.810985321 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.812758073 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.814576869 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.810611864 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.81615335 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.811320274 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.812752091 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.811766502 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.811396652 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.815943011 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.817854827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.814658547 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.812183012 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.812965044 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812718061 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.813846172 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.813686421 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.820718414 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817027084 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.823881276 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.823412101 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.815927169 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.815390594 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.817427262 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.821451979 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.813524018 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.815609543 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.8137557 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.815866119 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.814160665 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.816110596 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.814483607 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.820731549 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.815561926 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.813649163 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822246803 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.814781261 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.814883505 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.814826181 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.816754028 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.814487975 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.814447106 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.815336716 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.815125055 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821016723 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.815710965 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81439825 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.816763141 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.814714351 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.816979256 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.817808321 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.814731536 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.816629156 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.815458133 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.817337963 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.815548161 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815295097 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.813840416 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.816018518 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.818298934 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.820493969 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.824075846 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.817115943 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818536271 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.820870791 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.817140085 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.817831855 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815702989 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.815014725 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.814741436 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.816690781 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.816591417 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.816638217 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.818641789 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.816154494 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.814961683 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.818957553 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.815838893 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.820091071 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.825414714 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.824405766 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.816577312 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.816615919 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.817676134 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.821801625 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816094892 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.818951467 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.817196183 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.820082874 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.820368724 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.817460737 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.82038233 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.82038418 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.834560298 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.818220815 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.817480597 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.819074095 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821967285 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.817848858 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.819308934 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.814055513 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.819838596 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.818666498 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.823470658 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.81823853 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.824420416 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.819028912 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.821509947 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.822985472 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.819055839 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.825735618 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.822397353 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.81745502 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.818156698 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.825467461 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.834062655 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.819051708 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824613217 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.847394392 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.819333469 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.819009078 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.818469761 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818264025 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.818663048 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.821609256 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.820463813 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.820186352 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.817398574 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.817013807 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.819693037 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.825041688 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.822939318 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.815885419 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.820966779 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.820094321 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.822931751 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.820617263 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.820239643 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.821598481 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.816728389 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.818170471 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.817999133 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.818992632 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.829640813 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.829466438 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.819703213 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.821587614 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.821002886 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.825015101 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.821098539 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.829235523 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.828466794 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.820871136 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.820561976 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.822702375 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.818125793 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.819900735 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.822551532 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.821913613 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.823160371 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.819803084 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.833770192 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.82596447 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.826499628 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.821467751 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.819223258 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.82259117 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.823870219 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.821070495 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.821766551 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.823608468 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.821512533 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.824001675 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.820060739 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.825069702 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.824252871 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.831572477 seconds)
  done (took 1079.628444244 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.824851447 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823834623 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.824853005 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.821350397 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822059502 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82055388 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.821481173 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.822589245 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.825579269 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823071904 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822384435 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824212633 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.824375298 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.822336798 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.822032785 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.820201874 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.821548996 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.822243209 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824311742 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.823657824 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8233394 seconds)
  done (took 40.028124295 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.822216388 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.822133532 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.823065075 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.82536294 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8244203 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.820915068 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.82262031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82619775 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823408051 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821746277 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.824661213 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.822195228 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.824603752 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.824038962 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824261871 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822549577 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.825231468 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820511388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.824345647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.824915538 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821718228 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.823863993 seconds)
  done (took 41.864135752 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.826635769 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.82455881 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.824155042 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.824115463 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.824047632 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.823842812 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.822867892 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.826345484 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.822434465 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.825411191 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.823876663 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.828481686 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.831359957 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.831479019 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.827623943 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.824046939 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.971901672 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.826042579 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.826063444 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.825250696 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.824910598 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.829988787 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.826472415 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.823926198 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82529446 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.826109069 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.82454131 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.826127661 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.827408778 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.824676979 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.829316681 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.825933737 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.824586997 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.827550375 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.82363062 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.827739134 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.826748357 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.827954067 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.826768189 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.82787478 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.834352633 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.844864228 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.828218876 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.833625553 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.830931526 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.826935768 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.831311124 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.833504863 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.827156095 seconds)
  done (took 91.429223202 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.829812145 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.825614301 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.827365883 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.826758617 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.829569262 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82971455 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.829495575 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.827172252 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.828174366 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.828233672 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.828180838 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.829474747 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.827299973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.82676442 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.825278347 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.827453559 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.825993106 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.826750979 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.827419855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.828607514 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.829033984 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.825631163 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.830053762 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.829209576 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.829419357 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.827591865 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.827490836 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.830011692 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.829423302 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.829069846 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.82863484 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.828938307 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.830078181 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.827541383 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828745404 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.827991601 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.829659055 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.828315491 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.828481142 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.830294891 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.829703016 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.829293616 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.826079033 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.830384672 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.828717845 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.828780332 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.830148818 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.830560611 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.829263806 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.830105706 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.830373018 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.829251524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.829838079 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.830248794 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.829884405 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.831375105 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.829141308 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.831398515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.831585213 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.832327169 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.829996331 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.829771142 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.831122019 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.830143813 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.830793979 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.835469148 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.831748466 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.831561853 seconds)
  done (took 126.132097878 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.830775444 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.834395218 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.833002634 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83253095 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835040896 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.82934282 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.832501078 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.831561705 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.833860955 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.833392671 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.828649928 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.833484695 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.833819018 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.836438673 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.833374913 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.832775125 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.833296178 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.833113259 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.836433874 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832378828 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.834730954 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.832717359 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.831792147 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.832425058 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.835450966 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.831762419 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.832754153 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.832001175 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.835751953 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.835489032 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.836553182 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.834803337 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.836076803 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.83534456 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.836712988 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.836039312 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.83481957 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.836565639 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.836113866 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.836935447 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.84207007 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.838531443 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.837659347 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.834660922 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834728977 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841292299 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.836576868 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.836594786 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.835288969 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.836444672 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.837807314 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.837603697 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838658212 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.83773088 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.837676036 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.837768078 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839529754 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.837159131 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.837053227 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.838336862 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.836413219 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.835714707 seconds)
  done (took 115.539950236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83867938 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.837665023 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.837841552 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840309826 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840093066 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.83777869 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.836212294 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.837868946 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.83702169 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.838369204 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843039135 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.839415124 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.838541758 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.836735185 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838198734 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843175089 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.836723436 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838944539 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.838364561 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838093511 seconds)
  done (took 38.538858889 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.840778478 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.837414556 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.838729904 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.84012638 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.836661122 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.840773031 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.839418122 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837454415 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837659892 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837731291 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.838783001 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836456042 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.839427795 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835577497 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.838459876 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.838424217 seconds)
  done (took 31.17631102 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837501011 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.839231149 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.839528972 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.838644955 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.843129072 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.838149744 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.838427615 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.84000335 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.838662268 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.839058269 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.839265553 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.84223704 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.840450426 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.838511242 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.837507548 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.84174521 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.839713843 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.838755613 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.840388391 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.840049482 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.840504395 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.844985914 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.838305784 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.84086303 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.83990772 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.840816475 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.844399436 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.840403409 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.8402696 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.840831459 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.839675731 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.838725293 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.839855982 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.839401246 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.839830691 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.841183273 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.837671325 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.841229959 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.839851085 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.841533891 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.84028284 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.841558485 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.843846663 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.840586984 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.839349059 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.841638295 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.840175066 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.840886927 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.839873891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.84065245 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.840404293 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.842183406 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.839991198 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.839823009 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.838803256 seconds)
  done (took 102.976506724 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84185316 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.841954002 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.839717627 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.839422709 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841770488 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.840230544 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.843108997 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.841787354 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.842967634 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.842902941 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.842747038 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.840718011 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842028087 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842526642 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844990071 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.843354961 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.843447252 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.841773128 seconds)
  done (took 34.923362592 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.8421409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.843899078 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.84165357 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.844207031 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.840399277 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.843609918 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.843197156 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.842614051 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.843253045 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.842594373 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841741309 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.846148669 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842484092 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.841882065 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.845365577 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844804023 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.840453823 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.8446634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.844948759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845793363 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.840929482 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.843473697 seconds)
  done (took 42.31588227 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.840297572 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.841062404 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.854369801 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.858993878 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.858541513 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.872783539 seconds)
  done (took 12.894635575 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84276866 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.841650978 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841166929 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.843221494 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843401011 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.841619937 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.841597018 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843488073 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844527985 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.842415673 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.84437167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845041793 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.842439966 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842261264 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842394744 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.844743064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.84338067 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.843155479 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.843410395 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.843709673 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.842016856 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.841742654 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843793951 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.844535857 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844759979 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.844118264 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844572343 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84848607 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845780872 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84448463 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846508603 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845988915 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844042502 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.844927676 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.842922924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.844173976 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845271333 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844491956 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.84468778 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846437259 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84489279 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844832577 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84522989 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845563041 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845061604 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845340165 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847274006 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.845854184 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.843571154 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.84615903 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845256637 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.845376301 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846199997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845898237 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845342782 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.847130184 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.848898934 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848286852 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.846758859 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847247301 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847871153 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846141004 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850308081 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845416579 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845387295 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.844400616 seconds)
  done (took 123.521169029 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.843463747 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.847773491 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.845518105 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847315877 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.845931878 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848936689 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846695678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848064801 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.844670941 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844842966 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.845316712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846418863 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849164413 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84659034 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847820422 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847919828 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.847146472 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846966889 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846399237 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.845980683 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846486796 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844717762 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846409883 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847266235 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.846838503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.844774858 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.846221055 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848777038 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.846984839 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846351556 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846845913 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.846476686 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847439692 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.847098208 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.846089919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847170158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84774384 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847252037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846654451 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853245656 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.847582998 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849232746 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848610729 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851847975 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849192084 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849196453 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852198931 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85110479 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849596023 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848436612 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.84653606 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.846789139 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847272411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.849415148 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.849250246 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.848883999 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848769526 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850713845 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.848899764 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.84898866 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.850682291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.850292977 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852560235 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.849863869 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851631078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849318169 seconds)
  done (took 123.7321467 seconds)
done (took 2521.549465804 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.905486951 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.098798119 seconds)
  done (took 15.776410453 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.023852842 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.978393427 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.862901413 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.862146438 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.861914238 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.889525479 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.888074465 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.859948773 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.864348806 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.8637543 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.863683092 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046567999 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.872319244 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.86173029 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.864496251 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.9557008 seconds)
  done (took 52.213393573 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.867660678 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.870929781 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.873892108 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.87173502 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.866665031 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.886233809 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.903610878 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.868005497 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.926679285 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.876012359 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.994262878 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.878442643 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.866766862 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.928811711 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.878831117 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.880268077 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.960107927 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.941249998 seconds)
  done (took 35.928283558 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.944874888 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.874484848 seconds)
  done (took 10.615233022 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.88289152 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.92322031 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.959443075 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.874683675 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.879924 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.874317787 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.894716015 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897475097 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.862492819 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.878325796 seconds)
  done (took 70.720158954 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.876439304 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.8706595 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.868234514 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.866979174 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.865649001 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.867786243 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.871543546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.87071872 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.531981132 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.903100161 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.87245951 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.874518856 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868783879 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.873635289 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.867945543 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.891523048 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.973751954 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.870509104 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.868518472 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.879685737 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.871235649 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.922065051 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.882424901 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.874191144 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.902337161 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.527777256 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.878802762 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.878716189 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.003426942 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.870773216 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.870298973 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.054591434 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.872091694 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.335478664 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.140369223 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.873390134 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.883961232 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.876168823 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.86966844 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.985228531 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.871773403 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.876007557 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.801681552 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119550791 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.96361369 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.916558298 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.177487663 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.890286325 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.871479583 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.900491266 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.872800997 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.870134044 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.884274257 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.377594679 seconds)
  done (took 132.791048008 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.868607081 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.214199283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.037466334 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.870479117 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.148084571 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073031703 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871104932 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.915907514 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.868960165 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097130065 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.126416217 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968688547 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.869446544 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.868191819 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.867978568 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.866774848 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.025233534 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937397871 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870841019 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.868629611 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.896564006 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.113155587 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.990096957 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.866488311 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.895580094 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079687325 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.99533616 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.97178977 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.661319324 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.868601181 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.931863194 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869813042 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.868550319 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.868938259 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.025948404 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.990122045 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952619137 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.868355092 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871436472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.868693014 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.528867634 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070443867 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963309556 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.999001766 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122796741 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071885139 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.646152661 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.870571121 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.603932346 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.031401272 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.097063216 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.097579897 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.98846252 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871138628 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.213239118 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.874283006 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870718588 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.119733152 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119801377 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.964468523 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872968767 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.870701565 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.867907116 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.115103648 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.871019307 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.964687738 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871777012 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.870860709 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.968634005 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.966488109 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.117794052 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.082821053 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.898626518 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.214810334 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.369742182 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.118618868 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.936593509 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120075518 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.873525545 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.868105727 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.951332564 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.711614609 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.126432324 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115680778 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.112163513 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904139402 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.582441376 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.873412542 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.099672267 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.096684946 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.1292093 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.564483923 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.108812409 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.18807947 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.871655867 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.877286526 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.169409737 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996014027 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.875623737 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.215221855 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100818828 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.394366292 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.901858858 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.173278459 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003563492 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.875544506 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.502285682 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.875450271 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.100674066 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914660577 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.875099521 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.875645321 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.094766372 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.88546518 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.877080659 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.530282908 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.938904142 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.876130654 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110886075 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.878755034 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.144980352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.878965304 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110103934 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.974325239 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90381694 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045156674 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.122752008 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.87880698 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.114557395 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.117312517 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.987343514 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095658962 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.586772843 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.876368342 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.158965555 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.878813827 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.875481709 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.045416317 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.878135172 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.046628594 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.877737299 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.174765893 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898847681 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106340901 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.876920163 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.130112148 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.907964689 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.927969636 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.876671826 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.998034537 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882436483 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.766114646 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.033015252 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.880652554 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.87567558 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.422968802 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.874884128 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022876139 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.106403028 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899006004 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.947817834 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.538494457 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.879303888 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961091633 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898752048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.26986746 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.878019785 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.13317686 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.879870959 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.878684765 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.877683164 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.11798039 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.06105226 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.880913026 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.880497614 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.780876042 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.8819348 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.876487948 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.060250661 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.258929415 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876339111 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085615047 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.881066701 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008875498 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.883645304 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.954103958 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.210199523 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.877159283 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.880242698 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.880985554 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.879758196 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.879967841 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086482186 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.901318531 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.37043167 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.015229891 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.150840989 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.185776378 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.122594479 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.920113943 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.884039092 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.129838744 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880273909 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.94028061 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.876057446 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.902042666 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102494471 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882169582 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.169447899 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150110177 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.714316561 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.928469802 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.880874909 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879641652 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.878845395 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02810662 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.96654911 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880976751 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.87878137 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999452005 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.002809111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.090660057 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.883775787 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.911569564 seconds)
  done (took 905.907151568 seconds)
done (took 1225.724767457 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.881073022 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.878032686 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.882231655 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881846897 seconds)
  done (took 29.32749839 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.881119388 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.878403836 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.88157321 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.879604397 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.887595148 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.880788267 seconds)
  done (took 13.091834405 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.067956109 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875213657 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881464966 seconds)
  done (took 21.628598162 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.951441717 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.26500957 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.012612039 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.30037174 seconds)
  done (took 10.333182212 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.881778303 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.87984759 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.881715214 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.889592583 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.884354213 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.881289909 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.888773488 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.889673284 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.884225912 seconds)
  done (took 18.766187764 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.936798552 seconds)
done (took 98.88774119 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.973960983 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.948454264 seconds)
    (3/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.016148144 seconds)
    (4/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.882987618 seconds)
    (5/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.982801847 seconds)
    (6/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.883627393 seconds)
    (7/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.006258333 seconds)
    (8/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.061282544 seconds)
    (9/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.256347871 seconds)
    (10/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.046237789 seconds)
    (11/309) benchmarking ("sort", BigInt, false)...
    done (took 6.881116299 seconds)
    (12/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.907423554 seconds)
    (13/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.906378807 seconds)
    (14/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.01192447 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.059453943 seconds)
    (16/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.09379492 seconds)
    (17/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.229141383 seconds)
    (18/309) benchmarking ("sort", Float64, false)...
    done (took 5.666355707 seconds)
    (19/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.883838712 seconds)
    (20/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.847961977 seconds)
    (21/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.12198437 seconds)
    (22/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.059809539 seconds)
    (23/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.543781416 seconds)
    (24/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.97919576 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.079798843 seconds)
    (26/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.214270872 seconds)
    (27/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.771567225 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.553386628 seconds)
    (29/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.035261576 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.008515397 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.881125015 seconds)
    (32/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.98251788 seconds)
    (33/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.160489511 seconds)
    (34/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.034140345 seconds)
    (35/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.14239604 seconds)
    (36/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.991364952 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.974058465 seconds)
    (38/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.965224279 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.881674198 seconds)
    (40/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.87711213 seconds)
    (41/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.260572984 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.050250538 seconds)
    (43/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.443683673 seconds)
    (44/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.973124875 seconds)
    (45/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.990405909 seconds)
    (46/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.088710291 seconds)
    (47/309) benchmarking ("sort", Float32, false)...
    done (took 5.585653157 seconds)
    (48/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.961628553 seconds)
    (49/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.911290042 seconds)
    (50/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.898044695 seconds)
    (51/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.491803987 seconds)
    (52/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.171535661 seconds)
    (53/309) benchmarking ("sort", Bool, false)...
    done (took 2.111358877 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.016156996 seconds)
    (55/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.881356577 seconds)
    (56/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 3.602656391 seconds)
    (57/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.783925629 seconds)
    (58/309) benchmarking ("sort", Int64, false)...
    done (took 5.553208488 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.773211359 seconds)
    (60/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.00581752 seconds)
    (61/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.009868963 seconds)
    (62/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.878126486 seconds)
    (63/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.130552725 seconds)
    (64/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.032540866 seconds)
    (65/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.897609962 seconds)
    (66/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.971171029 seconds)
    (67/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.979198372 seconds)
    (68/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.957083212 seconds)
    (69/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.885701398 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.20801944 seconds)
    (71/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.614875885 seconds)
    (72/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964180126 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.228609626 seconds)
    (74/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.879462137 seconds)
    (75/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.373345816 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.192475256 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.180566748 seconds)
    (78/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.896828617 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.546857206 seconds)
    (80/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.883251497 seconds)
    (81/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 3.865715914 seconds)
    (82/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.882463077 seconds)
    (83/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.877412883 seconds)
    (84/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.336444597 seconds)
    (85/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.698600971 seconds)
    (86/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.033713937 seconds)
    (87/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.882584383 seconds)
    (88/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.220447311 seconds)
    (89/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.010955503 seconds)
    (90/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.967276097 seconds)
    (91/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.00189278 seconds)
    (92/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.255297221 seconds)
    (93/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.939546079 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.883618762 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.108738218 seconds)
    (96/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.902171563 seconds)
    (97/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.876036714 seconds)
    (98/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 2.01387072 seconds)
    (99/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.972576264 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.877436149 seconds)
    (101/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.984368679 seconds)
    (102/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.959442353 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.889123833 seconds)
    (104/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.252365505 seconds)
    (105/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.879570769 seconds)
    (106/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.976432178 seconds)
    (107/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.675020808 seconds)
    (108/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.012465314 seconds)
    (109/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.23604679 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.171040404 seconds)
    (111/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.89348146 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.87999322 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.803521134 seconds)
    (114/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.106910464 seconds)
    (115/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.191710069 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.179360949 seconds)
    (117/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.903101391 seconds)
    (118/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.989229322 seconds)
    (119/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.178889915 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.881684419 seconds)
    (121/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.020304028 seconds)
    (122/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.171388042 seconds)
    (123/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.063848469 seconds)
    (124/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.883217584 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.132029022 seconds)
    (126/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.87876618 seconds)
    (127/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.004015291 seconds)
    (128/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.878511305 seconds)
    (129/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.399395026 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.780474577 seconds)
    (131/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.887243125 seconds)
    (132/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.908520446 seconds)
    (133/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.909937147 seconds)
    (134/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.990153815 seconds)
    (135/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.879852592 seconds)
    (136/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.213245065 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.9756565 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.042630075 seconds)
    (139/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.328394039 seconds)
    (140/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.884012533 seconds)
    (141/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.8911254 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.645204341 seconds)
    (143/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.900356066 seconds)
    (144/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.882192869 seconds)
    (145/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.978862442 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.012942436 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.981251252 seconds)
    (148/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.969951815 seconds)
    (149/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.903905018 seconds)
    (150/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.881833993 seconds)
    (151/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.394903779 seconds)
    (152/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.882197493 seconds)
    (153/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.335074607 seconds)
    (154/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.768803477 seconds)
    (155/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.887100195 seconds)
    (156/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.998035207 seconds)
    (157/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.944176179 seconds)
    (158/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.976970653 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.828655943 seconds)
    (160/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.739371763 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.986485825 seconds)
    (162/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.965770367 seconds)
    (163/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.032088865 seconds)
    (164/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.88504871 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 3.958912923 seconds)
    (166/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.915893126 seconds)
    (167/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.882136151 seconds)
    (168/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.095613641 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.66774346 seconds)
    (170/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.100313452 seconds)
    (171/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.320650626 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.1249625 seconds)
    (173/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.282952362 seconds)
    (174/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.88552677 seconds)
    (175/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.877232506 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.921802953 seconds)
    (177/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.898893999 seconds)
    (178/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.027784737 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.863826581 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.891735103 seconds)
    (181/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.018698534 seconds)
    (182/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.884057812 seconds)
    (183/309) benchmarking ("perf_sum", Float32, true)...
    done (took 3.3157287 seconds)
    (184/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.908953552 seconds)
    (185/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.898488386 seconds)
    (186/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.230015243 seconds)
    (187/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.637054576 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.880039055 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.1261783 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.673793131 seconds)
    (191/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.261521548 seconds)
    (192/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.254608846 seconds)
    (193/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.896576598 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.885171998 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.961681942 seconds)
    (196/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.886592261 seconds)
    (197/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.188284059 seconds)
    (198/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.272745675 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.217726719 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.886665572 seconds)
    (201/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.884199598 seconds)
    (202/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.027319159 seconds)
    (203/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.187338875 seconds)
    (204/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.663064372 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.948365606 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.201984913 seconds)
    (207/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.205528523 seconds)
    (208/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.160466323 seconds)
    (209/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.983950351 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906638173 seconds)
    (211/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.169011734 seconds)
    (212/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.12868189 seconds)
    (213/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.114144584 seconds)
    (214/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.884380959 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.095771437 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.215733055 seconds)
    (217/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.22411267 seconds)
    (218/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.954050181 seconds)
    (219/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.9842645 seconds)
    (220/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.423934232 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.538360802 seconds)
    (222/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.210978562 seconds)
    (223/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.885730288 seconds)
    (224/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.816144952 seconds)
    (225/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.034736962 seconds)
    (226/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.157130096 seconds)
    (227/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.208897314 seconds)
    (228/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.88642644 seconds)
    (229/309) benchmarking ("perf_sum", Float32, false)...
    done (took 3.203134434 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.221137284 seconds)
    (231/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.916385626 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.344992899 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.56180314 seconds)
    (234/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.336887689 seconds)
    (235/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.086820169 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.023380977 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.019706132 seconds)
    (238/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.066523706 seconds)
    (239/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.741784465 seconds)
    (240/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.914438671 seconds)
    (241/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.128882315 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.261878888 seconds)
    (243/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.381390805 seconds)
    (244/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.893137786 seconds)
    (245/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.093474912 seconds)
    (246/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.894560049 seconds)
    (247/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.283662817 seconds)
    (248/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.893485481 seconds)
    (249/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.203517437 seconds)
    (250/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.036096607 seconds)
    (251/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.887703229 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.016755872 seconds)
    (253/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 3.141845895 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.21892446 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.027205189 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.949053245 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.224149406 seconds)
    (258/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.140741957 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.939129289 seconds)
    (260/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.79218113 seconds)
    (261/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.909933833 seconds)
    (262/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.911907214 seconds)
    (263/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.803264497 seconds)
    (264/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.197722537 seconds)
    (265/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.271260972 seconds)
    (266/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.240602876 seconds)
    (267/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000525563 seconds)
    (268/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.03687255 seconds)
    (269/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.139508258 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.801409552 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.316863039 seconds)
    (272/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904905935 seconds)
    (273/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.976350094 seconds)
    (274/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.899767367 seconds)
    (275/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.890383679 seconds)
    (276/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.224418312 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.287937701 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.290264464 seconds)
    (279/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.892525966 seconds)
    (280/309) benchmarking ("map", abs, Float64, false)...
    done (took 3.547834981 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.89217425 seconds)
    (282/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.070580807 seconds)
    (283/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.888688249 seconds)
    (284/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.143727569 seconds)
    (285/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.015303139 seconds)
    (286/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.926064873 seconds)
    (287/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.054841849 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.134227113 seconds)
    (289/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.06363036 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.730535917 seconds)
    (291/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.889807884 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.990587901 seconds)
    (293/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.131958148 seconds)
    (294/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.083313965 seconds)
    (295/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.139620479 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.530281659 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.931866044 seconds)
    (298/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.156448493 seconds)
    (299/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.213060317 seconds)
    (300/309) benchmarking ("sort", Int8, false)...
    done (took 4.783013507 seconds)
    (301/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.982471769 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.582369534 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.929864641 seconds)
    (304/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.087041729 seconds)
    (305/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 7.215485664 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.38447466 seconds)
    (307/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.045847713 seconds)
    (308/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.895729145 seconds)
    (309/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 8.020018645 seconds)
  done (took 1010.88598894 seconds)
done (took 1012.751231127 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.923124204 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911927204 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.894055264 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.914783623 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.006666686 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.941776871 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.906993043 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.899512282 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.943679956 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945378363 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.891900239 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.934791322 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.895717886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.895413807 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.896424729 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.911395489 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.201264629 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.924931648 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.912460144 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.907479543 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.912160427 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.89949462 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.945378608 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.935068715 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.902798789 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.901204704 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.900117809 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.918928791 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.011269582 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900544574 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.901096849 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.910185155 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.201535514 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.920079799 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.893622227 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.91550795 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.907960821 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.909176978 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.901074602 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.929183401 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.285613978 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.933386346 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.89887506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.898488944 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.896212627 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.90383139 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.897351909 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.904901248 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.911610656 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.912276729 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.281318261 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.95058358 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.900404858 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.897891205 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.911339779 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896943938 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.90019793 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915099541 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.917143111 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.91398089 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.186984329 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.932846476 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.89895773 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.915323946 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.906374466 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.315836398 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.931021765 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.905288955 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.288573681 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.942265701 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.315617377 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.945253483 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.901339608 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.913558866 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.933232689 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.203850918 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922685366 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900014783 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.908177452 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.896939324 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.911473467 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.916993099 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.904480334 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.899474344 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914346475 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.943398079 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.912304304 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.901221766 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.912070809 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.920707677 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.908912693 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.912453385 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.903870202 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.897061448 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.912286821 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.90564598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.904438871 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.903357091 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.905488442 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.916006036 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.289319418 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.951897323 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.899583034 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.897873971 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.899847056 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.916147889 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.28805938 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.936861373 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.923303656 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951099893 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.90220063 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.189212859 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.930595508 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919596178 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.912610179 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.90385712 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.898450273 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189652073 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.312788504 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.952751914 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.899915181 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.900288368 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91858728 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.90391028 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.898475832 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.205628485 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.933719176 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919121244 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.023142749 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.914524142 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.93512175 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.898905068 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.904533949 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.945411702 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920976742 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.937106036 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.907235092 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.920874312 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.922091267 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.900572475 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.914224476 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.914920839 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.900877638 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.909108656 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.898164578 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.945593361 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916743255 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917838849 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.924264352 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.025735248 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.899334429 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.191313149 seconds)
done (took 298.427789987 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.977488062 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898513826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.991496239 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.900916162 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.991499048 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.978108044 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.901077687 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.902081936 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.900699024 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.395788122 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.900705848 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.907711489 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.898582929 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.902806871 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.972187037 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.900865225 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902165745 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.344045778 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.904031361 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.985810871 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.902053443 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.902888588 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.902050135 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.508991364 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.902461054 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.899713294 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.981727963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.902438426 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.344682757 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.90010169 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.903333595 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.448067634 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.981536688 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.929272279 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.911496731 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.908657273 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.999540836 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.91363938 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.977242991 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.97177713 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.995078035 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.935532371 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.901358092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.901191318 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.902848486 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.90402129 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.903105532 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.935185174 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.902936854 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.90712163 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.343075605 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.908346501 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.9113927 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.903154722 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.905190866 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.932819322 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.904130172 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.904915353 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.986959217 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.905837966 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.97336394 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.39617499 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.399110184 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.903655765 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.902072153 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.904138403 seconds)
  done (took 187.642137126 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.969119639 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.980299919 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.970183242 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.908518559 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.953838554 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.972821137 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.908474476 seconds)
  done (took 15.486037846 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.910730768 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.904634109 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.954030843 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.953948541 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.903645131 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.061447074 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.905485669 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.915740484 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.910191903 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.932411712 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.903553436 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.90544473 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.91220692 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.902667713 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.954265466 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.918632868 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.019973828 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.90698922 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.906436446 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050784231 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.910044118 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.912169189 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.931998183 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.918447721 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.906079037 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.912297639 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.497202821 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.906125027 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908011275 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.905353296 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905484779 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.947821389 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.906947148 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.905870079 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907035366 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.020125657 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.907585929 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.907034557 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.909316195 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.905335215 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.906560451 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.907103763 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.906437858 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.908063246 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.905545598 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.929198035 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.908568275 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.906347263 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.907280066 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.906151283 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.932764558 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.906253073 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.906368991 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.913358041 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.949527046 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914473914 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.907216299 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.907394208 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.907652213 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906773958 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.053591693 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.956833134 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.907443329 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.956374471 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.909176187 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.908653951 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.908303712 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.910046195 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.995511258 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.90962471 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.956830859 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.909576062 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.067067165 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.931518165 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910259688 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.912495948 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.9116597 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.909001991 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.908165812 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.916646822 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.908845395 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.911050695 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.917063312 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.914201205 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.909753805 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.021331489 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.048999306 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.908933925 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910419219 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.917315384 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.909811202 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.953021279 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.908437163 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.909479784 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.965676661 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.025310159 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.936970465 seconds)
  done (took 209.458523272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.917362781 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.914432113 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.911026811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.923508947 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.910437131 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.910631964 seconds)
  done (took 13.315583059 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.911063756 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.915084026 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.909727429 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.910609822 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.909590584 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.912019263 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.910143071 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.912217557 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.915663475 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.910086457 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.911770168 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.912440243 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.910699995 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.911769186 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.911691852 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.91232427 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.91074484 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.911659697 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.911338555 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.913091911 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.1641294 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.913529824 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.911992095 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.915530365 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.916584911 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.91363821 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.924517347 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.911519009 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.912317736 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.920077042 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.916359992 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.912931231 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.913170101 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.920298885 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.917987034 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.916029384 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.915924416 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911391503 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911708167 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.911700573 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.9134763 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.911297187 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.912535017 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911448592 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.913903185 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.919569259 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.915801897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.923814827 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.912601723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.912602408 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.912697011 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.913771794 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.913245495 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.912615719 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.918154532 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.918032915 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.916390043 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.914324271 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.913488595 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.915757142 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.917102405 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.914482821 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915501762 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.918392975 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.919948369 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.913799356 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.917730925 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.919805127 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.914880014 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.913824044 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.914444686 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.914117198 seconds)
  done (took 140.905506912 seconds)
done (took 568.647308272 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.935545375 seconds)
  done (took 8.766877255 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.095709394 seconds)
  done (took 8.971761955 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.28297981 seconds)
  done (took 10.11887672 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.928625157 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.945217708 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.921415809 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.915243344 seconds)
  done (took 29.564088551 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.200247098 seconds)
  done (took 9.033230132 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.936872076 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.907885521 seconds)
  done (took 15.744581933 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.946384434 seconds)
  done (took 8.788720012 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.261578984 seconds)
  done (took 9.10193229 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.934191546 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.912927842 seconds)
  done (took 15.702024772 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.913946014 seconds)
  done (took 8.745921748 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.080982326 seconds)
  done (took 10.025335178 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.941236881 seconds)
  done (took 8.845040968 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.945799457 seconds)
  done (took 8.78138804 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.9950264 seconds)
  done (took 9.828818813 seconds)
done (took 163.84994979 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.931783385 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.909824805 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.911063676 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.915042358 seconds)
  done (took 29.500987953 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.948239348 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.947864863 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.951147414 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.958703988 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.952136121 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.948410554 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.940476721 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.941049478 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.957283801 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.953610023 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.952380122 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.950719578 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.948306309 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.942416514 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.952144917 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.953859618 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.960337889 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.967706978 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.943125507 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.952356868 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.917685928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.96218594 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.95378143 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.917986256 seconds)
  done (took 48.609101139 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107633803 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.987499467 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.070584494 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.968725266 seconds)
  done (took 9.96825393 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.97051191 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.970973956 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.982407937 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.020804277 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.045788894 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.980693992 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.944211386 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.940342656 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.925331728 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.971515807 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.046269602 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.966782006 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.057933981 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.918441147 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.099599443 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.92009707 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.917968295 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.97176625 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.022847128 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.035733388 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.920828934 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.97371629 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.974576558 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.965162727 seconds)
  done (took 49.37965239 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.91788927 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.927434679 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.926464534 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.920971086 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.919717372 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.920265234 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.926900538 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.921791251 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.941284791 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.92138863 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.919900989 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.921272934 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.925464321 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.921505732 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.920244436 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.932194527 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.933662323 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.920794557 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.925256362 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.928817373 seconds)
  done (took 40.328052105 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.915102235 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.762153166 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.262093861 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.168891715 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.915847315 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.913205315 seconds)
  done (took 31.772322791 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.931037145 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.923374977 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.919512961 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.976351809 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.059232924 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.92485438 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.920878901 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.929835297 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.966509075 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.985522375 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.938689113 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.94892101 seconds)
  done (took 25.262181597 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.919729012 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.917487058 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.91783544 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.930249615 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.929014773 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.926654118 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.925758227 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.920711516 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.932374738 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.937552688 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.928198776 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.932640042 seconds)
  done (took 44.961466339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000853934 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.794620477 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.362702394 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378986702 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452403114 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119178908 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.922055413 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008377969 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.924798693 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193352076 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.239355135 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.415028096 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.168823308 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923318684 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.017605242 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.391889964 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208819162 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.137421198 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949857661 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.58384365 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029920393 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.36638978 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.654556796 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.032701664 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127181417 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.051275787 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.184989047 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.871496437 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965759027 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.921492678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922762165 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917788377 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187310591 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03880027 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990229251 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922878321 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.329575897 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.62290783 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.924927315 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.55598319 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.412814521 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.043438328 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930405541 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930239397 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.860624728 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38832844 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.127725178 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.932618735 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.630150973 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.924161625 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935142804 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997550648 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.925841596 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.737622048 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.614146887 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.196147823 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.930591291 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931808618 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.490630724 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.925853033 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.494680871 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.977079009 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.018715011 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.571548602 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.383861982 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.087000365 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.935612388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.936779867 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863614193 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.562204871 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.051449944 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.068539897 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.947349477 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.575112498 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231587223 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.352504542 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.985812759 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211920799 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.661188159 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.979089771 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.150399081 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.882309276 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86133656 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.766224418 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857868786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150884321 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969505532 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.532860362 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.97210462 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.017003747 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.936081235 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944794966 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93266602 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.145430531 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.824245148 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93022345 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.232941728 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191463257 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956271918 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.024629585 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862094253 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.936308833 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184128112 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.139130059 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.124191751 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.529698958 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.025706169 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.820773863 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.057760605 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.794734497 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.053707636 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.197663469 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.99038797 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.94921617 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061712898 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891558095 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188125357 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.857471958 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.14931939 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.31242709 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176487646 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.282574779 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189678417 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99711212 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940116192 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.941745796 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646873123 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.552602038 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.15659657 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.95291182 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375714159 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.059668913 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.941237189 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886636769 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.813451415 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.283131497 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.02143911 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.157103784 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.864613362 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.329178849 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874044198 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.08327391 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.93396044 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.156149676 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.586104332 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.021174197 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193968199 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.14227616 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.229724194 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.057059619 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955673249 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.036846983 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952608273 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.323702682 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295733611 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.943470546 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.941720344 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.599596304 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.991986632 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.950416898 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.947220391 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486091866 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209030365 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.965157345 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946710566 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.82075767 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.955959081 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.006103617 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946505046 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.948921014 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.509504265 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.449808823 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.946224092 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.696989524 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157471714 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.948507841 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.603213567 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.12364209 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.954882654 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.207031344 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.008591213 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.872326186 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.646462183 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.645118076 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944478922 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.871223822 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.94432069 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94814388 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951258586 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.135369318 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210251229 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.993219815 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.556444657 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.048539398 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947022649 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.948095807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.943095035 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.466818706 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.940272221 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49880444 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.062778626 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074324254 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.956751581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.873200873 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.94778595 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.946988691 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.946759357 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.892449529 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992548945 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.552667813 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154392388 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.190924291 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.35540744 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.952674579 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.561115716 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.055925105 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.959036807 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.219350869 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515512252 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.047281151 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.013678456 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.95202418 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.570157575 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.673198944 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.506171892 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.238044001 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.252397726 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.28322325 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.382899968 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.273240107 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.042568068 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172356268 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.466348859 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.004197078 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.031759669 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896586248 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957421536 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.587449138 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.360313112 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.956256449 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165742307 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224777058 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.283026616 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071572905 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.151392909 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974216243 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.805870417 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.976211782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.478399667 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965988226 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.302808306 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142137016 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.030967049 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.217338158 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.016875813 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.950716189 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.287802538 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986577215 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.649123301 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.306035797 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425982558 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.397449711 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.168911566 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950883878 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.38814143 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29396079 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.191969507 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.075545414 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876928359 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.954010045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.952546183 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.962093136 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.92743387 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.778906683 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.186263156 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954957274 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.178360136 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.132146022 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.307862285 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.856067704 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.948584517 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948128235 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190847 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.686490881 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.10211005 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.31332869 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.525323716 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94418012 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.866343657 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864963054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.638764167 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.947801036 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.905281097 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143570985 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.039300686 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.616728082 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361689863 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255329818 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182586824 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.950163854 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.202539209 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213530106 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.428544839 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956318536 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.035200784 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.20988323 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.675622584 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.162307279 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.175749182 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.491936929 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.161437636 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.393457803 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.918266458 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.947976154 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.156089321 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.164757613 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.278059286 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.114183939 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.660812143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.96600578 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30920551 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008174475 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.281687916 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.129556411 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.045446668 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961979062 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029968936 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959472852 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.960973245 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.958634574 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96262779 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.294321029 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.06358714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.966701912 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031050473 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.966158364 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.524477655 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.961655494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22331226 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295383275 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.281498794 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019174889 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.957853516 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957796305 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.886242166 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081176186 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.395794176 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229316571 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.075131097 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.090361958 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976398743 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.237655976 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275978678 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268325757 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.221294328 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.837517236 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.73104095 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.076803173 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.164553397 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953610212 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.150658009 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.161234326 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253163403 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.508640016 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.160569831 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.140580897 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215805684 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315684377 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.9426998 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.524883191 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.95294931 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.337428405 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.960695493 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.284593941 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194129074 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957006938 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071583379 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.949863109 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.154200435 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.403752879 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.62658608 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.297105808 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.819231092 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.965610256 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231782907 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.281928367 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265856115 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029738527 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960646676 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.647185291 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.089318831 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.843336759 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.163042724 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.953948778 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.153703151 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.669500712 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.956090926 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.22333082 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252998649 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.954421171 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.878099459 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953614768 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.954745657 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.164503518 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.169638247 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.195140212 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940977384 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.950601625 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.751359698 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.203549774 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99362852 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.861029897 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.932321437 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980600823 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.165292127 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953202316 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.453460755 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.638493252 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215988291 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.84172347 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951036897 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389587997 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.313949249 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263318593 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.465103721 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154762323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.486928024 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844375479 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316002297 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.938212882 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40307841 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316394416 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.934839566 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.489723864 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04639017 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200968975 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.262051135 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.943875746 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.676308208 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.984316748 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174333112 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315024465 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891181081 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957631075 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.007387142 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.959289025 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.946267781 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.966988781 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.894290787 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481773169 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.805701095 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.520271284 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.958264112 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.977097193 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.292465056 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.546456796 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073050553 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981485014 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962371259 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.651568787 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.245734999 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204018685 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.530049869 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.058148531 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.961478943 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959109679 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.881580996 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152037253 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.148600263 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242566513 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.374742635 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.069105977 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.964681835 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.169304804 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163786882 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.318555838 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086208803 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.152875613 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079442535 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.902146191 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.668164043 seconds)
  done (took 1698.550448174 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967583248 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.971329379 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.977947614 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.003801021 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.984233432 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.979043743 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.023188956 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.05626143 seconds)
  done (took 57.845359948 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.962831812 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.245636793 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.967341207 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.965225546 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.965705785 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.963353895 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.11951814 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.971587476 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.96671301 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.970567668 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.963162874 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.962594557 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.255047031 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.985582968 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.962744139 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.964981304 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.96624299 seconds)
  done (took 76.055737445 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.966428194 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.140435336 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.994058091 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.964158294 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.686235535 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.973053129 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.934679314 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.988438551 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.968059884 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.021428795 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.261777889 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.022899383 seconds)
  done (took 90.81004005 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.979853563 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.969138694 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.970840336 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.969644944 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.970641384 seconds)
  done (took 11.754590186 seconds)
done (took 2216.722378906 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.190789849 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.025175479 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.064510435 seconds)
  done (took 5.975961508 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.11236212 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.156848938 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.272098377 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.294116789 seconds)
  done (took 10.730126387 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.283552002 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.346454928 seconds)
  done (took 6.519289656 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.289269703 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.988144304 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.382291965 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.970131039 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.970239506 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.972105788 seconds)
  done (took 22.805844714 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.966472926 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.967516898 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.96788099 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.969278897 seconds)
  done (took 9.759694097 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.96468684 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.674405506 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.971047599 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.978323002 seconds)
  done (took 21.475993691 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.116547051 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.084662004 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.11247349 seconds)
  done (took 8.202877706 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.11206583 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.82321461 seconds)
  done (took 6.821244595 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.107845032 seconds)
  done (took 3.995496486 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.996040001 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.238540703 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.506197198 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 3.005337926 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.599738444 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.230129346 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.305256269 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.18975175 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.423894342 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.45544106 seconds)
  done (took 26.841176801 seconds)
done (took 138.864208817 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.552542568 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.998660133 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.170177291 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.333317526 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.211101427 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.170252217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.180962178 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.330668519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.007654291 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.991809449 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.33807452 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.188184143 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.115172249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.968179343 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.123490215 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.955510713 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.181765013 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.340730025 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.995754254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.236148339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.182597531 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.955236053 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.15162272 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.968784728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.185326294 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.103491096 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.501640622 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.956632617 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.130231569 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.510927389 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.106095979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.371812763 seconds)
  done (took 171.403360154 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.951566854 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.949547487 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.946556903 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.947936674 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.403971619 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.947213652 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.945167149 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.946588967 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.38744919 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.378450573 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.945746513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.388503493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.946713812 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.943543195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.945493624 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.943793478 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.559831825 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.946075208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.943484266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.943829849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.931259444 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.211773332 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.924037727 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.2187525 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.534372738 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.928795614 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.924135416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.92352969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.928656158 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.922401289 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.925126713 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.924746432 seconds)
  done (took 211.486068879 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.926341275 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.92505653 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.924108681 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.924938886 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.92784168 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.925052116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.9253611 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.922348426 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.695365996 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.687220396 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.925845837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.928205823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.929324744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.926073014 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.922885136 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.92684183 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.923649673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.922642003 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.925416878 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.925682727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.930958954 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.51869438 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.929251138 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.54782895 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.927447363 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.930751335 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.928615298 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.931250009 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.928357122 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.929881125 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.928093696 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.927525274 seconds)
  done (took 222.248404341 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.169278054 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.928645831 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.932837949 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.855644761 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.93086075 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.930781064 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.918437384 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.177547443 seconds)
  done (took 19.69818295 seconds)
done (took 626.734717454 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.294781108 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.134262166 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.107863486 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.954610645 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.19564992 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.99742902 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.951754316 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.01969278 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.794735006 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.027067947 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.625547582 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.973712414 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.723122712 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.978791665 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.074002446 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.010392388 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.53898283 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.634846663 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.091067374 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.04014507 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.128529994 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.872266871 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.03329244 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.834198494 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.638041966 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.922574723 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.005131894 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.539194619 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.963356769 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.106781232 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.601907179 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.245316592 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.965805953 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.949425842 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.005531714 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.983445762 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.193212927 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.963386627 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.082402887 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.663582524 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.027181709 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.70343235 seconds)
  done (took 105.448807646 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.941316396 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.937577899 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.936320307 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.937195222 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.945106402 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.937909481 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.939099722 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.936595278 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.93675382 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.936879843 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.939463922 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.949279439 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.936214215 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.944304803 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.935297893 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.936681963 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.937298857 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.948844209 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.937851449 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.937612186 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.937028372 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.93881879 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.934468412 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.937132864 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.938282248 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.93952012 seconds)
  done (took 52.28161948 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.934710857 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.086479053 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.179250722 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.954689051 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.935126766 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.937387159 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.953380565 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.939619994 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.93761625 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.936878294 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.037976029 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.939378091 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955640649 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.181126943 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.952011093 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.933978105 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.933776808 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.936478518 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.096838175 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.950491906 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.954304057 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.938378476 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.952937102 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.9484486 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.9349376 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.935474658 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.938916901 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.374962348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.943391997 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.038992957 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.995874625 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.96255671 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.322259439 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.18647722 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.990351524 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.949206733 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.93428468 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.04137791 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.940298749 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.936293442 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.953566522 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.937918749 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.177854729 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.449007508 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.94831318 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.934216613 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.388352801 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.05336161 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.977597215 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.947034981 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.18462443 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.953911005 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.939957466 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.935805547 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.972029042 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.946512264 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.938374671 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.238951147 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.94699868 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.95489071 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.942033199 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.936821961 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.102581785 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.944554892 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.086996953 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.946214009 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.94359241 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937863092 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.180227198 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952683833 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.462089104 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.951278154 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.935515597 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.039952423 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.092110606 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.414971402 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.948536713 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.102260918 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.339966867 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.960082902 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.944505667 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.37088374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.962730277 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.943633258 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.938710487 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.938529366 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.937522344 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.979451531 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.954079664 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.377655535 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.465395493 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.255283392 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.963368896 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.953616817 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.938884633 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.239279951 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.946516357 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.937947123 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.170940767 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.474115774 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.951976494 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.944954868 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.442910264 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.955997643 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.956920461 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.947218549 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.185851826 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.955118045 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.982811519 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.939319109 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.943903194 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.94180532 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.957238909 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.946313114 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.939410718 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.434784004 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.061399763 seconds)
  done (took 239.970937013 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.940680979 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.938228602 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.93751735 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.937087812 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.938460711 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.939591621 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.937929522 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.937844298 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.939088109 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.936761473 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.938116295 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.940274991 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.93816375 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.938663685 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.944307511 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.939439472 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.543585355 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.93781663 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.936919031 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.937387275 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.587235427 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.944324142 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.937706345 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.937203098 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.937303946 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.938764647 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.941613629 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.941604493 seconds)
  done (took 169.406929376 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.941927692 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.054556456 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.960844565 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.967469345 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.946421972 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.940322863 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.038770036 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.958688148 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.946105645 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.940213639 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.942920133 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.000526817 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.952140355 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.039723822 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.971499003 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.048050722 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.046320185 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.946767549 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.942278594 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.940948739 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.970522274 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.948417784 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.002688133 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.069728098 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.960268261 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.054527324 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.961147895 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.942290456 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.942578368 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.054423502 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.961685389 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.002128746 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.972514557 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.960758532 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.060232976 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060933299 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.047218529 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.04778788 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.948471137 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.942410063 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.944473532 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.941971873 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055309752 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.964404902 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.946625502 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.059746611 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.963961473 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.944074607 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.944415395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.943751995 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.955409081 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.959724094 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.007256503 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.072699431 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.977933017 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.968401523 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.040202868 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.066963599 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.943126779 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.042581086 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.949758879 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.059807069 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.966680638 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.943369896 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.945175368 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.946395594 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.973020984 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.051828128 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.048492139 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.951164656 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.042803946 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.977397312 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.953664536 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.943391988 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.945498438 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.05782783 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.066961465 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.979886223 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.982922419 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.9736811 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.952357924 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.944854974 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.945438897 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.961394915 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.948991148 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.059973158 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.063663515 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.949226187 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.944664329 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.945213043 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.945425252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.970415623 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.066754828 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.982559336 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.049094469 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010277607 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.019163973 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.960007723 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.959201982 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.951001131 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.008274139 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.959314863 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.959622773 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.243556867 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.006040452 seconds)
  done (took 210.612926339 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.335677649 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.994082869 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.00379667 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.26461108 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.336813043 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.857918948 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.988060706 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.992577185 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.015732846 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.187519594 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.076468906 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.010532785 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.979499117 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.968485887 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.993606529 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.015490017 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.00341439 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326902484 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.208655679 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.187371715 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.982109593 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.280453284 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.342456366 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.561709493 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.040254766 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.401163545 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.577035686 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.123069251 seconds)
  done (took 63.928739074 seconds)
done (took 843.500951303 seconds)
SAVING RESULT...
DONE!
