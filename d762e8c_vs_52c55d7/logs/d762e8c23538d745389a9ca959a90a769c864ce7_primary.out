cset: moving following pidspec: 16516
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.582608869 seconds)
loading group "shootout"... done (took 1.191805405 seconds)
loading group "string"... done (took 0.420886878 seconds)
loading group "linalg"... done (took 7.714311972 seconds)
loading group "parallel"... done (took 0.149756614 seconds)
loading group "find"... done (took 1.227510335 seconds)
loading group "tuple"... done (took 1.895975501 seconds)
loading group "union"... done (took 12.363099373 seconds)
loading group "dates"... done (took 1.29522455 seconds)
loading group "micro"... done (took 0.202566043 seconds)
loading group "simd"... done (took 4.269657327 seconds)
loading group "io"... done (took 0.941974527 seconds)
loading group "random"... done (took 8.310816529 seconds)
loading group "problem"... done (took 1.601833404 seconds)
loading group "array"... done (took 18.841575312 seconds)
loading group "misc"... done (took 1.472654899 seconds)
loading group "scalar"... done (took 38.707130108 seconds)
loading group "sort"... done (took 2.934399289 seconds)
loading group "sparse"... done (took 11.468751922 seconds)
loading group "collection"... done (took 16.521201242 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528663387 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.124096964 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.134520516 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118145566 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.152981148 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116288249 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123270891 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082827823 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.882009612 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147256723 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.112176187 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.436118654 seconds)
done (took 5.399262958 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17243661 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08710026 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078278586 seconds)
  done (took 1.297513718 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064531877 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.127221097 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.06619452 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067140659 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067185038 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066107639 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066047868 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065851569 seconds)
  done (took 1.658361953 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072478708 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.067601611 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.065393629 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.070077544 seconds)
  done (took 1.40781792 seconds)
done (took 5.752460083 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.24090716 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.107278989 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.299863147 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.322308267 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.415233293 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.09030221 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073692916 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.07003502 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.129346962 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317969252 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.119123521 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.189620541 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09652823 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.181597927 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.979710757 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.128361981 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085160212 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121883508 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09236021 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130749456 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.362654337 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076308846 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.081920217 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.070215905 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06730319 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.649566472 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.679976579 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.142517018 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082842896 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.079696998 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.115711758 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.639274738 seconds)
  done (took 10.405726063 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099718164 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099115507 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068515026 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12415565 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09557829 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069138206 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.074070383 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067307222 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.087946228 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126245547 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089227462 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.105635948 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065829668 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069081044 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083011307 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.196382327 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07905715 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080664034 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067573721 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07805851 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105483915 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077407844 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077786287 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078470766 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128493167 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.16758612 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096093678 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097720436 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065712862 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079159769 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11507136 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125270337 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066034013 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065207784 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122875396 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097016353 seconds)
  done (took 4.573691743 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.104002787 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.117481284 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.089812797 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.10071826 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.604942108 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065781623 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14736523 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.232970875 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072461172 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.442071286 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.15533997 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.123061583 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.140964245 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.121724981 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.068832451 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.252560354 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.119214364 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.273805573 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06658854 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.065791148 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064183588 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.074368473 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066524407 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062843257 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.075971143 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.089824929 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.085415201 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.174976471 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.981187031 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.287173214 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06695114 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167965965 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.086326542 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.364318038 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.069433271 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.088840932 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.393660592 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.123907036 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064649624 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064801464 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.160046043 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.130332171 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064201913 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.114381852 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.076994148 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.068226996 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.070655765 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068075955 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.078148839 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.077605414 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.101756143 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.067648478 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064810993 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166545349 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064247706 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.06560639 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.067058871 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149463122 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064717277 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.144874546 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064363369 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068076514 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.094134021 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.070189388 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.086703885 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111047225 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.332301828 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.038379552 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067772651 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.910536631 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079816713 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.066812414 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.082192012 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066110379 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.067324061 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066260192 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.074002211 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069153825 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068250824 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107913107 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06592219 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064228521 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.069120799 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06465818 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.070817442 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.097433874 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06749936 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.456373096 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.097488846 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.067065344 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.076309337 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.105024053 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066587499 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.072344505 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067265347 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.071598601 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065541066 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066661099 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.069224208 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.093768753 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.071773041 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112541902 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.169959356 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.07054419 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063731699 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065837602 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.071489257 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069546485 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069055647 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065697356 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068951606 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067604727 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064650305 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.114411382 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064831996 seconds)
  done (took 21.613617678 seconds)
done (took 38.83256836 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.242690007 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080988445 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082198361 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.081715583 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.08163683 seconds)
  done (took 1.796554469 seconds)
done (took 3.019003957 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.126340295 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099378923 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064701524 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09770941 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064076406 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101245325 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.100292196 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082752883 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099699604 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064330898 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.0973858 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064197983 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064288605 seconds)
  done (took 2.354419228 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.080247095 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084748347 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069098418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081161547 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061914858 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080381744 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079570185 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087066174 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079979467 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071345645 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062213588 seconds)
  done (took 2.051619088 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08093945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082583741 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068311318 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080551355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061612376 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080077605 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079979889 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084042864 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08013603 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071994934 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061832234 seconds)
  done (took 2.037007016 seconds)
done (took 7.652788703 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07422803 seconds)
  done (took 1.265841562 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.529854292 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.48738697 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.076568026 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.097441401 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.190681433 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.106173879 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.228908481 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.080892632 seconds)
  done (took 8.165761829 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.093383458 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070332158 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069486396 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.080183537 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068430737 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.067864597 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069546197 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069776203 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069924044 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.068483245 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068624217 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068733577 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.069274725 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068034829 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069738834 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.068293411 seconds)
  done (took 2.422730738 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095910841 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094715166 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072738191 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073985273 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071589803 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071404009 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074083365 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.07378712 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070532664 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071619976 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074214303 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.072363141 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.072017403 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.063698396 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073897798 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075129319 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070318793 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073482806 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074074031 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075173196 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073666348 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063364801 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071952902 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072622441 seconds)
  done (took 3.087966458 seconds)
done (took 16.151556702 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113814345 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.076223784 seconds)
  done (took 1.388700777 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.077308811 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.078035037 seconds)
  done (took 1.368808908 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.075342284 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.061172094 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.081321619 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.071382651 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.061966149 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.061347964 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.079506036 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.061544833 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062015431 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06167895 seconds)
  done (took 1.891820489 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.06365378 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07120089 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068117965 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.076736907 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.06796625 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063034841 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.065909526 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.063093484 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.070209757 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062706986 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.066484837 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081464205 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.066707797 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082992504 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.066327916 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066750138 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068761625 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065680359 seconds)
  done (took 2.45434761 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.061663289 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063262081 seconds)
  done (took 1.350403911 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06561719 seconds)
    (2/7) benchmarking "second"...
    done (took 0.062932463 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06589924 seconds)
    (4/7) benchmarking "year"...
    done (took 0.064577479 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063722671 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062176482 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062465172 seconds)
  done (took 1.665133013 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.36385079 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.129179584 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.328147843 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.06944751 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.078142793 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249939746 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.063544102 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.068355711 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.068331372 seconds)
  done (took 2.680250478 seconds)
done (took 14.026137338 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079302821 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085050652 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094664923 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.405766962 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091877255 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066520068 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.112799704 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.173935914 seconds)
done (took 2.348227978 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208027589 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.092457835 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.91521422 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.065186359 seconds)
  done (took 3.296657175 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329583478 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090247527 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076472252 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066107826 seconds)
  done (took 1.798662597 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066695765 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069909057 seconds)
  done (took 1.368141434 seconds)
done (took 7.912633376 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.064721157 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.064130098 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089451812 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.064235552 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06450094 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.06374391 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.064200133 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.065207619 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06399482 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063743014 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.063954346 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06335109 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063631058 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064087735 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063837261 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063899936 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063974834 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064248403 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.064002473 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063897743 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064156498 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063790276 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063539962 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065294031 seconds)
  done (took 2.821641965 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.079859091 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06634361 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.067790584 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.068116987 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067813162 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.06771423 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.067729097 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066019891 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068186713 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065269407 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067898918 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067675514 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065914395 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067666422 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065767155 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.068667349 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.067146875 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065655104 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065859626 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067483481 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.067006608 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065833224 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.067701326 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067924636 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.067854243 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06773048 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.066187905 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066183054 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06777782 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068138664 seconds)
  done (took 3.267130994 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.064489248 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06039257 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061314306 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068602479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.061049033 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.061323377 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060243452 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.061062214 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060723013 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060884796 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061509007 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060384573 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.060318603 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.060797438 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061720541 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064705685 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077666232 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.060384467 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.06013477 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.060870359 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064333798 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.060277335 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.060981871 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060102952 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060300032 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.059984426 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063578608 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.059833717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061523849 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.060044377 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.064083451 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064863972 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06038673 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069245241 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064608969 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06014478 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063940716 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060060657 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061043274 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060125612 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.059919553 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.060842496 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060770738 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069835377 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060524952 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06172545 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060706419 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.061761603 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.060733544 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.062774225 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.059899563 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060512985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06218868 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.061545195 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.065443801 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060478197 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.061276358 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060023471 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061395234 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060638143 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.060017729 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060726599 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.063633961 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060855833 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077452591 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069058818 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060645033 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061687618 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.060876745 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063727376 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062304084 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075351605 seconds)
  done (took 5.740340051 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084203178 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087179451 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065225597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065855972 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061242181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060891988 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.068693139 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061082833 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065762402 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079302695 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060963736 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066037164 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065479058 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065357167 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061001779 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065307777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069931274 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061061527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061263026 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06564937 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061408653 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068832998 seconds)
  done (took 2.731142617 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.14629494 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066907289 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104134703 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.071204822 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069317012 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.071150201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067178317 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066359427 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06700096 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067446227 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067410597 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066937894 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068986334 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067479793 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067120156 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067027659 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067113261 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067605298 seconds)
  done (took 2.584004865 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076757267 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066306851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084643865 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066357865 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.066435958 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065739486 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069679301 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.070960102 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.066202953 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066133548 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071263108 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066267094 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06572791 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066025484 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066171052 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066708536 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06558741 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066405706 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070950179 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070186476 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070131467 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070999292 seconds)
  done (took 2.764631211 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077592031 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06578379 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.080269899 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067268103 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061346882 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061202806 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.066889288 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066082384 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.066549341 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.065072172 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065907245 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06096198 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.067388442 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066020611 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06838896 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065613787 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.065045422 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066035713 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065687481 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.060957204 seconds)
  done (took 2.580008684 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090755343 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063973671 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.064408671 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069847798 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064932814 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063448218 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06993236 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.063631778 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06384353 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08487215 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064606562 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064462977 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070136184 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.067822243 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0636798 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070138974 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069799335 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069760504 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066980562 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064124633 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084919843 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.063807128 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070461333 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063750177 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064487297 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06393986 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063994105 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068363873 seconds)
  done (took 3.166286583 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063938586 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063681977 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064261617 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063828154 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.0644808 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064464848 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064058213 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064363347 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064435371 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064377842 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.063939014 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.064264917 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063828237 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.063881374 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063790518 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.064058219 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064063609 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064298564 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06423114 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064802156 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.063634152 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063158993 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063735167 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064408996 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064035081 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.063634903 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064503436 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063841579 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063388342 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063960914 seconds)
  done (took 3.177009762 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073711856 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072158443 seconds)
  done (took 1.401345918 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063012827 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077548898 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.059877238 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071658075 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069543753 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064400839 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.069919151 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069301366 seconds)
  done (took 1.796229841 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083886104 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.074235153 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.063680927 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.075691454 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073138385 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082671164 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.126217095 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.062621669 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.073640213 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063478109 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.080404243 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064831452 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.073114969 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068174972 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073304768 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07704064 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.061462437 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.067519447 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.063612338 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.061610412 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063479234 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076236 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072616529 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.060876848 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067756208 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090423273 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078933963 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.06244846 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069511352 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075058332 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073234112 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060468201 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.062907808 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.06319583 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.061214679 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.073106605 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08180635 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069384286 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076217704 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063489846 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071313391 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06120341 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072138108 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073962389 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078811184 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.062801603 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.062579695 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061238879 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063803339 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068635281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060770748 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067644141 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060209278 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074846345 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070436036 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077382122 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.061905984 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068708383 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069062325 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06995017 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.074376351 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.069234641 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072676548 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062265517 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078036551 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072890314 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074468762 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060668464 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060582215 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.060968938 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0761928 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092017182 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072352411 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.063302217 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.062956333 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.061035448 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069590606 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.063210586 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071989834 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073992969 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.062048764 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067266584 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075096949 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067349997 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068706841 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.069052719 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.061317925 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.0660824 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063969672 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081711216 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.061195496 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06089815 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063487891 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077708553 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069858295 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065097275 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063736231 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074128802 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060230788 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.062489294 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062824986 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068087143 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.074995782 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065954928 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066445063 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07540283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.070733263 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067894638 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068572721 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059821919 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.062443955 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063935985 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.073805321 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059304503 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068903614 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065815164 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.061835455 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072392004 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060132656 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.061178319 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073800336 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073485661 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060041049 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.058804212 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068363583 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.061319816 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.063594518 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073990738 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060491878 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.059383125 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.060319641 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.069416112 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.060471655 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07299567 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065243027 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068191901 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.190279146 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.062471203 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.067372691 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07511701 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06798842 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069434628 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073118477 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069975635 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.062365885 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074867757 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069840002 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065146371 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071596064 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067108787 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.060705446 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064875562 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069281207 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.061438017 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070441422 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066180755 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069559487 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.063572555 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062127115 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.068176323 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.063068332 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065485162 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06808337 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.061831442 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.07675477 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069127946 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060917733 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060323245 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.068954686 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064905478 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.063309342 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065378368 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068981824 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.063457648 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.061670802 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.062309135 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.06969985 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071170103 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065502531 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064176342 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072445026 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079123618 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.062533798 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06953355 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.061814488 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063191057 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062837334 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.076446147 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073117524 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066840786 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.06942184 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.060146889 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072713783 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074987473 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065206795 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.060775257 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.0656594 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.066370646 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074586386 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.067092131 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062842053 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061591085 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068268889 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065479769 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069502293 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.062357969 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065542481 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.067752996 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06156353 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068130248 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062944468 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.077132027 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.070032273 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06084009 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064928715 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061424877 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073919929 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061118942 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063916839 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065534165 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06322343 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06173688 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069047927 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.06014511 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074463718 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074862802 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067628169 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065001208 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.062277809 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074401109 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068378439 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071402026 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069627489 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071697475 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077363222 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065067711 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069241569 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.076723751 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06235729 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060896081 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074320288 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.061022314 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.062015255 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.061838042 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.061698239 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070112834 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069348941 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071869914 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059419576 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068930219 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.060816302 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065192423 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.060829907 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070286536 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069061067 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066929286 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073898886 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.062631726 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.062124674 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068944608 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.061278135 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.061621232 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.062493513 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068297369 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.061831298 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067590121 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063994384 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067037554 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063565009 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059680302 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067062558 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061882069 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06666274 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069838506 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.060905939 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067137239 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.06825013 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.061402219 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.204028214 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067531543 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065982342 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071062946 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069202691 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068516142 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069145093 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061615543 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074409483 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.063004339 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075082202 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067761613 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.060038847 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.067631152 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069055079 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.066341465 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.063343564 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.062611072 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068073906 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.061764383 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069838139 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074403596 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064204887 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078671916 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07389467 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068575107 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069239239 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067798151 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068419952 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065604812 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067935458 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.063088912 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068254462 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.062631039 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072432779 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070353313 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067635926 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069426874 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.06333138 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06849036 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.064261181 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060526347 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.065632835 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06584809 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.062532188 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074955165 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.063711525 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065995129 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.062400905 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.063570737 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.062511497 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.060518865 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.069216221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069405848 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.063525349 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073406344 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065715974 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068632527 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077690302 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060205133 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.061826281 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061014869 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064422098 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074967515 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.063482431 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075727217 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067923334 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065410659 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06057296 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.063775572 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.061443529 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060818955 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.061003901 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070903812 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065475143 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061825506 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.062635381 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069766439 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.063346564 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074808562 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.061940379 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066826049 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.06286467 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060380829 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065634384 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065431057 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069578847 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063169614 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064158717 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.060642436 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.062348499 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067024098 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068812399 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.062100277 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068721618 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074926587 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062195655 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069064377 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.064682724 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.060529897 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069484936 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.062064453 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.062407212 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065064157 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.070111285 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069929224 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.063098085 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076269503 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065491432 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068867725 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062428839 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.061009471 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.062503374 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.062363984 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06264375 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065212681 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.064103314 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075276504 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061015527 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068222873 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067588004 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.066193665 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072057658 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.062634429 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068500664 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066863711 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.063432811 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067772442 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07462361 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.065139646 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068980207 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.061640007 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066828914 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070823954 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063635081 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072767439 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067233036 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.062094274 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067028832 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062734929 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061531581 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.060743488 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060969725 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071205959 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.202170713 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065873418 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067001619 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.062347317 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068083291 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06565218 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076942148 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070068429 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069600138 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060886177 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.060432339 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063603567 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.06406267 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069101725 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069160094 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072613709 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069480088 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067079053 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.061555867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076857796 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072174764 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070161513 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064543386 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070522971 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.063451669 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069576367 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06743625 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067495164 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063187203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071323206 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.06833987 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064963619 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07214677 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070461707 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063369373 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068812159 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068952591 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068077192 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060622927 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.062506594 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069447641 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071107232 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069822293 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06227744 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077606914 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.06381593 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06804189 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064620229 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.062255471 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070604377 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061055629 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068338733 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063758239 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.063855107 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06079174 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065022762 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063831616 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069736659 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065119514 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060874352 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077676954 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076942416 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069193513 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062115331 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06138156 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061341156 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061022399 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066033557 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.063414266 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068147314 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076717255 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064949354 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064897081 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.061093977 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.062296484 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069658434 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070314816 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060603155 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.061542247 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065357679 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.068848333 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07526756 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.062095142 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.062509666 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070155019 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069002385 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.061181224 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064915789 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059999299 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070422349 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078369829 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.0631813 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068583098 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074282959 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075011195 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.063061965 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060817797 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.062891309 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068275761 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067690036 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.063495503 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06362043 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08109776 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07032764 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064645807 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.061368018 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069847516 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065170042 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075439673 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065431382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.063264205 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071658021 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068678282 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069241799 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072667909 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073200422 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.068921623 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068573707 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.061629385 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068206066 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.061377044 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065199216 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.062830735 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.06247397 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065862757 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.068504124 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.064738867 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076089305 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.075529 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.063930368 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059546907 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.064855625 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.064027147 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059991757 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.061658533 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.05985999 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.060121352 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.060233996 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060939934 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.067204668 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07051222 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.065718866 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062067554 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06088797 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.059008365 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.209729071 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070532421 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069796225 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060822349 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063441041 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.063625129 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070879836 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065801467 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064328923 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069174855 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068786899 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068566258 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061098067 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074729848 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.061819042 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068709711 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065493346 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.062906609 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.063764173 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07098036 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066595198 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064010974 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069928 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069517264 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064111778 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061486453 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060548902 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071761579 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061019715 seconds)
  done (took 41.756900737 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098139057 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.062339848 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061708997 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061697797 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071133902 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062358659 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061304255 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062553902 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062797678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.063975169 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061497783 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061038833 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068769645 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075209648 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070919371 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06540489 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061967063 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062434887 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061443031 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062268923 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068378048 seconds)
  done (took 2.750966851 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06887614 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.075476059 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07359583 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.078126934 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069476565 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066054698 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073220678 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065725239 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074288586 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070915561 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.073900457 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065552628 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.070999704 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071046123 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070590481 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066567395 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074144524 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070043974 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.066638879 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073326372 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066436925 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073008622 seconds)
  done (took 2.907735869 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.063083598 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.062533634 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068579364 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061033875 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062583617 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060776668 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.064669226 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.060930372 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.064303065 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064468392 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064247206 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065037905 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068250791 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060816165 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065847507 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.060819269 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.104637148 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.063927049 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06290821 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06270142 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061371289 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069090697 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061819179 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061617121 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064555014 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.064853233 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.062642974 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.060546877 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.061705883 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064211709 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.061974707 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.060584831 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068306545 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067715452 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065015931 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065065991 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.061405915 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06183668 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063414195 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06044282 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068270624 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.060771883 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.062592571 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068425096 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.060714425 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.060970805 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069109003 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.061965175 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.06064914 seconds)
  done (took 4.507468672 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.073065442 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10911948 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067600537 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090130454 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.074403007 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.068262672 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06646462 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091031498 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062212458 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06305806 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.075771137 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.075860456 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064184227 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.065669473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066413426 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064005024 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065709612 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063324006 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067553799 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064305827 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067290419 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.067817287 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.074651518 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.075160211 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.065315435 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.063202798 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063956307 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.065545555 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.074916377 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067648461 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.065614451 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066448443 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.075016978 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068307519 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063936645 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.064319639 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.075750493 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06435041 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.064657517 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.061931729 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.063759683 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.06568039 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.068316453 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.075833086 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064184982 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068819654 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064566625 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.061670036 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075206646 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.064056154 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.068868149 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.07623493 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.065455457 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06442322 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06562103 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.075107177 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064655062 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063561591 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.064830457 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07460205 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062570388 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065188856 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07591709 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.063650373 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.067799768 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.076159573 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068597336 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.065155614 seconds)
  done (took 6.184679669 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072373687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092439124 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077612684 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077547525 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071950772 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071929741 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072135194 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071898504 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07181302 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075777847 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071918674 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112208556 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068218106 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073813624 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072121603 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072081423 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071986573 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071957639 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07236717 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07243747 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071765498 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078291973 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072104878 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077584755 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.074973736 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06763365 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071422438 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071896009 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077765289 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072272637 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.074762003 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071679658 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071990959 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077911476 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.074741655 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071950933 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062910076 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071345105 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071737719 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.0722634 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067783422 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078452171 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072098001 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068022603 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071892902 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071887234 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078030016 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.074560135 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074144543 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076186528 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072191864 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078068987 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072240324 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072488823 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.078672799 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.080809155 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078179039 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078329151 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072528539 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077673732 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077991722 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.081016749 seconds)
  done (took 6.006816117 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078676198 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068235929 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.080250611 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06128574 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063223688 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070556184 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0607829 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061555109 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068927077 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.068881861 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070964473 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070778859 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072712566 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07033485 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071048419 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073032037 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070436876 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.07021397 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068762756 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070566229 seconds)
  done (took 2.773113352 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075070939 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.079752804 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066607497 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071457402 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.066011658 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070715738 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.066021395 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06610834 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066982239 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066637069 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071974405 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072122889 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066972953 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070637021 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.0723655 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071114534 seconds)
  done (took 2.490493385 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.082134126 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069440506 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.075604743 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.062828795 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066439273 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.061530212 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.061992564 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.060403485 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062021482 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075291852 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06291452 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.073679754 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.062550043 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061753629 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062195465 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.06748061 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.061543268 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06238887 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06218737 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.074370362 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.068611432 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.063198376 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066163892 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.062935017 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067642888 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069729485 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064482672 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065848236 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.061829585 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.062562081 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067861797 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069419214 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062260836 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.062917479 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.061152297 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062011142 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.061991204 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.062677401 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.067727182 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062448224 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.060499007 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06754858 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062490176 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063752286 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061536566 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063456688 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.061705163 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067695017 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.062703667 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06752694 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062567342 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065143625 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.062637983 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.069680004 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.064938349 seconds)
  done (took 4.95751428 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077070893 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067070358 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.060966735 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061132116 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083066366 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067307081 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066618663 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066773552 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066924276 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06097793 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066764132 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066101096 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067126111 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066719392 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067376068 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067284919 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061360198 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066610498 seconds)
  done (took 2.589851236 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071665779 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065695972 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.07133235 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.06670459 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065714014 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.066331212 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061771668 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061396305 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061420463 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065597479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065775319 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065199011 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061972912 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.065529024 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066250591 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066045941 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066389288 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061094177 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065708592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061206862 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06570975 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061119305 seconds)
  done (took 2.80560138 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094100184 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082960633 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137976798 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.079736126 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086789758 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071450558 seconds)
  done (took 1.931197183 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091448882 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096495303 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066726258 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066435664 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071405302 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069691353 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068982813 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069644001 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073854279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073863149 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069554289 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076701844 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073591717 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075242214 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071487953 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072006096 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069188443 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069300019 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066488026 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078408484 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069298036 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073609802 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069724992 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069408235 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069155467 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07560934 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074250159 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073899392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06917006 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07387446 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071444363 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06959968 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074041384 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074152024 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065900412 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073980417 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070010399 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078709032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071898998 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076515031 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066680378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072130062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073716292 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073438881 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073636214 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069664415 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073751407 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068946022 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069413574 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083689826 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071948983 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075481731 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071796842 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074248382 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073599044 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080005303 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074053969 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075446543 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072556254 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073842517 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075644595 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071596577 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075574166 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073958579 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071856281 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075383095 seconds)
  done (took 6.20846835 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101851958 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066759024 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070319184 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074435977 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075986646 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069959336 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069606407 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069704162 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069415106 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066542825 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103544203 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06964169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075884364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075619288 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069897648 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069736398 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069836049 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075894426 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067285472 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080383617 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069968607 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075409181 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075741887 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075621211 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074040547 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072218676 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069634546 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069583088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069650798 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069403027 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073177206 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069474879 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075739509 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066662623 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075636982 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069928803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069283495 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073385966 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069807852 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072053155 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075666473 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078878117 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069512 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069403088 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073949928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069177695 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069639969 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066541962 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070101511 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06659854 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074768219 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074165199 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074220154 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075467662 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069317894 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06951885 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069213968 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069498086 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069679502 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071829642 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075522234 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069224162 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079955165 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069248428 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069906004 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075432081 seconds)
  done (took 6.195724284 seconds)
done (took 127.332023167 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.207910733 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184479047 seconds)
  done (took 1.759945096 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073171935 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.102002681 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080808669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132810106 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070002985 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104247747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10432191 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.081457374 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070031037 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069394472 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069846382 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072349404 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135526668 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071568652 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069689161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0726926 seconds)
  done (took 2.769285504 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104407687 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.212500188 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.106896613 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068841542 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102289643 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075308291 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.07068402 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.081125674 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074714835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06990243 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075789645 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074016251 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069614142 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074289015 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.074242412 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075227897 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069689022 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076113064 seconds)
  done (took 2.947852743 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100397227 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091858023 seconds)
  done (took 1.592385822 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.17078059 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.131777597 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201976444 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.333679516 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.145008864 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.410958396 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.134027272 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.134030443 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.111828824 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.13110348 seconds)
  done (took 3.297050294 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102218419 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.193510951 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.291347952 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.118455698 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075167644 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105101666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120086983 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080846078 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079239555 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.078948609 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079040357 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076217492 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099466169 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074979673 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.074563525 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.076139541 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.101172095 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07362524 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074701828 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074882339 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.102367886 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068985523 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07484112 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.073092677 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.0766026 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076932754 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069752507 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068186773 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07436509 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074358546 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076980641 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.102474005 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077262985 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.10169264 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073202683 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.10295533 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075984047 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072880363 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074752524 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073668136 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075540478 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0764283 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077119385 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076140989 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070009444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076035779 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070157513 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068700937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.078847221 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070082938 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077994538 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077282939 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.101498692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069861629 seconds)
  done (took 6.125114706 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106094421 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104637454 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069716725 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110911964 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10191845 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069449984 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103702551 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097990823 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.105488873 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069354127 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067907032 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069867953 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076956557 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.079376615 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113530284 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105477371 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07174096 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069786153 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.106488438 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105859273 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068460746 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100665771 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096147576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105406402 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067694006 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069637179 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068211041 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070028619 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074536805 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.076104607 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069084229 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077074106 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082374257 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075487606 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068361937 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068003216 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068477941 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.07646169 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.077201165 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077129956 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.074738317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067612136 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06805908 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069107415 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068900534 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067559798 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075834335 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.076715888 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.075232813 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068157167 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069485488 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067943707 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068949011 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.076787863 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.074467414 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07696553 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077441687 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067888719 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068080332 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070417892 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076890817 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076431226 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076156666 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068975823 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077192923 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070945782 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077597199 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080903237 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068936 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069496454 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067918868 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069169536 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06967148 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075203525 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075189521 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069299343 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068553685 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06793145 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07734957 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07531391 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068914733 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074638316 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067795815 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.06773624 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069274454 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068806194 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.074098987 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.076405235 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06916321 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068013233 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068288657 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067644842 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067014675 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074389593 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076224672 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.0762827 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.075759774 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068785524 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076161235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.075289808 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069321101 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076180787 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067765766 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069355917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068427317 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07511381 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.073400688 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.07570652 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067817113 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067245034 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.073603727 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.076525312 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066965986 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.073063677 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075345083 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.073976104 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.066733032 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076336347 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067399591 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074882615 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067296741 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.211259822 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069460522 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077067949 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069295865 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06855148 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068983861 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.075910188 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069352412 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069355073 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069310926 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06949215 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.075854388 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.07928085 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070287077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07512692 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075737728 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069369216 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.075145885 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068512088 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077169652 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069393076 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070146852 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068165434 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079786094 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06873698 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068918275 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068818623 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077754974 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069301316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077375055 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075485474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067776003 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079127805 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077984376 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.074583209 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.07723629 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069872794 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068479627 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067919511 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068522838 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075246297 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076514469 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069709403 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068643077 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.075364421 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077307419 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067587192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.075432954 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.075442877 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.075557215 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068180748 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068556196 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.078576977 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.077627993 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.075440571 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.075220688 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.075693303 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068923257 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074815897 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.076332723 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068610939 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081689302 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068202336 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.080303569 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075871308 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074637626 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07619531 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077494948 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077590294 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077869728 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080764026 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067862816 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068202434 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.076160783 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068536132 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069216014 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07536346 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069833602 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069537577 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.080064187 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06852213 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077274472 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06773981 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076188471 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067508986 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069572059 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080448171 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068622129 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069377169 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075999894 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071227176 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.074748112 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077471977 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.075285898 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06784643 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069733807 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076236085 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.076178244 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068109858 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0677662 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069806258 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075129314 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075035377 seconds)
  done (took 18.243274559 seconds)
done (took 38.141631678 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210567476 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158366002 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.187635787 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118590481 seconds)
  done (took 2.167304468 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.107267379 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100124956 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.086969682 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064312832 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.093303149 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064761016 seconds)
  done (took 1.951955004 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.30304056 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208227254 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.18480784 seconds)
  done (took 2.128774422 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.209749378 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.197914902 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.457781835 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281703761 seconds)
  done (took 2.676097908 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140710219 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.081878466 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.063985005 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080944629 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.121877556 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.148309351 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.092633683 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117649915 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.074802748 seconds)
  done (took 2.419418832 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14691944 seconds)
done (took 12.943248882 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.195858391 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.317472678 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070113849 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.067900699 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073695279 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.131704781 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.249576926 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.227597487 seconds)
    (9/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066330153 seconds)
    (10/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074323871 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075304949 seconds)
    (12/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.179500385 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064620965 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.192874592 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.140617657 seconds)
    (16/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.174886102 seconds)
    (17/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118690079 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.199881162 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.214824581 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.216118295 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.099819313 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.165719712 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.07371268 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.123918272 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066289047 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073873834 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154274895 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.144877084 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076771481 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163498434 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.083421869 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.169928446 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.082969142 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064549378 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.207662512 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08866667 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074066261 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.182533963 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073056947 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.073221328 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073515395 seconds)
    (42/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071160504 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.064114423 seconds)
    (44/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155910251 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.223229384 seconds)
    (46/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.137841218 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141223359 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122514816 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.156800183 seconds)
    (50/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.171496615 seconds)
    (51/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065828152 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.183068778 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.178203911 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074330164 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.073611028 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066179689 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.163715854 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.136114047 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.167155804 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.088593718 seconds)
    (61/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164945515 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154529282 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 0.065752594 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065396549 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.072718026 seconds)
    (66/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.214142876 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107744914 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.133102134 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066435206 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.095510085 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.06568463 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073884789 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074977895 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.064466979 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152300681 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.064021238 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064505374 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.100548583 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20205844 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.194364366 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.134691992 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07465302 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075108232 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.089576326 seconds)
    (85/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070777249 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.064017987 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166598856 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070407523 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085613583 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.06285314 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.192167987 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.258796787 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.069575406 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.215708849 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.073639938 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066335288 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.064451177 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131540075 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.207391896 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.065901082 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.139970576 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1001394 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.159231501 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092445254 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129463392 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07899594 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078044253 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137404379 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071991835 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065501069 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.073500922 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.066836279 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07446143 seconds)
    (114/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.071348216 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.186856871 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066530126 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069362014 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.161302308 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.220818647 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073152025 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068467565 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.088847288 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.06563835 seconds)
    (124/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.073818677 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.065246707 seconds)
    (126/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065297372 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 0.130368401 seconds)
    (128/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065801382 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.064624867 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.132737226 seconds)
    (131/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064966337 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.077155518 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065211209 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082367084 seconds)
    (135/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073677441 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06610864 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074653477 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.112763428 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.065886331 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172267925 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093046862 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086918926 seconds)
    (143/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.094430582 seconds)
    (144/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140382491 seconds)
    (145/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119477531 seconds)
    (146/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066237852 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.064890825 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.077756281 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.187558679 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065278968 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073927183 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07454522 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.0738174 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068056056 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.064493202 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.072848305 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.084758148 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.064628404 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07305452 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.064371949 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.065815441 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.064750886 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.073682005 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089079668 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.071952217 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.064231532 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06390082 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.065529296 seconds)
    (169/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090551418 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.064225929 seconds)
    (171/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.136541519 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079045922 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.195232225 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.064448993 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.078220805 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.063949971 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139656377 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.06580358 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207212694 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.065748853 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.073206081 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066324662 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065024978 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.090700214 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066180216 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.073825847 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07701917 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.142398919 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063986632 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.088312742 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073557024 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.094371052 seconds)
    (193/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.071746409 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074804347 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.135736845 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.065760556 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08648881 seconds)
    (198/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.178819878 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.064729007 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092311893 seconds)
    (201/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072892084 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119263755 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089713368 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064695175 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066030374 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.106053037 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.076553599 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.06516901 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.163718587 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114881335 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064794601 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.063523832 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.064019986 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.064734392 seconds)
    (215/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066312566 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.088990144 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070915222 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064793905 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088602685 seconds)
    (220/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.064706107 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063401591 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064121006 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062815894 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070785124 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.06331297 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.063565613 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.063171201 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.11707636 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117219599 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.086028441 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074160602 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072729057 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113820626 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072780426 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071219132 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.133793104 seconds)
    (237/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.064878229 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.142210028 seconds)
    (239/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.065030838 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071477301 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072087524 seconds)
    (242/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.064361964 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.1338854 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075040119 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087696005 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085114361 seconds)
    (247/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064363077 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084170972 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.13330995 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.12413228 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.064931083 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064957033 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.1717472 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.062611636 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.06513413 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.067372447 seconds)
    (257/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062787342 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.069813494 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.064721804 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063781397 seconds)
    (261/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.063185368 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.088689214 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064568616 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.128471859 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.062337627 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.117704815 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.128228311 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 0.230814971 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.064630848 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 0.158877304 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.064214629 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063461031 seconds)
    (273/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.076860997 seconds)
    (274/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067773092 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.06382767 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.073028665 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.062826982 seconds)
    (278/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.066244915 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.068473321 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069544728 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063745268 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062753509 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070604437 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064192133 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.131885964 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064016912 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.062568319 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.062719208 seconds)
    (289/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063705533 seconds)
    (290/309) benchmarking ("sort", Float32, false)...
    done (took 0.127459117 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.063669311 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173750298 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.064481246 seconds)
    (294/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.069229482 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.071922261 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.064447362 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.073732796 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.064056543 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071977768 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.063819016 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.063578039 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.063401757 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.070858248 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071094476 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.064212989 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.066584299 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.063963291 seconds)
    (308/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063802892 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063323978 seconds)
  done (took 32.112821507 seconds)
done (took 33.567296621 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.094897598 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100351422 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076716506 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095270838 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083822084 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098094881 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077514558 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082524959 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.085033143 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083586862 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082453895 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.075811983 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.07875889 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078985644 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076722868 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100605882 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083753448 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077492875 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.077030402 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068298952 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077831197 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068475566 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068469598 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074913105 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080070503 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075921781 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077633919 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077077244 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068471319 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068301454 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073055605 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076850461 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067403156 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080599231 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.077233107 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075708633 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077175909 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079942732 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.066968006 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067414545 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076928294 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067422702 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074984569 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073688884 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071888555 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.073263983 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.074991209 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078903333 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096803024 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071522354 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076606213 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077525991 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.078354019 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.072082034 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072444031 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074595295 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.072576339 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.096208064 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075039593 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071159234 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075857104 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.075602402 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.072592444 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073964634 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.073894592 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077182398 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07817008 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072775117 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07670956 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.073228385 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065792676 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074158798 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071125915 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068713853 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077332992 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079585094 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065761836 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071089048 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074832265 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074661608 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066749815 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070274129 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.065856459 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071217018 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070825625 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.072067893 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.07122408 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074015531 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066015488 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075476342 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073924359 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074818249 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066802465 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079229775 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066533542 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.072293879 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067207721 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066539204 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.065808557 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071940049 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066259107 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070025627 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074903728 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.065536018 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071061798 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.079288875 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065963158 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.073208234 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066022738 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066225318 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.077206523 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076680403 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066592825 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070955668 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065932866 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072099933 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066000368 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066017938 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066358468 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065877645 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.070319653 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.06617962 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069711124 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071603164 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078248807 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065864348 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070468297 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069590259 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065862792 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072472305 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066171647 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066249945 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.065599256 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079348326 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069601841 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066377524 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07133115 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069936536 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.073487212 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06521286 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074704777 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072215902 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.070238184 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072283325 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065398546 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.076712806 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070688896 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069816674 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.065665701 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065850025 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06524616 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065858616 seconds)
done (took 12.943088005 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069055954 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.115070784 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.090048224 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.091814046 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082087774 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067331982 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073696068 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.088479368 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069061342 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.094398387 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088358593 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08703337 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10706658 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06581756 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067180204 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.067561086 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068462724 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.076762449 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.091836856 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088764452 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.103506205 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067148224 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.083723291 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.085760515 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.082253433 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.088706084 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067902374 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068123825 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069448426 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.085665945 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090586277 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07013517 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.068136068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.086372579 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.083660423 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.078092157 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067891621 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07374537 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067678629 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066641547 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067724808 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.084624226 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.073755292 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.076421197 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.067864669 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.074870165 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068304997 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.081122147 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.082973114 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.074078554 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.080321061 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.088545588 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069324812 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.081509616 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066005339 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.080668318 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.07456936 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.067226849 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067123494 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072029845 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068013366 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069158419 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.075893141 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.073741474 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070019505 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079539593 seconds)
  done (took 6.697289702 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086322927 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094126645 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082583538 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083025268 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06649135 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067288994 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.06772349 seconds)
  done (took 2.146782112 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067764731 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088409572 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.090459413 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090729989 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.08256445 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091322612 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075388076 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066834458 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096603156 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.066451465 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087521211 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100729356 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070793373 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077733818 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092287987 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066890416 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091710433 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066972631 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068146323 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091370234 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071065495 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.093460191 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.078475853 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067783134 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079605705 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067253088 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118080316 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075647158 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068676988 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.068602069 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06879706 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106911768 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079221331 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.080789246 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068291333 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081254663 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.079968248 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070229524 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.077325482 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.076669908 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.079755053 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068439653 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.066244053 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068890241 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070399379 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077819855 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.065729402 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06869958 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068091659 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086797037 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.065594455 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079009851 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070475645 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072687962 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.07298336 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071534715 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.075693428 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.06872056 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086947125 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068261222 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083808686 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083089959 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079738438 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083199347 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.066996443 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079262533 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.079499802 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.068059522 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069214446 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.068961498 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.082943511 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070469704 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069106918 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077937094 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.067032581 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09186335 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091721178 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066936225 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080032566 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067804803 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.068648677 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.078440497 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09202308 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071945447 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068383037 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072715108 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069322861 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070491804 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066700729 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071684243 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069526946 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072614998 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068257728 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.071345732 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070307731 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084095972 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066681935 seconds)
  done (took 9.00599394 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069388818 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06832982 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069393939 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068064904 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068294717 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068766598 seconds)
  done (took 2.046638726 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.089975378 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068236712 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081174394 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.068365943 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106947823 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.082666236 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.082614882 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076455175 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080257383 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079295754 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.081917428 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085094222 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086233346 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.070037431 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.082310911 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068822346 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.081957178 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072144377 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079300663 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070568431 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.079783758 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069561213 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070141245 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086271381 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.071120259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069266204 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076384264 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079514243 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078704474 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076634411 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069792951 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.071225644 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075358078 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075935433 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.081896238 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077741139 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068200195 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.073591158 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069885848 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.070997283 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.084738393 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069692255 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.069895977 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074416345 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.076456062 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075020664 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073761678 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075228218 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.081198257 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.073478489 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073408437 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068544728 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.071344929 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073817967 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075588269 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076261774 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07356394 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08188324 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069573584 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075458501 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.067672042 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.070496736 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075537773 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.070527629 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.074798875 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073253856 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075039785 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069778097 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070413898 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.067729399 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.073785903 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067461898 seconds)
  done (took 7.034539076 seconds)
done (took 28.55135712 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.515341922 seconds)
  done (took 2.093506398 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.622509174 seconds)
  done (took 2.239294851 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.585426813 seconds)
  done (took 8.200317479 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40192666 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.475096942 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.750061679 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.133004568 seconds)
  done (took 3.400560148 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.702626793 seconds)
  done (took 2.322783826 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.239644251 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.228327865 seconds)
  done (took 2.095232185 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.343696426 seconds)
  done (took 1.964996757 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.06460272 seconds)
  done (took 2.684050137 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.250602991 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160418801 seconds)
  done (took 2.039452519 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451864787 seconds)
  done (took 2.076125442 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.235850357 seconds)
  done (took 5.862452464 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.238766723 seconds)
  done (took 1.906620707 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.232454474 seconds)
  done (took 1.867597493 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716166893 seconds)
  done (took 3.341148867 seconds)
done (took 43.722581859 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082496336 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084968444 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084556592 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081768554 seconds)
  done (took 1.939409536 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.074733087 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071445541 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075336731 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.070773714 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.074724792 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071216432 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.072785223 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073343697 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071592468 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.070958105 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.070674256 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.07128202 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073207489 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.072389449 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.06969643 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073981559 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075200434 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071044237 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.073686001 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071296793 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069105918 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.07377969 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.07411954 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070489191 seconds)
  done (took 3.365924091 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079183913 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073750759 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075581162 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07155793 seconds)
  done (took 1.938652697 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077169754 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088671363 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.08635104 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077591861 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.089118126 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084067541 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067562913 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067357701 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.06866807 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076552351 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066818359 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092899075 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087317657 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077502929 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.079186002 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063337861 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065570754 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085749062 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077574629 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078288884 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069283439 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07794271 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.066088599 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087044215 seconds)
  done (took 3.49672106 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.084735167 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.066330418 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.083993419 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.092543146 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092780404 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065944424 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.083632745 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093800754 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.137860167 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.066275026 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.07266707 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066460159 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.104210214 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066382037 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083044645 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109755857 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113603945 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070256127 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.098391176 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066914346 seconds)
  done (took 3.366496197 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.083017098 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069810049 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.070829391 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.065979418 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076060496 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072745558 seconds)
  done (took 2.084620147 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068916004 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068003692 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067687747 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067048578 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07197935 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.07049718 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065947 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068548945 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068214293 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067785567 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067618971 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066131782 seconds)
  done (took 2.45510518 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.162091351 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069823062 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071052173 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066631359 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071675268 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066193305 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081605934 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068891617 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.08523994 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066581218 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066778009 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069231909 seconds)
  done (took 2.583080018 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184490259 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073597205 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217235097 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1449705 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09966264 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108202434 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109414835 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108281773 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.130790509 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094222475 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149503538 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157946148 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101937368 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125281354 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08687039 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121762068 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137103981 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152216191 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098395699 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150582084 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131587716 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118406313 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136261446 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095884782 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09774108 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112313795 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071588113 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075428054 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154683787 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121313288 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13045159 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103153857 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086227247 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163334175 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152032217 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127923849 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138248001 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080237506 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.115041411 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.124800232 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188178937 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086225417 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14724729 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103332906 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077490247 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120940512 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108856095 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112740211 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.096743006 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08587919 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274463708 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166886157 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.124491091 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082196119 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114841906 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101276611 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.104376441 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110191597 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165156717 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145183012 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117523292 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069805607 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104243439 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137881003 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122086973 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.101523372 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.114158591 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086406605 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122038374 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143345243 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121714441 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129177264 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111223815 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083666945 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111426515 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1281135 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115351981 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155896425 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112932572 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070964199 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110886041 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091974439 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076896823 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141521369 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073120816 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159408657 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09456436 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1173552 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122667524 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103935929 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103169924 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142231851 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130705706 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099257845 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083257172 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09774072 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.112095966 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130669941 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083395116 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103496981 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106089308 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076401176 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121167432 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072384954 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111228174 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091855243 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112997888 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117058654 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076545793 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263538423 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098965959 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097465347 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121542718 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14406428 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08319942 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076942618 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150309605 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112609459 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.096670189 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132838968 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144576006 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116958777 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094048709 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131494607 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158218037 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08661648 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14595118 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096173651 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07976372 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.102044501 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112253061 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104154012 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.115724865 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07749346 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.109024305 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149161947 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071437035 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091498497 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121900521 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078519423 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077297953 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098173665 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097476328 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.0920424 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.09603544 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.097341473 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123882094 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11334363 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098874061 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114617586 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091984707 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151058273 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083592502 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.097804752 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099276038 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070292311 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.123013535 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140484446 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.074527635 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147401818 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114916704 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109797155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11114522 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079963047 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128928054 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076139465 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070400788 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129848449 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105862305 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10312405 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.136837743 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.260646736 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.115450798 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.110175995 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118531265 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119345363 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.119258417 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102582416 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086092712 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107467726 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119269778 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070576726 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.08639983 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.07924248 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098323926 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088791929 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081008709 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127851334 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114375532 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103915446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106485927 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091811309 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135779415 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075446451 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115683516 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.113423128 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090867261 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.140209887 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137501988 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121306203 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095997162 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126379728 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.071312759 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071737999 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.082818503 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115787739 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080784625 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079729567 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104646981 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13691027 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119178863 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122200407 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115736261 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111901054 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144319864 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.071059249 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.115547098 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132690959 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111547927 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.099709539 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086117184 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.093543474 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130533359 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096917092 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166982833 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106322281 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115033675 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144505252 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096575532 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.074935914 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098261942 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120618463 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093220932 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.282828121 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094347497 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082726662 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100714917 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.075430909 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092702579 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116723084 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106677753 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125402605 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.105367002 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118947343 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075696627 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103267542 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113172014 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111303731 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081327143 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110554713 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15180014 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092359447 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109539009 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137879405 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075743415 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131422034 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156814577 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132001343 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080508677 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096637234 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111914284 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116659744 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110425334 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129331767 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096240824 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126478244 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104563011 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084116445 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082965127 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091492343 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098246356 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106884402 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.097456759 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.105296333 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091483553 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121276513 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095701922 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103872339 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109823542 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09667801 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.093452951 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092159409 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158369091 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108829864 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155110113 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094843786 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.131380055 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148809209 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072470134 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075707895 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077180154 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128899997 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080977511 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117475884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.257550832 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109603368 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112252948 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127088302 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091264735 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069590919 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102451022 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12020517 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114621544 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091285009 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.095210408 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145771495 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.112726241 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.075613603 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106996193 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109442647 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098013725 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158908475 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.078743014 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103303667 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07432032 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076467321 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.116593034 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138753904 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083371316 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.099984519 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111131174 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103114383 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116630391 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0907019 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1042992 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122839114 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133587657 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118248905 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.085210002 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104851471 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119554341 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140459335 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09792173 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.09565933 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157080585 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137364361 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.145502177 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.082188427 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106739873 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106012688 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102472508 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123457262 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080966126 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147929413 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07846441 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124945208 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094967962 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08496026 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11749404 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.106998015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084340458 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133138016 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107072731 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078503292 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076750794 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256914732 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110290298 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096524746 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072365143 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12770647 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072026656 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123227906 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154260718 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077039265 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099020157 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091637586 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080096252 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09691031 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096314423 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081942604 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095292086 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154648263 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.083649024 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135387629 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123228219 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104725192 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.126770987 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097938731 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.638484264 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076908509 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137289961 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106818415 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162269002 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094395271 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109633076 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103647728 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109988143 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130116465 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095900464 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175502705 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120958137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.108409306 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.075597158 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096700939 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096942983 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084130871 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101882174 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105830617 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103887739 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089831942 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.107661667 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112047438 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.07945129 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090898564 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140548973 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107256522 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131476074 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129973601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080458043 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109611307 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124201544 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07620139 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.111149984 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138147894 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.251357545 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094960486 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080402605 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.092517445 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156833493 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.070808992 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141351162 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110558127 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103405243 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106175124 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101416802 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119132433 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09586836 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111825069 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087262164 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.102289891 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105131821 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080673325 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077115233 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099013242 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102940508 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.093278124 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091149519 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094347197 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136319646 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.069524043 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091882387 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107184255 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128871671 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156151797 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.101950456 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080329448 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109304156 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11005133 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.104792708 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111128683 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.11436059 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077799264 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.077675044 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.096913383 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118179033 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104940418 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111559197 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103673735 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148744612 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.080650046 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222742596 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09110441 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098715888 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.085152194 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077705442 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091686695 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090265521 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097304435 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105795723 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157658229 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.090254498 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.085710914 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087238591 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072829881 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08020255 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116526235 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10522651 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108684034 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097558742 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.07929915 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096750583 seconds)
  done (took 55.430982809 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.105394184 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.077122928 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097554784 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148101667 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122460076 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199599861 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.150829748 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18809079 seconds)
  done (took 2.872153543 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067930066 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095144225 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101324704 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081984139 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.067020607 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067699651 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.230823173 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080683569 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066903739 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.092021273 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076332738 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068613107 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422582371 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066514093 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067581439 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.075157541 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067580288 seconds)
  done (took 3.536510217 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.381048088 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.596042421 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.364497858 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.075431659 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.875872167 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.092615289 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.154491658 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14017976 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081436863 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533640328 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.368812771 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131193478 seconds)
  done (took 18.551732962 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.080781282 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078495194 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088939232 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.088631778 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.078599699 seconds)
  done (took 2.166327774 seconds)
done (took 105.453234941 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081055737 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.192364175 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.067181449 seconds)
  done (took 2.033148381 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.090317704 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087721874 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.087727428 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.085569771 seconds)
  done (took 2.101993251 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074102219 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.076477935 seconds)
  done (took 1.8937354 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232833869 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172845745 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.094966925 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.082448584 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079671501 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080448793 seconds)
  done (took 2.004178384 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.072451455 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.07258934 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07264447 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077155071 seconds)
  done (took 2.046710671 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.070166065 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06685559 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.068875861 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.071823149 seconds)
  done (took 2.030909665 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.083768653 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.084319647 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079485365 seconds)
  done (took 2.001093075 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102174613 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.094019189 seconds)
  done (took 1.948476684 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080683377 seconds)
  done (took 1.837914143 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.092841403 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101753519 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.129358489 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.111787763 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139405396 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.1170713 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.082337514 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086693199 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.07753254 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.083994293 seconds)
  done (took 2.775890993 seconds)
done (took 23.009280542 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07779919 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.37288858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360715116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.09009679 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670353242 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356609713 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.005874631 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091862759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108027796 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068584331 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085688665 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649509476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.996281186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.330550041 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.986724366 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326779815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652791922 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068750892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068043984 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068664993 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.991196204 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06804655 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068926777 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068716013 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648528682 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372838106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069577682 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327338886 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068750193 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073005753 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358273363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070313567 seconds)
  done (took 16.354557347 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070870709 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121097259 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074112034 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084934806 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070249549 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070038041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071604356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069114681 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117990354 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069573115 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086186996 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068204122 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072842969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069557247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08930789 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068419265 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071010853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070255987 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069615046 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070762994 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088666747 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069711567 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070372492 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069958034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070082679 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083201238 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0706941 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069352214 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06957312 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073191011 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.073997263 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071386113 seconds)
  done (took 4.208396637 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116387549 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124627223 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075027388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107023058 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11655304 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070226443 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.14593209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09310278 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120460976 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069541481 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086887879 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068755005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.102791674 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070978117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090305037 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.069909015 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072317528 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069566351 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069548855 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070112308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088691129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069542138 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069987169 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070681754 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070379093 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084291742 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071219081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069777432 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069966118 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073581191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075051057 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070884093 seconds)
  done (took 4.471066709 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.070290041 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.072826362 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.080676892 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081345362 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068084485 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.069931613 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071405481 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068405655 seconds)
  done (took 2.362754122 seconds)
done (took 29.169828072 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077722127 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068084956 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071357558 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.0871346 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073702952 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079196082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.065474414 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074699369 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072261363 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071729205 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076025776 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067052029 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070589867 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.065254344 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072142973 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.066466807 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079982369 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.070640357 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078840412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079775804 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069252085 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073208414 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075224 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.07924785 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079205855 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079378529 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076529163 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072765123 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068232475 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070485842 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.06933617 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.077677496 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.081003947 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081325809 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067332084 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067657859 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071838885 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070074344 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080620507 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07632175 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068810473 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076123437 seconds)
  done (took 4.843475994 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083052512 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087741148 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.080923501 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.078581185 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.096572078 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081140276 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.084630083 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.076848382 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.077792712 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084788701 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073404239 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.08082727 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078490646 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072670729 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076672217 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074702 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078921274 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07338507 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076892911 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077768719 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085874475 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072391967 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.085955365 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079480774 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074582222 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.079934314 seconds)
  done (took 3.852390141 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073375821 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085274704 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091644367 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.142941583 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110003348 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.085451374 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081307652 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.09290504 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09595264 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068147138 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072494046 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092328937 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09236704 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07396297 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.110055037 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.08317105 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.083184214 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069665099 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075262479 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096707318 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088724868 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.085220914 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093936184 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084503944 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066929713 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069779999 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072296757 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082185045 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.069719672 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07856557 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070064533 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071937303 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068163708 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077577806 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070346668 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.067313745 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.091079441 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079248897 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080942191 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105650607 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077781957 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069156511 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093193532 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127268821 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067257588 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071044923 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.0708902 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079597083 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067109452 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094742928 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079708071 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.0678498 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069234664 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066955628 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067309365 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070181413 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.069328317 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069775251 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077852344 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074535347 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.08915388 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.072551434 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086427189 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067036565 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077677914 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067009791 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.06875146 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066996885 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095706609 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069354943 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110737536 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069278898 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.066462812 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078743763 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078802798 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073577674 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067301882 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086158088 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.078101481 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071631603 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076258472 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070431653 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070923209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.097931962 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.067877325 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.06829698 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067156323 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073461906 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070939782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069153006 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079558632 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067257395 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.071390646 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086864277 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.067882852 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068188223 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070926455 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.069722738 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067070907 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078136873 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07173679 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068643162 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078172629 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068769202 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070871402 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081146187 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075096606 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06661329 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069875612 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.071250914 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069537598 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069183352 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070887476 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069863874 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075028892 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074309816 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.07346928 seconds)
  done (took 10.888567348 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.164599941 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153958139 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069732787 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.152254739 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07623355 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080373632 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.149238654 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09591471 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068750206 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069550856 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068466069 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.107818393 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.103798013 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114746461 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080273312 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068764768 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.093639242 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113051454 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.151244847 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.147932829 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09071349 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075874208 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.071068959 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070184939 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070142515 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078210318 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084927294 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077889624 seconds)
  done (took 4.56795505 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.077194664 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103313249 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072995485 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091055074 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.087027483 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069409435 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070320625 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070354618 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.08481564 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077039167 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069070762 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073903284 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.072307 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071413679 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069571542 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074607451 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07580296 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.067796451 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.07223885 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.073848281 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078593412 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092891364 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07386157 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.068921664 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.071444238 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068346291 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.076116932 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.079923391 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069222763 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.103657522 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066616522 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073080517 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082018426 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069324209 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.0679088 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068657672 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.068466159 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068536246 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068773305 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067256092 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067449342 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.072095967 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.06768241 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076632365 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.081529754 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074579888 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069829048 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.071520046 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071359474 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065983057 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071267247 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071754806 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071068678 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076455804 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072230892 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071565901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069078512 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.094175399 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074540986 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068172224 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06810326 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06713919 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070709941 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.077282945 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.0836292 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.070865453 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067377637 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068630444 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.080430006 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081694078 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068086716 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073215529 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066402179 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069489891 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071442944 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070909024 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068932358 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.06708829 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068366423 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068603359 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.069159971 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.068803705 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.067797309 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070972342 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067086723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.067106806 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.06852013 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072802794 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076573939 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067619416 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072074118 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069448121 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06725302 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070836102 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.073975509 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071728019 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.078821853 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.078775179 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.069118639 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.067017158 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084806719 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071445439 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071102672 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.073601339 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073169351 seconds)
  done (took 9.505666648 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08994939 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069377035 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084485521 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090581164 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078199431 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.073301089 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078832863 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068159643 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084502777 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073352597 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077060827 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.066960372 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079682593 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077880129 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06872614 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078934287 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071025125 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088495522 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083316318 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066524231 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.0771625 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080694592 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080386952 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082878805 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082274916 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082849148 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.080005114 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.077682695 seconds)
  done (took 4.032487115 seconds)
done (took 39.466562069 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.893536208 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.03729498 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.86150668 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.037412997 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.123855372 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.982971688 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.952778057 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.855224874 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.90561602 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.902819675 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.188908109 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.332108987 seconds)
done (took 66.985523904 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.888394426 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.007806199 seconds)
    (2/2) benchmarking "String"...
    done (took 2.124307816 seconds)
  done (took 5.926409212 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.091311467 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.524818928 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.122758079 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.858979475 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.86451327 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.287558873 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.62542685 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.301690555 seconds)
  done (took 31.379499645 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.992225914 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.078139295 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.548870088 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.582991434 seconds)
  done (took 16.037911574 seconds)
done (took 65.209787727 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.868118269 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.857369862 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.882980665 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.889075462 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.863722417 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.861971717 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.862352813 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.861459112 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.885406731 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.955631144 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.858909329 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.865418758 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.861870063 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.881229281 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.603880345 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.920452988 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.864934069 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.864237904 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.862735648 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.877783386 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.865837939 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.86414385 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.292030628 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 2.045045435 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.47580272 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.20821707 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.313812144 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.254469344 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.865660453 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.858256486 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.906528955 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.16451223 seconds)
  done (took 207.158321091 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.859192288 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.887135672 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.965301584 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.898614648 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.324315233 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.042028748 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.962910488 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.363601076 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.86554953 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.870825686 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.064851822 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.860231666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.085274872 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.804745687 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.898145348 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.868836873 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.017146132 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.08997229 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.901404085 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.02468395 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.876162992 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.922993807 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.890455754 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.044058449 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.884529576 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.955285855 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.890405073 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.889158484 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.053921448 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.999508049 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.870858907 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.904732918 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.026600786 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.729622927 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.874977876 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.880344314 seconds)
  done (took 173.145053546 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.054217242 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.863309125 seconds)
    (2/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.865811043 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.861455349 seconds)
    (4/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.91279682 seconds)
    (5/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.984270189 seconds)
    (6/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.864293431 seconds)
    (7/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.499186423 seconds)
    (8/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.867958288 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.493057273 seconds)
    (10/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.866420023 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.863587083 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.860898267 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.861685247 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.872392715 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.942765467 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.863318777 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.875867842 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.863500858 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.886524157 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.866297959 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.862313225 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.862735391 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.861043437 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.861360842 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.860671767 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.861554872 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.072005145 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.102379606 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.863645551 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.861893708 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.357608515 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.876494398 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.008662278 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.864681422 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.954666506 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.916716982 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.976226297 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.867434577 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.862641993 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.079470755 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.938015582 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.864379951 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.863965665 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.927642217 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.875809967 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.866206968 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.865436171 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.868088497 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.927993533 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.104188053 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.863168106 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.984978668 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.341056535 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.865312816 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.863917267 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.863006762 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.436335043 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.867009864 seconds)
    (59/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.864983607 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.869013329 seconds)
    (61/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.870463283 seconds)
    (62/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.863609666 seconds)
    (63/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.862536773 seconds)
    (64/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.251826699 seconds)
    (65/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.934931699 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.890271518 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.121322116 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.865863962 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.085709923 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.096184643 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.864064562 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.863641628 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.86368362 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.867999294 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.865036199 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.867419003 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.987510709 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.87535404 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.986953755 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.946319679 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.865693615 seconds)
    (82/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.986964274 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.868850154 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.873813401 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.690199841 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.937382277 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.897713328 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.68838108 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.870531768 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.238036436 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.62754079 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.866159583 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.865927587 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.878478732 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.867002377 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.867388017 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.866750959 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.946178569 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.869266718 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.989998862 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.589943093 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.074998003 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.866481327 seconds)
    (104/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.867418449 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.866231301 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.873090336 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.949005329 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.990408515 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.869416506 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.932273926 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.87263054 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.868772518 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.94867843 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.866707014 seconds)
  done (took 410.233761831 seconds)
done (took 794.439370944 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.493221247 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.474657903 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.558776728 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.479380166 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.454279994 seconds)
  done (took 14.262512416 seconds)
done (took 16.06260079 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.944901347 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.951887094 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.888251049 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.948166232 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.883000182 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.947994921 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.933708037 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.889772441 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.914513241 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.889566959 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.918284565 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.888952574 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.878276709 seconds)
  done (took 26.679186505 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.132508082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.105788306 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.935580867 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.096162506 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.907866806 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.099991105 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.028414812 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.013883212 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.019124413 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.877719902 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.876238952 seconds)
  done (took 23.897460934 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.103815813 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.107685959 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.937748038 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.102809471 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.910395776 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.100487015 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.029889642 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.021425403 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.015759592 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.878529061 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.876064579 seconds)
  done (took 23.887917476 seconds)
done (took 76.265789238 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.872832009 seconds)
  done (took 3.676165078 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.890395904 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.043228712 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.871478884 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.871079938 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.873872858 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.870687493 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.871697384 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.871902807 seconds)
  done (took 16.971052304 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.874013202 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.872717403 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.872924836 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.87493927 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.873383566 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.874748452 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.875026822 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.875435735 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.876379138 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.874091601 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.873956967 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.873341096 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.873677584 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.874145386 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.87421193 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.875559432 seconds)
  done (took 31.793368087 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.877717385 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.8743324 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.87524197 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.874526719 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.87375185 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.874105007 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.875378078 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.872834619 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.875071479 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.873656105 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.873952094 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.87515321 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.873593593 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.874096671 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.875954049 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.874958961 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.874505745 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.876110464 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.878101612 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.874467362 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.874286695 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.87536575 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.874129795 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.875809934 seconds)
  done (took 46.809261889 seconds)
done (took 101.05317236 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.614938796 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.697245889 seconds)
  done (took 10.119566115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.879713617 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.876231422 seconds)
  done (took 5.638919442 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.875811564 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.875471632 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.874392878 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.876202312 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.876111608 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.875573126 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.876734598 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.876098022 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.875347956 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.876670397 seconds)
  done (took 20.565803964 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.876204363 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.87600278 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.876532558 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.877048329 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.877083261 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.876915777 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.877787167 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.877427449 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.875746769 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.87654238 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.874915238 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.878947323 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.875911355 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.876824618 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.876988594 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.875786664 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.876080895 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.87802002 seconds)
  done (took 35.588689701 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.877766072 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.875973708 seconds)
  done (took 5.561999994 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.876664293 seconds)
    (2/7) benchmarking "second"...
    done (took 1.877049747 seconds)
    (3/7) benchmarking "month"...
    done (took 1.877044928 seconds)
    (4/7) benchmarking "year"...
    done (took 1.877631255 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.877026077 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.877599323 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.877309144 seconds)
  done (took 14.948781307 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.878388767 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.030428136 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.091182616 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.542420766 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.8795205 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.881090915 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.778168321 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.880427913 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.881434219 seconds)
  done (took 20.651949038 seconds)
done (took 114.882058213 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.738312333 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.877613428 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.15865955 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.942586405 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.950253774 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.215878814 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.895169241 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.14307706 seconds)
done (took 43.730393786 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.906129238 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.440494994 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.468262064 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.696955205 seconds)
  done (took 13.415010389 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.875898992 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.213488726 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.896603858 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.698706512 seconds)
  done (took 22.521405027 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.238845401 seconds)
    (2/2) benchmarking "read"...
    done (took 2.224552844 seconds)
  done (took 6.27777896 seconds)
done (took 50.930315334 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.878987887 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.878581295 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.878619075 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.87883602 seconds)
    (5/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.879155268 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.880370157 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.880300866 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.878280691 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.878334216 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.881708025 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.879850425 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.879626454 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.88013766 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.879456812 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.879722319 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879947164 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.881836927 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879623296 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.88090496 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.880417497 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.880147578 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880011415 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.880894666 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.881427975 seconds)
  done (took 46.928549142 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.881599879 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.880648213 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.880759891 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.87922085 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.880022347 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.880770011 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.880161439 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.879714889 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.880798622 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.880656562 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.880898709 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.880615472 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.879295877 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.882239856 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.881554329 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.881469084 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.880394598 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881275383 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879184496 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.881647133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.881730501 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880713737 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.881503642 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.882356088 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.881620185 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.881067016 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.882563034 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.880131975 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.880664511 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.882254874 seconds)
  done (took 58.239613316 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.881533909 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.882739597 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.881250948 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.882937735 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.882048673 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.880737112 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.883740197 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.882561316 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.8828823 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.885021285 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.882216791 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.883110142 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.882959229 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.882463768 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.884519542 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.882994836 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.883166865 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.883894179 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.882245769 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.884296936 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.882316561 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.882582609 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.883372227 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.88279893 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.882257152 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.883350396 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.883654182 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.882951554 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.884089803 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.883560659 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.884032659 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.882891329 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.883447754 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.88482191 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.884646304 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.885293707 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.883929353 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.88400025 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.884361101 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.88530626 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.884719072 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.883672064 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.884874843 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.884687463 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.884875302 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.88500025 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.882704898 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.884709109 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.884226233 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.885198888 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.884205328 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.883847307 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.883797493 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.884287034 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.886040711 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.885656574 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.885387378 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.885659507 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.886892085 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.88509738 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.885177139 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.884707451 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.88558439 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.884506374 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.886318591 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.88601787 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.886506226 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.886732204 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.885334577 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.885605673 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.886497558 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.886145244 seconds)
  done (took 137.470493782 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.886125904 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.885892681 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.886649521 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.886024017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.884905604 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.887864051 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.886417232 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886657809 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.886344753 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.88762741 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887624262 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.886272283 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.886879811 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.887943025 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.88602931 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.885018462 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.886671541 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.888326649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.887636022 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.886954313 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.885994684 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.88627847 seconds)
  done (took 43.322937285 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.886293848 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.887803279 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.886026804 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.887216447 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.886492208 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.887850417 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.887879846 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.887985383 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.887210548 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887515585 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.887717583 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88571843 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.887021886 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887386158 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.887850854 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.889008252 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.887011295 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.889254083 seconds)
  done (took 35.791852752 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.887923927 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.889902458 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.889641896 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.889630087 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.888612019 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.888531316 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.889507996 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.888968988 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.888024489 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.888149055 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.889481704 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889045441 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.888967516 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888712791 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.887433864 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.89030338 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.888887335 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88833095 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.888991295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.889994475 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.889529728 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.890392031 seconds)
  done (took 43.378293456 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.888204199 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.889389885 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.889530003 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.889857446 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.88974518 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.889576643 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.890495304 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.887803962 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.890865661 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.888400707 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.889428367 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.889519293 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.890011641 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.890283901 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.890554591 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.891376362 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.890353178 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.891192332 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.889793135 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.890908812 seconds)
  done (took 39.617704705 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.888340192 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.887753019 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.888846191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.888553212 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.890491397 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.886367962 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.885239433 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.888997149 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.887227604 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.889162197 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.888159269 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.889398115 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.888590651 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.888467898 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.888003815 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.888275848 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.889921397 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.890231842 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.888469264 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.889010091 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.88926557 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.88999958 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.888577187 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.889150841 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.888383503 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.889497423 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.888468181 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.88934081 seconds)
  done (took 54.703338735 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.891831273 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.892269641 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.891582974 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.892136028 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.89178634 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.891430603 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.89108141 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.891480161 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.891733802 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.893321937 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.892661729 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.893073233 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.89336318 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.893377207 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.892461612 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.893507489 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.8921519 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.892127513 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.892052985 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892434657 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.89346554 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891720278 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.893864879 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.892397953 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892578542 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.893031525 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.89378605 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.893982349 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.892698031 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892083136 seconds)
  done (took 58.598673112 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.912807503 seconds)
    (2/2) benchmarking "in"...
    done (took 1.914263121 seconds)
  done (took 5.648116394 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.893352657 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892828773 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.893954044 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.894905435 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.893175614 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.895597703 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.894259139 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.893478882 seconds)
  done (took 16.975302626 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.893376513 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.893196214 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.897325555 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.895429158 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.896316573 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.895004414 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.899964005 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.894343149 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.894175024 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.893844624 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.89989981 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.90332559 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.896325479 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.891664434 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.893240556 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.896483499 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.893877891 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.895291116 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.894379639 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.895798563 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.897107764 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.896116007 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.896450347 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.894430379 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.895363537 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.901485631 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.89857744 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.896013412 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.894532527 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.900123006 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.894916528 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.897536657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.896453906 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.896870405 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.896325652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.898219455 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.90164997 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.895741459 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.898872487 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.89724343 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.896146003 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.897564034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.896845314 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.896410411 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.896874969 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.898888281 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.899072195 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.900043187 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.896703719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.898068601 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.906370075 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.896560434 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.89707 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.901431736 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.897685033 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.902527576 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.900343627 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.89827321 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.906787499 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.907187761 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.907388974 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.905474948 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.898821769 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.898903716 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.904293255 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.92191459 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.903503288 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.898238357 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.899073248 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.899255582 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.902074466 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.907039167 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.906614786 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.900322137 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.898942386 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.899314429 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.899237739 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.899230368 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.903906181 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.900967505 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.899435164 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.899813433 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.906716042 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.921755914 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.898286226 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.898860284 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.90054839 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.900036333 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.899371897 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.9093388 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.89969892 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.900890263 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.897896835 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.898826481 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.90075547 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.900987921 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.899730824 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.901144589 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.899100224 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.900963335 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.900703915 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.901850168 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.90911792 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.90068258 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.900803282 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.905706723 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.902622041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.900052085 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.90518433 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.900243444 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.900451944 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.902092659 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.907233334 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.901601851 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.90259779 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.909856805 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.900985333 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.900934662 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.903388263 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.902628733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.9086829 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.927247463 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.902809035 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.901266162 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.904355334 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.911905347 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.901216039 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.903792391 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.902708371 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.900721859 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.901605059 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.902960381 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.901764222 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.899885858 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.902168597 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.902040111 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.901370161 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.901550037 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.903147618 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.901941245 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.903581998 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.901234117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.901273505 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.902991924 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.901994403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.901371533 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.906520212 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.902390904 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.900999703 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.900858218 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.903038373 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.904638688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.90384479 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.905304072 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.904396491 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.904579639 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.902279222 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.90328482 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.903772326 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.904282722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.905017146 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.905567919 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.906684155 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.902906664 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.902769186 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.901287266 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.902864904 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.904511428 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.905088423 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.904761106 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.905327281 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.904770078 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.907144191 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.913111354 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.904259082 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.902695676 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.904286799 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.901820368 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.903986087 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.904433975 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.905233725 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.91178731 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.903678846 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.907895996 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.903333772 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.904611546 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.904689015 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.903576199 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.903239293 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.905763803 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.904721272 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.912820228 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.913502499 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.910327284 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.906560903 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.908896577 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.9053234 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.910269884 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.906657018 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.906622412 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.906553954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.907460212 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.90560314 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.909128662 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.908525724 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.90613427 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.905242804 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.907598038 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.905775539 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.907571724 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.903951195 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.906508641 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.905718151 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.906361891 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.90693593 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.907368545 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.904872365 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.907509882 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.905643801 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.905575184 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.908162382 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.906444842 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.910209899 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.905081384 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.90549609 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.906440523 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.904048931 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.906704968 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.906983441 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.907151917 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.905975543 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.911921282 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.906695615 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.908178398 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.912533489 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.910190183 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.908249441 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.909337871 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.910687672 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.909486334 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.908974151 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.914605405 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.907293526 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.906968438 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.908104452 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.907553542 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.909170475 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.914234017 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.906895298 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.906514013 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.907630497 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.909719363 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.909895575 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.908311154 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.908833637 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.908898255 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.908400461 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.900135477 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.900632758 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.90063114 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.898709566 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.902540416 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.902744048 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.901836627 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.908160317 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.903987312 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.902813076 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.902720178 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.901259554 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.905475105 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.900149407 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.902501277 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.898404804 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.911694462 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.911828208 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.906763283 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.902345598 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.902183675 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.907141314 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.90381034 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.907174877 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.9010385 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.901773077 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.901494419 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.904917215 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.903620349 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.903302649 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.901036645 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.903749031 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.903390343 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.907910201 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.903730429 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.900653129 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.901773556 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.901700795 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.903283995 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.901383786 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.902856594 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.903924758 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.903837748 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.904160168 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.903300252 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.907471342 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.90373721 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.904651544 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.902120811 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.902905432 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.903470911 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.906356261 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.905090872 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.905418808 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.912950171 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.905558424 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.913467339 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.905505504 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913118228 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.906194724 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.905241144 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.91430574 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.90534015 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.904939398 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.904879356 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.906483676 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.909384967 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.904905736 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.904951243 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.909374076 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.904364766 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.904676487 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.905096003 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.906997045 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.906042865 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.904730836 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.910910592 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.905689585 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.909536628 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.906375845 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.904309674 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.905765392 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.905668729 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.903800711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.907866447 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.905282232 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.905374518 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.903715084 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.905716882 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.905380413 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.908040745 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.907302344 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.906912468 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.906851544 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.910528883 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.90803357 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.909765504 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.906253653 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.912599389 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.909122058 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.91093446 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.90837467 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.907618852 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.90904187 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.909102153 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.910995983 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.908898812 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.91021324 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.910440739 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.910389205 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.912294837 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.907124908 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.909254553 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.907840913 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.908392967 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.904671602 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.914833036 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.93290812 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.908110916 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.914670601 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.908505312 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.908834562 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.91275304 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.909778876 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.90766155 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.908783997 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.916361913 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.917184666 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.907313707 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.909380889 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.906999874 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.907592368 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.908640798 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.908125292 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.908806181 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.907922028 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.909825137 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.908642471 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.911661499 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.909812465 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.910508269 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.90931184 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.910316663 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.917648766 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.908218188 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.90937244 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.910424716 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.90874976 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.909866839 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.90914213 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.908903254 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.908515091 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.91055915 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.909624388 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.915158719 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.917252863 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.91224134 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.910145376 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.913094078 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.911066771 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.912469289 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.911778278 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.913988325 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.913147689 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.909713816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.910643745 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.911089259 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.908269408 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.911234045 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.911249735 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.912137815 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.912786897 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.918077573 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.909342493 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.911735833 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.911533153 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.911319241 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.910064078 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.91182391 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.915805796 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.913847239 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.920552565 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.920652413 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.916149583 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.911079145 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.912033103 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.918962609 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.910226539 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.911364785 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.911035819 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.91272572 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.912502834 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.914803056 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.911871078 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.917830073 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.910206993 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.91021853 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.91905912 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.912472318 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.913235612 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.909747048 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.915270587 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.911593399 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.912463492 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.909639053 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.909929874 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.917633186 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.913327348 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.913113473 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.913034495 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.911949541 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.912108894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.918913539 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.912366881 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.912532246 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.913064032 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.912388851 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.91381585 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.913015148 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.915268661 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.912651306 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.913470955 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.913941435 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.91978863 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.9138437 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.914981431 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.909946924 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.913378093 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.913841576 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.913409625 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.913347665 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.915541388 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.913069524 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.913823016 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.912834086 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.914897068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.912663282 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.914268788 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.91834531 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.914383614 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.915324732 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.923690533 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.922983372 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.915184693 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.913607321 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.914266205 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.913183398 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.915182369 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.915491017 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.913166475 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.916185148 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.91510608 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.914297623 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.916121722 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.91618766 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.929194369 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.914828009 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.91302701 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.914649333 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.918367929 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.916223422 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.91612214 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.914881963 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.917662644 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.916343924 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.923395607 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.915544217 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.920634397 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.915378026 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.917341394 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.919409658 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.917880648 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.922359027 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.918127983 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.916451121 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.914785616 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.91867254 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.93172938 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.917868805 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.924157819 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.945780278 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.916252402 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.918362436 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.918231179 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.913592841 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.91630915 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.918602787 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.917978577 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.913404436 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.916917975 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.918215911 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.918847711 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.922034853 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.915838894 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.916887695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.916120502 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.917546485 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.917533303 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.916601693 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.915498175 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.917019586 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.918652655 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.914721784 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.916611052 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.915365067 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.926162369 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.927637913 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.916311276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.918556317 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.917647935 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.919446635 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.918938172 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.925463825 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.925290932 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.916478264 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.917848598 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.918780365 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.918003749 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.917357889 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.917072423 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.916756385 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.918099903 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.916471144 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.926942395 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.927879127 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.922102774 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.919565243 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.917988122 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.919488061 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.917602143 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.918516714 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.916881847 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.919550849 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.917437687 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.924475224 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.917447672 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.920706628 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.91940435 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.926179166 seconds)
  done (took 1139.117911395 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.920653262 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.92013871 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.917874244 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.918013302 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.919352335 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.918569005 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.918573246 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.91718573 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.918580773 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.921628586 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.920205484 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.920136118 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.919624534 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.922879154 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.921778509 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.920102297 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.922213972 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.920347936 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.919285999 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.920069742 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.920443533 seconds)
  done (took 42.166282445 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.921352804 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.920384494 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.921621168 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.921231651 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.920378075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.921596913 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.921054323 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.921717433 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.92287932 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.921741896 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.921221302 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.921597978 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.92290316 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.921442729 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.919205269 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.922034346 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.924699706 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.921888049 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.922665759 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.922366948 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.922679101 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.921733711 seconds)
  done (took 44.127498429 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.920080134 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.921223735 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.919679198 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.920634611 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.922433001 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.920113717 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.923506036 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.923530007 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.921184551 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.92209216 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.920910365 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.92262031 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.927982103 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.931704273 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.924404988 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.922322872 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.067970367 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.923180313 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.922562474 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.923385037 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.922446476 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.927434662 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.921306734 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.92332293 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.922930232 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.92384414 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.922526061 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.924297528 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.922541709 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.922778495 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.928846242 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.923566512 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.921891481 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.925450696 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.923372377 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.924374939 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.929484101 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.924822526 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.924498951 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.924961783 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.932188819 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.947218909 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.924012305 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.929323629 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.924200872 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.925720988 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.926039273 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.93340791 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.925182031 seconds)
  done (took 96.30671417 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.924655235 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.924373914 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.926402534 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.925357063 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.924605944 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.926841329 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.924141953 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.926715481 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.925931587 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.925971155 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.926768588 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.92550793 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.924844179 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.924896579 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.926457536 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.926251978 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.926827003 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.924787569 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.926118118 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.925421776 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.927499402 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.926717033 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.924942108 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.924996809 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.926818284 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.926807071 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.926862695 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.924884021 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.927041446 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.925237412 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.926897156 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.925627136 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.926907594 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.92755676 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.926866069 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.926723233 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.928912891 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.927359033 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.925337039 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.927876249 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.927767794 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.92533473 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.927506899 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.926566237 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.928763869 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.926961901 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.927451698 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.926727876 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.928739616 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.928991745 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.928415462 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.928527458 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.927970184 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.92759053 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.928117135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.928975694 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.927575538 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.92799096 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.927659468 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.92898429 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.928925527 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.927791093 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.926785941 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.927587599 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.929989037 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.929640789 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.928455905 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.927543119 seconds)
  done (took 132.885426063 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.929831389 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.928685123 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.929203748 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.92960203 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.927909731 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.930808256 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.93046723 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.928913787 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.929992669 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.930271777 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.927440336 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.928516176 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.929000078 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.930737389 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.930481876 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.930980561 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.930214362 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.929975459 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.930431351 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.9301942 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.930066807 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.930515139 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.930042799 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.93254029 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.931232415 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.930290641 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.932116361 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.930999576 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.931246489 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.930974593 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.931745946 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.929548321 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.932072775 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.931375703 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.931558577 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.930292827 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.931559036 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.929883843 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.932628842 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.931722254 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.931253468 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.931899561 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.932045773 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.931733514 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.931170153 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.930893533 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.932278384 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.932858233 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.931614258 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.931733666 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.931044015 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.932824252 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.931988317 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.933522348 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.931968493 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.931095232 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.930057329 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.932721396 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.932032033 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.931113592 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.930309074 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.930315069 seconds)
  done (took 121.573195867 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.927427429 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.929831895 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.930017316 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.929936482 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.928602833 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.92653085 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.925809939 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.926913299 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.928273996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.927996636 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.927000855 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.927239941 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92808035 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.92718098 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.929421283 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.927398561 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.926933912 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.925621354 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.926205018 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.926872307 seconds)
  done (took 40.413743265 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.926876463 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.926190973 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.92668146 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.926534156 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.927485279 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.926545491 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.925969137 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.926972659 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.926107145 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.926654447 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.927340727 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.926863097 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.926434055 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.927240436 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.927496704 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.925108414 seconds)
  done (took 32.681685302 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.925101538 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.924859694 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.926144016 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.925915296 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.923698095 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.923792635 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.923773287 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.924173022 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.92570197 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.925696555 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.924599803 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.924934047 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.924176418 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.925354816 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.924039071 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.923304559 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.925111547 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.922783019 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.924870692 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.925237076 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.924535225 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.923479244 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.925341739 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.924736849 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.923979576 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.925192658 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.923712073 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.925929486 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.925214657 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.920045821 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.924730874 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.924512503 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.923394315 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.924992262 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.924995684 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.92517626 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.923890983 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.925729439 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.92528071 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.924265496 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.922694916 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.924195953 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.924850234 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.924524314 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.923812414 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.927000703 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.925393268 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.925031278 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.923216056 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.925392049 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.924284644 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.922889184 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.922866343 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.923938926 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.924684172 seconds)
  done (took 107.703875543 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.923289329 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.92293712 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.920958386 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.921971841 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.921646141 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.921814459 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.92227267 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.922323451 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.924428311 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.922314298 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.921617013 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.921903223 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.923293238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.921972396 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.92344032 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.922385804 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.92131766 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.921632895 seconds)
  done (took 36.453824098 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.922484021 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.92319339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.922991935 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.922003782 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.922280381 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.923693032 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.922568018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.922635589 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.922450331 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.921488109 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.92217946 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.922031763 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.92340018 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.924068007 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.924959866 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.924219307 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.923229078 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.923418032 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.924470711 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.923676005 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.923483332 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.924471108 seconds)
  done (took 44.161687174 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.923067186 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.922376907 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.936634564 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.944020607 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.942737942 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.958457941 seconds)
  done (took 13.479662463 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923891974 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925791731 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.923499267 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924041495 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923401091 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924417449 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923078749 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.92387433 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923181082 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.923126895 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.923381645 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.922660931 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.922787761 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.923151701 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923391133 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923391877 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.923847725 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.9234478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924770835 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.923162106 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924795467 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.9234317 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.922884413 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.922500708 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924546075 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.92390967 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.924687021 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.926976938 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.924716525 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.923276628 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.924990023 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924906256 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.922786033 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.924569719 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.92410108 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.924346188 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.924487076 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.925554726 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.916543487 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.915763014 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.915113171 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.915591409 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.914404242 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.914054812 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.908896024 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907810483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908548642 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908723083 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.909200404 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.908025629 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906535536 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907611296 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907306357 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.909044538 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906433454 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907623161 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90807976 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.908071566 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907843537 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908278264 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.907312646 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907234101 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907896083 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.907850635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907991484 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.907040384 seconds)
  done (took 128.42991491 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906252617 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.906774877 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.907747457 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906431602 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905741593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.905059687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906743232 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.908453393 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90490116 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90667775 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904798841 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907345369 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.906677339 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907043814 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.907074315 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.908037204 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.907061091 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906300542 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906424893 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906399147 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906476202 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.907468435 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.905254636 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.906470201 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.907240438 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906034595 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.906212821 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906036448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906856564 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.906345571 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904970366 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.905392654 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904889266 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.90499189 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.906386168 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905423331 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.904878329 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906385711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.905285591 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.90676428 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904830366 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904101215 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904925031 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904449465 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.905824561 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.904737654 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905026416 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.904298868 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.904956491 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906054638 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903505046 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.90383554 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.90483231 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.903655553 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904513687 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.906267943 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.904284726 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.904086817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904513183 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.905438386 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.90607226 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.906037376 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.904969499 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.902789731 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.903832588 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.905702305 seconds)
  done (took 127.616337879 seconds)
done (took 2649.607905302 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.977704942 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.911028418 seconds)
  done (took 15.72402583 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.06664157 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.01863746 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.90421026 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.933323788 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.901785408 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.931690411 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.904913569 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.903631617 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.901427541 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.902277955 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.90236752 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.086736608 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.901445144 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.901373934 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.90125166 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.99382344 seconds)
  done (took 52.897432288 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.903688909 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.905126713 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.913973891 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.909335841 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.902764346 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.914955502 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.935314365 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.908361797 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.939087146 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.915514857 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.971823413 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.91538681 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.903334006 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.953385497 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.917626797 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.917821365 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.99418539 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.980499853 seconds)
  done (took 36.534228613 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.980722768 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.917897591 seconds)
  done (took 10.737975251 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.902522832 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.923919139 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.911203436 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.899002004 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.902998221 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.920324457 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.926781114 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.915478601 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.902321649 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.926616625 seconds)
  done (took 70.966210725 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.906647379 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.904112826 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.901412077 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.900572304 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.899877848 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.904062022 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.901524331 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.900586989 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.562950597 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.935581974 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.907268714 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.905967945 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.901626563 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.901831011 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.897927392 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.923653261 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.01562633 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.899586009 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.896366382 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.90474869 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.900769795 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.953323071 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.914682318 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.899683255 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.929765073 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.561564588 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.907402692 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.907627749 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.030344473 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.896814634 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.900459721 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.085732893 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.903530616 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.37030971 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.170732327 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.906060864 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.913703086 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.907806799 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.897113861 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.022040586 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.901430614 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.907614473 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.796329473 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.151888639 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.992963884 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.944473701 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.20254794 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.919075853 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.902182792 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.929456093 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.902889107 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.901157884 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.914899835 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.413182216 seconds)
  done (took 134.464330833 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.898098594 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.242652939 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063324244 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.899239589 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.1835548 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104260563 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.900457728 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.943290876 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.899306568 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.12466204 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.155700908 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.002247498 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.899446254 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.897339134 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901134905 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.897851922 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.051773305 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.968361357 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.899639843 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.89856834 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925408955 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.139519484 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.020144599 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.900505078 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.924465806 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.106999757 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.018913501 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.000343498 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.693598451 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.897361484 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.962033871 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.901091816 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.899219458 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.900533814 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.052468188 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.990308425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982064442 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.900115544 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.898370323 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.897771173 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.555728559 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.096054039 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.993702491 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.028820045 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.150546227 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.103093726 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.679599001 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.898881793 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.639515506 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.06109732 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.125821951 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.127380437 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.019076734 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.902054412 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.236041007 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.898962301 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.899031886 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.149404978 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119449133 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.995755743 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.901500608 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.899381004 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.901243553 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.13713756 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.90176824 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.993810393 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.903211115 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.901373824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.995464582 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.997738845 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.130608998 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111627042 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.931381531 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.2407075 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.405839795 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.145394403 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.966006408 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.148482215 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.902246403 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.900133631 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.977301589 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.739137892 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.151558347 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.141816098 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.146687296 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.934609802 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 3.035660698 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.90041035 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.125364759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.120135949 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.159201782 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.14315591 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.135937096 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.233648946 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.902228176 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.900830482 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.224981228 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.025134315 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.904616623 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.243741786 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13168033 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.422065848 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.92647281 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.201687922 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.030840202 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.90415253 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.530364788 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.90486136 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.130242009 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.942887904 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.904471101 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.90204467 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.119447962 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.887439382 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.903168596 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.547879785 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.961663844 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.905233778 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133369685 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.906078446 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.169553067 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.906773083 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.133233714 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.357758134 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.931938957 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.072956366 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.147078748 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.906560682 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.139832834 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.145424509 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.017394351 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124200384 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.615152843 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.902703109 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186615587 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.905223966 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.902023415 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.073216131 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.90334037 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045136903 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.907423535 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.196056105 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.926579436 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.131539505 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.906319717 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.157684375 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.935739134 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.952667353 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.905791305 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.023952579 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.906578522 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.824849225 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059421881 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.907655456 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.906137834 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.454424859 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.905206454 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.05094085 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.128868482 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.923936827 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.975969851 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.570342054 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.902766446 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984742626 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.927547875 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.28991902 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.902876056 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.158658046 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.907824613 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.904667184 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.903187359 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.138950743 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087401305 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.908809685 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.906730412 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.809979339 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.905131597 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.90512575 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.0852788 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.23162732 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.907118362 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.104814067 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.912135533 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.031783435 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.907107767 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.982253623 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.23802026 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.905549482 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.907616616 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.907871162 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.907608506 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.907896036 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.113512486 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.93034623 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.398423849 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.041809545 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.17589226 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.214538472 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.147156697 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.948401994 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.908290295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.158990779 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.909894289 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.968694796 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.907798715 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.9271898 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.131448635 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.910789674 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.169499103 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.175779024 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.752638499 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953387992 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.909798 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.906911283 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.906035599 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.051142216 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.990604497 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.909608219 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.906915735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021391395 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.029734797 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.116449752 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.90858737 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.934162652 seconds)
  done (took 910.381650234 seconds)
done (took 1233.540965562 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.907201398 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.907687112 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.910586832 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.912678879 seconds)
  done (took 29.478921174 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.910043825 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.910443936 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.908588984 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.908511408 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.909407163 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.908401196 seconds)
  done (took 13.295214322 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.069125484 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.907894595 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.910285213 seconds)
  done (took 21.728011237 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.980585453 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.2936795 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.042165824 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.324894472 seconds)
  done (took 10.482871084 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.910417385 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.908753132 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.909954064 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.910919701 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.910576633 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.910609177 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.911001718 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.91051797 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.912398399 seconds)
  done (took 19.037422572 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.909773638 seconds)
done (took 99.771264875 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.021431108 seconds)
    (2/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.976960393 seconds)
    (3/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.968802453 seconds)
    (4/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.007846331 seconds)
    (5/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.004859986 seconds)
    (6/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.909376409 seconds)
    (7/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.942794414 seconds)
    (8/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.275571744 seconds)
    (9/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.277391586 seconds)
    (10/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.924272009 seconds)
    (11/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.924730935 seconds)
    (12/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.997707775 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.992426894 seconds)
    (14/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.076427435 seconds)
    (15/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.832321893 seconds)
    (16/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.023459756 seconds)
    (17/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.936200342 seconds)
    (18/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.065355147 seconds)
    (19/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.990787276 seconds)
    (20/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.995045466 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.260238086 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.008849228 seconds)
    (23/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.073486094 seconds)
    (24/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.790548462 seconds)
    (25/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.705006137 seconds)
    (26/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.936135098 seconds)
    (27/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.021134672 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.042407137 seconds)
    (29/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.040809642 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.91052958 seconds)
    (31/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.050328518 seconds)
    (32/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.91249317 seconds)
    (33/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.001147886 seconds)
    (34/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.232823996 seconds)
    (35/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.218333787 seconds)
    (36/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.917523173 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.934261982 seconds)
    (38/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.215809017 seconds)
    (39/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.086602826 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.050500286 seconds)
    (41/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.933298224 seconds)
    (42/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.996948145 seconds)
    (43/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.018239397 seconds)
    (44/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.140080423 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.915765785 seconds)
    (46/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.065303823 seconds)
    (47/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.916409533 seconds)
    (48/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.040309068 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.127630178 seconds)
    (50/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.013119934 seconds)
    (51/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.074424886 seconds)
    (52/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.101164712 seconds)
    (53/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.915064168 seconds)
    (54/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.994201864 seconds)
    (55/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.911748602 seconds)
    (56/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 8.570912655 seconds)
    (57/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.868554314 seconds)
    (58/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.99654631 seconds)
    (59/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.393061747 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.204094613 seconds)
    (61/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.132246031 seconds)
    (62/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.150705884 seconds)
    (63/309) benchmarking ("sort", Int64, false)...
    done (took 5.627128614 seconds)
    (64/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.19563101 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.164342178 seconds)
    (66/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.268915103 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.039857961 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.947331267 seconds)
    (69/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.914453641 seconds)
    (70/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.593100498 seconds)
    (71/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.159115429 seconds)
    (72/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.93239241 seconds)
    (73/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.911967853 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 3.854726111 seconds)
    (75/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.919423393 seconds)
    (76/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.286011032 seconds)
    (77/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.008654075 seconds)
    (78/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.233079881 seconds)
    (79/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.919936291 seconds)
    (80/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 3.62858859 seconds)
    (81/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.21197338 seconds)
    (82/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.935787638 seconds)
    (83/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.930109556 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.533958739 seconds)
    (85/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.93209539 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.066525234 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.096627289 seconds)
    (88/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.29526542 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.806217694 seconds)
    (90/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.218237203 seconds)
    (91/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.231353963 seconds)
    (92/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.588672159 seconds)
    (93/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.922489994 seconds)
    (94/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.591492766 seconds)
    (95/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.057813351 seconds)
    (96/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.930307341 seconds)
    (97/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.173750539 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.044388507 seconds)
    (99/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.247069787 seconds)
    (100/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.920761799 seconds)
    (101/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.277674098 seconds)
    (102/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.259622579 seconds)
    (103/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.106464598 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.540436731 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.05651253 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.801069496 seconds)
    (107/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.410784694 seconds)
    (108/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.926255297 seconds)
    (109/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 3.32432086 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.319126663 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.945802483 seconds)
    (112/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.9198192 seconds)
    (113/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.027791421 seconds)
    (114/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.999128392 seconds)
    (115/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.29025908 seconds)
    (116/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.189633317 seconds)
    (117/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.984138027 seconds)
    (118/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.111243505 seconds)
    (119/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.927827701 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 2.031228756 seconds)
    (121/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.981050545 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.315307836 seconds)
    (123/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.923006823 seconds)
    (124/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.434633433 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.272280209 seconds)
    (126/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924136901 seconds)
    (127/309) benchmarking ("sort", Float64, false)...
    done (took 5.698448396 seconds)
    (128/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.162175369 seconds)
    (129/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.232875909 seconds)
    (130/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.947430726 seconds)
    (131/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.359096699 seconds)
    (132/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.919768366 seconds)
    (133/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.023595005 seconds)
    (134/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.737333264 seconds)
    (135/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.242660307 seconds)
    (136/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.23832718 seconds)
    (137/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.946843231 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.046769198 seconds)
    (139/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.916771566 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.020211057 seconds)
    (141/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.583758617 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.055901815 seconds)
    (143/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.741929984 seconds)
    (144/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.042757554 seconds)
    (145/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.915809658 seconds)
    (146/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.239363474 seconds)
    (147/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281369709 seconds)
    (148/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.92622861 seconds)
    (149/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.716480141 seconds)
    (150/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.299904883 seconds)
    (151/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.941526086 seconds)
    (152/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.946141324 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.153730948 seconds)
    (154/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.917575015 seconds)
    (155/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.379623972 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.002219546 seconds)
    (157/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.171201809 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.227501979 seconds)
    (159/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.082851982 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.000698003 seconds)
    (161/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.920302748 seconds)
    (162/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 4.121851268 seconds)
    (163/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.937868058 seconds)
    (164/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.927632622 seconds)
    (165/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.144466105 seconds)
    (166/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.813730476 seconds)
    (167/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.93500718 seconds)
    (168/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.225857885 seconds)
    (169/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.936121642 seconds)
    (170/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.060229894 seconds)
    (171/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.180136252 seconds)
    (172/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.581518365 seconds)
    (173/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.216669563 seconds)
    (174/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.028242729 seconds)
    (175/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.468787843 seconds)
    (176/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.010112662 seconds)
    (177/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.919355335 seconds)
    (178/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.12761176 seconds)
    (179/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.379453989 seconds)
    (180/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.922067025 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.115977256 seconds)
    (182/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.111411239 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.277658677 seconds)
    (184/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.918152453 seconds)
    (185/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.248505366 seconds)
    (186/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.996854737 seconds)
    (187/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.090188287 seconds)
    (188/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.416988258 seconds)
    (189/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.163226113 seconds)
    (190/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.934523449 seconds)
    (191/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.962142164 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.956585575 seconds)
    (193/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.921523404 seconds)
    (194/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.92100281 seconds)
    (195/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.55780887 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.763068012 seconds)
    (197/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.708188326 seconds)
    (198/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.762196744 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.426204023 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.762780081 seconds)
    (201/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.89593538 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.759398241 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.467446917 seconds)
    (204/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.919529558 seconds)
    (205/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.760623675 seconds)
    (206/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.980982538 seconds)
    (207/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.236283402 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.238890769 seconds)
    (209/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.06912692 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.932043465 seconds)
    (211/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 8.051297361 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.198636763 seconds)
    (213/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.669905703 seconds)
    (214/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.177981349 seconds)
    (215/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.927400289 seconds)
    (216/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.139027856 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.990340275 seconds)
    (218/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.262802634 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.703286084 seconds)
    (220/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.248645096 seconds)
    (221/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.27864067 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.18084519 seconds)
    (223/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.063545848 seconds)
    (224/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.160621477 seconds)
    (225/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.017421425 seconds)
    (226/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.127994426 seconds)
    (227/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.291431535 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.050155783 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.920059369 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.906536817 seconds)
    (231/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.566336239 seconds)
    (232/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.24111014 seconds)
    (233/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.923552595 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.032906861 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.245794741 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.922299457 seconds)
    (237/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.108681736 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.919673318 seconds)
    (239/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.923147322 seconds)
    (240/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 2.043593208 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.942193 seconds)
    (242/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.027163421 seconds)
    (243/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.002347221 seconds)
    (244/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.9226829 seconds)
    (245/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.496157104 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.896554371 seconds)
    (247/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.03359924 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.891309102 seconds)
    (249/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.010516678 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.062195991 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.175373932 seconds)
    (252/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.303484253 seconds)
    (253/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.926472579 seconds)
    (254/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.269632198 seconds)
    (255/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.925465655 seconds)
    (256/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 2.084889436 seconds)
    (257/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.295092656 seconds)
    (258/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.932928301 seconds)
    (259/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.918542443 seconds)
    (260/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.675147371 seconds)
    (261/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.186035477 seconds)
    (262/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.546439359 seconds)
    (263/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.92575544 seconds)
    (264/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.062521587 seconds)
    (265/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.133100699 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.020138765 seconds)
    (267/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.925641204 seconds)
    (268/309) benchmarking ("sort", BigInt, false)...
    done (took 6.923529523 seconds)
    (269/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.004713174 seconds)
    (270/309) benchmarking ("sort", Int8, false)...
    done (took 4.800550528 seconds)
    (271/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.054767288 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.317951558 seconds)
    (273/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.80092212 seconds)
    (274/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.062461515 seconds)
    (275/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.190339886 seconds)
    (276/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.337655028 seconds)
    (277/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.096754732 seconds)
    (278/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.004063864 seconds)
    (279/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.000278709 seconds)
    (280/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.939245625 seconds)
    (281/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.027093632 seconds)
    (282/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.038993441 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.261291623 seconds)
    (284/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.043249812 seconds)
    (285/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.160546062 seconds)
    (286/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.08452121 seconds)
    (287/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.0836921 seconds)
    (288/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.059618249 seconds)
    (289/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.215113934 seconds)
    (290/309) benchmarking ("sort", Float32, false)...
    done (took 5.629086228 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.121674139 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.926936696 seconds)
    (293/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.195216673 seconds)
    (294/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.022238494 seconds)
    (295/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.950512043 seconds)
    (296/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.05657341 seconds)
    (297/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.928033433 seconds)
    (298/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.013320024 seconds)
    (299/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.872323815 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.23569619 seconds)
    (301/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.932594914 seconds)
    (302/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.098593294 seconds)
    (303/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.971131257 seconds)
    (304/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.938765896 seconds)
    (305/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.184142934 seconds)
    (306/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.023393845 seconds)
    (307/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.929181547 seconds)
    (308/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.255208452 seconds)
    (309/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.140871499 seconds)
  done (took 1021.628279652 seconds)
done (took 1023.532112927 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.956201721 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.947118664 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.928473627 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.949184308 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.04673266 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.977236657 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.940105315 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.930790038 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.981812358 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.977376916 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.932922146 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.972309342 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.931627886 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.93187447 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.9283137 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.951883485 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.226348477 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.95785233 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.94940623 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.939281954 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.95521228 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.928741097 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.98096189 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.972252699 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.93321419 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.936326322 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.932756265 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.952180536 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.045021063 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.936179683 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.934849354 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.944070242 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.228915963 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.954220851 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.930125047 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.955026292 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.94482097 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.941918454 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.937426032 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.96703749 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.315430689 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.961769395 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.932973814 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.935967778 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.93161533 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.93869059 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.936194306 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.946037649 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949105194 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.949104574 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.318028559 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.979055356 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.9387387 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.934283531 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.94533954 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.938136433 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.939510639 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.948317765 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.953899876 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.950104135 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.217829263 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.96629188 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.935824579 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.952945469 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.945821177 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.352135191 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.960922532 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.94037084 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.317705711 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.971460836 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.351621742 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.97509571 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.933997904 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.954739088 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.969665826 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.235708853 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.954331465 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.932915979 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.943617498 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.936117315 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.951010928 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.949874216 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.940954905 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.939083502 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.954547331 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.984801179 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.951333725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.94318245 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.955260731 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.962765735 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.94746493 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.954819764 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.941145656 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.936572952 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.950873917 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.938091944 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.946584732 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.943904617 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.93894552 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.952960673 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.318303105 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.987973448 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.936931931 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.93479199 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.937886471 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.956791096 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.319573332 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.971619618 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.962176123 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.990038244 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.940530027 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.225075479 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.969225152 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.961554926 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.95202396 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.93926218 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.938105911 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.225622036 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.341031979 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.982435435 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.943218679 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.941341108 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960085385 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.941843465 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.935770092 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.238886624 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.963967494 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.956434719 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.069841442 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.953920101 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.978641427 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.941585585 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.945828135 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.988028219 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958978965 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.973836424 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.94540201 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.959541979 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.961879401 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.937122936 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.95561445 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.953241076 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.937104035 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.948652764 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.938562525 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.986719406 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.95628631 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.95717429 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.963551055 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.064175786 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.936374548 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.229185992 seconds)
done (took 304.019618072 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.015860052 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.938861144 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.029395658 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.939203982 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.027967657 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.009929531 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.933648008 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.938034987 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.937358163 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.429464006 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.93914617 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.944793872 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.936745075 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.93925374 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.010698754 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.938100289 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.937796314 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.375823451 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.941338647 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.021536186 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.937481331 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.941897008 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.939620988 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.444746509 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.9411294 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.941975983 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.0161331 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.939431425 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.403129415 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.937964581 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.939180682 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.406631038 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.016203244 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.967664582 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.950014866 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.942313835 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.023891734 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.951294982 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.00844389 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.006703028 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.032847868 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.971887988 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.940216382 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.936325955 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.945248925 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.941249805 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.938902173 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.96841922 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.945023724 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.942197872 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.380561991 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.948926554 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.943901184 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.941409544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.939620421 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.965567386 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.943688498 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.94277334 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.01777108 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.941986301 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.010190032 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.444011932 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.431089543 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.94126291 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.938395889 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.93936032 seconds)
  done (took 189.939095989 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.007676564 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.01622092 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.006052107 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.946047749 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.992957725 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.006789756 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.945300725 seconds)
  done (took 15.785906655 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.945721318 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.939893007 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.990543986 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.988827533 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.942015776 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.094010869 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.941489519 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.951968561 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.943689054 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.970367298 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.942165083 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.938339938 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.940783852 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.939099259 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.988117509 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.947614316 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.056845396 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.93894986 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.939556927 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.089286863 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.94529171 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.945575698 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.967358172 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.95406577 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.93895829 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.947806329 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.508655922 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.946012013 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.938810316 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.941112717 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.940598163 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.981872976 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940503423 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.94160962 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.940262252 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.055630958 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.939856001 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.936395199 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.940277189 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.941107077 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.941592064 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.938075376 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.944477434 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.939511705 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.941157816 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.965702634 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.941720694 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.942219214 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.939060158 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943824945 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.96840001 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.943737976 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.942942353 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.951299963 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.99041042 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.949531622 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.941227663 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.946095065 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.9472104 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.944181489 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.096359395 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.994038438 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.94196062 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.992392465 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.942637695 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.945046905 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.94703506 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.945143285 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.033190483 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.941705091 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.996574012 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.942109929 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.104680598 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.970155376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.941852111 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.949689726 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.951694841 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.945192025 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.947115868 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.953131604 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.94134226 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.94812204 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.955570836 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.947424203 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.943036763 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.056132755 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.083334735 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.94647463 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.94866819 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.957082303 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.945758835 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.989009855 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.942823068 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.945886616 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.00270072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.063654222 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.977894514 seconds)
  done (took 212.933256919 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.957396856 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.952918361 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.948014955 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.9635511 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.947703858 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.947879445 seconds)
  done (took 13.591339841 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.946323913 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.948629816 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.948069526 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.946445566 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.94823052 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.94577451 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.946184484 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.951153477 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.948505759 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.944196446 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.944952346 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.949289613 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.948806083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.94470189 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.947615564 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.944064951 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.945993878 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.946128459 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.942709572 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.947500744 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.214734396 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.948882471 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.947183184 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.953851868 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.948910539 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.948953151 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.961273197 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.948390583 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.945420505 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.953498835 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.951198414 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.948149201 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.951912109 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.952199196 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.95398185 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.951392172 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.94964147 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.950756139 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.946419131 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.952493543 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.944289747 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.947712281 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.945072607 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.949429283 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.950028971 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.955229512 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.953946856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.964402648 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.951358552 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.949421916 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.951449852 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.947335925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.943824676 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.953376019 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.954529505 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95427965 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.951234718 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.951165325 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.947755691 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.949442106 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.951704234 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.95003192 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.95379743 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.952785734 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.955114565 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.950496144 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.950928396 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.953115325 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.948844368 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.944576488 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.943481439 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.947929 seconds)
  done (took 143.509542331 seconds)
done (took 577.634317514 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.232796515 seconds)
  done (took 9.111155886 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.041774759 seconds)
  done (took 9.259820504 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.864564309 seconds)
  done (took 10.757795543 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.97850571 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 7.004615578 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.977240957 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.960759713 seconds)
  done (took 29.837129997 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.214836092 seconds)
  done (took 9.10320099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.985311168 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.959900377 seconds)
  done (took 15.899478676 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.089484559 seconds)
  done (took 8.979380123 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.334276368 seconds)
  done (took 9.22523386 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.965430088 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.957118111 seconds)
  done (took 15.82590995 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.964922001 seconds)
  done (took 8.848481343 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.15646989 seconds)
  done (took 10.064874292 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.977383068 seconds)
  done (took 8.930231219 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.96643224 seconds)
  done (took 8.84776697 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.973664802 seconds)
  done (took 8.859032244 seconds)
done (took 165.420067041 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.96107391 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.958612605 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.95678053 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.959620175 seconds)
  done (took 29.71882059 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.991297355 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.991891885 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.993333371 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.001404549 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.992200185 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.991170694 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.983639468 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.98304882 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.001216943 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.995660717 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.992224109 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.993572683 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.989797825 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.986403403 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.997700446 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.99098573 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.003404123 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.995411903 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.982706447 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.994146493 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.958853923 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.002844541 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.994557853 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.957374208 seconds)
  done (took 49.649936721 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.147787338 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.033520901 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.112698212 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.01287659 seconds)
  done (took 10.190404344 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.010395251 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.013245155 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.022214626 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.065282111 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.087451521 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.02384915 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.981260596 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.980308075 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.967938886 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.012726674 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.087235455 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.007281015 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.101220721 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.95861045 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.14086495 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.962414571 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.960307185 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.011714849 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.066129284 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.075476313 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.960043667 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.010891237 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.01643835 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.01018765 seconds)
  done (took 50.419217622 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.963597776 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.964488287 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.967585726 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.963424377 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.961378454 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.963105808 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.96557298 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.963315741 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.982564606 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.963328503 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.961132769 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.963171305 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.967134174 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.960655445 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.961581795 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.972657438 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.978891111 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.961040241 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.967252368 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.968945231 seconds)
  done (took 41.209402579 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.962376338 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.807031402 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.305882993 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.209242434 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.961814219 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.963138839 seconds)
  done (took 32.098323308 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.972679736 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.975352793 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.964099344 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.025287348 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.111268216 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.971948187 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.965257934 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.975222372 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.008757678 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.030603476 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.980646174 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.99236225 seconds)
  done (took 25.8650998 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.962810163 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.960971575 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.958837779 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.97441574 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.969163029 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.969872561 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.967623195 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.959076651 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.97190626 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.978417372 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.96658835 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.976354352 seconds)
  done (took 45.5094705 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037131558 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.833375111 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.39780034 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419485589 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486185317 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.165153142 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.960148141 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.048241221 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.961538174 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.231236361 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.295545051 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169841036 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.206944165 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.771409257 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.974039154 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.437031306 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253004496 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.174826024 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986599429 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624588918 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.067460647 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.548111792 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.583376908 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075831528 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.169282921 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.088145943 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.223209152 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.914202244 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008344855 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96923346 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971064599 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963654976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234902653 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088467834 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035277794 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965445853 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.377072873 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.670514722 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.970101574 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.59035196 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.429508599 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.08070384 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965112789 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965977492 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.894210654 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.548034715 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058027986 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.969050847 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.667602021 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.965395877 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971991463 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040457911 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.963586699 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.769842088 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645261492 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.229361934 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.962479867 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962767558 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523797663 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.965826485 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.666807216 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.895889677 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.053199615 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.576199882 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40882231 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.114445794 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.965698162 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.966433462 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893842251 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.577392712 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.079622063 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.100078697 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.977302697 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.601906108 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.253648933 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.350073811 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.011646173 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233580322 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.811642964 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.898247878 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178706056 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913609573 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.891896298 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.792482053 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.893812271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.181755401 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993792934 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.550484648 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997422726 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.046586848 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.970735472 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97657307 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967230567 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.177440468 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.859579478 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967276582 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.237416887 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216617535 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98066177 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.051550244 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.890568445 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.967490006 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.212523857 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.16714723 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292757591 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.46024961 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.050235653 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963526675 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.979262551 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.958762534 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.974491618 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.232283396 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024690052 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.95767823 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.082394726 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.914522958 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213454073 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98971346 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.063720367 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.316085463 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200978878 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.305170972 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.211563467 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027452694 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.969856133 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.967037361 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.65239997 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.574151412 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.183897391 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.980516566 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.537384143 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.974773113 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.966666394 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901996596 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.621334269 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.314379674 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.042709833 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.183363568 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.969603655 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239546717 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893265521 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.104034927 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.964302092 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.178018698 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.605339832 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.045382024 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214626544 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287046599 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.277159557 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.980461407 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.979468758 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058529472 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981775898 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.470036052 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.21485142 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.966367142 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.966556246 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.659971583 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.019375261 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.974888204 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.966938465 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.518586763 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.234956485 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.986707123 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.970184105 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.839565799 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.976607737 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029316544 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971173463 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969809277 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.488617014 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.47339501 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.974834644 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.624753369 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181322412 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973272212 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.590167484 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.14198917 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.981612573 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.233851636 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.033868652 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.894057303 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.670753252 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.667655741 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965859813 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.895907041 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.968186115 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969713526 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971923418 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.160418554 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.241192195 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.019120264 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.643992252 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.071903566 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972430646 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.973159234 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968461738 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.458245554 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978806942 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.650160097 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.973947601 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09994487 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.978379654 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.895901551 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.970420892 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.971773036 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.967221376 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.921836261 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.016800208 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.641105353 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.174110945 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.213802374 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.374095542 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981012869 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.646408792 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.084714916 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.98289892 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.266670991 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.680727568 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.9830008 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.043599851 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.979423948 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.647851289 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.69888205 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.528086178 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.257990453 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.278982257 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314452558 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.526444288 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.182619468 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.052081295 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.195249838 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487907996 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.026634883 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064574766 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.909178527 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984132019 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.614303413 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.324963572 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.979806269 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18771329 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.255889709 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.333006592 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.105517479 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.174393995 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000464777 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.844693658 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.001418883 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.505354951 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992201811 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.355979367 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.173320097 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.053872641 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.270326817 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.053501005 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.971394074 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.306579577 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.011477217 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.677267575 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.324453897 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421765684 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.447318144 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198588514 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.978047474 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.410224595 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.320260374 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.219550053 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.096577114 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.898284107 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.978402045 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.97600688 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.987008093 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.946981787 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.817628406 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.214000587 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977536996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19786945 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.134725669 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.340443672 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.879943996 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.976290309 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.972135776 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.220068586 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.702753227 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.13108285 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.338578808 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.552874629 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.979961438 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.899638439 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.900227434 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.674155059 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.981227585 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94086146 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18379097 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.078175363 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656832663 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405793924 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.287750663 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.214817205 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.983579607 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.242175992 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.250038606 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.467508385 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994450685 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.071412183 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.283128354 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.666246801 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.187393095 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.20017943 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506378336 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190611168 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.417114879 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.946481896 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.974232845 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.182574888 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.188027532 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.34899476 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149095157 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.683633664 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.980855258 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336447907 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.038799172 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.34381292 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.162366323 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.061908231 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982339859 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050819862 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982302712 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.981469556 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980221816 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.984053045 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.352218828 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.091604808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.987469658 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056927115 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.99899591 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.553275055 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.986243057 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246693206 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327905052 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310101858 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.042827004 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.981123985 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.976542072 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902589083 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102632148 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.409317123 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.250161199 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.093931572 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.113002622 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996755176 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.291897982 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27678283 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.289759069 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.251443646 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.860715242 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740304149 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.100655257 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.194190163 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.982203325 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.180603413 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194773604 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.282174738 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53810397 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.183158917 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.174236862 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.25144097 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.343567124 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.979227686 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.557907234 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.988759952 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.387519996 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.015259812 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.350174751 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236400793 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985163705 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09816914 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.981871245 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.180470153 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.427790197 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.666352117 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324706174 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.831665201 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981789215 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25371083 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309154099 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283525179 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05410818 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985739939 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.670031095 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110646034 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.889490737 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.193267597 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.978426668 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.183657987 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.691768308 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.982128432 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252445754 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285972294 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.978531568 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.905767713 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.014413544 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.981181899 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.194051566 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199626476 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224474164 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984377565 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.989131431 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.788515297 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.252965718 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.044801675 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.908238537 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.982013733 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025803517 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.208135795 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.997853162 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.493663531 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.681793283 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260542289 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.88399458 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996178876 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.431295724 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.362340765 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310800494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.509945754 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199679321 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.533460979 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.862885282 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363511003 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.985095846 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.427237136 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.363139935 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.982338741 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.51440531 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.098499552 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.247930542 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310980207 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.988991363 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.735014022 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.012161627 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198422668 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.340756375 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.911778383 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.986756047 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.032838862 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.983770492 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.965837591 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.988663261 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.933815401 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.501972791 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.830140758 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.542134783 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.984778158 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.991226835 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.350840499 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.563434261 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09606659 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.008472579 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.989536561 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.68066133 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.269819065 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.225784688 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.552845939 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.081828689 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.986687066 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983836008 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.904755169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.170200924 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.171331637 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26393832 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.386900314 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.097139887 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.985839457 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.190018995 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184621365 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.367942052 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.115312312 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.144427788 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.09980845 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.929280431 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.68967605 seconds)
  done (took 1712.22633372 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.010983695 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.024765879 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.009175063 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.044920571 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.025085882 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.022001325 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.065242576 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.004048286 seconds)
  done (took 58.115369811 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.996310647 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.094111853 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.001901016 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 7.00854541 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.01617462 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.999198233 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.160747498 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.010735318 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.041827992 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.005356972 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.997442494 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.998490001 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.304543714 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.021291658 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.999297008 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.471060782 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.004729945 seconds)
  done (took 77.067235346 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 7.002422209 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.408953939 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.041568441 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.003982904 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.808005557 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.004429266 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.068225363 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.007531692 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.006361682 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.048168712 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.304925634 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.05370785 seconds)
  done (took 91.68375276 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.018840496 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.001237347 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.001451972 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.000713126 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.003738263 seconds)
  done (took 11.957823229 seconds)
done (took 2237.610632648 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.226027727 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.060234088 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.105534433 seconds)
  done (took 6.092620952 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.148768344 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.194156346 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.307876333 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.329174362 seconds)
  done (took 10.915361186 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.31321923 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.36873928 seconds)
  done (took 6.609687607 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.319067608 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.033999589 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.422903655 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 7.004716767 seconds)
    (2/3) benchmarking "Float64"...
    done (took 7.002911268 seconds)
    (3/3) benchmarking "Float16"...
    done (took 7.001732914 seconds)
  done (took 22.939653304 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 2.001559386 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.999709768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.004638054 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.002900239 seconds)
  done (took 9.937841097 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 7.002395221 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.732665183 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 7.002753108 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 2.016612616 seconds)
  done (took 21.686749784 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.152120885 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.118161669 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.148048769 seconds)
  done (took 8.347753959 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.146265038 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.855408968 seconds)
  done (took 6.93004705 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.143800054 seconds)
  done (took 4.073523686 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.031847256 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.272991255 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.489506736 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.527946882 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.580229205 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.829135754 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.34022806 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.227667519 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.438072957 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.450353745 seconds)
  done (took 26.120390575 seconds)
done (took 139.583870442 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.351137448 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.033657837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.206950671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.363858281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.245062257 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.205913515 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.226528593 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.36410468 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.048875025 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.035850735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.369843584 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.248153735 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.173106153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.024505788 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.177727266 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.012051846 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.238089241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.37106519 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.05007744 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.287528645 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.239844848 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.007886585 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.201403019 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.023015838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.24373393 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.157158397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.549812893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.01627646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.187263185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.565969367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.162923099 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.430296391 seconds)
  done (took 172.749561226 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.00307111 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.005208989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.005210876 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.002942974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.477198406 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.009591343 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.006623578 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.005292372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.455336611 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.45983951 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.003950042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.470834263 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.008808097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.004207139 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.005067981 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.003714524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.626456132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.00412767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.005294162 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.004504808 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.006350258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.296992935 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.007585959 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.315859324 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.618233242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.005311363 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.004422451 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.005903256 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.005850216 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.006433227 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005507748 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.00654647 seconds)
  done (took 213.787356204 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.952139148 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.005773518 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.008145542 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.004624094 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.005999912 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.004582778 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.004889532 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.028511634 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.765924848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.763526393 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.008086329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.007408821 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003432997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.005447719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.006741079 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.003741063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.004446754 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.988316346 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.006486549 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.007263031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.007719046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.638989112 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.018195042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.661859528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.005524269 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.006597171 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.005229441 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.005171974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.004906906 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.006466053 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.005503934 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.005170477 seconds)
  done (took 224.888906871 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.247958582 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.004998924 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.009049751 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.914536079 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.005940399 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.005439773 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.99432061 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.251095402 seconds)
  done (took 20.367271567 seconds)
done (took 633.728069935 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.381785644 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.224926324 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.184109871 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.030976528 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.308882614 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.082650402 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.026737475 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.093230795 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.875923315 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.109157185 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.694652144 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.050724167 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.793506287 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.056246086 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.153629151 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.088878144 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.617628933 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.728863928 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.168815179 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.105561413 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.213552908 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.968588811 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.110146428 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.924809248 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.706105991 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.021209798 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.086349594 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.637886528 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.04139554 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.188652788 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.69818252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.318186389 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.044864559 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.02729332 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.08389703 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.062881775 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.260946229 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.042938931 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.153602948 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.765434249 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.126360364 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.782336913 seconds)
  done (took 108.975949848 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 2.017103233 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 2.013925946 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 2.015320911 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 2.015369432 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 2.024311126 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 2.015420909 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 2.014611141 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 2.015062801 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 2.015330771 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 2.01486492 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 2.014440982 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 2.023284364 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 2.01618508 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 2.024384662 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 2.015817474 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 2.0153734 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 2.014810891 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 2.025680356 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 2.015520149 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 2.015688572 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 2.015959059 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 2.016167235 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.009984238 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 2.015089223 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 2.015555588 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 2.015980415 seconds)
  done (took 54.37988084 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.010977275 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.161277821 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.253150443 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.030342414 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.011362492 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.013854606 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.029017021 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.015434086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.01300132 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.013342932 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.116305216 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.017632128 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.029183731 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.252775329 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.029968632 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.012294048 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.011662634 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.011887841 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.170186902 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.027058376 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.031925164 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.017884498 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.031594971 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.025361352 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.01569361 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.013499938 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.015361282 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.510219504 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.022372484 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.118110377 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.058576099 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.038810821 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.461435899 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.264978507 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.068794718 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.022778143 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.012220922 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.119566303 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.019256684 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.012955473 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.030242883 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.018445957 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.25201019 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.545057099 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.027693694 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.012647749 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.520514447 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.132032883 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.055649754 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.024011692 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.25891447 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.031163813 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.014185181 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.015049479 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.050695179 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.022420289 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.014810001 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.38280735 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.027305018 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.031054575 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.018842856 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.016203586 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.17805932 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.02401509 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.164193884 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.025456626 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.022019027 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.016716485 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.256481731 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.032699973 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.554673956 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.03216151 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.014179011 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.117385008 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.171247649 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.550269196 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.029917007 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179197785 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.480109671 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.040303514 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.023022439 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.504598409 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.044614888 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.022601877 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.018563024 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.016442964 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.015456415 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.059736661 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.032219998 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.473953397 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.556645236 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.401441428 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.043542236 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.033103591 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.018172238 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.383801485 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.023394398 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.015137547 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.249873903 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.566384007 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.030136128 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.022012897 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.53272558 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.033543768 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.035573659 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.02594951 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.264314708 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.033605618 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.059549869 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.014989782 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.021770575 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.018708643 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.035785091 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.02546725 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.017776883 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.53064847 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.140534791 seconds)
  done (took 249.789371784 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.017015573 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.017175324 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.016604384 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.020047121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.015960617 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.018153908 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.015761443 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.015115562 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.017476892 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.015768652 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.015876684 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.017512903 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.017391961 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.02001399 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.025497789 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.018982878 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.617591949 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.014651893 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.016402097 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.018110381 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.657183719 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.022060145 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.016960967 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.017851977 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.018009119 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.019344505 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.027719918 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.023018976 seconds)
  done (took 171.698288103 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.017918632 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.131453257 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.034776451 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.047533116 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.026834697 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.019083507 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.115914734 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.035657421 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.025191566 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.018154322 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.018390098 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.079345496 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.028598452 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.116082552 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.049965529 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.125340914 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.121001138 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.025673914 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.018540392 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.019650746 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.048554596 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.02806371 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.080223699 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.144073591 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.036340027 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.132836982 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.038653409 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.021027853 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.022149418 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.134362693 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.037461872 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.080856335 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.048412143 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.040213907 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.137815619 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.134438349 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.123810699 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.123956723 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.026260741 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.020734017 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.020534924 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.022627268 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.136113383 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.038201975 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.020868028 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.137970129 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.038658464 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.021254129 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.022001178 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.021994785 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.035674947 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.03877093 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.08512322 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.149007616 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.055160962 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.04492809 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.118447898 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.150627634 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.023230695 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.117994582 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.029113092 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.133593266 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.040478071 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.024500983 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.026160282 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.023267571 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.051106912 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.126391222 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.127375453 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.029446575 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.118875694 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.058961022 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.03153417 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.023150805 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.023049118 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.135420379 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.136868496 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.05759971 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.058784452 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.054091323 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.032282857 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.025194318 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.02647488 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.042287662 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.028040241 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.134921131 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.138272361 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.02963465 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.022860225 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.023828949 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.024369215 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.049408538 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.14295764 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.059003287 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.130328684 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.089334212 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.095414702 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.034944161 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.039132041 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.028647276 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.086093794 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.038319592 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.035709899 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.331006361 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.083451668 seconds)
  done (took 218.864504637 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.390532841 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.07371538 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.080876725 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.341487965 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382851648 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.162367076 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.071609465 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.073499045 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.097219242 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.257429996 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.137907901 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.093664505 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.062999578 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.049290178 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.076249772 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.095557962 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.083498529 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.412430995 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.276852913 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.236682489 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.068264308 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.348717085 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.401475257 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.659114458 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.127582904 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.496007754 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.677910342 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.214979297 seconds)
  done (took 66.406906216 seconds)
done (took 872.045097811 seconds)
SAVING RESULT...
DONE!
