cset: moving following pidspec: 10499
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.182845302 seconds)
loading group "string"... done (took 0.521498576 seconds)
loading group "linalg"... done (took 9.89128493 seconds)
loading group "parallel"... done (took 0.166497141 seconds)
loading group "find"... done (took 2.620882221 seconds)
loading group "tuple"... done (took 2.118746774 seconds)
loading group "dates"... done (took 1.399494206 seconds)
loading group "micro"... done (took 0.549486202 seconds)
loading group "io"... done (took 0.556933149 seconds)
loading group "scalar"... done (took 53.835837209 seconds)
loading group "sparse"... done (took 13.686593 seconds)
loading group "broadcast"... done (took 1.326346771 seconds)
loading group "union"... done (took 2.554930319 seconds)
loading group "simd"... done (took 3.557278152 seconds)
loading group "random"... done (took 13.330151114 seconds)
loading group "problem"... done (took 2.347101254 seconds)
loading group "array"... done (took 23.855938927 seconds)
loading group "misc"... done (took 1.107469835 seconds)
loading group "sort"... done (took 3.729185075 seconds)
loading group "collection"... done (took 20.798840765 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.774945221 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.166656811 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.248590939 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.308299151 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.29994155 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.209163515 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.201230992 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.180452839 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.625357498 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.232649375 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.19545877 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.409174806 seconds)
done (took 6.65331461 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.285326601 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 0.143444157 seconds)
    (2/2) benchmarking "String"...
    done (took 0.215074888 seconds)
  done (took 0.993368068 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 0.136313298 seconds)
    (2/2) benchmarking "String"...
    done (took 0.163850674 seconds)
  done (took 0.937856735 seconds)
  (4/5) benchmarking "replace"...
  done (took 0.125135473 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.167788469 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.147797554 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.132698238 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.148505856 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.133063374 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.147844538 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.145855733 seconds)
  done (took 1.658965484 seconds)
done (took 4.637466168 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.487997977 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.913151484 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.56640176 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.207873497 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.355494213 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.326965158 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.350188056 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.257254577 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.134780809 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.118318733 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.210879308 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.467478638 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.443445525 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.980259401 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.103558936 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.153595118 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.17434512 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.822412161 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.121106239 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.15603417 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.539306057 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.235104584 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.16036817 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.199863991 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.242901734 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.172623251 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.17089573 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.146752627 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.724934573 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.175698226 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.240764221 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.126687686 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.169774821 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.200143809 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.282812201 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156396195 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.734869976 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.242495544 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.12782664 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.142637695 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.736193918 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.163603589 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.243441021 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.149537263 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.120553887 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.184027965 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.144857639 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.122531926 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.157035517 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.148615139 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.211636969 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.485984297 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.149882268 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.231993286 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.153776094 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.738919172 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.145889807 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.333587871 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.182784254 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.149785157 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.121921155 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.149027128 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.200317424 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.139044461 seconds)
  done (took 22.770335672 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.208686164 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.228961361 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.140623353 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.187671947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.189273769 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.140002398 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.132536333 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.137827463 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.157611902 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.239457044 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.185279982 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.238439666 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.118691392 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.151199794 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.199137441 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.27880199 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.168633132 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.152176156 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.150416529 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.15454252 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.170105796 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.160111858 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.138075927 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.154632651 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.214109662 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.248376361 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.152083219 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.16652468 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.147044259 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.1421779 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.18616625 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.205305846 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.119238808 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.148328017 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.217502348 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.166047121 seconds)
  done (took 6.961911221 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.26779326 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.147689125 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.276350232 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232134389 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1880454 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.219606554 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.224263144 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.318435073 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 0.249007457 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.538458194 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.207271348 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.170621392 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.140956464 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139235837 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.124339167 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.14232803 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 0.876125238 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.215953084 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.200158362 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.219023007 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.156316472 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.124581238 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.413109002 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.144347738 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.128147741 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.153416991 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.096848077 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.252351888 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.156003305 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.524248731 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.127818652 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.157349571 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171429548 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.242820266 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.231867455 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.183752447 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.165478413 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.155280605 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.127622774 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.254685726 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159680238 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.00047322 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.127877878 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.137613484 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122839853 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.176799753 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.175717472 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.152915911 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.148795363 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.180687434 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.145218976 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152899205 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.920821322 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.12657304 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.239329504 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.19587382 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.145946764 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323573116 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.150337987 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.159622536 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.133020613 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.252718164 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.163175116 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.141954792 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.123021292 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.154324309 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.139807787 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.146152315 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.283850776 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.139285448 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.15340921 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.145048614 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 0.762969432 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.145849253 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.129469312 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.166135597 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.130225456 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139449652 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.12831762 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.141115232 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.132341203 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.139498999 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.131891002 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.138976247 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.192288 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.155337614 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.148106557 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.169501599 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.147505066 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.12865284 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.172461011 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.141237619 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.132506507 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.223660026 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.159370262 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.124678101 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.157913978 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.187753003 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.146228451 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.240475481 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.141093745 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.126861464 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.170409838 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.143282644 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.157185853 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.155815097 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124637298 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.14769437 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.123053559 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.142927603 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.194411931 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.14370347 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.125556425 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.148404543 seconds)
  done (took 27.707772801 seconds)
done (took 58.072755087 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.413025773 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.113639296 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.111258652 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.134017992 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.112379764 seconds)
  done (took 1.604774162 seconds)
done (took 2.307470624 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.169577514 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 0.263601141 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 0.196438757 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 0.169731303 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.1435876 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.163866579 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.165166912 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.145385754 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.162140048 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 0.168175188 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 0.147007253 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 0.187830794 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 0.161228975 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 0.174672632 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 0.155389024 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 0.202837882 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 0.147930773 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 0.16466904 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 0.201371778 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149159822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.164331103 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.148564936 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166572147 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134397067 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165604785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.150157254 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.16395798 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.148328882 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.159080849 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.134287646 seconds)
  done (took 2.387461494 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 0.163517444 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.149352423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.16572168 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.139695472 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.164350048 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.134400758 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.165253664 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.147540585 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.169812167 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.149904755 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.161396158 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.13385984 seconds)
  done (took 2.383584115 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 0.148000497 seconds)
done (took 9.103756265 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.763279015 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 13.012756985 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.198810351 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.332980736 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.680822174 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.312156601 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.653100187 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.24219345 seconds)
  done (took 18.014420176 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.209297544 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.156539176 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.13895301 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.155255812 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.13945106 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.157555934 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.138881237 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.150669018 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.135262457 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.150943815 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.137270613 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.155009422 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.136136186 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.151927506 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.135453942 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.153570364 seconds)
  done (took 3.177930014 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.16290251 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.177200682 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.141155343 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.16248358 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.139519933 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.157000474 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.143333713 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.159079244 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.139349995 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.154654175 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.144855004 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.158497396 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.142849952 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.153471441 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.143998875 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.162138429 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.156081362 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.143077496 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.158745695 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.143008552 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.159241961 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.140431637 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.158216716 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.142731893 seconds)
  done (took 4.424427563 seconds)
done (took 26.322388488 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.196816137 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145382555 seconds)
  done (took 1.066938574 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.19945111 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.21721932 seconds)
  done (took 1.148870793 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.160592825 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.151333098 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.166633584 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.163299664 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.136369542 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.151090738 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.160556705 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.152856742 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.142469279 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.152632269 seconds)
  done (took 2.272942484 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.139814328 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.156167708 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.15092976 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.204111352 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.143975937 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.154344523 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.141038964 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.155816575 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.14217595 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.151240996 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.140856779 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.167504659 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.156321765 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.155404426 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.156482233 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.14209509 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.161570976 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.139588285 seconds)
  done (took 3.493800816 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.137339576 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.13725892 seconds)
  done (took 1.014319336 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.139076414 seconds)
    (2/7) benchmarking "second"...
    done (took 0.151509691 seconds)
    (3/7) benchmarking "month"...
    done (took 0.138356801 seconds)
    (4/7) benchmarking "year"...
    done (took 0.153145963 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.136433674 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.135591067 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.151952032 seconds)
  done (took 1.746742241 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.630299431 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.271379341 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.424137619 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.125695159 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.137672414 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.366831214 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.154830908 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.106953722 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.126035216 seconds)
  done (took 3.115043068 seconds)
done (took 14.589558859 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.138084475 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.225037766 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.64915073 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.159259778 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.151954121 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.196276138 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.339778422 seconds)
done (took 2.603183388 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.371763062 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.184107389 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.120964637 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.142541821 seconds)
  done (took 1.560690903 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.12936128 seconds)
    (2/2) benchmarking "read"...
    done (took 0.160715423 seconds)
  done (took 1.039824392 seconds)
done (took 3.352537592 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.154022421 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.153700791 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.139870682 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.155293735 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.141143024 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.155861285 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.139338766 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.153106652 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.141135582 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.153074738 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.138791796 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.154520872 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.137994501 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.155179671 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.138086923 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.155163473 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.138914558 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.153705775 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.136676727 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.155647392 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.139830402 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.153314264 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.140679814 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.156075498 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.139642543 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.156983966 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.137323209 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.15438973 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.139565263 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.155727736 seconds)
  done (took 5.17105887 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.164807921 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.133579133 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.151143026 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.143750536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.149075192 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.137029934 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.148991694 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.134142935 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.153210604 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.136723373 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.154745685 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.136345342 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.268383442 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.136557515 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.154663777 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.160799037 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.163179442 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.134498699 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.150162428 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.138090834 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.155697608 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.133179297 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.154161272 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.137894373 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.135766562 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.149656577 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.136732024 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.152389145 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.137155682 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.153245609 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.139704575 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.156335696 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.136489086 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.163008284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.140037006 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.152687992 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.143532343 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.150729884 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.139110973 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.152363313 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.134607926 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.153844983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.134807968 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.160399087 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.136942194 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.155507532 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.134496428 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.140707267 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.154072504 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.139752042 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.150261429 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.135288154 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.15635006 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.138739081 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.157141457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.133843435 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.153567953 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.133805396 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.154505484 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.137259291 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.150421583 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.133414797 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.158408569 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.137544827 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.169396103 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.143510449 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.150106624 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.137859595 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.15429036 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.141599565 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.156600925 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.147666218 seconds)
  done (took 11.398936817 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.139309474 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.13595368 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.154419996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.137275135 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.152870238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.136728779 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.154293209 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.137788649 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152629299 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.137466513 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.154074096 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.136346709 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.152483021 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.137034545 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.153838448 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.137291485 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.138032213 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.152795675 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.137806754 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.154683385 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.138734191 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.153428053 seconds)
  done (took 3.951172087 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.286205227 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.144553071 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.204929477 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.167368302 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.156400062 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.169211983 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.142141654 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.163158255 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.144070148 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.166042815 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.147200456 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.160154366 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.156671296 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.163827273 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.165517491 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.149176015 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.160991941 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.149064289 seconds)
  done (took 3.764188828 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.140031739 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.13757308 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.155504133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.138611539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.155697404 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.138963275 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.15474336 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.137439641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.156501238 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.13954973 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.155474283 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.13856398 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.155825076 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.137490696 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.139647744 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.154286527 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.139618487 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.15543285 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.139462394 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.155742487 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.137439018 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.156255679 seconds)
  done (took 3.990062919 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.153605793 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.159480232 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.159587363 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.16191342 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.139627794 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.158986218 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.145172055 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.158399751 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.145977199 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.158963131 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.141467741 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.158489164 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.154425673 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.158829483 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.145957277 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.158939508 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.14088023 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158734368 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.140645231 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.159291895 seconds)
  done (took 3.829834842 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.231672939 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.174400809 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.17436944 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.163482243 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.176759623 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.155167095 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18075911 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.156522767 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.173650839 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.1864453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.156540609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.17506107 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164656964 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.179214864 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.156892719 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.183731461 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.165092012 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.18073512 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.17468204 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.157436158 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.186405547 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.15745821 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.183528306 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.156712031 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.175189322 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.176169895 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.155686395 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.179776098 seconds)
  done (took 5.60856584 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.153658472 seconds)
    (2/2) benchmarking "in"...
    done (took 0.168865424 seconds)
  done (took 1.100727888 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.144483665 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.143112472 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.159719175 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.143045272 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.160222326 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.143492244 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.16096007 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142197961 seconds)
  done (took 1.976733576 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.207582535 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.229338331 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.165837846 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.153272205 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.229486432 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.216704559 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.222091541 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.145925213 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.164761637 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.133138583 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.222741466 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.13301476 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.160368351 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138289777 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.160058582 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.147112494 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.159262524 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.150206819 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.166175228 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.143782731 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.164724092 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.148587721 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.161627218 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.150908174 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.154761094 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.145072133 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.164414156 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.169219831 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.138745629 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.16291953 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.140151218 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.160465362 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.146189282 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.164446375 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.1431198 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.228025589 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.151569596 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.158310363 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.144143349 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.165136038 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.172721377 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.160022851 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.145693376 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.16008797 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.147833747 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.163413543 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.146819919 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.160611162 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.135513759 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.155955457 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.143523947 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.156555016 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.141412349 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.161207797 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.145431638 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.166898405 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.143722596 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.157420259 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.139518223 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.156610105 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.141492625 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.15782832 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.163356373 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.144615948 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.163082186 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.144014243 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.16135414 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.141861254 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.161788769 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.143742667 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.16216006 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.181302461 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.164121758 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.155800455 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.166826136 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.14208864 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.159008341 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.145846113 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.160394663 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.14325977 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.166388875 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.168189388 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.164072559 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.138203547 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.157974857 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.148329553 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.163620329 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.144920245 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.154149863 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150710631 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.163508849 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.1423285 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.155217997 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.142015192 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.157916285 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.14551748 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.155950687 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.142574515 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.158899213 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.146305545 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.16530218 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.140710691 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.164585669 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.147419245 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.168020747 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.142525905 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.208536134 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.140645671 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.159080819 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.143418592 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.166712675 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.138345325 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.161880064 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.142938825 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.160107918 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.138889684 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.167697073 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.144972284 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.163064682 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.147406642 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.165733989 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.146632487 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.162426085 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.141951864 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.159617514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.14587537 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.171247871 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.146213044 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.164307599 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.144184238 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.162707259 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.144359717 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.165091142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.140903502 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.168141288 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.140757918 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.160207919 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.144685414 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.168112996 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.144861771 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.158637638 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.142874514 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.165050587 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.143331991 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.165329628 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.145522465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.158079766 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.135273718 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.164222781 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.13995824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.163314366 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.151508124 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.159819494 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.145650276 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.15955939 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.15133812 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.160075092 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.147678248 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.163475321 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.149145659 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.167689787 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.136526593 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.160282944 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.145508668 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.164738812 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.139573573 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.16372283 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.142737842 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.171238394 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.13668485 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.168307643 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.135756809 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.16059895 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.148851024 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.16434257 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.155739571 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.16040404 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.180625623 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.17520289 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.149678052 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.16568264 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.145493654 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.168199647 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.143581783 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.168811997 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.148872154 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.169110737 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.142689149 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.164346879 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.15030215 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.16119905 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.146428343 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.164928084 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146477962 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.156917981 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.145352424 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.158628687 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.150205952 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.167522456 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.147568167 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.170728382 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146609334 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.164308281 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.151432192 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.162113163 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.147667052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.157835987 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.15028485 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.176440412 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.150227758 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.171975815 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.147701017 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.163767609 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.145681257 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.173496424 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.146896754 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.165725439 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.146574951 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.159723562 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.137818075 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.172390796 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.147783468 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.160916124 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.14348437 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.16740093 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.147089602 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.164345289 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.136918809 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.169340445 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.148589569 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.162255148 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.147178254 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.162338278 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.144172797 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.174022028 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.138387588 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.162683707 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.147186524 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.169872711 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.143880107 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.1674452 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.146930521 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.172879362 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.147785515 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.167553782 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.141874408 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.173419978 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.14311939 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.166252236 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.142500499 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.14944191 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.16092316 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.147443815 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.167124692 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.144969876 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.163399597 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.17219236 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.15114108 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.170613772 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.143525902 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.170284737 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.150296637 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.151875049 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.162336251 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.172236746 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.140421175 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.139761944 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.162565316 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.140107101 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.165990805 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.14323433 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.16884668 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.145468627 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.165176321 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.15011161 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.169323911 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.14499329 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.169438864 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.179224334 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.140773935 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.159755863 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142078158 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.167289359 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.141328188 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.163224118 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.146642759 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.167903316 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.148202063 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.170736493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.142820748 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.165767291 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.149966517 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.166178608 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.151611744 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.170862088 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.15129856 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.163667627 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.148153325 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.165707032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149833234 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.16201878 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.145804614 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.166807733 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.144923942 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.164702436 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.144074825 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.163979919 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.13967177 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.16467427 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.15196215 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.166085998 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.150127688 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.167584178 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.1459439 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.164386433 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.14162791 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.174105327 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.144239507 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.175408091 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.147788519 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.16068855 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.139262278 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.172602158 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.146334163 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.173219117 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.140807759 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.151496099 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.173163309 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.152214223 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.166295142 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.156317369 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.17479343 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.15354597 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.172610704 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.141697319 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.16479247 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.174407082 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.146066894 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.150167337 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.167831038 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.143021856 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.169644101 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.153131072 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.168056709 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.14709649 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.160334265 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.147683009 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.172464794 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.151393343 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.170184137 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.149340383 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.168205492 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.144321473 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.172529083 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.151955302 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.16866704 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.153095943 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.168681762 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.151989733 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.164374769 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.152887498 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.168124897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.141415612 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.161797267 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.14485232 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.17519626 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.141758612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.171645839 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.152145 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.165872353 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.146576063 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.172462565 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.144005545 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.171082233 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.151447259 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.166169242 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.156229533 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.168825442 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.146950406 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.174006306 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.152069741 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.163121872 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.146393636 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.168152646 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.153617572 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.168948969 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.150817188 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.169948497 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.152079202 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.174728042 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.150926753 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.172956959 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.153514413 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.163250376 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.154137441 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.17294549 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.148610217 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.168204124 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.145651853 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.164302117 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.14761939 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.175916778 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.145967489 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.178297757 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.150855679 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.167882508 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.146384232 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.173565918 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.146377146 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.17623189 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.145042369 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.172459786 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.14190385 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.173739477 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.148087549 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.175954507 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.145536088 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.165751839 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.153662383 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.173448478 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.150691313 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.173584141 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.153882141 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.164412195 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.141298853 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.171914786 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.145740265 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.179316099 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.149862078 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.168893123 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.146782719 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.172625551 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.14755492 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.176028117 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.143178647 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.145900708 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.171295723 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.172050874 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.147033315 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.16500488 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.151065881 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.171351084 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.149865266 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.170738608 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.141941635 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.16994612 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.154711781 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.168688643 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.145089588 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.168413605 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.154719979 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.170646305 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.144053606 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.164947272 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.154673798 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.173387583 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.154567694 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.168323108 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.150282859 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.168439319 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.150636262 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.177652761 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.14637279 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.17114822 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.147762646 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.176800832 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.154511923 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.162850191 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.146079159 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.179689101 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.15338094 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.174392674 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.150713977 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.169097761 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.154822535 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.177072152 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.151351297 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.164843697 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.145010074 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.170772693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.142658373 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.151811286 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.175981058 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.169829455 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.147606702 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.176042294 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.152175418 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.152719307 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.171429307 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.144770977 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.17596074 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.148685652 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.174086436 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.144120792 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.165007025 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.152856049 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.175055414 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.150583353 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.171035739 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.152013357 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.173308996 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.14680691 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.168732226 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.154987836 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.173640645 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.155216703 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.171606227 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.149194512 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.173048701 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.159625285 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.171765535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.150071888 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.177741426 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.157070019 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.170236411 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.151491313 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.173958733 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.156996051 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.172932349 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.156966245 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.167914784 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.152530104 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.178537581 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.159333949 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.17978188 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.150237867 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.165381706 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.154797669 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.168455621 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.145914891 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.175344863 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.158284937 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.176211384 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.152000193 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.168815114 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.159839917 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.176464407 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.151427791 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.169364292 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.150765597 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.174683055 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.150591453 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.173482464 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.14854109 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.178590451 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.15698775 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.177254666 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.160885967 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.16655999 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.156718451 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.174817481 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.158955799 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.171228285 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.146178446 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.165857487 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.153920346 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.178896084 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.156899745 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.173221786 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.154225684 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.175873711 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.153315657 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.172492158 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.150152407 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.178015911 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.155598938 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.172308481 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.152756191 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.172362607 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.151461464 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.17315733 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.155702018 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.178976727 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.152554946 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.182244633 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.154015994 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.174886723 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.14891425 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.173127262 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.15367697 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.173723022 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.155691417 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.170202012 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.145381097 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.179050748 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.158360551 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.172365443 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.157563134 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.179557434 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.149528923 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.175617073 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.157952786 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.176689114 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.151958222 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.175300217 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.153009542 seconds)
  done (took 95.387722165 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.20369273 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.181223899 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1524128 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.173912925 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170583793 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.176548141 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152942795 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.175369764 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.153947973 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.185189523 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.15486805 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.175044721 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.168724233 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.195699603 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.193698313 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.162961055 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.176248186 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.15478871 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.173634102 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.153960841 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.189258574 seconds)
  done (took 4.504551657 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.155608128 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.153529274 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.173834515 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.152941305 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.173521252 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.15381834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.174626328 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.153326038 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.174048089 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.152930474 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.175046991 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.153382804 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.173833367 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.153092383 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.154661838 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.173483172 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.154309784 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.173706507 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.154363492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.17476852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.154086079 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.173662179 seconds)
  done (took 4.46483337 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.184217247 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.157484024 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.170447762 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.154864252 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.178735452 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.155032019 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.178956907 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.155407994 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.18203901 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.148157847 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.166790342 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.148090775 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.173699609 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.154006097 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.171093571 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.153932491 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.183356843 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.156642343 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.181583601 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.153097082 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.167862829 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.153620619 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.154561889 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.166181486 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.161294312 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.178820028 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.157381438 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.179507433 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.147304929 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.179962415 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.155609433 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.169499371 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.145869537 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.166899178 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.144835277 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.179807024 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.157405541 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.176168775 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.155717893 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.168515654 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.155347126 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.180594802 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.145179771 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.155675618 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.176426955 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.148727327 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.178962474 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.154570505 seconds)
  done (took 8.752867302 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.184417395 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.212346256 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.158348447 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.206382068 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.193781462 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.164331927 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.182144148 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.184251693 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.180153151 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.157952258 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.193358936 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.17032959 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.18159252 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.162684606 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.182518261 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.181979613 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.161020328 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179209706 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.162580057 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.181151637 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.162154251 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.182682223 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.168893772 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.189712287 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.160771986 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.179586134 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.160121586 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.182672054 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.167374899 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.18423847 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.162974846 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.183697931 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.191166002 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.158648982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.179532216 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.159747573 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.191402449 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.159612904 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.181545979 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.158004254 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.181028205 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.161373254 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.18144752 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.170461362 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.181149196 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.161610738 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.181344942 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.158736397 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.187461039 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.161560853 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.187899982 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.193166936 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.16129504 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.182553972 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.162502989 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.191978404 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.160183996 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.179260292 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.161291982 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.190453184 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.158472312 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.182903483 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.169310809 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.179753173 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.187607849 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.169342997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.183395262 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.162785304 seconds)
  done (took 12.914529963 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.191863524 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.184483118 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.170619479 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.194917265 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.163845321 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.186597285 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.164369601 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.185077101 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.163754255 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.189489473 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.185986987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.29440914 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.165719227 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.191003626 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.164470996 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.456519498 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.163348293 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.184848869 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.163821077 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.18510606 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.164773801 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.193451451 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.163744274 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.191677978 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.198411739 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.161920668 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.184403984 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.164023478 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.193603666 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.164239756 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.197642238 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.165102308 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.183512862 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.194603967 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.175159705 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.187285394 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.16074796 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.185241008 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.163564519 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.184929809 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.161290447 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.194810205 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.163338551 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.181300271 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.164900676 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.185057031 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.195150494 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.176661587 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.190645478 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.169388919 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.187312255 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.171924773 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.185775956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.164801151 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.192180379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.201911423 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.172516888 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.192774154 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.164393949 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.191986008 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.194525641 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.180470194 seconds)
  done (took 12.414073535 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.162689864 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160493787 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.180689836 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.158737807 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.180845939 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.158923374 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.181103406 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.15945576 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.180948551 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.159569248 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.181530396 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.158997599 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.180585499 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.160535714 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.180632293 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.159579585 seconds)
  done (took 3.618307259 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.179156087 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.199724528 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.263834553 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.161149643 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.182419514 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.166216813 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.183878868 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.161397161 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.158225257 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.187592808 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.162773239 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.184459119 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.200638438 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.161188207 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.181795323 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.162781692 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.180219102 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.16358729 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.182234147 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.24022991 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.186978228 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.162102144 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.182635702 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.163792051 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.183607222 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.163410116 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.186950532 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.164699529 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.184330907 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.161355665 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.18187749 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.167487039 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.18028043 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.164954693 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.182569337 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.162473889 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.181417456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.161135707 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.184513995 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.160428725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.185631601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.161259514 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.182650852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.161823939 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.180184972 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.161284608 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.182522752 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.166745688 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.184208316 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.162490567 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.182721536 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.169265873 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.188115478 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.168207862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.191414585 seconds)
  done (took 10.675330251 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.17545783 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.186527859 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.172988352 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.183088861 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.160937301 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.185731276 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.162333826 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.186471097 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.161851622 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.15912096 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.185506521 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.163484947 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1857497 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.161915763 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.185901048 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.162461495 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.18106495 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.162855649 seconds)
  done (took 4.049048509 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.16288911 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.158992664 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.182114269 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.159544909 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.181436978 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.160785449 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.181815096 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.159629677 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.182494658 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.159727797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.18176694 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.159731475 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.182412147 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.159246641 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.159877887 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.18205118 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.160332764 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.182227278 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.160416704 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.181915359 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.160201425 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.182850281 seconds)
  done (took 4.669377681 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.173628881 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.259584981 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.19005237 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.246484583 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.181557309 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.155569267 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.190806192 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.181122274 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.174217817 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.178109074 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.156810843 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.178556381 seconds)
  done (took 3.195743318 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191193272 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.21969409 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.162143349 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.185032698 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170395003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187568542 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167153432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.188392754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.173697498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.200576389 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190321744 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.174895611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.194672259 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.173310391 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.192542605 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170566274 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.187277245 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.16643211 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.183907513 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.206140002 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166865809 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.196022063 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.166268961 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.187422648 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.166172301 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.196821534 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174115474 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.201272596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.18946893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.174041358 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193731195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166609203 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.196647932 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.179020563 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.184739135 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.197880396 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.167574335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203271167 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171600533 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.197454097 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.164040711 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192791799 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.17461959 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.194781832 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.196487599 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.168053324 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.195336892 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.166981625 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.188369158 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.186867636 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.195414176 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197423235 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.170603501 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.196476688 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.174452236 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.210156235 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.201972801 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.17420483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.192911246 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.180193923 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.197870145 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.193773545 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.17808913 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.202295432 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.172042487 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.196978096 seconds)
  done (took 13.157782357 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.206714329 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.187064861 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.167733085 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.202342209 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175168225 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190147826 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.167059401 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.19095418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16707515 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.186176464 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.232719958 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.16745723 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.199666926 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.175824953 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190841709 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16776835 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.190536228 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198550598 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.165461442 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.210520306 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.16938121 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.198127529 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175549822 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.199345323 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.202264525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.171877531 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.189873027 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16840448 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.190016646 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168667579 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.195750261 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.168119088 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.198604063 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.187833335 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175867239 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.190769254 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.168378111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.195644822 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.16893837 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.194176312 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.175827592 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.206187551 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.191970039 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.168864736 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.203557987 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.16859354 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.192672238 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.165658548 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.191343718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.165903002 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.202462429 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.203063005 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.179736153 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.19767669 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16917331 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.190472351 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.169899678 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.190782482 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169221757 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.194502787 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175121468 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191012436 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.213277183 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17050422 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.191396285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.175864938 seconds)
  done (took 13.176748522 seconds)
done (took 232.517346212 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.24550938 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.278913675 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.325424643 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.215770043 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.218774476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.206124534 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.187031309 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.181952443 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.157772505 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.179496894 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.240816269 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.156447314 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.220554791 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.180140491 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.317144737 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.155707685 seconds)
  done (took 4.409076919 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.259480153 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.388563554 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.196927106 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.15998141 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.186307883 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.159271028 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.185086693 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.160103815 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.181918533 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.187900845 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.160488811 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.156004186 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.188692329 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.177975546 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.159681762 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.182498375 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.166180143 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.181448201 seconds)
  done (took 4.398501315 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.18382945 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.227040116 seconds)
  done (took 1.36755125 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.195674701 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.281123126 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.387122593 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.233765814 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.182635797 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.200647977 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.2341577 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.172020481 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.273423826 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.171541958 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.196350302 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.181706679 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.186551755 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.188712415 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.176785839 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.180620495 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.189221207 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.198705198 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.175111117 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.184869483 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.186142724 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.188762573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.166957409 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.197918604 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.266475098 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.17374096 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.189399121 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.166371175 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.185763664 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.175153459 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.191522587 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.204778147 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.172897682 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.245223261 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.187530188 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.242364311 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.168983418 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.18426183 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.175860203 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.183945205 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.163862171 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.186075101 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.175980715 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.182603792 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.166124039 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.193908538 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.166244618 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.188747605 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.193028337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.17047086 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.19277941 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.167960823 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.239595856 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.19369854 seconds)
  done (took 11.579973547 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 1.013181384 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.219450504 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.191885014 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.042184747 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.220710714 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.174942362 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.98935766 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.188348737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.280479761 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.031579576 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.199363192 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.16621005 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.215825812 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.26891107 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.268120781 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.31060459 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.873005229 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.193501421 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196890824 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.213741835 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162079933 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.203186608 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.214955669 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.483655864 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.185543374 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.170744021 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.181470035 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.161869037 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.245791366 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.189767333 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.15840667 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.236944975 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.293708367 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.202341294 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.162274545 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.184329347 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.160001045 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.205423197 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.24127369 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.199066788 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.242977593 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.157946757 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.165604235 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.186658144 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.203522193 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.159270898 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.196188944 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186918714 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210676057 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.158973459 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.202564514 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.16881696 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.183452871 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.176832545 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.186308896 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.304746534 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.330489333 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.160705278 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.200730312 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.180488545 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.249473584 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.170250446 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204001098 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.209283268 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.281015871 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.161421874 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.836096144 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183874494 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.186175103 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.167009136 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.183802218 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16410007 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.187101983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.196992385 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.487068979 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169337499 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.182911176 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167531489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.229843862 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.16778793 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.190323814 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.175829909 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.187470446 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.178577217 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.195824408 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162924387 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.215686875 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.288931468 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.168269675 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.188016944 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.162528259 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.180838667 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.188017362 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.304874412 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.171816158 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.199671408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251285776 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.166516807 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.202676409 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.176900727 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.203779753 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.189298753 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.186971915 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.172773252 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.186483599 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.17494813 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.2009246 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.167246531 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.201593417 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.167162036 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.200758401 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.17392711 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.184425604 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.185422652 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498758485 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178115507 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.184747467 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.185604378 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.192377034 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.245015126 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.167473968 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.328654473 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.190829622 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184825752 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.1853598 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.16045937 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.20251616 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.180961513 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.189367046 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.169147698 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.186144961 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.167514484 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.298822492 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.177923035 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.204827499 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.217143812 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.234453165 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.194535821 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189534855 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.189301307 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188319002 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.188564796 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.17941451 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.188562421 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807467082 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.191778312 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.169595064 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.186860726 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.226223903 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.190827763 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.168195597 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.204972145 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.162056279 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.905849372 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.192122442 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.170479895 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.19241264 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.168688197 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.191930957 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.162302307 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.202351666 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182741161 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.211174863 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.170148071 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.186767696 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.168946008 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.249549755 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.1894069 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.165327164 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.206241279 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.170714759 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.187781701 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.167814249 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.210239059 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190130928 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.197724967 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.176777034 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.583541498 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.168911949 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190261863 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.216533027 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.16615496 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299316625 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.166284816 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.205999864 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.195884966 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.19308967 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.304879431 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.21102548 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.221161361 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.196945372 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.190613069 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.185811162 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.162907039 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.214294145 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.170745153 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.185925111 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.175413068 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.19195941 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.1697227 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.230766619 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.164282047 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.288538598 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.161911695 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.212754839 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.16461763 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.189845263 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.280721486 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.189361022 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.173294385 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.203320833 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.187833209 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.184470873 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.978006877 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.16602549 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.196064836 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.166143063 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204910598 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184369458 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.187876688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.181299345 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.198297429 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179139627 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.259353348 seconds)
  done (took 57.05396301 seconds)
done (took 79.762397402 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.324544871 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.230288617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.425919177 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.236048194 seconds)
  done (took 2.274350105 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.350266942 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.20550651 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.307651708 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.185025116 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.285499826 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.186595687 seconds)
  done (took 2.531495772 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.237461593 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.229631022 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.229662381 seconds)
  done (took 1.708476941 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.273961263 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.274461156 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.414826933 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.328295033 seconds)
  done (took 2.367739892 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.340314909 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.180213693 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.218001162 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.28964528 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.30655406 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271347939 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.188698797 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.238874262 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.217480765 seconds)
  done (took 3.300283869 seconds)
done (took 13.189777743 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 0.213485426 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 0.223743645 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.186625119 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 0.202193196 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 0.200313232 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 0.225350228 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 0.192127814 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 0.222148306 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 0.191666904 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 0.202459356 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 0.19083307 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 0.19967137 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 0.284927701 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 0.197100608 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 0.199675218 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 0.192583621 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.200397683 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.202782132 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 0.222648797 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 0.174324681 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 0.22372675 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 0.199952778 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 0.174878169 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 0.208445489 seconds)
  done (took 5.939754622 seconds)
done (took 6.954794446 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.273218548 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.182750374 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.172644266 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.199984088 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.278751088 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.180979523 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.216391395 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.175346254 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.207979557 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.174350403 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.188488099 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.186637207 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.196374357 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.247117697 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.20351703 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.190925828 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.166085123 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.209882802 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.18910801 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.214604818 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.255107519 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195045436 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.18319736 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.19039224 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.282698083 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.168890541 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.199099487 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.174742979 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.211500371 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.175691701 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.199900226 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.165134881 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.21489936 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.190198884 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.190707582 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.175169221 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.189963839 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.138663156 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.17420621 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.20190897 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.186336959 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.200494966 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.199385644 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.166006423 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.199515831 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.174772498 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.164052663 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.205107349 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.188852853 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.176583817 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.191161185 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.191341276 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.198842541 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.16490959 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.188033702 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.166022686 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.209186874 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.167001398 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.187611813 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.193156646 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.164400306 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.192246816 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.175985318 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.191951535 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.174203918 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.190708106 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.174631404 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.202857855 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.173978665 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.194423049 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.166486581 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.200636646 seconds)
done (took 14.875593655 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.174132282 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.237331526 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.275861985 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.25456381 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.22299289 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.206346699 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.181323067 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.21677493 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.181246425 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.20878255 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.200805001 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.22283515 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.28659593 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.202967741 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.207613587 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.178415056 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.20359815 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.173837628 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.283620619 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.216676542 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.190281106 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.210935091 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.190553059 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.211058306 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.1688949 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.230351865 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.19958034 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.178916311 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.193455257 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.180343989 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.216313256 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.170794933 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.197426447 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.189731391 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.213229529 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.181937988 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.206777479 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.179580003 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.195887017 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.170258925 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.202924377 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.187124135 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.19439336 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.180710756 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.205082241 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.184328479 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.203118636 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.181721186 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.196636571 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.176497106 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.196782901 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.219987152 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.183974137 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.211371257 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.18348092 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.209141545 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.184099067 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.207116754 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.175298375 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.216580351 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.170487797 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.197168561 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.171849572 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.21676723 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.174039169 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.210861141 seconds)
  done (took 14.280760559 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.192598722 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.22623577 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.18041979 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.208539278 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.175303412 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.190264806 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.164400876 seconds)
  done (took 2.385080194 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.170261039 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.291895191 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288408075 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.287510053 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.28486356 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.295363766 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.189816708 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.191959761 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.205276026 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.203148285 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.292684581 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.326550968 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.177574705 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.208650237 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.291510322 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.16683216 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.291544557 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.272499429 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.181408978 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.289855588 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211278806 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.20130088 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.205607318 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.166263926 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.283577362 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.195291647 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.340190508 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.185437523 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.204522553 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.182484468 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.208901736 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.274731672 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.286095199 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.183641726 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.201366045 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.2598 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.285776006 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.209465987 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.301271782 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.172224926 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.285226085 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.208681441 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.183143437 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.208622996 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.183352685 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.274643057 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.213012957 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.184989328 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.207248017 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.268981486 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.206603364 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.288999178 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.180388039 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.209806084 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.17677641 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.211843256 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.190745872 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.2095853 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.300805118 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.185684508 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.288036177 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.290969137 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.287840766 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.289534777 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.193432794 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.290533125 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.278254104 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.208022937 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.257994556 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.212089394 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.291072563 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.180034314 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.208291199 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.280598751 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.186007948 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.292901071 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.293711468 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.206475529 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.183210393 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.198012775 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.181225554 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.193696442 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.264304401 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.2105221 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.179495556 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.216935851 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.208056008 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.183374069 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.286781398 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.217570241 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.182614285 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.206928479 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.188169626 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.208260702 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.184565159 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.293201032 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.206847529 seconds)
  done (took 23.43329875 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.175064321 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.169034644 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.20123582 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.169017913 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.196410232 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.169039931 seconds)
  done (took 2.163810315 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.212805005 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.208079236 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.19233184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.210688193 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.234891039 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.296492717 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.301934269 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.207047298 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.20058842 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.220928063 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.299459996 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.302541691 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.272140921 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.219162487 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.304847183 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.184518733 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.304859589 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.21113249 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.192578475 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.209374952 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.182952892 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.218700191 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.179620727 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.289252054 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.214137826 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.184893375 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.205444527 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.191331222 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.221085595 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.203410476 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.188247343 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.210766051 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.178455998 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.203945916 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.303282027 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.176856005 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.206225864 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.186659089 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.212629856 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.18438359 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.302856509 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.208009848 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.191909835 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.214720124 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.179900139 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.204458191 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.187141753 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.203707605 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.308009985 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.188094144 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.215202381 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.184425408 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.213155496 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.187480914 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.205007165 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.178913892 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.215160455 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.30640083 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.187787848 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.206665692 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.184250145 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.214177037 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.206386679 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.190249915 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.212259957 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.187621903 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.203508429 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.187207059 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.208278318 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.185556653 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.213303866 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.184632144 seconds)
  done (took 16.680489351 seconds)
done (took 59.982329682 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.808231281 seconds)
  done (took 2.890095175 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.036583878 seconds)
  done (took 2.123732719 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.094735032 seconds)
  done (took 19.213622201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490064888 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.41476531 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.112794651 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.243761658 seconds)
  done (took 3.347677491 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.157591433 seconds)
  done (took 2.254781745 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.493743173 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.353345742 seconds)
  done (took 1.937913612 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.821202326 seconds)
  done (took 1.925583948 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.812375252 seconds)
  done (took 2.909828438 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.339109623 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.313558718 seconds)
  done (took 1.756818077 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.693505582 seconds)
  done (took 1.799502689 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 13.572220966 seconds)
  done (took 14.683004477 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.327445968 seconds)
  done (took 1.437706553 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.365395295 seconds)
  done (took 1.479020095 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.634101615 seconds)
  done (took 4.749820859 seconds)
done (took 63.608913118 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.190122627 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.212620771 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.188296613 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.211444481 seconds)
  done (took 1.901794915 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.192857777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.210085142 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.189937163 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.209087931 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.191702301 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.210769164 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.184453293 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.212718696 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.184595773 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.211114314 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.184353447 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.181117378 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.213667704 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.182028384 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.210689277 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.184963162 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.215195831 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.20990189 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.186521049 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.184074946 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.213274138 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.212123454 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.188954695 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.215048936 seconds)
  done (took 5.888609611 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.185694506 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.172699256 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.204442703 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.17145565 seconds)
  done (took 1.846126727 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.200363256 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.224741643 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.19840559 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.221721517 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.200691096 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.224743517 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.18343601 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.207764013 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.185610891 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.223509352 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.201838916 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.227086458 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.197415078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.216328439 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.196529923 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.206997281 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.187693598 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.225793244 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.194270325 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.223981399 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.18665648 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.221945314 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.183972063 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.225579377 seconds)
  done (took 6.091641644 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.267046896 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.223187712 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.211621121 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 0.243082773 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.182375461 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.240692679 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 0.257120657 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 0.192049506 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.218106089 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 0.191630232 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 0.21267765 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 0.186208719 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.259794842 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.190367635 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.216435582 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.184638036 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.22430664 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.217089267 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.235843013 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.215515609 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.191058704 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.224230694 seconds)
  done (took 5.910201087 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.282144812 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.205592416 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.173193418 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.201984937 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.215679624 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.17973639 seconds)
  done (took 2.385634059 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.180150884 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.168601885 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.199003574 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.169820021 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.202600455 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.169820597 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.196847417 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.170559586 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.197126113 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.171652491 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.1988316 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.17051149 seconds)
  done (took 3.328500914 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313637357 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.218209761 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.351797841 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.462485426 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258483399 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.256656749 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.350678666 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.254373126 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.276914989 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.233174992 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251297128 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259327299 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.251741725 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276525475 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239705347 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.246595254 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238334585 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.330286811 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238428386 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.334407598 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253567246 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.245667103 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.288962389 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246289973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.20627652 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260530781 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.213358056 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197281264 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265017129 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.261873238 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26971595 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218193441 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.239279659 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284903646 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.304922316 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241838994 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.38386654 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200220894 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.26021639 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.291632703 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.331860473 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208618956 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.290086783 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248915165 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.225889448 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281423567 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245413348 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.282845111 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.200238721 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.242167707 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279240572 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.274961464 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.267386082 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203866755 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.399348443 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231323301 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.20964532 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.277904551 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287041223 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300182582 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275924186 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.191207367 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.270578528 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.290435993 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314231 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.209958043 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.260435952 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.220219644 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262496653 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.279586314 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.281628289 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25989544 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.286003962 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197384974 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268972928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264626976 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249677201 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.27414812 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.266489168 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.215445666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21592731 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230389455 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191635689 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.290370615 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217313705 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315972562 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198277083 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.273162507 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.275001616 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221847814 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.258678088 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.256021883 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231920613 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.24587306 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.157857799 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239524171 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.255187057 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226120574 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224801672 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.218554094 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235643082 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.222598389 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220408683 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.218556028 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238110471 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.221648023 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255213912 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237613865 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.230100895 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277395303 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216079173 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.263403225 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264544039 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.294507498 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19837973 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229598553 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.318870211 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238850589 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.23353715 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.268907335 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.297699565 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209036307 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231334495 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26097794 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262144523 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241845889 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.299238499 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204208127 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232039519 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.226943846 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242669068 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.257069432 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.259566287 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194689878 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.263849206 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.287103093 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.194572909 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.235864811 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.281093066 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199648137 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222114244 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202821403 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232921482 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.240073673 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.220845054 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.236306665 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221410624 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265774182 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.264176206 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25213754 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204268312 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267646001 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225597566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.239478141 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.246256191 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.18633873 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273006814 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.297689925 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.224495502 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250931255 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.25970613 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.277224568 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.270289429 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196059867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.282394125 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226012912 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.188651136 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259120091 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.267403709 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231329952 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287989919 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.275904002 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.263914103 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.261364678 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217076127 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267059353 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.284895792 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254921361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.209654579 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.271302765 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267682487 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.188957438 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.221176174 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.196142237 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234718071 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197776023 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.23545725 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.27621703 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232835417 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.302748626 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.237246774 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235675681 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.293519064 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.193410164 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25852455 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.276322237 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207462105 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.290375409 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289933649 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279150217 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208974395 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260197944 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.189222642 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224572277 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231641909 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230183641 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.236907399 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.204343312 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239708135 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.293588315 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266107625 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218193372 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288932971 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.262108288 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304557398 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.189503312 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.264728145 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262195757 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266034838 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.257545976 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229180811 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.22830911 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.29341629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237620251 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292966834 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23799044 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279405593 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293954972 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.264652909 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198675716 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.242651937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232038356 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23660702 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.26115584 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.212419489 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230817512 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215386787 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.236439374 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.23896486 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.284775425 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211779086 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272629302 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.254097904 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266689384 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195766741 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238919875 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.244134925 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243976948 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.164087887 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26482918 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.29069212 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247067676 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220687239 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267559086 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.229000245 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.417862315 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280019982 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272041714 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234599097 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208718536 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.273159848 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.25673176 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227682369 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.287899455 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240355528 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308613062 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.241706964 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.238909732 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199423492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.247906988 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.249946184 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.197989502 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.250994185 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.262859053 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.213323562 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286449697 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235825552 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.240248819 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279457104 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.248117132 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.219332006 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238719296 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328582403 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268465648 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242065267 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.267727722 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.262652867 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284093821 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194116106 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225075479 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.202208911 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.287188781 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199817086 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.279222587 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.263034087 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279669846 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275575526 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.262119176 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.2119292 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.228068193 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236965304 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248227013 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280994721 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233353538 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.207602653 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289098552 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.188140262 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.231163857 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261030205 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.386835368 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217406326 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267407756 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.165662759 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.384538241 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.227926134 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202591546 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.259338529 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268396151 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.202559098 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.28544899 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.245925252 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240043629 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.259778866 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205105527 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.275817732 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.282417309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266037413 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274888603 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.216125826 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.261596145 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.255576102 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239371824 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246784943 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.249295133 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229502356 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.295745858 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.276323284 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.201872142 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.272326222 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.271288934 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.241889638 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272004477 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.239422525 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.254848949 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231224284 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265662174 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207914355 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224372276 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258940327 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.236415527 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230882039 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.272643391 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.271449067 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202192404 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.227161138 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217869703 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.268525206 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239090273 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.202682501 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286694823 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.198432797 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282553906 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312352696 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229298156 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.239661767 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.244565051 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.199409853 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.239653549 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244186932 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201633423 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.273999216 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247693812 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.231385393 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.274135054 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265805309 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234431411 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254315145 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.21223028 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.373874261 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.230278188 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.263921375 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257808649 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.322928156 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.252103139 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247880329 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.27490311 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250826509 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23594496 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249302476 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.328656775 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235000205 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.272149633 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.232656862 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213933994 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240183046 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.204201276 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255123762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270323431 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211462812 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.238903162 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.268719846 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216004674 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.248510028 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212844925 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304700319 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.254262413 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.288027473 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.288633624 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.210539 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.280487349 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.275591329 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199116547 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.267168579 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272928714 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215329196 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254015393 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.235195948 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.208892291 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319147121 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.197693245 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.262418513 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277955334 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.273822522 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243728929 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.236171767 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.278704526 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212533464 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27841329 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197889485 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.255521574 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.274017132 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.206772563 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.228410671 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.275366632 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229788881 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.271005555 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243880717 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.25124626 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298300509 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.195516396 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236256024 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387092244 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.263168457 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268197478 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.226740591 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208954165 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.249558739 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260079904 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.23804402 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276227272 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.232648254 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202160634 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.247364282 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.223838654 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.229011396 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274906484 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.257754439 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25923715 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.289271149 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.212749751 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.361487977 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.244463597 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.245518743 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.20984528 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.200941113 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242180791 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205945406 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242711809 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.281471148 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.319218301 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.237738433 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.250583287 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237107908 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.198908619 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232249512 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.233788023 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253096507 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.270255742 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221286821 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.19639717 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213010529 seconds)
  done (took 121.65346729 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.249743127 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.243869019 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.264072014 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.317930434 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.287366266 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.387102005 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.321127941 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.338504259 seconds)
  done (took 3.664149768 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.196269481 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.261799621 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.243254808 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.191353025 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.213312018 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.550243427 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.240814336 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.190233119 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.265878172 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.228046471 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.183631466 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.657937397 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.221677427 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.222272065 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.221040557 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.181136884 seconds)
  done (took 5.509887318 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.190823002 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.630452612 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.173846301 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.369906276 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.342739029 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.289982503 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.893379209 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.274639055 seconds)
  done (took 13.42056458 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.252433513 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.280645728 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.461445875 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.385350827 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.295001788 seconds)
  done (took 2.939995723 seconds)
done (took 175.643143254 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.200303831 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.196490417 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.229630723 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.228898603 seconds)
  done (took 2.097258517 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.249720702 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.163930733 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.194893518 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.152833787 seconds)
  done (took 2.014403164 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477139664 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.154576233 seconds)
  done (took 1.91296731 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.219666052 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.239988519 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.209407848 seconds)
  done (took 1.935551138 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.209887331 seconds)
  done (took 1.47461742 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.194672037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.192206344 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.316960717 seconds)
  done (took 1.968059349 seconds)
done (took 12.666287434 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.219370208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.043226934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.658061584 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.209009333 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.825726692 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.472326418 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.50731651 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.25333 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.281860669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.215994379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.249318477 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.766530051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.493050822 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.949619264 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.476415291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.948884812 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.799082624 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.185127128 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223397681 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.186360357 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.484950469 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.183406166 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.217457299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.185104867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.795942129 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.494418257 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.214549433 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.9619806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.215974512 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.19662351 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.504765781 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.186268223 seconds)
  done (took 23.854434632 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.187928207 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.274510383 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.24104401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.218881185 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.195141705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.218679029 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.197269881 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.229730837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.323778813 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.185186391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.23922448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.185296152 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.222439798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.186330705 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.241307448 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.185626624 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.218573375 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187648762 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.223628207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.188213793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.238086244 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185658292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.21829898 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.187104955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.215261049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.204868243 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.216167189 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.198741322 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216183208 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.194933043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.220693602 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18706373 seconds)
  done (took 8.10835394 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.230255944 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.287173868 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.242593159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.25678644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.276100636 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.188177457 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.308205885 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.256538372 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.299499304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.21712185 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.209249793 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.217246209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.229141963 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.219896822 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.211068926 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.217641236 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.221274632 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.187003328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.224772372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.18831248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.240628998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.185263124 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.219162755 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.186856463 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.218423798 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.208316518 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.217602969 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.199253528 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.216651605 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.196797813 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.222928824 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.18694773 seconds)
  done (took 8.468570429 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.200984564 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.202942559 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.244656725 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.244035059 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.196897425 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.200136041 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.23395824 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.197465271 seconds)
  done (took 3.002970293 seconds)
done (took 44.704532398 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.216344458 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.239496059 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.210793372 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.239462051 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.798471318 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.230253698 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.209675942 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.229972648 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.206039765 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.246099847 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.187169838 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.230514051 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.212744605 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.234053279 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.316316841 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.207704684 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.319149356 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.315194747 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.198188797 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.24079078 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.198668852 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.319669258 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.238344817 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.199203384 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.293265825 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.193915794 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.305389881 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.234490303 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.202509008 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.22026107 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.316144314 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.201206107 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.199203377 seconds)
  done (took 9.672299686 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.300481537 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.228288446 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.195497812 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.227757844 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.196802709 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.227593416 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.33393717 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.196008575 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.228303522 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.210834222 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.227951551 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.28421407 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.235404176 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.191997214 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.231226609 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.175276906 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.334135881 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.230474396 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.187736139 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.158723922 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.224054873 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.196357202 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.346725818 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.223796707 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.19490082 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.196281435 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.228706743 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.200393368 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.231119083 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.197946035 seconds)
  done (took 8.141302945 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.203419769 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.209483948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.249476747 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.298510762 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.227733989 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.241469177 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.211427675 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.240480872 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.218801403 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.221984341 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.206463989 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.258398782 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.207050535 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.233740893 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.190281889 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.239122623 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.205954812 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.223452384 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.199636338 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.238442422 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.207447375 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.236735282 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.215230951 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.229989384 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.187954657 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.229731968 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.200409136 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.232543042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.198215208 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.237253683 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.192359353 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.224528468 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.191945911 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.256491323 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.191172739 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.237172768 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.211441536 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.23619566 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.203818114 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.256490759 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.225155431 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.191224049 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.250646226 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.246311509 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.22498309 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.20130344 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.224686777 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.205695719 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.1882167 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.242498286 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.265628844 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.189873535 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.243312573 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.189010597 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.220670006 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.198493699 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.222168801 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.19346125 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.239772374 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.191606123 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.242124168 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.19775759 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.202499944 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.227674122 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.203049065 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.222040933 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.190198721 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.227485798 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.218879854 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.231064346 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.229682974 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.22244254 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.202392198 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.237490327 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.202524571 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.235742513 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.190516697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.235904058 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.202582357 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.227511014 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.204064204 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.226150286 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.193573492 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.240168883 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.21091865 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.236548663 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.203904151 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.236111349 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.192275847 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.225279061 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.209020605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.225041878 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.194100268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.23777972 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.191341063 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.226847855 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.201984351 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.233260751 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.188918961 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.251302174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.194485667 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.224223637 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.218392517 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.226633776 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.194716059 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.231440486 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.233727201 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.22353417 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.19977733 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.235185226 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.19289014 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.23132726 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.192979023 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.221785584 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.207931644 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.239796331 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.200868741 seconds)
  done (took 26.908402717 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.417807753 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.411238716 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.295576483 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.457580531 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.239144883 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.328020782 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.406447929 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.411734462 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.191897958 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.259314351 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.282410836 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.368757075 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.194641834 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.253357397 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.413743815 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.4910414 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.222831404 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.263503137 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.260866596 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.205235511 seconds)
  done (took 7.694741696 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.198874542 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.257572953 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.212181392 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.242622491 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.203405286 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.236355055 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.192152841 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.246753531 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.200862615 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.232701255 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.194324406 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.231022116 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.204122567 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.206525694 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.237056516 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.249184386 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.200064268 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.226502524 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.216679427 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.227128421 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.211935067 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.250035219 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.200990245 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.242529027 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.2106336 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.235282982 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.191926767 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.226056837 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.199099014 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.232988929 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.193064035 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.232424424 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.200192011 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.167679902 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.237263442 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.209654877 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.230731958 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.195711857 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.230010847 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.195249936 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.235539205 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.204361724 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.232448913 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.203664024 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.211892784 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.210446811 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.204184094 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.236306001 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.174210639 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.245011854 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.204792308 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.201597708 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.231499135 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.210559664 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.232829061 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.209153219 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.233021574 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.203141937 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.227632726 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.191159167 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.223111458 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.196166415 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.233160487 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.204694964 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.236410385 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.201788515 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.233097199 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.193972502 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.224925246 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.195362022 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.228031576 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.206235471 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.247375658 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.203659149 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.232286448 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.204037699 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.234110382 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.16218225 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.201311259 seconds)
  done (took 18.410301315 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.217703017 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.239237229 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.210375373 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.259409442 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.209967311 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.233800483 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.207613701 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.246062091 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.20905635 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.247819446 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.208611904 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.239712888 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.21581706 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.238080477 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.207021419 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.242365813 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.208417827 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.264590994 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.205981052 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.250698824 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.209026845 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.232405978 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.206646065 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.238056952 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.218785448 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.239116919 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.218128992 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.243199763 seconds)
  done (took 7.711368838 seconds)
done (took 79.82310373 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.49872656 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.654533453 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.433917656 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.43879403 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.457055014 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.458620608 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.433511953 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.439029537 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.901729532 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.409788524 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.427914183 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.43087015 seconds)
done (took 31.364706212 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 2.486230727 seconds)
  (2/5) benchmarking "search"...
    (1/2) benchmarking "Char"...
    done (took 2.439004918 seconds)
    (2/2) benchmarking "String"...
    done (took 2.450354162 seconds)
  done (took 6.221792836 seconds)
  (3/5) benchmarking "searchindex"...
    (1/2) benchmarking "Char"...
    done (took 2.435568246 seconds)
    (2/2) benchmarking "String"...
    done (took 2.443555949 seconds)
  done (took 6.1988778 seconds)
  (4/5) benchmarking "replace"...
  done (took 2.42517309 seconds)
  (5/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.423757618 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.80905751 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.427146853 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.425835836 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.427358368 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.439018264 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.434137684 seconds)
  done (took 17.708452683 seconds)
done (took 36.365858057 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.445132188 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.702836288 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.695381827 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.41019595 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.429169833 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.424173308 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.428743967 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.4848702 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.42766297 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.417067444 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.851355142 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.705438618 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.443108244 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.83689358 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.414705554 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.441232462 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.44127221 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.760688466 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.428029616 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.465352825 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.409291403 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.411380035 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.456612913 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.468076947 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.440909552 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.442305515 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.456389999 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.429863805 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.69867651 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.448999949 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.411497867 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.447649144 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.456219164 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.429391535 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.455219504 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.433026783 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.714903192 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.440234011 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.414557772 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.441181408 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.732316173 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.44770481 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.427578205 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.44477093 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.41948651 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.440827509 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.4082827 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.546687448 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.459243147 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.438595932 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.520614474 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.84305449 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.431347404 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.435511551 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.442501873 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.7620133 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.459778224 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.532751897 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.467506407 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.435174231 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.429855632 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.430487579 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.497677112 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.447713938 seconds)
  done (took 159.181966401 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.429501197 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.432508556 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.43173248 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.435813653 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.432058475 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.432801363 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.431245829 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.428211083 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.433472909 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.430309671 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.434170446 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.429730462 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.433929804 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.436146588 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.438245412 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.44446294 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.4360715 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.435597556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.437274342 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.43101269 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.43949448 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.433969798 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.431280827 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.431837596 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.444930391 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.512706243 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.44727919 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.450130407 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.439597678 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.430690097 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.449436146 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.440295902 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.111201219 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.29612625 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.443402534 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.47388453 seconds)
  done (took 88.673858869 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.434411362 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.430182393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.430250795 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.470239179 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.433561566 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.073115336 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.076630811 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.495056476 seconds)
    (9/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 256)...
    done (took 1.836427095 seconds)
    (10/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.606894794 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 8.016299242 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.703763517 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.432127637 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.527455476 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.445619591 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.433254637 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.527904486 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.455541644 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.433931104 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.434593157 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.072762979 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.446415827 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.973644903 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.619613512 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.432588108 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.469171269 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.829262741 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.430777918 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.467841212 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.777066899 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.47191846 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.431749645 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.795049821 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.398079858 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.434574886 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.54572949 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.434201685 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.469022202 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.434115709 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.717260914 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.431380643 seconds)
    (42/114) benchmarking ("A_mul_B!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.888230023 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.433569553 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.432812696 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.437460017 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.106191971 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.435584585 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.076384633 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.435135651 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.449324738 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.432193884 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.433025947 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.797869068 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.442913328 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.284894604 seconds)
    (56/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.439061843 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.435501345 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.436250209 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.434964734 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.434527427 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.470418219 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.96050309 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 4.347543401 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.432999469 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.43685287 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.468161612 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.433886056 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.434022092 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.535852428 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.50342833 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.080762448 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.43680669 seconds)
    (73/114) benchmarking ("sqrt", "Base.LinAlg.UnitUpperTriangular", 1024)...
    done (took 21.517657246 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.535210883 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.557363786 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.437956282 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.436646198 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.439425374 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.435583187 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.550863277 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.43814851 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.880364778 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.622281399 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.434183411 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 8.057378726 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.535892462 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.43568856 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.854662453 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.440288629 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.437910801 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.193411265 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.531911917 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.43411915 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.437806195 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.436638574 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.881583601 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.077559308 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.777788252 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.437349434 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.065268941 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.440970678 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.434902618 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.894755764 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.045957423 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.099787095 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.439450851 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.55120292 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.621656369 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.440297567 seconds)
    (110/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.436949684 seconds)
    (111/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 8.015854886 seconds)
    (112/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.439189928 seconds)
    (113/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.490279493 seconds)
    (114/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.441003014 seconds)
  done (took 399.031743908 seconds)
done (took 648.212678009 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.421882144 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.422986421 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.423304865 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.441538548 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.422104143 seconds)
  done (took 13.462557413 seconds)
done (took 14.794838033 seconds)
(5/20) benchmarking "find"...
  (1/23) benchmarking ("ispos", "Base.Generator{Array{UInt64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.698864024 seconds)
  (2/23) benchmarking ("ispos", "Array{Float32,1}")...
  done (took 1.700299743 seconds)
  (3/23) benchmarking ("ispos", "Array{UInt8,1}")...
  done (took 1.701109579 seconds)
  (4/23) benchmarking ("BitArray{1}", "90-10")...
  done (took 1.500014921 seconds)
  (5/23) benchmarking ("ispos", "Base.Generator{Array{UInt8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.700202928 seconds)
  (6/23) benchmarking ("ispos", "Base.Generator{Array{Float64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.700276937 seconds)
  (7/23) benchmarking ("ispos", "Base.Generator{Array{Int8,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.586187259 seconds)
  (8/23) benchmarking ("ispos", "Base.Generator{Array{Int64,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.660612917 seconds)
  (9/23) benchmarking ("ispos", "Base.Generator{Array{Float32,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.703513175 seconds)
  (10/23) benchmarking ("ispos", "Array{Float64,1}")...
  done (took 1.702218821 seconds)
  (11/23) benchmarking ("BitArray{1}", "50-50")...
  done (took 1.472335565 seconds)
  (12/23) benchmarking ("ispos", "Array{UInt64,1}")...
  done (took 1.720895004 seconds)
  (13/23) benchmarking ("ispos", "Array{Int64,1}")...
  done (took 1.666785785 seconds)
  (14/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "90-10")...
  done (took 1.515330753 seconds)
  (15/23) benchmarking ("Base.Generator{BitArray{1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "10-90")...
  done (took 1.464338971 seconds)
  (16/23) benchmarking ("ispos", "Array{Int8,1}")...
  done (took 1.592394012 seconds)
  (17/23) benchmarking ("Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##3#6\"))}", "50-50")...
  done (took 1.480109136 seconds)
  (18/23) benchmarking ("ispos", "Base.Generator{Array{Bool,1},getfield(BaseBenchmarks.FindBenchmarks, Symbol(\"##16#17\"))}")...
  done (took 1.61263177 seconds)
  (19/23) benchmarking ("ispos", "Array{Bool,1}")...
  done (took 1.592018465 seconds)
  (20/23) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.756158359 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.78465043 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.490217102 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.722335939 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.47610995 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.744153433 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.772647136 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.64501594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.624295141 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.462508774 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.456957121 seconds)
  done (took 19.270118895 seconds)
  (21/23) benchmarking ("Array{Bool,1}", "50-50")...
  done (took 1.475969411 seconds)
  (22/23) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.7472803 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.772690009 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.494114634 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.718369605 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.478447222 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.739559832 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.776674474 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.646942361 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.62555434 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.469929765 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.459267017 seconds)
  done (took 19.263763961 seconds)
  (23/23) benchmarking ("BitArray{1}", "10-90")...
  done (took 1.456866339 seconds)
done (took 73.577416417 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.479996644 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.546018881 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.472224793 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.458462881 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.457047816 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.457829806 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.459077084 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.457127623 seconds)
  done (took 13.124542099 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.453418674 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.456239981 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.455289645 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.457767095 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.456635677 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.456492482 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.458119459 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.457980442 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.456090327 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.4574856 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.456687088 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.457734778 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.458258709 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.456858327 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.456518923 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.457657771 seconds)
  done (took 24.647416379 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.457904461 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.458709618 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.456660207 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.45803455 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.456359825 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.457360308 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.45875431 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.459443326 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.458282274 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.459225472 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.458499951 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.456797101 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.457407264 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.458479289 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.45940976 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.458026208 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.457485329 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.460491457 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.462318099 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.458007703 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.457914003 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.457429484 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.458785249 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.458216262 seconds)
  done (took 36.338935753 seconds)
done (took 75.452117631 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.446896291 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.45033411 seconds)
  done (took 6.237586925 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.516477924 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.516250539 seconds)
  done (took 4.37431513 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.458928312 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.456297536 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.459247253 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.458601607 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.459920982 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.458165112 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.460408928 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.460274503 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.458402814 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.460979755 seconds)
  done (took 15.931619341 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.460022028 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.459404826 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.459508164 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.458692144 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.458813615 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.458499667 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.459320654 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.461262829 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.460417245 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.459027377 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.460538648 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.460677542 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.461570013 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.460360085 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.461251726 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.460358595 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.460299352 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.460858727 seconds)
  done (took 27.620227874 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.474122393 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.477605616 seconds)
  done (took 4.294415566 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.588907723 seconds)
    (2/7) benchmarking "second"...
    done (took 1.501768911 seconds)
    (3/7) benchmarking "month"...
    done (took 1.565075881 seconds)
    (4/7) benchmarking "year"...
    done (took 1.559361056 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.501882184 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.48266392 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.503674699 seconds)
  done (took 12.046084448 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.454792952 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.756226475 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.944173293 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.630158975 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.448318577 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.466947779 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.447843594 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.470203103 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.470794784 seconds)
  done (took 16.431864035 seconds)
done (took 88.281127839 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.444811548 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.472709529 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.474163876 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.462836839 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.809393036 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.503848053 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.450638309 seconds)
done (took 17.965133647 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.446631132 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.433691402 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.439574587 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.461601357 seconds)
  done (took 11.125809107 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.464556004 seconds)
    (2/2) benchmarking "read"...
    done (took 1.775029496 seconds)
  done (took 5.582449451 seconds)
done (took 18.055639566 seconds)
(10/20) benchmarking "scalar"...
  (1/22) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.465115223 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.464224209 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.462790886 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.464212335 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.464226538 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.463382654 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.465646376 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.463741722 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.463019905 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.462804289 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.46369873 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.462972521 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.465243089 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.463272158 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.465129715 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.463768143 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.463352677 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.464858346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.464290152 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.464834596 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.466123998 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.463979371 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.471030506 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.464995591 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.466181362 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.466303782 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.465907933 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.467793371 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.467974255 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.465619592 seconds)
  done (took 45.292866326 seconds)
  (2/22) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.470304295 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.470944032 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.464452985 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.466596851 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.466801857 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.464046719 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.467228316 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.46495447 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.465020328 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.467222269 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.465530134 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.46599039 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.464874343 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.467712343 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.468490056 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.465873118 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.469152308 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.467496106 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.463865154 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.468238237 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.466484439 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.469753096 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.468868291 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.467190043 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.467890733 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.468254992 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.469113415 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.467576325 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.466537426 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.468437833 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.469432594 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.468499013 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.467729746 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.468176289 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.466744066 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.469061962 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.47338219 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.47569672 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.466760697 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.468291271 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.466951963 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.467639945 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.466868505 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.469639926 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.468077069 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.469425455 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.466611045 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.4691398 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.467262938 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.469378765 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.470209787 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.469497791 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.470532045 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.471471959 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.469344902 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.471345323 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.472440581 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.468377122 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.469250031 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.469472141 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.470858004 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.468329132 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.469310954 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.468173586 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.469859592 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.47264289 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.470804397 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.470261206 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.470794201 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.467624306 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.46963826 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.469983166 seconds)
  done (took 107.077566956 seconds)
  (3/22) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.471431401 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.468223986 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.469389509 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.46949235 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.469312311 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.472084298 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.469732761 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.468984275 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.471317396 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.469942956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.470116048 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.46955324 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.472016241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.47006765 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.470932539 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.471033471 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.46960048 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.472096189 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.469986737 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.474212821 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.472599211 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.473474676 seconds)
  done (took 33.702626428 seconds)
  (4/22) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.473628264 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.472791865 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.47063223 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.472789575 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.471497321 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.471215948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.470762494 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.474846177 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.472609529 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.472250752 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.474488072 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.471709949 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.471945567 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.468943815 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.473799008 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.475063667 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.474206439 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.475471179 seconds)
  done (took 27.86060921 seconds)
  (5/22) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.473475807 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.471056691 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.473101763 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.47300887 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.471920134 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.470154067 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.475472892 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.474309144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.473014526 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.470428054 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.470949104 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.474166874 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.475431258 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.473755762 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.47310733 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.472835067 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.47219035 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.474487345 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.476565182 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.475114765 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.47362861 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.472885719 seconds)
  done (took 33.760394191 seconds)
  (6/22) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.475204867 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.476501644 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.474491105 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.475711328 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.47737721 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.474342953 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.474310576 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.476569088 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.478038969 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.475469238 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.477335263 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.477756327 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.477562399 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.47379015 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.474898924 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.47617256 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.475440009 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.476462444 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.476547473 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.475194718 seconds)
  done (took 30.873861798 seconds)
  (7/22) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.476293121 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.475436097 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.477849243 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.476332319 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.477402063 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.477861346 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.478859358 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.477104905 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.478363831 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.478408759 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.478239111 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.477616836 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.479609858 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.476816316 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.477561864 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.478711524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.478484468 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.478309971 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.479236065 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.480893036 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.480184025 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.479872777 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.478282709 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.478803758 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.48002312 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.478228808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.480878156 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.481079233 seconds)
  done (took 42.75265164 seconds)
  (8/22) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.500180132 seconds)
    (2/2) benchmarking "in"...
    done (took 1.497573744 seconds)
  done (took 4.353607349 seconds)
  (9/22) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.479172576 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.479745659 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.479645031 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.479152821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.482652965 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.477857284 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.478580216 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.480899227 seconds)
  done (took 13.195795713 seconds)
  (10/22) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.475800475 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.480319331 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.47830429 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.479800025 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.477263838 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.476344947 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.483503969 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.483057585 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.476807094 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.477676421 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.482146758 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.485474696 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.47920654 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.478783182 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.477530448 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.484083145 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.484238727 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.481454628 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.482449907 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.483677411 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.481451376 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.479402059 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.479793191 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.48662832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.477104254 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.491086787 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.485716748 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.485993504 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.479659118 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.48317149 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.479797843 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.485281239 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.484829912 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.48093247 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.484576853 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.4828476 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.48682947 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.487665507 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.486743567 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.487805469 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.48580529 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.483652991 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.483505232 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.481705363 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.482833161 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.486043135 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.48428283 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.484545766 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.474963756 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.483486252 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.488375776 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.476821919 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.484778967 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.486749969 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.484661045 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.49002147 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.490263295 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.483152254 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.486614451 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.491567222 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.499363098 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.496918822 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.488701894 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.488244014 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.485542438 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.492350631 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.493646965 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.492541721 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.485680633 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.482837113 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.487732867 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.502534467 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.50024593 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.486280278 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.483875184 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.482402757 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.47886604 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.487121842 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.49109979 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.496301936 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.487617518 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.487342524 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.489060723 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.492168896 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.482467789 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.49062344 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.484981809 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.487339579 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.482933277 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.495895164 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.494188218 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.486083938 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.483244172 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.481004915 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.484957068 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.4895838 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.481247216 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.483410981 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.488491384 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.484337164 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.487855576 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.485466294 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.49132822 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.492637272 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.490512047 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.493279571 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.494667217 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.484617201 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.495334491 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.494192957 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.487704994 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.486951335 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.490807753 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.491399206 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.487167253 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.494707093 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.489359442 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.486442109 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.490714549 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.487615265 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.489898667 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.499291293 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.494159741 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.487718057 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.487206781 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.496590399 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.489281275 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.487557705 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.491994132 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.487829339 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.489190726 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.487551934 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.495336276 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.48814365 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.493943251 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.486978169 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.490317218 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.488914773 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.487483975 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.486834455 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.489275417 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.48843263 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.490578185 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.495125846 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.494459553 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.490004593 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.500326955 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.492530107 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.492993551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.490658667 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.496862202 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.490478054 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.489857344 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.493440266 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.484655283 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.490275331 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.486557288 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.496293704 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.489830628 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.489448424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.489130567 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.485124605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.490387543 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.493164273 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.492437133 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.492774216 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.494852323 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.487590918 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.492078482 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.484018122 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.49222184 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.486423297 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.495352001 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.495543861 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.491224198 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.492507871 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.490449597 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.497030862 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.492811033 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.490741825 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.489124976 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.494229604 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.494032188 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.501137847 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.500908985 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.491322901 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.494222742 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.487532279 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.490962887 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.496591817 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.49011965 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.501388887 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.506538956 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.509519523 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.492475875 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.499815358 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.489416826 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.497109527 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.494646208 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.500297282 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.491873492 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.493836583 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.490710291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.495897994 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.492428048 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.498974893 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.488188233 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.495942099 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.496504741 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.495400584 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.492945419 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.493153987 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.493551789 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.498150834 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.492954702 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.496888162 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.489691432 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.497923267 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.488876843 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.492470871 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.497264816 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.496235142 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.501206586 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.503240014 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.495026711 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.501679122 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.499751241 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.494700453 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.494656758 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.497224419 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.4991815 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.505013529 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.50066973 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.49524235 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.507458564 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.501801237 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.494023713 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.500674594 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.504221244 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.495949626 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.492839835 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.50168652 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.494744566 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.495680499 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.497824305 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.492807767 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.502107716 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.503163905 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.50762757 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.49356317 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.501543549 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.495289451 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.501211008 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.49870882 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.503999942 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.499091731 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.504015717 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.504787773 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.500155436 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.495722285 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.501157803 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.499554521 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.497795658 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.495195196 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.50325934 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.501716308 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.502889406 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.497071258 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.500815706 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.50150605 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.4941798 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.501505638 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.497483598 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.518389033 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.520033558 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.508523316 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.504984449 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.505355194 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.506557119 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.505443658 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.499844006 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.498725509 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.500806388 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.501063584 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.497981797 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.502639231 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.496567234 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.504814595 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.501279934 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.50564248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.505608159 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.498836883 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.49955969 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.505875812 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.502645986 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.501515211 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.494392889 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.5062744 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.501394487 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.506724685 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.505159616 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.499672375 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.513465628 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.513398395 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.503448936 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.503088191 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.499486992 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.499953761 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.504894197 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.511066153 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.499940897 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.51027626 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.500707243 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.510251159 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.50414191 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.512118905 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.513454291 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.505390797 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.511569726 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.503050514 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.500892859 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.502911746 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.507439836 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.512130297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.516065859 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.502374404 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.508048038 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.50668511 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.50486547 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.502952504 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.508098469 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.505017615 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.508059895 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.51370653 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.515102123 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.509179756 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.511393802 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.515322325 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.50910187 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.505691683 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.501836641 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.513110743 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.512678502 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.507914096 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.511885629 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.506425537 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.506690799 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.503901518 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.505167147 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.506456561 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.506802822 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.511398811 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.514606041 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.510635197 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.506942313 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.513886975 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.518180515 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.51448568 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.518144817 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.502783102 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.513931587 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.50554229 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.505971862 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.508102424 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.506721846 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.514604723 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.501172956 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.513109189 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.50976174 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.507752788 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.515231291 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.515181335 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.505398445 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.512171811 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.523813876 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.502877162 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.512465807 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.508469506 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.507130705 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.513721079 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.510240687 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.505890877 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.510619653 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.511743495 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.51876082 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.506135837 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.51601107 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.509460992 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.516050227 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.510225033 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.510505453 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.508670937 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.50987537 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.507696602 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.512855005 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.513915296 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.515609874 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.508345214 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.512249632 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.506958581 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.518637428 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.518868265 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.508416463 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.515127002 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.511899657 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.505894495 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.512376519 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.516595169 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.504941402 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.514724948 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.505999013 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.510197233 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.511437998 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.515099968 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.515499851 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.517726829 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.50834775 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.510607417 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.515664437 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.511870339 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.512575986 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.512317211 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.51629712 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.509137739 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.506208047 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.513533143 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.509500639 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.519368677 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.510836162 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.51632154 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.515817863 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.516256121 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.51166308 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.513319577 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.51025866 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.507742573 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.523155758 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.523411752 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.516149766 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.515698602 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.518369867 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.509313339 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.517495357 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.517942863 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.51582613 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.515904868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.514105862 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.515925713 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.511998487 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.514847455 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.516515364 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.521980764 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.521074946 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.514059893 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.52339038 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.525437173 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.524040691 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.511811724 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.51534657 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.514551749 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.516192166 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.515655398 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.512210289 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.524454389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.523427096 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.5205133 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.519752826 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.518469513 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.511935557 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.519007781 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.515185843 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.517149782 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.524672963 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.515732986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.524579046 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.516609981 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.514781542 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.512296396 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.51270028 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.517724388 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.520663666 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.521378654 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.522596817 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.521026301 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.517986723 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.526995208 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.517844322 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.516789526 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.517995357 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.511483283 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.523190094 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.515872733 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.523155259 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.519949964 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.517350282 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.522400178 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.51952816 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.517146519 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.5233895 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.525391512 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.519693738 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.51615378 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.522148858 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.527530662 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.528469739 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.520263244 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.517086319 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.521203181 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.52261956 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.52062192 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.519947544 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.518749914 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.534271931 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.532732347 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.516242907 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.522762768 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.530540614 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.529410517 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.51855482 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.521117103 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.521547398 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.524335772 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.527691048 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.522629975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.528584031 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.528863778 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.521260333 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.524451344 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.519218616 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.524851317 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.526379115 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.529728461 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.521751416 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.520939326 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.535048662 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.53089854 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.526221299 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.542404512 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.531708173 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.526169729 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.5292129 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.518471032 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.526496893 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.523046569 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.528267847 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.521992391 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.521710236 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.523404844 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.519683344 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.527151173 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.531359288 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.531600713 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.521674165 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.519519134 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.521757132 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.526294758 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.523802255 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.524331308 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.523218604 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.52336784 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.524071206 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.521141186 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.541988017 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.541714074 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.529370849 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.521798313 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.524045796 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.528689664 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.52957341 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.527789465 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.529071155 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.524638111 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.524947418 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.524020854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.533079521 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.52420017 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.520686788 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.523928616 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.523462474 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.528578745 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.538014751 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.545247409 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.531871596 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.532081541 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.527905539 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.525586361 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.52185346 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.529595299 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.527400322 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.525702942 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.525642243 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.528680285 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.528433903 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.526341481 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.524635014 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.531743331 seconds)
  done (took 898.065459406 seconds)
  (11/22) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.525803002 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.525853434 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.526752267 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.525074515 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.525392126 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.525712254 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.524586939 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.527193309 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.527490788 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.525947195 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.528747938 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.527678708 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.527516737 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.52641623 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.528235757 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.52495893 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.527695501 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.528677805 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.52884034 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.527105706 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.529702978 seconds)
  done (took 33.46418234 seconds)
  (12/22) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.528284221 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.527271629 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.527721555 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.527931021 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.527728348 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.528521841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.529776424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.527251426 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.529761543 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.529319725 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.529389684 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.528089266 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.528677378 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.529354831 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.529522748 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.527078212 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.529250727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.531442902 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.530001519 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.530765075 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.531245903 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.529653902 seconds)
  done (took 35.039827885 seconds)
  (13/22) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.531163867 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.529842947 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.527360225 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.533232729 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.531274261 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.5281202 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.53098525 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.531063165 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.531867865 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.526009488 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.527769255 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.528611585 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.532775721 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.536621391 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.530809967 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.53713772 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.532633589 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.530944493 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.53146225 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.532018822 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.538040512 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.540795801 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.533623347 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.528577973 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.5328715 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.530590971 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.530175857 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.532114608 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.527285358 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.535316588 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.532881126 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.529403356 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.536890263 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.53408147 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.530422439 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.536384119 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.532489131 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.532385081 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.531735217 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.536132247 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.543138506 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.53398355 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.542454279 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.540674432 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.532511983 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.53115703 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.539114722 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.532540814 seconds)
  done (took 74.984191886 seconds)
  (14/22) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.536147677 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.534339178 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.531756224 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.53427323 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.535718368 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.534996263 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.532996276 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.535189248 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.533529842 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.533787607 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.532946009 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.535599721 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.531698335 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.535378153 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.537794924 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.534404889 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.53486408 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.535331006 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.534223134 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.535335188 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.53462933 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.535985148 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.535362837 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.534876821 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.535600563 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.532434242 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.53586548 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.531880352 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.534009335 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.536565138 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.534803762 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.535954737 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.534403017 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.536571188 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.537954003 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.536017451 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.535977146 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.534241723 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.535707075 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.536248512 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.536393479 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.536161916 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.535956709 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.538504826 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.53686753 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.535325888 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.534745542 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.537054255 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.538564507 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.535491196 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.535444274 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.53723362 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.538157883 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.53752522 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.537633162 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.536663703 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.537287943 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.538434711 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.539330758 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.535224356 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.537529379 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.538308759 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.538251847 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.537886673 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.539144657 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.535770136 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.538903517 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.53732077 seconds)
  done (took 105.840719887 seconds)
  (15/22) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.539537996 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.539222355 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54008524 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.539401665 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.540611315 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.541200635 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.542328118 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.540131636 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.539500561 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.541170848 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.538779943 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.538028553 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.539414841 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.539660687 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.538515663 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.540082604 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.540598699 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.540718738 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.540617747 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.54161491 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.540539606 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.541065339 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.542428905 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.540977915 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.54277362 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.539741232 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.541184035 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.541737484 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.541301978 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.540223582 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.541053422 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.54213064 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.541009491 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.540849281 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.543996162 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.540909895 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.539515902 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.541218208 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.541652718 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.54184156 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.541171025 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.543656532 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.5395394 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.542077958 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.542962453 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.543758283 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.541646029 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.542202991 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.540514681 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.541718573 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.542348484 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.544259269 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.54226381 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.541329544 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.542382968 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.542598367 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.543761512 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.542647445 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.543992604 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.54267448 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.544502386 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.543554392 seconds)
  done (took 96.971205409 seconds)
  (16/22) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.543040454 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.542323631 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.541426218 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.541686285 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.541408348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.543033935 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.542488847 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.541753713 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.54160875 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.543733916 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.541513932 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.54490689 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.544090562 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.543153419 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.544392982 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.54435668 seconds)
  done (took 26.095145393 seconds)
  (17/22) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.541827077 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.5451177 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.543386886 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.54573566 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.542710534 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.543130152 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.545195229 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.54338541 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.543671543 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.546316077 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.542079234 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.544703474 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.54370377 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.546769965 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.544974855 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.547341882 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.545790956 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.545486589 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.544136516 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.546153114 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.546502901 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.54387945 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.546653253 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.54571048 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.545515498 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.546699413 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.546688873 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.546137203 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.546141278 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.546564436 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.544064019 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.547742248 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.543188453 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.546735569 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.54649942 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.547691569 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.548230961 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.543724499 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.54726184 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.547368607 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.547607955 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.546657372 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.548829896 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.547094351 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.547293703 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.546179363 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.547831789 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.546813788 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.544597012 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.547659198 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.546880895 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.547236254 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.54823251 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.548143027 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.547669206 seconds)
  done (took 86.437495539 seconds)
  (18/22) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.545488696 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.545538508 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.547517419 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.547722136 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.547638475 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.547794145 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.550050493 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.551759523 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.547509474 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.549350295 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.54920703 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.55089734 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.548630484 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.548514942 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.550427654 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.551408384 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.551020432 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.547681805 seconds)
  done (took 29.29549919 seconds)
  (19/22) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.550636899 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.550287762 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.549661139 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.550004532 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.549301581 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.550328953 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.549190181 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.550681599 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.54957789 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.54964894 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.549612077 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.551037068 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.548707733 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.55025399 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.552422308 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.550709872 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.550471567 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.551314733 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.551081161 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.551045234 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.551592781 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.550599798 seconds)
  done (took 35.528300723 seconds)
  (20/22) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.543883065 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.544974336 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.543597809 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.560514971 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.55604015 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.545591477 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.54739922 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.544466215 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.564997546 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.567332198 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.569917147 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.555259647 seconds)
  done (took 20.062930276 seconds)
  (21/22) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552380947 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.554334658 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.552810503 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.551721705 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553397491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.55046827 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552502924 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.551824329 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.55392592 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.551708084 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.551051513 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.552645048 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.548690157 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.554629504 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.553312252 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.552948867 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.554832265 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552181187 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.555072223 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.552711098 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.554763541 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.551467091 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.553431624 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.549461128 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.554630373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554556907 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.552570602 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.55322297 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.553806555 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.553777737 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.551608214 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55367389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.555276076 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.557745074 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.555811674 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.551830962 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.552438464 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.554327032 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555828401 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555288067 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.554269617 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55618523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.553070279 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.553238188 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.554262629 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.554805811 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.552119314 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.555009984 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555493183 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.555832648 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557183693 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.55771861 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.556208441 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.557278364 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.55536394 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.555447051 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.553642665 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.553406714 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.555128932 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.558166983 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.555507665 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.556344859 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.553921369 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557598249 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.557017631 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.555903807 seconds)
  done (took 103.989110918 seconds)
  (22/22) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555798129 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.55766605 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.554877314 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.558724907 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.557311791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55680338 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.55381933 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.556117923 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55791418 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.554801559 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.555313951 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.556654036 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.55561878 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.558153743 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.556971779 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.554842952 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.556528267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.5574713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.558086709 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.555557871 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.557619602 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.560318058 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.557270943 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.560511157 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559318893 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.559900946 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.559052243 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.559049288 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.557461214 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.556438623 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.56035436 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.558019478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561294006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.558222023 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.558676664 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.559368436 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559377995 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559825686 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.560377794 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.559438999 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.559638695 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.558964457 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.559137443 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.555621386 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.561663706 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.558161331 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.559292456 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.559002121 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.557654446 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560792368 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.559616711 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.557873612 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.562682433 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.558545048 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560049632 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.559882829 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.559412284 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.561278892 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.560277849 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.558867599 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.558356016 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.559207633 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.55956926 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.561372767 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.561692512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.559231651 seconds)
  done (took 104.284471858 seconds)
done (took 1990.275842106 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.723767659 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.680809345 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 2.644033518 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.578595546 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 2.602990884 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.562947535 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.567858566 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 2.191841809 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 2.238784982 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 2.003238239 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 2.582622775 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.774291872 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.588913911 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 2.487685581 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 2.638337546 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.662319288 seconds)
  done (took 37.959491101 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.587416183 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.566833873 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.694747003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.560789669 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.586838293 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.777079002 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.625015316 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.5623994 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.766450747 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.564180812 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.591401709 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.587628972 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.562696944 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.555784702 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.582219043 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.778592953 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.859537203 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.55723503 seconds)
  done (took 33.796916826 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.102385051 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.578740005 seconds)
  done (took 6.111935279 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.582954141 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.563239622 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.563170341 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.560585723 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.55406548 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.556837699 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.559486596 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.557887891 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.570165277 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.709909771 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.561435466 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.577715004 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.560897989 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.56243449 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.568861917 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.611612171 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.698942241 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.565993857 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.563831874 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.569191132 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.561817125 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.667840862 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.611236481 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.568112388 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.710150951 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.569466115 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.572092549 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.573039459 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.695358328 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.568885038 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.564504659 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.566490712 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.56569063 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.556672941 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.119855135 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.567126221 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.592672995 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.573409014 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.568361243 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.723970853 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.565552523 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.57311938 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.556671811 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.1184743 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.677030521 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.699587852 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.558647986 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.569133196 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.568098116 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.639774336 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.568386712 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.566780114 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.629918618 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.446238645 seconds)
  done (took 98.293481682 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.5967794 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.556269767 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.462124545 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.562346185 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.557650556 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.557177798 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.561966544 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908634879 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.617252354 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.560244068 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.906126738 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.574084841 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.588463903 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.621289647 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.619177082 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.606765339 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.55977128 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.559585005 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.56108284 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.563673148 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.558872745 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.562200559 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.563823874 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.763452216 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.605183837 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.560793147 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.560487983 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.562023186 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.564211576 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.559568603 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.563269212 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.567117415 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.633091081 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.561823861 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.875772024 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.578040893 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.560716782 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.568453288 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.575203503 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.561729863 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.566718868 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.185818494 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.564452705 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.562647747 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.560748019 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.209172747 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.562589283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.564498573 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.565590823 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.518516436 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.565124069 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.562750621 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.579676447 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.56402546 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.56609852 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.636277462 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.619755072 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.561828189 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.562967587 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.563185885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.602842588 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.56574423 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.574170513 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.562027363 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.568097277 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.572574912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.824727372 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.566946622 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.563848469 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.564370655 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.564893962 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.568347366 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.567900386 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.566721732 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.681113118 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.565659915 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.587092084 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.565148385 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.573899758 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.564233094 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.581664298 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.570973115 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.904503717 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.582131962 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.563080168 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.582913168 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.567144795 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.641759924 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.577678785 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.566234343 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.565966435 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.566538198 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.883820927 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.599556615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.565113297 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.56613265 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.595392238 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.56611471 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.566686974 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.567960601 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.564963459 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.595716936 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.569200284 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.56884526 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.566321732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.568207219 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.569267571 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.568357836 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.54608649 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.568661002 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.573787025 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.57025678 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.577417275 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.571368306 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.77459659 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.569168205 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.945799137 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.5690208 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.568548756 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.57252767 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.576254956 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.57347567 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.568042824 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.572512639 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.567619481 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.926982994 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.603574257 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.568815713 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.570837241 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.56793115 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.571020584 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.568396837 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.61014861 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.571698641 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.567574672 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.615839058 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.591738015 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.568752082 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.584426675 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.568603804 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.572273552 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.570879884 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.571311209 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.884564041 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.848881601 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.572556245 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.56862316 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.571153116 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.613326492 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.460113095 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.574010987 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.568587634 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.873848333 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.845043039 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.568184901 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.567481724 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.573831531 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.56069349 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.569797163 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.571883232 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.586133636 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.572718849 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.572036277 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.572436076 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.56966406 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.572780943 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.57610456 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.90048691 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.589497311 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.572259624 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.592706362 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.572795037 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.570208843 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.57513047 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.575824074 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.571929358 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.570892669 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.692313977 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.507068868 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.574588278 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.582362851 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.590579935 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.584414753 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.57254794 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.581708085 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.575710511 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.573630518 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.629894052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.577631245 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.601300527 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.572882534 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.585520457 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.244922257 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.573192211 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.573986869 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.475739143 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.571404895 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.573167418 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.577608899 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.572409385 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.61053962 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.573123584 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.620016729 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.939959342 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.580499129 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.617949299 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.574046169 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.616316734 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.574625998 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.578661707 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.574130672 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.571408752 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.575751371 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.357900481 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.576215031 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.576678233 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.579628837 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.57669183 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.575934701 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.575370436 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.596603287 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.576050702 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.574143426 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.613356785 seconds)
  done (took 570.711304182 seconds)
done (took 748.303213923 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.574232129 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.575829282 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.578268173 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.578935241 seconds)
  done (took 11.757870158 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.589528211 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.583288359 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.586693821 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.580358066 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.588144042 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.581680859 seconds)
  done (took 10.961359818 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.575037795 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.574972816 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.579918797 seconds)
  done (took 9.179695414 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.82768041 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.587312134 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.996767651 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.58525031 seconds)
  done (took 10.449566823 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.589548316 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.589801204 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.589380065 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.589564302 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.592837168 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.590621374 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.591084173 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.589194234 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.590322788 seconds)
  done (took 15.760014207 seconds)
done (took 59.5604189 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/24) benchmarking ("perf_countequals", "Union{Nothing, Int8}Union{Nothing, Int8}")...
    done (took 1.657830828 seconds)
    (2/24) benchmarking ("perf_countequals", "Union{Nothing, Int64}Union{Nothing, Int64}")...
    done (took 1.655433142 seconds)
    (3/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigFloat},1}")...
    done (took 2.604474992 seconds)
    (4/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float64},1}")...
    done (took 1.616620553 seconds)
    (5/24) benchmarking ("perf_countequals", "Union{Nothing, BigInt}Union{Nothing, BigInt}")...
    done (took 1.716583404 seconds)
    (6/24) benchmarking ("perf_countequals", "Union{Nothing, Float32}Union{Nothing, Float32}")...
    done (took 1.664403905 seconds)
    (7/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float32},1}")...
    done (took 1.661830645 seconds)
    (8/24) benchmarking ("perf_countequals", "Union{Nothing, Float64}Union{Nothing, Float64}")...
    done (took 1.665101546 seconds)
    (9/24) benchmarking ("perf_sum", "Array{Union{Nothing, Float64},1}")...
    done (took 1.661018571 seconds)
    (10/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Bool},1}")...
    done (took 1.612995097 seconds)
    (11/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int64},1}")...
    done (took 1.659255585 seconds)
    (12/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigFloat},1}")...
    done (took 1.608463109 seconds)
    (13/24) benchmarking ("perf_sum", "Array{Union{Nothing, Int8},1}")...
    done (took 1.658212859 seconds)
    (14/24) benchmarking ("perf_countequals", "Union{Nothing, BigFloat}Union{Nothing, BigFloat}")...
    done (took 1.773495348 seconds)
    (15/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int64},1}")...
    done (took 1.615423944 seconds)
    (16/24) benchmarking ("perf_sum", "Array{Union{Nothing, Bool},1}")...
    done (took 1.658411514 seconds)
    (17/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, BigInt},1}")...
    done (took 1.604198849 seconds)
    (18/24) benchmarking ("perf_sum", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.754427935 seconds)
    (19/24) benchmarking ("perf_countequals", "Union{Nothing, Bool}Union{Nothing, Bool}")...
    done (took 1.661387999 seconds)
    (20/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Float32},1}")...
    done (took 1.614515975 seconds)
    (21/24) benchmarking ("perf_countequals", "Union{Nothing, Complex{Float64}}Union{Nothing, Complex{Float64}}")...
    done (took 1.685962541 seconds)
    (22/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Int8},1}")...
    done (took 1.616962021 seconds)
    (23/24) benchmarking ("perf_countnothing", "Array{Union{Nothing, Complex{Float64}},1}")...
    done (took 1.618760614 seconds)
    (24/24) benchmarking ("perf_sum", "Array{Union{Nothing, BigInt},1}")...
    done (took 2.594502608 seconds)
  done (took 43.092621423 seconds)
done (took 44.548282657 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.605010264 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.674843005 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.585148189 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.585234006 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.587229564 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.581908867 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.607479179 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.585471473 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.599482259 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.598240146 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.588560178 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.594716963 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.599787465 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.594624835 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.619590654 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.59019975 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.588490721 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.594558638 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.60074708 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.602448889 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.587254778 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.588590447 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.61398015 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.587221516 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.595433418 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.595403066 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.593362967 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.579159722 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.593322202 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.599813665 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.581635562 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.593677897 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.603820607 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.598126484 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.588784723 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.596751366 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.590515716 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.68226906 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.610393636 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.598010361 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.593520536 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.604447241 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.59473622 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.593315151 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.599425987 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.613543347 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.596985337 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.604756274 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.585660587 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.589873406 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.609232523 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.599090794 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.596298803 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.591252296 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.583353651 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.604746285 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.60012396 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.6121916 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.596698574 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.591179819 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.624905852 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.608921956 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.601392458 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.597924338 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.596815789 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.605142702 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.598877606 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.606185288 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.597882965 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.593667942 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.591868863 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.597839656 seconds)
done (took 124.604980382 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.717832657 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.589257203 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.748019249 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.597849463 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.763117549 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.722183753 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.596048489 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.5961207 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.595833683 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.394658124 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.597702299 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.598777216 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.590083638 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.597373952 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.720099088 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.599373657 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.597143597 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.293002607 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.599557088 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.730646144 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.592265137 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.598055637 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.597618382 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.405072714 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.593440571 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.589497876 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.730218235 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.598388104 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.304170621 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.587636414 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.591863604 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.304703485 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.730275249 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.618173233 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.607989188 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.608432654 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.766267511 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.602973076 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.720409669 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.719282931 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.747337269 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.640723026 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.586722195 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.593527224 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.60407292 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.600009538 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.599848273 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.628881828 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.59394351 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.598105044 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.299630986 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.61092772 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.600804282 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.602629429 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.601574712 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.631463579 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.600543134 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.60238521 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.734265731 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.603841649 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.723302309 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.407291964 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.401573583 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.604206667 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.591620868 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.602995211 seconds)
  done (took 125.983781431 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.666434037 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.672964159 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.721943775 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.596117903 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.647574007 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.718464551 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.597033088 seconds)
  done (took 13.082715595 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.604436716 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.602157316 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.646858691 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.646208463 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.604677552 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.772201347 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.603340077 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.610291622 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.602635316 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.649306732 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.604365565 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.604848333 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.612338226 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.596298471 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.648235991 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.609953446 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.717662799 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.599148784 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.604248728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.752039015 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.606003408 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.615509405 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.648981292 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.610551394 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.605519504 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.607300401 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.378559692 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.604629029 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.601606849 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.605578541 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.602668529 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.665735096 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.603615876 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.59818764 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.603973653 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.713530387 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.606442253 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.603880876 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.606348721 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.592386526 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.607199957 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.606211982 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.604240696 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.602607686 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.602765788 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.624000207 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.606304744 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.605237629 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.604442311 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.60702331 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.650973564 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.605392664 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.604013731 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.606803654 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.654090711 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.616412276 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.607304359 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.607126952 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.607678997 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.603590657 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.754904457 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.650702219 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.606430273 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.650464275 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.606157923 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.608301724 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.605617508 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.607792783 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.694934058 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.608318136 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.650645162 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.607945585 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.789981811 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.627110899 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.608823651 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.607075276 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.606743395 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.607830021 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.599125156 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.610178014 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.608634578 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.605530787 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.612180496 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.609647166 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.611226829 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.765163725 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.713534605 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.609755858 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.619819532 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.612186999 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.607517205 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.655260322 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.609845025 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.610473384 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.655412386 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.723312379 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.655981478 seconds)
  done (took 164.06619528 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.614696654 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.617493417 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.608214336 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.630641314 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.607273268 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.607842695 seconds)
  done (took 11.15666879 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.605490922 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.614659966 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.610170617 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.609033844 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.611057233 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.612026408 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.611724344 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.60696571 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.615639568 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.611213961 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.610659078 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.612501957 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.614200188 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.61368144 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.612907622 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.611251681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.613577377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.610593396 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.613003381 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.6122709 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.60324774 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.611725409 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.614989943 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.608975457 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.61794703 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.613241663 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.630929545 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.613089436 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.613633178 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.612619651 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.616729244 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.612447925 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.608518644 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.613207949 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.617368848 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.609645744 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.613384934 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.615475056 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.611297911 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.613645926 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.616001377 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.615372886 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.614178826 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.614676579 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.608779888 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.614499152 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.619316927 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.631080415 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.616437454 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.612970152 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.618113176 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.612250206 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.61644704 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.617406062 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.612806843 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.614572789 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.619352098 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.61505436 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.616070358 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.611034869 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.618546089 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.616581716 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.612913846 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.61849354 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.615165625 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.618439498 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.612246976 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.621868912 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.617557205 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.614193349 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.617705371 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.615462208 seconds)
  done (took 118.694637876 seconds)
done (took 434.444674826 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.961897542 seconds)
  done (took 4.437349066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.762062778 seconds)
  done (took 4.238262133 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 25.646321426 seconds)
  done (took 27.433764456 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.634615472 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.609342455 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.613989899 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.607342406 seconds)
  done (took 11.94125759 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 3.224384043 seconds)
  done (took 4.700651448 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.611801894 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.626181077 seconds)
  done (took 6.714632746 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.997409592 seconds)
  done (took 4.474677286 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 3.322120998 seconds)
  done (took 4.805234379 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.621073434 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.611983615 seconds)
  done (took 6.714004476 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.586640216 seconds)
  done (took 4.061425131 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.175432951 seconds)
  done (took 16.655343899 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.635886373 seconds)
  done (took 4.119471381 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.645908463 seconds)
  done (took 4.12381662 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.866262754 seconds)
  done (took 7.347218276 seconds)
done (took 113.24652731 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.609743315 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.611271816 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.617507648 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.612809447 seconds)
  done (took 11.931694977 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.685679412 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.686319956 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.695052575 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.680947556 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.682139787 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.689957524 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.646491254 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.647778653 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.680608105 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.675147833 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.688969563 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.674227154 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.688768002 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.648806406 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.675540795 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.69046074 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.678319965 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.694113932 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.648607504 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.681941801 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.62516903 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.683956352 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.676977061 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.623665806 seconds)
  done (took 41.631851035 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.118505676 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.69115447 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.776034433 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.672398515 seconds)
  done (took 8.739130148 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.729912625 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.731804924 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.74684298 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.781677116 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.827340183 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.74390902 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.65155467 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.647423565 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.631877438 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.72849084 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.80257038 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.728139291 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.947102977 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.623624829 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.942977352 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.624362528 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.623352492 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.729807491 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.777359648 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.810018683 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.625730539 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.728853461 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.735606367 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.727457737 seconds)
  done (took 43.131833352 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.634828215 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.644355685 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.627642563 seconds)
    (4/22) benchmarking ("sumabs", "Int64")...
    done (took 1.627001863 seconds)
    (5/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.628625169 seconds)
    (6/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.630889671 seconds)
    (7/22) benchmarking ("norm", "Int64")...
    done (took 1.645159362 seconds)
    (8/22) benchmarking ("norm", "Float64")...
    done (took 1.629531227 seconds)
    (9/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.633445313 seconds)
    (10/22) benchmarking ("sum", "Int64")...
    done (took 1.626763549 seconds)
    (11/22) benchmarking ("mean", "Int64")...
    done (took 1.62840187 seconds)
    (12/22) benchmarking ("mean", "Float64")...
    done (took 1.627753548 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.641620397 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.628959347 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.626977808 seconds)
    (16/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.634979743 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.629325012 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.636309836 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.636530827 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.630090862 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.62808492 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.635243321 seconds)
  done (took 37.395283631 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.614804074 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.614692844 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.967407649 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.870790231 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.61921536 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.622068736 seconds)
  done (took 15.795215142 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.708116396 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.871184367 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.62576918 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.066075483 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.137632639 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.622926175 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.625133025 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.915764724 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.273100293 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.293538703 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.678863489 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.706414314 seconds)
  done (took 24.013333705 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.706382444 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625496307 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.625801014 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.679530731 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628210698 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625472132 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.696843258 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.201635933 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.633758626 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.898573745 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636007194 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71140226 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873244215 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640233453 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.626070117 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.600245084 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.857536713 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.227672373 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627937569 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.623049811 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.661866491 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632344416 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.632675303 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882904741 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63090266 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.625258811 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.887345702 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.626505097 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973579824 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95101804 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952433995 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.631101442 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.903768376 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141624779 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.737176978 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877877198 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63105226 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62759546 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.600901201 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.630682525 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.645980115 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.63071163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948835715 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.628990014 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.626714182 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.627199766 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.19942862 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.639025561 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.629824398 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.629179876 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.951300692 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713236786 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.631465577 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.625226841 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.692178135 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630525421 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.632750688 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753727083 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.267731233 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629594391 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632943045 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.632020195 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.622206807 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635120919 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.351350149 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.636339942 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.633950491 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.633077584 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627503864 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.63457105 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.657736826 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.629551669 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.64942347 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.630584358 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.493418096 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645308184 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633228536 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29550297 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640485701 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.631938349 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857112422 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.629313637 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627857877 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.628791743 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.630442128 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.563208591 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.635486027 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.606527457 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667735859 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.206070418 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.888071926 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651373182 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.658418836 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.853231642 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.606114648 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.631773569 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.64358985 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635327973 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.653399052 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.177022991 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.632225712 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.635117563 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879313735 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.841132067 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.636529229 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.609902447 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182611132 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647459201 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.6571725 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.63575056 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892492109 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.338040536 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963035134 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.639222447 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672523588 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.631548777 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.634800639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.647394135 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.639698111 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.649823543 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.947819956 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.608673274 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.633608994 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705525087 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63355367 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.631359149 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640254444 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638257311 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.631269549 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.872101492 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.638802698 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960393462 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.638337119 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.635303625 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.645563636 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.634490372 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.656881048 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.856561542 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650657007 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.910638811 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634980438 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.634984314 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63478645 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.853633477 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.633704937 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.642856893 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975417245 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638746458 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.641486641 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963526237 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673757474 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.750975223 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.666824298 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.638032625 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.888749247 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.639355424 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.641391859 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642348729 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.640961959 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638166035 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.643078109 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63247756 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366626792 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.607593455 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.642405262 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.636637206 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.651507462 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709008664 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643489458 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.892416412 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.638794663 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.642532179 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.643337336 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.648747429 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.860255861 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957589974 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.644108839 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812311397 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.214214123 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345587037 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650716015 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.637081126 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.636761958 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.635062844 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.63672341 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.635059092 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.635284685 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892838526 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.967921259 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.63605993 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.345939595 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.640196988 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.646524068 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.646737006 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.960734377 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.64887314 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.636138181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.653986255 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.638845495 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654575606 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96515177 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.859478129 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.656328479 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.636437835 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.201767768 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64438721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.639849078 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.639275067 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.665223275 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.651531213 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304915365 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.983112493 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63715195 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96716565 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.648985378 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.659854513 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.639428976 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658381615 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.655763704 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.647989086 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.649830163 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.896136149 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.654245142 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645355313 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.278210633 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547459394 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284594855 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644048985 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.655934804 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.643727734 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.192438763 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640367012 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.640871898 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920533515 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.224208896 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644859295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222512772 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.642851714 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.541245903 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.966347708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876831427 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641171698 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.647156101 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.970802866 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.856503017 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.668020342 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.647722228 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.643700742 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.616029288 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.258196448 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641770555 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.825547336 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.226230014 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644296186 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.665120464 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.703172686 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.643468545 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143632075 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.646424816 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.640964747 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647250686 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.647806633 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.265223488 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.650825748 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643658809 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.371282875 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.650241428 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.198156309 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644212383 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.902079947 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.974110785 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.952798786 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.657084866 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.65968469 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.891447769 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.97099984 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.648083577 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.647934911 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.29875619 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.511755082 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.650765003 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.645673623 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.655410742 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.663440066 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999296219 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.663957327 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.647307279 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.667338528 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645413034 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.64595456 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.644523492 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.650912509 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.615829121 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.249685083 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.649927872 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.672504508 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658041753 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.650065927 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.894176083 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.661263505 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.369711605 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.877245947 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.641069772 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681258993 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.650859253 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.644435819 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.625491869 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.644557405 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.645989173 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7281738 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.872670748 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.653737832 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.624028234 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.697532642 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.857986991 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.648406066 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.645124765 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920910219 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.651491509 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.655347289 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568626815 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681077361 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.646489253 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653563327 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.649359356 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.684905207 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.723707242 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.905947749 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.977931394 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.980264534 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154803016 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.651270032 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654108947 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.663798287 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731077443 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.647167675 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.652788901 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.650047744 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.355564751 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539778262 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.363621559 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979775651 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.656100121 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.648902474 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.649707821 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890641251 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.64918304 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.924837557 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.646396271 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.664200062 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673280062 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.66467047 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.653399209 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863371993 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.925070796 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650076257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.661492595 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.654029423 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.65153377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.986275502 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.868345967 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.260875262 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.325386442 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651554477 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.655171002 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.236628719 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.932551082 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.654174423 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.654012431 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.651176203 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.667375352 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.676551597 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.662325034 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66754765 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.877970977 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.978721471 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186149238 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.983899693 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.682228821 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.529443366 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.653658239 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902678565 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.486954721 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.912168793 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370143526 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.478672822 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909786257 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728567657 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.91605706 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.656683605 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.892476825 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.662558064 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.653364443 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.650900144 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652205647 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.653557929 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.979311894 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.368596707 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.913287229 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.661098531 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.663921122 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.683619381 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.910178286 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.878178638 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.610227343 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.875120622 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98961251 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.661972858 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655083077 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.374027525 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985721021 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.658812609 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.660269596 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914586954 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.659162549 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.689810235 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.531509357 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.656669668 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341037723 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.872544009 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.674553497 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657417421 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.482174166 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37429942 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.658056179 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275288616 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.659204582 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.668437218 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940656435 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.664691423 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.655096753 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948636766 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.663540264 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.661693148 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.919223168 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.364322772 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.565354323 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.657564212 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.660008043 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.657967631 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.65626697 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711312549 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659002539 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.65756849 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.151801368 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.658882996 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.658129059 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670227572 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.670139318 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659674335 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.660814589 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.659457062 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.666602238 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.635640328 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.65272694 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.667617663 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785350987 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328335996 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66323076 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.403588342 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.996020206 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.908150403 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.662603014 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.636459391 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.663562838 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.660046288 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.657374947 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.659567411 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.661849549 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.334114978 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.664670194 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.985252812 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66685905 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.874184202 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.872651778 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.674067682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918894535 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.66950144 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679084642 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.635586586 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.661325024 seconds)
  done (took 1117.541802215 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.699741486 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.676036826 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.687025832 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.761850433 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.715352316 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.727060195 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.777844024 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.726239931 seconds)
  done (took 23.290036285 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.657208961 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.664717137 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.676270601 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.664684646 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.670522982 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.200681133 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.65582954 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.664002129 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.684603607 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.65694829 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.667176428 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.364632893 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.664810855 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.669957519 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.662448213 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.665995585 seconds)
  done (took 37.423304223 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.799628408 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.874769908 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.254925018 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.754380875 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.697075029 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.674760438 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 3.078190521 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.678215835 seconds)
  done (took 30.332750259 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.673685177 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.675108973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.674844098 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.673129503 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.671604602 seconds)
  done (took 9.889102161 seconds)
done (took 1402.598976916 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.67021146 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.668829204 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.669467797 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.669198128 seconds)
  done (took 8.197819768 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.6386686 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.637974245 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.642399417 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.652191851 seconds)
  done (took 11.09071814 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.085448109 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.327795877 seconds)
  done (took 5.933467607 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.665918898 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.429190842 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.414850045 seconds)
  done (took 9.031247473 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.984156053 seconds)
  done (took 3.502983939 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.064150236 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.15936375 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.659847218 seconds)
  done (took 8.404911311 seconds)
done (took 47.684982302 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.658713993 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.420785673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.842299382 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.660674951 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.846158412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.908646165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.864915509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.666132772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.673437801 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.663494145 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.659464024 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.844586376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.852929388 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.422593354 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.850432536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.424846131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.845908508 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.658544831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.660626489 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.669236601 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.863071888 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.677362923 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.676781982 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.659960316 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.872837969 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.860098577 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.660408483 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.424309932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.659407212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.665549557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.836203878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.659447521 seconds)
  done (took 92.131991433 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.674541057 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.676124446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.663979396 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.661899559 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.661100827 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.664096255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.660322162 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.661285314 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.671416253 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.660104871 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.660950232 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.667222376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.661281408 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.663674483 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.662773129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.661358797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.660577265 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.659243808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.674029891 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.661980322 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.663231358 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.662505642 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.679392943 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.660917426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.681455844 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.662519758 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.670022456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.662942356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.664706547 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.677540892 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.661322957 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.662046141 seconds)
  done (took 86.81906265 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.661792425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.663305618 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.66435724 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.677638183 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.663360963 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.660492316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.665002527 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.663363318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.6640496 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.663828968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.674537465 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.662692409 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.667706268 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.661381506 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.665811831 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.664158373 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.664059087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.67361439 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.677018801 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.663459054 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.667130116 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.664351177 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.685043201 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.664513208 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.664496457 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.684407042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.668484871 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.67808793 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.665213416 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.674501874 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.664713339 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.664973201 seconds)
  done (took 86.892828595 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.901702085 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.678542209 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.680236185 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.66989586 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.680114319 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.677156781 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.673499344 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.907854728 seconds)
  done (took 17.395355911 seconds)
done (took 284.765612913 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.673967161 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.674315319 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.701566113 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.672684873 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.694656458 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.703650574 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.906748399 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.702558449 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.898282176 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.681473118 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.692672346 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.685455296 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.634009004 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.821633011 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.677899062 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.686488403 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.668248842 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.669330392 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.675948485 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.928058329 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.702519419 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.676859583 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.68240122 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.677968514 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.650875137 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.753701713 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.751721478 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.841275982 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.803448151 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.752620081 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.670617242 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.675411596 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.679023091 seconds)
  done (took 76.296010451 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.675744893 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.681130032 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.679567236 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.679433408 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.680800026 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.68322581 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.677111451 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.680792192 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.681714181 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.689476746 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.682845289 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.684037838 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.682748206 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.681820092 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.682576799 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.660850111 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.676713414 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.682546157 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.677800964 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.661783645 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.681969974 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.681822203 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.68303624 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.683315629 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.682256882 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.684081995 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.6830501 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.683760783 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.682690653 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.684096926 seconds)
  done (took 51.943850958 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.682982018 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.670925626 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.674534674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.685025405 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.679803663 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.684237619 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.020230607 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.689661631 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.684830002 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.685851564 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.674685474 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.708477094 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.736901791 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.677752342 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.682923564 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.684601684 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.685298528 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.678434327 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.673994333 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.719082961 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.038510343 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.685974768 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.020720878 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.700949084 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.684650009 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.682626285 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.689565407 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.675161923 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.684312243 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.687171967 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.660718502 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.032462115 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.676686652 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.674005616 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.657858466 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.693935891 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.686517293 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.675632662 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.684989395 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.685056851 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.028061243 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.686771942 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.685412543 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.675812258 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.684488867 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.685558397 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.676192406 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.69797621 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.003407233 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.689329404 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.675999032 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.686786403 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.690723244 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.686341651 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.976913615 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.687627948 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.68374961 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.67851625 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.687552662 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.03664946 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.689998969 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.682888604 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.697952791 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.685586304 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.676700286 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.69045001 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.699501926 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.687824514 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.689280976 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.687760016 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.677019452 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.686525371 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.69001895 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.69132198 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.692854544 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.677719957 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.708406524 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.678635598 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.706244642 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.019805804 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.692763229 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.696862169 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.039215327 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.69329686 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.693817068 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.691759325 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.691178297 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.800529146 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.023785907 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.652028822 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.698903965 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.680236047 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.029444436 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.699185231 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.689134094 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.680866219 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.694501867 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.692324284 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.689803346 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.679249313 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.68709154 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.702421909 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.680588639 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.690507672 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.031857856 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.696857138 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.686242451 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.688357475 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.759689881 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.693209623 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.701958147 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.69421146 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.050431554 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.693798703 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.69170606 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.681188135 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.684990857 seconds)
  done (took 241.837046446 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.683931295 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.683436966 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.680493699 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.681502988 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.684420804 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.691823432 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.681795419 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.686398456 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.68841751 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.683617107 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.686454102 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.693708213 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.691996108 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.680517069 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.685833938 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.684893845 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.683181533 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.68942523 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.686393998 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.684146316 seconds)
  done (took 51.253552277 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.693925592 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.370486681 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.342777687 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.694423278 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.694868618 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.690821695 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.758334739 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.697001684 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.696821608 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.051733739 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.906040827 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.697520262 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.69652545 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.697457542 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.355525381 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.69978686 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.075232432 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.407319356 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.702788464 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.406178313 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.700852745 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.696578221 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.688887217 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.410726394 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.08511881 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.055268065 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.764363421 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.409873236 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.701047393 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.697364246 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.409125995 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.700709146 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.693827544 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.397943478 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.702368353 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.711698301 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.697098758 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.761356385 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.764460477 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.077846194 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.420114195 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.066031421 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.712244066 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.863698788 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.704696563 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.677544934 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.417127629 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.70412525 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.675222823 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.699049278 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.705227239 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.376815226 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.699678229 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.373623028 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.702191392 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.698537794 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.407022901 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.377919276 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.371673084 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.913156514 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.698137798 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.04816122 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.698410304 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.381923183 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.699408096 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.701613073 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.699187224 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.912649465 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.380028046 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.048017182 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.058751571 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.060949801 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.699549512 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.77179935 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.704394089 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.060715941 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.772062433 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.103432117 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.065482715 seconds)
  done (took 154.138522985 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 2.009898124 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.803828513 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.13781465 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.329184342 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.258563336 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.851973344 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.824849793 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.973839779 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.717096908 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.791995277 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.464941139 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.800075856 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.515585856 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.772821907 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.814104036 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.833438413 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.16112492 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.70664537 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.42054095 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.438452501 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.70078471 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.825653494 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.511814979 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.128552067 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.694994705 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.487457391 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.693598197 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.284001442 seconds)
  done (took 63.500720123 seconds)
done (took 640.502211718 seconds)
SAVING RESULT...
DONE!
