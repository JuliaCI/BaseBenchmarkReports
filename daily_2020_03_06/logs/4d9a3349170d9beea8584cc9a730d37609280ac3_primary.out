cset: moving following pidspec: 18889
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.312422257 seconds)
loading group "string"... done (took 0.63608293 seconds)
loading group "linalg"... done (took 7.700091073 seconds)
loading group "parallel"... done (took 0.160861569 seconds)
loading group "find"... done (took 1.131935892 seconds)
loading group "tuple"... done (took 1.847835576 seconds)
loading group "dates"... done (took 1.264696544 seconds)
loading group "micro"... done (took 0.221234216 seconds)
loading group "io"... done (took 0.904905487 seconds)
loading group "scalar"... done (took 37.589142634 seconds)
loading group "sparse"... done (took 12.017707808 seconds)
loading group "broadcast"... done (took 0.955155276 seconds)
loading group "union"... done (took 12.378697287 seconds)
loading group "simd"... done (took 4.548539031 seconds)
loading group "random"... done (took 9.119009822 seconds)
loading group "problem"... done (took 1.725584644 seconds)
loading group "array"... done (took 21.232944005 seconds)
loading group "misc"... done (took 1.741084946 seconds)
loading group "sort"... done (took 3.331801615 seconds)
loading group "collection"... done (took 17.297409038 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.540708031 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.128267444 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.135598782 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123249643 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151082476 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120187927 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129631885 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.089033053 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.87897593 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151172153 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.120517135 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422406861 seconds)
done (took 5.470168239 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17945758 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.086632903 seconds)
    (2/2) benchmarking "String"...
    done (took 0.088529341 seconds)
  done (took 1.325340994 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070669191 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129258871 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071256649 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071334796 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071591173 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.071409014 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070803241 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070911724 seconds)
  done (took 1.707276279 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077295254 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073199375 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.072278431 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.072578891 seconds)
  done (took 1.447109171 seconds)
done (took 5.893211638 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.77941501 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.215984159 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190054864 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.406550323 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.134008516 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.177459553 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.64334494 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.317676082 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193765603 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081607118 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113617255 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.351639657 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126507105 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.643777584 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.0783194 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.094524349 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.146269419 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.429380823 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071664877 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.087250066 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093211569 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.133193304 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.089923175 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078181233 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.148009685 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07204464 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.137747331 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084662536 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070865862 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.222605474 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17660385 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661482019 seconds)
  done (took 10.438888627 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104621857 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.104533259 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073608984 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130266674 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.103420042 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07388237 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079582999 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071743042 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.093852776 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.134303674 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096047956 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.110869794 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.070889586 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.073336423 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.088874395 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213582283 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.084807753 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085267734 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074718401 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.082030181 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.113009596 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.08204226 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085374109 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.084645114 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132624985 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183534046 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.10008151 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101437877 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071503162 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087794078 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.119423869 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.133164419 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070786655 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070775972 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.134028972 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09874783 seconds)
  done (took 4.808135071 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.999811008 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.147200023 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092828251 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.136665282 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069356828 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111955438 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069732601 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085352783 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.211930925 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.440867415 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.610225351 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115608486 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.109857006 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071842269 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.073330505 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.071179134 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.495551186 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.103103025 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.109407486 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08538393 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074616011 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073227456 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.115054987 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070976981 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067958204 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07196018 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.117432022 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.308618064 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125049698 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071706728 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.956551671 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.171047403 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069687625 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103607614 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.301407236 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095064499 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069705663 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.14403582 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.073050539 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069809099 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.161240978 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075088177 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071159606 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.089097396 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.069326788 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.107164221 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.125143287 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.072636046 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070332641 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170096211 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069044965 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083496185 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.160580487 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158213192 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081505766 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068982957 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.273055277 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.092662934 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073314567 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069628628 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.178448927 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129664212 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.071497149 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.070757843 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072201354 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072981783 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.40112871 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072172367 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.873707777 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.073744019 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082088614 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073714488 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.076092755 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076435489 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.077142032 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091948428 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070321305 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.078283709 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070206272 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070784579 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.070758197 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087147733 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.371795747 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070944054 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071466314 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06886012 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.197572934 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10030497 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.07154275 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069664827 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103501774 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072083411 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.070682638 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.113890528 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070619988 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088207976 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074374184 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.117310288 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070687833 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.087204716 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071452429 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.069332382 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100727858 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074094032 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102823182 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083046418 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071965674 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.416839713 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069589567 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.074141995 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07231925 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069829492 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.071820747 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07095844 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.08304511 seconds)
  done (took 22.157465784 seconds)
done (took 39.557306874 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.253545581 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077960598 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078723844 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078245503 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078204503 seconds)
  done (took 1.807558094 seconds)
done (took 3.03579462 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.125584834 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102079104 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068527894 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.099770735 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06925521 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106613468 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103481385 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080736724 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102586084 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068522554 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100385299 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068724648 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.069266729 seconds)
  done (took 2.407994444 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087799637 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08804636 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07404044 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088265694 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067769197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087326655 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086227065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.092987913 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.087905395 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076693555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068067765 seconds)
  done (took 2.123673969 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.086213612 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088083047 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073726702 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08616335 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068171022 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086388088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086271544 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089881254 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086156029 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077908002 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067817827 seconds)
  done (took 2.111609974 seconds)
done (took 7.857933905 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.081652165 seconds)
  done (took 1.287963123 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.572739852 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.940889206 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085041241 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.114295561 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.193920718 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120906571 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.268313973 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.090410581 seconds)
  done (took 8.769199411 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.107401054 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.073405197 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07565845 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072098199 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076415704 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.075955113 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073840059 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074690131 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.075358236 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073811673 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07467224 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073249439 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.07240461 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075934493 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075009599 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072801251 seconds)
  done (took 2.504018808 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096542527 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.095123488 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.077574003 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079374312 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076171833 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075752486 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.077959037 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077394471 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074891316 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075691686 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078796176 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077082358 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075760022 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068082976 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076878642 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080101009 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074634527 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077380985 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077945624 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.07901688 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078914553 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068010651 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075407361 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078028242 seconds)
  done (took 3.181281119 seconds)
done (took 16.959759673 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.108872557 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071994109 seconds)
  done (took 1.392872388 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.084812755 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087506578 seconds)
  done (took 1.394149206 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.085404381 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068897821 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092207514 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.081486552 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.070227048 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.070152328 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091469012 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070518466 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069693636 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070774475 seconds)
  done (took 1.993097329 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072288804 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.08099547 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07407596 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.084296254 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077543592 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068123863 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075899675 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071527073 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081111579 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066988159 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075100148 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08597098 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.075486824 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087810178 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075968236 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072304375 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073934082 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071483946 seconds)
  done (took 2.595266537 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.069723904 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071342416 seconds)
  done (took 1.369231594 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070590961 seconds)
    (2/7) benchmarking "second"...
    done (took 0.068415622 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070722843 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070023826 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067491983 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066578263 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067104003 seconds)
  done (took 1.704538672 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.377496101 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11976657 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.313151291 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075983628 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085348819 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25684943 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069966833 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074994253 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.07538213 seconds)
  done (took 2.715469026 seconds)
done (took 14.394292219 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08382191 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090921983 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099650785 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.384845645 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095353158 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.07021645 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.117124499 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.188930825 seconds)
done (took 2.370367119 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.214318372 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.673090197 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.427744975 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.210017188 seconds)
  done (took 2.539828936 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.339802779 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09215117 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063942963 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071491779 seconds)
  done (took 1.805262311 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070723265 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073616599 seconds)
  done (took 1.380489801 seconds)
done (took 7.178307647 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071565595 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090742315 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.071240416 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068117543 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070282052 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068021772 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068139234 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06931295 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069983675 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070264352 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069851424 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.07001036 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.07021964 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069913181 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067373374 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068292346 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070315838 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.180287982 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067735115 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068034893 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069816677 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067294282 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067778139 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067926282 seconds)
  done (took 3.060635184 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088721423 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070253324 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.077137681 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074937607 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074329362 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.076024875 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07528664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070807934 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075484257 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072784572 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073502706 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073990006 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072135186 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073964913 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072691648 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073797289 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075330665 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069726559 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072242422 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073897346 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.075078928 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070325765 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073902701 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07525331 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074100548 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073600929 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07242745 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070629151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075914702 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073911323 seconds)
  done (took 3.465713741 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073565545 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067608424 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06755702 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.075073155 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067298653 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06814813 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067524462 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06831118 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068275181 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067362959 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.069424601 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067583889 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067470057 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.067958534 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.068719768 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071095145 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.082684966 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067635039 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067389346 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06840732 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070612477 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069894565 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067471562 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067048873 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.067005378 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.067237603 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067785432 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067624708 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068607315 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067403331 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070841082 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.070882474 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067008423 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074405031 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071226961 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06725365 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071675502 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067199673 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068210686 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067444079 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.0672966 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067258587 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067961063 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074525547 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067830504 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069777311 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067687661 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068836438 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06811269 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.069977086 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.066913756 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067543816 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06959624 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068684726 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071631024 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.0670881 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067975919 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067381787 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068184499 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067411732 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067187934 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067197123 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.07009479 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068263636 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082346671 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074743282 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067357651 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069223573 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068650042 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070563869 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069483954 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.08144274 seconds)
  done (took 6.24148755 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09343598 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.09194205 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069695952 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069677284 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066665858 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067976444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074170253 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067885765 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070226475 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086118019 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06806317 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069415187 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070012728 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071777326 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068040524 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070011216 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076420873 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06621355 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068064165 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071700765 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06854633 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073761677 seconds)
  done (took 2.860943655 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152179642 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074488287 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.109044301 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079562466 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07398999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078741444 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.07398811 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073871692 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074485088 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071504616 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071310519 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074045431 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07450742 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071568576 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071676211 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071538681 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073907795 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071597758 seconds)
  done (took 2.693107164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080191033 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069470169 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090599071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070234828 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.07003993 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072696021 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074760719 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077781861 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072321785 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069962981 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078245192 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072127982 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072996261 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070217029 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072694423 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070766522 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072243492 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07026347 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078733537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073990492 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074215171 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077806227 seconds)
  done (took 2.884176079 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083271385 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072311723 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084329726 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.07257668 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065872699 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068368372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073803166 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070148083 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074522675 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072010919 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070474747 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068075299 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.073268931 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070071325 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07257432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06998899 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071908621 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.070723627 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072446007 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065818197 seconds)
  done (took 2.696042271 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090104628 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071931983 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072454513 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078701691 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072208339 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071721832 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078946906 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072169419 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071373523 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091281537 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071501183 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071768658 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078842468 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075966596 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073669644 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078256296 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078758706 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078014449 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071256454 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07145605 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092261589 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072039358 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078462422 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071395858 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071414306 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071630603 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071541404 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075868189 seconds)
  done (took 3.380168046 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070837008 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070248319 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067570211 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067953644 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067956655 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067633122 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06789431 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068020392 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070963254 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068144824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070502923 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070272708 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070059202 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069856812 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069868027 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070326365 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070068142 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067882467 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067633613 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068005941 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069821859 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070239245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070343541 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068145099 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067909476 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.0703653 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068014829 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068072523 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07006927 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067718699 seconds)
  done (took 3.331819714 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078870235 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077310141 seconds)
  done (took 1.415747317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067516325 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.083517799 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.068278741 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075031557 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07328213 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071342714 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077512535 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07351514 seconds)
  done (took 1.845513943 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086360645 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080825898 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071951777 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082012684 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.080221781 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086961861 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.138393772 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.070495192 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076496412 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068482121 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084300192 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069241011 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076977572 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070854643 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07666201 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.076799228 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067925151 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075246862 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071822242 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068972336 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071085379 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079195633 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073187281 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065907549 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.071524394 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092369392 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082095936 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.069947985 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073577265 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.077511848 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0769077 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064623282 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.07010999 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.07049324 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068265155 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.080111361 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084785044 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073529597 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079618199 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071235759 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079871668 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065768789 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074983824 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077779665 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080693121 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.071105918 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071618141 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065364806 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068494613 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073190126 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.066160008 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070787676 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066075141 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077746144 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074421767 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081923714 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069196793 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072381801 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073744749 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073334677 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077103242 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072921279 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073339109 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070337933 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081043786 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075997386 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078779531 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065535678 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.065401555 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069535371 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.08034975 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093523092 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076091085 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070820216 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070945619 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068317929 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074602849 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070989762 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076098541 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077430059 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.071117828 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07601466 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078275532 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071377567 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074108757 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077622926 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.068713369 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072675446 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068912774 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085944283 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069194323 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068307093 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068145436 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083205446 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.073855874 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070687609 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068546062 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077228645 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06459929 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06974349 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069821931 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070529757 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080139621 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073591333 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073818901 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.078014296 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076837012 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070607919 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072290044 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067075725 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.196896423 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.071416329 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07851335 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.067181721 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073910077 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.072590709 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071615145 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079928151 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069179153 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070749423 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078742773 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076571326 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.070240082 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.068033356 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073975842 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.071170739 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074165021 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079142851 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.070032588 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.066459905 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.066152953 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074125032 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070921442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074786773 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075355092 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073846036 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065917927 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.069069456 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075136914 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079509057 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072067435 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072544379 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076803341 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072787907 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070589888 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077646459 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07311807 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069789266 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075732468 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.072209807 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066264265 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072971628 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.074472454 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069197323 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074199066 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073382777 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072868883 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071070365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068735322 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076800369 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071031327 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.070068015 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070294827 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069865016 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081086069 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072362343 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065411756 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.067754732 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078211584 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068779776 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.070263392 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069679993 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072481906 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070686091 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068440254 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069653945 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.072953146 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079412186 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07366874 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071268519 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075520795 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082426486 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.069633309 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072910019 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070146271 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070950843 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.070601708 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079776044 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075945854 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074350964 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073687255 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067426977 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07581426 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077912108 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.069528619 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068239327 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070658015 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074234458 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076404827 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074668808 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070827638 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068490559 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071102338 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.0723482 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072355928 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069174354 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.069485119 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075770524 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068542695 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.07594332 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070698649 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.079894572 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073363419 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065382218 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07248059 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067910147 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.075838695 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.064752166 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068735225 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069602755 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069919787 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.068472277 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.072153381 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.063878243 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.205884628 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078560229 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072715722 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.072060894 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070618951 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078393148 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072454782 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075298905 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075500182 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.077356351 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081676981 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.070021322 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074335296 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081994668 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070826794 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.065379725 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.078941554 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069392615 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069797588 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070131394 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069076788 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074254717 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078905458 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077362055 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.065811924 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073197466 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068588995 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.06984402 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066878826 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.075438558 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073243489 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072320364 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076914276 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.072175186 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.070857353 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074575672 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070600498 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071699025 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071878268 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073918529 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071491537 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073720076 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069585199 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073871433 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.070738414 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067845202 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071755434 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070471358 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.070991665 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075502652 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069902263 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070891884 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072943256 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.071237972 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071235624 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071088654 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.069896554 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074327604 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071434906 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070763208 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073677324 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065847321 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07831911 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070226657 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078051917 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071056428 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067506784 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07657496 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.072863445 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07555853 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070779556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.070914423 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073046542 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.0699827 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073603032 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077421445 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068864979 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081233977 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078004936 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072130524 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073815307 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071070963 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072553066 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069863232 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071579972 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070644136 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07142487 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06998798 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075082182 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073435602 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071169678 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.072572688 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071706398 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070995402 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071206291 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.064842793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.070357961 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.069555506 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070222341 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079436254 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07087156 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070629938 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069453966 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070849037 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069257298 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067140313 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076881953 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.078167729 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.069693871 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075976866 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069179167 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.071260082 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080739819 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064449912 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.06781471 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067541192 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.200760451 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.079457175 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07291199 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.0811302 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071895169 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.071393342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06913656 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.072401644 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.069504925 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065435672 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069722598 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074551313 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070048888 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071456302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.071623139 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073585117 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071380919 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081711735 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.070324094 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071792019 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071960483 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067966196 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.07089573 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070065007 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.073923654 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072401397 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069205722 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068487298 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070896456 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.071944221 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072565023 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.07096844 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.072249196 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077506921 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070680172 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073949853 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073653449 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.066243769 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073720792 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07084239 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070275708 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069671359 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07462929 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074294227 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071219098 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079229358 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070110345 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074471418 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070404712 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069238566 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.07001592 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.069705768 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069929328 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070380743 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071630208 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078013885 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068536366 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074260066 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070717963 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071343819 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.076855051 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.070849796 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073648178 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076224617 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071062243 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072095893 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078455202 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07418177 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074023341 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070802444 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072064526 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07620521 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070425978 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077005275 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071301271 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.070625368 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072240655 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068726078 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070470439 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070115035 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069876283 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076874979 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071489956 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06976313 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070245297 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068530898 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072189825 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073720571 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078601849 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073845501 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073718803 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.065920092 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.06766135 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071064978 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068979895 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.071896862 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072787048 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076068112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.073437715 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071291705 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069050803 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079935609 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076217649 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074643553 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068692151 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.073911027 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.070071009 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072278448 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.071348671 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070602293 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0705896 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073754496 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071304097 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.069102169 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076201896 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07286172 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069813899 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.203523348 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073303231 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07190416 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067348906 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071786887 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074275388 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076937683 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073729697 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070850524 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08193364 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069570271 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071939821 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073568232 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070756599 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.07570916 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.06614408 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.073062751 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071460431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071718366 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.06609126 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070716147 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069540305 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073469248 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070674261 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066455346 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081279632 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079950601 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074444777 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070580826 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069935517 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065955353 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066281554 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070828714 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071999298 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072479563 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081104527 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06995812 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070198791 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066632599 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071374518 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073690468 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074197332 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068497975 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.065663304 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070182702 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.073532661 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076690156 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069814218 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070187354 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07390643 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072666276 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068555166 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07315817 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067665446 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.07457145 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082800535 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070541364 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071573054 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076336843 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077923345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07100216 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066623641 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070979292 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073747528 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071375359 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071818812 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071651693 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086171638 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073502404 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070575386 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069898371 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073127336 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070433179 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078679326 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071437561 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070911578 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.077877741 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072925446 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078092537 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073470181 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07779167 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073546628 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.073820617 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069290211 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070800001 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068389331 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069661082 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071806107 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070799134 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.075722714 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078102109 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069980846 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081484227 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080314722 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072757843 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067387998 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.069737479 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070088581 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065286226 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070889801 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.068854067 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068639701 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068100661 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069860751 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071195805 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075012308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.071142987 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070142708 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.06977987 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.064395177 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.071945555 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072387664 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070957589 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.066891705 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069447533 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069941877 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.205853609 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074328826 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070484791 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073282905 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073260893 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072463921 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.06597017 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078269322 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070442104 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073339707 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070900542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071185743 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071443332 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074966944 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076934668 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072580589 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074217452 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074749475 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072395674 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068367941 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067915876 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076105743 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.0682322 seconds)
  done (took 45.24357948 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104081221 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067538159 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066744958 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066839109 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077044008 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066718209 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066179203 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066661765 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066989759 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068682598 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066453272 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065792954 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073891535 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080737866 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077027439 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070438475 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06585137 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066992616 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065831309 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066653757 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074216865 seconds)
  done (took 2.831885188 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077838647 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082568978 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079167774 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085677153 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07524193 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.073911911 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079472167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073849934 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.081264599 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076991875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081437368 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073560591 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076389206 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076577361 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076489012 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.07448847 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.081374959 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.075161695 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074211118 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079390152 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07380733 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079559004 seconds)
  done (took 3.040004511 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.070676181 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070388814 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072456599 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065575136 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069362666 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065572685 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.072574851 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.06744952 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.072847579 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069176661 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06961068 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068868039 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072369396 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06589801 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070199108 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067823994 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.11218709 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073048299 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.069619642 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.07084537 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065517115 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07187923 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065536912 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066022362 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070110776 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072662211 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.07044527 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068132491 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069676724 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.06944587 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070292541 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06808291 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071676479 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070418903 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069683446 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06940027 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069590057 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069946767 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065997669 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068140318 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070921323 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068850582 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069898929 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071127857 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068076211 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067977905 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.071672695 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070644173 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.065471085 seconds)
  done (took 4.78038915 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08254284 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.11452327 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072649146 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092590839 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083418442 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075898758 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073773102 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093179887 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067678596 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068249894 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.084987669 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082735812 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069664399 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.073903715 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07754975 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069343512 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071164897 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068591902 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073084208 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069269371 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073311166 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076942011 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08342255 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082823337 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072974947 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068460516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.068732731 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073602806 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081598543 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073463266 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073635224 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074137658 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084211781 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.075625455 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068717042 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.071546096 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084801264 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069462672 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071623642 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067257377 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071738768 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073544846 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076630515 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085485208 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06957297 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075236478 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069601615 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067387094 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081984726 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071652459 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076546014 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083359855 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074111626 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069885337 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073742104 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083947074 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069191771 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06812954 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072112886 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.08181844 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06760525 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072667926 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082987347 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071393414 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076026693 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.0831828 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075395472 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073063623 seconds)
  done (took 6.630675176 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.081342486 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.098842244 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.086912243 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085673345 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079406728 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079414917 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.079839537 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.079554433 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079484715 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083256995 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079050206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1184424 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075382987 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081401629 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.087820568 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079770605 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.07904773 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080125355 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078905058 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078899896 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079094469 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.085639897 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07932186 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.085772537 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082461879 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.074802879 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079018335 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079584658 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085940897 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079401903 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082670164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079641216 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079080352 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086178135 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.082637477 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079405078 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069512869 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078642375 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079123674 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.078924272 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075588493 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086345113 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079574994 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074845359 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079375424 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078926003 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086704107 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.082641446 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081514236 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083329014 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079199514 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08663979 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079469782 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079333431 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.086318371 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0886838 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086196973 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.086144746 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.07920543 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086023888 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086037064 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.088810519 seconds)
  done (took 6.462315265 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087140452 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078804566 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08602659 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065740256 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068320767 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075527168 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068527915 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068231219 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077668643 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079853759 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079716261 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076464045 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078932213 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080464684 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075716496 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078508467 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075851339 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.075632369 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077298005 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076059103 seconds)
  done (took 2.894112424 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079064533 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087273691 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071749274 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.076650082 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073479842 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075331006 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073024125 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073041799 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071311879 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07381671 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079623908 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079557756 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071155321 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075051929 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079688323 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075156443 seconds)
  done (took 2.567060751 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08962522 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.07742792 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083841001 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070744301 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071819346 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066764859 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069292025 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065927686 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066577718 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082479786 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.069492141 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080419014 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.069656673 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06862328 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066972372 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075099114 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067167588 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067322151 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069929134 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082091068 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073980796 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068082115 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.072849146 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069933632 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.07274195 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074888576 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068878333 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070248233 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067315617 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070266068 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.073336284 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073165666 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067161275 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068402438 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069254193 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067425571 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069969091 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070136608 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.074932583 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070290429 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068792424 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072767108 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.070285325 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070821841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066182055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070063388 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066517875 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072271241 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067426924 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072823166 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069578805 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072361686 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070643644 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076698994 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072734536 seconds)
  done (took 5.287968013 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084445407 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074877033 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.066486276 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068529728 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072950399 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071684055 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073083465 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071729543 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071609884 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067920117 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071231024 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07293966 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071633332 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073977122 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072007542 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073443048 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066624251 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071319656 seconds)
  done (took 2.663130962 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.076172817 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070764941 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077529205 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070584138 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071137042 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072335001 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06652346 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06822527 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068969896 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069983375 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070945906 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072496789 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068650746 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072197991 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070368342 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070873846 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072610572 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068832291 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070221841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066165409 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072321199 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068428099 seconds)
  done (took 2.914627335 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097710578 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086618686 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.144816899 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083093262 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089126398 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075374185 seconds)
  done (took 1.934256193 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09526873 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104312669 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071448875 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073903626 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079436741 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074161676 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073673104 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073992606 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081886542 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079174326 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074025671 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081726604 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081683106 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081461015 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079440993 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079312155 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0745299 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076986455 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070534071 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086902892 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074278742 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082201986 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074400544 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073627114 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074668095 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080828553 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081419418 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079534809 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074026301 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082534139 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079451246 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074184025 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082465749 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080147515 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07341687 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081583152 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074977296 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08679179 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079290619 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081404844 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073239445 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080061134 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082158844 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078655118 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081906591 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074328705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078340082 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07434654 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074527359 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088574817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079900095 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081491512 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080116156 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082626717 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081686023 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088775572 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079632001 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080863457 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079612978 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079744503 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081149133 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079741005 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080817547 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080407437 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079333661 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08164603 seconds)
  done (took 6.608189419 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109211108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071928996 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074385663 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079729712 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081000849 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074441489 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075755894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074431114 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07435768 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071332944 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111865873 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074543094 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081002745 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081282887 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074515078 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074573719 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07493817 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081057929 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071356727 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088862971 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074418879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081494531 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081741719 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080966412 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079617256 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079968857 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07429855 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074733617 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07444886 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07429572 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078343981 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074442786 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080960486 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071244423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080862319 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075101486 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074110272 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078276944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074536708 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07992434 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081243312 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0873544 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074494146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07410735 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07999399 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074366083 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07426118 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07157201 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074494159 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071638057 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080297659 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080313962 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079676874 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081058521 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075044374 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074614946 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075014298 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074221596 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074690216 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079499109 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081824919 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074375423 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088630548 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074017581 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07449721 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08119224 seconds)
  done (took 6.535935409 seconds)
done (took 135.508275512 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196923493 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.175054647 seconds)
  done (took 1.723962163 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073451899 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.10242642 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081590122 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133285578 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.071179648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104542327 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103282879 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082117169 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070818557 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070752583 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.071174135 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072858143 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135983215 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070375467 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.070829563 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073245478 seconds)
  done (took 2.754513562 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.101246192 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.163299159 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105349624 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069214788 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101484246 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076854682 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069265317 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079173575 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.074973253 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.070732603 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077516208 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074383394 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.06964383 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074428586 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.077736994 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076701334 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069657103 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076728597 seconds)
  done (took 2.876174546 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101631371 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096434366 seconds)
  done (took 1.567884186 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156703776 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.142925846 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.204323192 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344858857 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162393708 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.150491836 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.146974552 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.145190463 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118786877 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.140910874 seconds)
  done (took 3.079808193 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.103262346 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154969014 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.274953448 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119887364 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.077149406 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096753524 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121373969 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082677154 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084654696 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084117279 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08399143 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081078254 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.103643709 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077810775 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078252436 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080722506 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.105795988 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077015928 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.078558428 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079646645 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10372946 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070628699 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076966932 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077504904 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081416523 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081597355 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070346131 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070569335 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.080564246 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079061875 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080755433 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09626016 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081987875 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109355553 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075197172 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110505799 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080768887 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077208681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.078584501 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077345999 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082272581 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.081920014 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.076757026 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.081815839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070199286 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.080570087 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070376429 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070475235 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082280609 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071058684 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.08154838 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080870875 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10916482 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071436299 seconds)
  done (took 6.210980673 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.11248367 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111160236 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074804082 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.117197635 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107794197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0747693 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109859106 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.101478528 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.111973725 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074119627 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072090064 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073737562 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.084688505 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.084848991 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.119112123 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.111198355 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076806393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07417491 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110938069 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111008362 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.0735735 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104410593 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.10029197 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110837027 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071328485 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073946889 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072678587 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074035027 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079866679 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.081872946 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072579248 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083239688 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.087458849 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081040096 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07125601 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072712816 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072022699 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.082113167 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082565875 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08268021 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.080670529 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0713322 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.071977765 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074047092 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073359022 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071484884 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081953447 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.083220051 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081577399 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072443537 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074258264 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072632537 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073871815 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083044415 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080105651 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083251977 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082722992 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072221431 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073322135 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075046307 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083542276 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083225876 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082030005 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074039686 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082996863 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073123658 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08389804 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086578954 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072525714 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073804073 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072740716 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072117435 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076195627 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.08054197 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080951651 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074605684 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072129155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073041442 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083153863 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081645689 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07216984 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079666098 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070700677 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071723328 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073208681 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073123652 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.07981349 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08215656 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073429982 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072382049 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072112587 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072294149 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070406025 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079600099 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081323627 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.080386842 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079504587 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072748362 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.080459076 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.211090725 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074540979 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083543264 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.07322936 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.074799465 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07371152 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082284938 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.082393421 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084023727 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073150678 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072637865 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082516339 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085187401 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072815518 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.08226696 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084595814 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083141159 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071814547 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.085654036 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073464633 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083879763 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073445236 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083852626 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07307657 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.082852888 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072853785 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072408206 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072593597 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083141886 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073893791 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072836188 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073536269 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073570732 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081857479 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085527266 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07428966 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081876717 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.081480059 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074472829 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.082187729 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073433843 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08315385 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072378642 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073728083 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071329683 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08406353 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072617572 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072383367 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072331163 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083741539 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073039176 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083520467 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081678757 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071841961 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084367409 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082974307 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080074942 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.08344565 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073925018 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072149132 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072430978 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072192665 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080709094 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082916942 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.073548926 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07183037 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080418608 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.083603988 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071812588 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.081551613 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081461167 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081610056 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072785719 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072562984 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083950143 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.08374834 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.081677432 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.081187887 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081689108 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072777685 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080684622 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081160785 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07284276 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086153032 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072708111 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085604884 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080756149 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079215818 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081262068 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.083162222 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.082585137 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083351941 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.085212937 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071194083 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071711269 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080590727 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07134286 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071301605 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07883485 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072128511 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.072374912 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083723756 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.206816834 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.085017294 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.07352776 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.083349278 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073160813 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07533295 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087234704 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073495458 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074325252 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082522856 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072800341 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082048644 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084048869 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.081198647 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072492543 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074529852 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083223468 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.08271586 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.075173153 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073235371 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07455991 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082044945 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081213826 seconds)
  done (took 19.510131565 seconds)
done (took 39.108083017 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.208091445 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.152882974 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.173304339 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119001277 seconds)
  done (took 2.123188705 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119794035 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103428879 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094786531 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069057825 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101257069 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069364896 seconds)
  done (took 1.962687678 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.297086928 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203525266 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.183472245 seconds)
  done (took 2.087605472 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.205563693 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190532164 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.430073165 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.268124531 seconds)
  done (took 2.604910796 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147290104 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090664031 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071747094 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.087924052 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133050016 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.160878259 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.101759575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.126780075 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083222571 seconds)
  done (took 2.460093598 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148819835 seconds)
done (took 12.798654568 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.108266285 seconds)
    (2/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.237327623 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.09384368 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078220768 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.231246874 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.231104091 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.212785038 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.080490071 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.125225253 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.204343325 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.077133139 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100511506 seconds)
    (13/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075832374 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197183987 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083038146 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.206951154 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.218184154 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078578869 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.12161198 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.226354934 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.083702618 seconds)
    (22/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.117351068 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.099499926 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.19431361 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.070695651 seconds)
    (26/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058240572 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.149783707 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.078023192 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079997252 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.205101889 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.081346661 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 0.428425574 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071320998 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077618125 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.189188889 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085825218 seconds)
    (37/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077233713 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.104750899 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.159252394 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.079772527 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.22663105 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.160668625 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.148840537 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057028515 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.201964394 seconds)
    (46/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.174663916 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07573688 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068585288 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096484149 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080751019 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091832957 seconds)
    (52/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.159033579 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075271584 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.099103914 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.093082595 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.079739403 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077122409 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.117558711 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.078030695 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075703884 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.089071607 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.07975831 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.203577685 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.183584385 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.05582992 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.077509721 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.07664516 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.102965446 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.108205319 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055573445 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.07135181 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.097417003 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.103175968 seconds)
    (74/309) benchmarking ("sort", Float32, false)...
    done (took 0.132582738 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.192208902 seconds)
    (76/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111650033 seconds)
    (77/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.189185235 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.070749283 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.074516905 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.145171449 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228056334 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.106241924 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.068887898 seconds)
    (84/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.107736498 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.087864667 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.068695929 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078387472 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.084194454 seconds)
    (89/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.104538408 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 0.071921959 seconds)
    (91/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068399965 seconds)
    (92/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.085530475 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140189828 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.077708349 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078372155 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 0.133325493 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.094593544 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.07136266 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.075368552 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.120601086 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.098634089 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.127217698 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075584752 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056462229 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.118635856 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.20201136 seconds)
    (107/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.103756066 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.078911536 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084617538 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152119274 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.092404555 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.194119363 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082130815 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078528228 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.126497056 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077441579 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.069916786 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056429203 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078253646 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.165495351 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092587688 seconds)
    (122/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.102763991 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147303654 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094160852 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.080234843 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156692748 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.071797634 seconds)
    (128/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.113516003 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094346489 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.069191409 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091599579 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.204299124 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071040934 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.148001242 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.077884732 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.080818476 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.076483374 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.089451161 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056463394 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.072711535 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069818088 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.087740123 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.079840155 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078234881 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076048566 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075768107 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076220571 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.127730281 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076299375 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.078199059 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.091945057 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.127972887 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080631866 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.079277297 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140995725 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.057015066 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068658304 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073218738 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068501676 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.070690682 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.164101237 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.070211555 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077953526 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.164204745 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081349312 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05682632 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.069601936 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058576253 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.07055732 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.114881493 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071830164 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.056465445 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067169227 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078191514 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.070932446 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147967272 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071388473 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096548884 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071085193 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.066423846 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.058089036 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.080788054 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056144869 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093660545 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.093744197 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0692088 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.055414588 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.157659589 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054992887 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09970885 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054555229 seconds)
    (192/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.056136616 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067881973 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.068194572 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.070430774 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.075494666 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.151417572 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076997445 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055721215 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145095552 seconds)
    (201/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.153387787 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.067321742 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.179201496 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090592771 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092262122 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157656099 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.067088165 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095047697 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156649606 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.090679036 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.055192416 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056372022 seconds)
    (213/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.056315174 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068514862 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070388982 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069034756 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.054484094 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091168514 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07767498 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075359035 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07160689 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.056504881 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068530291 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.169410662 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.074362018 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082407676 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076507733 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076526512 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.056999835 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092935252 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074276752 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.054607043 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.055192109 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067891904 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055741421 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068332777 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070974826 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066752581 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054399236 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074311278 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08936653 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138328512 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081019186 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.068222115 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.054626488 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.07541555 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.055423368 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 0.148992072 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079314633 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.054828195 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074090042 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069748609 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066889408 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.054168366 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.170814221 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.054434281 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055625287 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.069266268 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.067312554 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.054522475 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054251549 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.138063592 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.109287864 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.075691482 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074634198 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054366977 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056760798 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069738923 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118822083 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075897479 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068083271 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.054451205 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088328732 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.174259866 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073674102 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.166484868 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069664112 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069478765 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.109073741 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.056122584 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079359083 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101350475 seconds)
    (283/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055288356 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.068304732 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177660906 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075758738 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090753003 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066229197 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.054295104 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.065797273 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066879508 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067868632 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.068141275 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.074426935 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.110205116 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.054557773 seconds)
    (297/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101408486 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.053863622 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.054261956 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073294351 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097200079 seconds)
    (302/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054308642 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053668893 seconds)
    (304/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071877245 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073931504 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.068007081 seconds)
    (307/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065546984 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.327925346 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.060343709 seconds)
  done (took 31.991533926 seconds)
done (took 33.412700071 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08833663 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100876254 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.083237911 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.101387919 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.088745537 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.083673445 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.08123597 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.086479855 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.089362949 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.090712163 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.088224743 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.062718392 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.083388618 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.083365659 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.084158337 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100501148 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.087807285 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.081951212 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081951123 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.07263252 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081854028 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.073238329 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.075165634 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.062034834 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086403644 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.079486305 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.082307473 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.081937625 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.073194156 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.073269373 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.076854668 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081338358 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.072431843 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08733545 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.081368254 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.080924825 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.082760841 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.083828672 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.074548416 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.072275217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.08165702 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.072454085 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.080283145 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.080601883 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.079642834 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.078452645 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.080515981 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.084051219 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.098176556 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074064558 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.081807145 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.082976133 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.083748122 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07944352 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.075834205 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.08001069 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076929065 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097700807 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.080238144 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074271348 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.08092483 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.080790015 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.077873581 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.079991958 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079337001 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081594225 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082423375 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.076821948 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.081096812 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.077386786 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.071004671 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078570952 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.074747533 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.071059227 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081508647 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.083163834 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069968503 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077476955 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078465615 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.079091475 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.070155425 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072963627 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072458669 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077840329 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073208849 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.062533155 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.075243873 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077627761 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069966789 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.079431166 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.077560399 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.079328319 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.07229229 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.08269089 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.069884478 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075873836 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.071153279 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.071065244 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072474915 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.07542735 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070349958 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072785037 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080956488 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.072735342 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077680293 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.084021864 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070486094 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077102242 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069489757 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069218564 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083779906 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079970903 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070072199 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07248807 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.07018119 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077279525 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069333783 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069726598 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.07009667 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069989477 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076798568 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070015749 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072614353 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.077346009 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.221848942 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.07153557 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.075854104 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.074308383 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.071370273 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.077161135 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071495204 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.072042502 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072253665 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067004451 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073084854 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070925086 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.079276534 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07315556 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078281533 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072279253 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.080391839 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.076681137 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076520349 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076159442 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06919256 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064451404 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072689382 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072674251 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.072558013 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.071747556 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072106441 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.07112717 seconds)
done (took 13.487640942 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071025681 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141583595 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101182174 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099824226 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.090160166 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071650078 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079814236 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.102543021 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.072881059 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104029111 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091939376 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.089966336 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.117010938 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069672009 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070896932 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.075024405 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072409044 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.085527959 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.103356452 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.090716539 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.117904006 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.071006181 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096469651 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093338065 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092853703 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.097528281 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072285753 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075058044 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074849814 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10627814 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.092291624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.075012311 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071654774 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103522962 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.097661639 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088400203 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.071301086 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087079687 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.072240984 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.071017422 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.073501794 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.102119785 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084906908 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085365322 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074868025 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080835889 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.072069719 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087742522 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09443918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083397889 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08978219 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.104430162 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07376205 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088511149 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.069942026 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089877111 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.081436048 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.0731826 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070997905 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077807896 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071005378 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074851205 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084746411 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084807803 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.075443054 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08866011 seconds)
  done (took 7.195094654 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.089073212 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.095824215 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.088049372 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087596479 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070892439 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071163481 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071084493 seconds)
  done (took 2.139488116 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071628711 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092574004 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.094469973 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.095040741 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086422682 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092610887 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082993673 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071978547 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092874218 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072918701 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092347451 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104614733 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.074654538 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078889094 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095369126 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.0715318 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095185103 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071582091 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074163038 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.09559433 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073579437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101169635 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074938951 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071731487 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085379005 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071924092 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11766887 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075811753 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073382257 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074567472 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069413812 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.111535458 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085195367 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079302762 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071836147 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.087715852 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.086173421 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070054504 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087819673 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080603735 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.086324484 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071973542 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072615386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069595423 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075455849 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081970545 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.07308521 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072304377 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.074267086 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091789739 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072840201 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084964615 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07423668 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077213234 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073385702 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078391745 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082239595 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072791988 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091454734 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072814522 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088128694 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088238544 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08556834 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088405111 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074052486 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085300602 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085356899 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.07417163 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073831544 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075831682 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088046376 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070155684 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072955266 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082526385 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073370337 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.095438857 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093822748 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073042455 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085827206 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072347378 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.072069326 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072054473 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094720477 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077274904 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071654405 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076566013 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07536431 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070526614 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0710797 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075829602 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070025077 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073364609 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075803309 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074742235 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074420918 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.088179448 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074338362 seconds)
  done (took 9.371955089 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074377509 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073992215 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.0743285 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073698549 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073065048 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.072612205 seconds)
  done (took 2.03248119 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.098423167 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.075087634 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083601641 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076303381 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.108356772 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.092312291 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.092354177 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082854323 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088238754 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.083902314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090704557 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.093327984 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096963578 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076961363 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091381518 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07611795 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091861746 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079000601 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082498027 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.077199414 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090827827 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.077129727 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077160081 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086511703 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080182984 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076453784 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.08347767 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083284887 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.08361385 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.083309066 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077244918 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080368368 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075358583 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082769711 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092275206 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075480229 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076388565 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.082303798 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.077030447 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080206884 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092543267 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077104508 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078912089 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081563807 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.082645723 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.075983136 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081600993 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08405869 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.092035631 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082005251 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.084872161 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.076227659 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.080613178 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081457596 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.075318077 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.08293057 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081371965 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091757614 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07723828 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.075219775 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073415563 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080653629 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082171462 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080330956 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.08346619 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081346682 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.075474494 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077047544 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076970128 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076301462 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081465027 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.073429855 seconds)
  done (took 7.499601282 seconds)
done (took 29.791225775 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.538387598 seconds)
  done (took 2.090788066 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.63227661 seconds)
  done (took 2.208750385 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 7.065988844 seconds)
  done (took 8.638478134 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.393600526 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.494392203 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.738319368 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.143161916 seconds)
  done (took 3.343533531 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.715466542 seconds)
  done (took 2.299822046 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245394315 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230857989 seconds)
  done (took 2.065041971 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.392075837 seconds)
  done (took 1.977199915 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.112897213 seconds)
  done (took 2.6955752 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.254719735 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181014692 seconds)
  done (took 2.018914793 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47409435 seconds)
  done (took 2.053783095 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.890070698 seconds)
  done (took 6.471442277 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22455488 seconds)
  done (took 1.848107447 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.242546466 seconds)
  done (took 1.825915115 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.768935061 seconds)
  done (took 3.3523456 seconds)
done (took 44.479318205 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08850786 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09012543 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089708115 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086015899 seconds)
  done (took 1.924536794 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081531779 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078451544 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081649322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077709163 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081915529 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.078230811 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078815672 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080150339 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077435957 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077525252 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076985643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.077396213 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079499921 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078391247 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076238532 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07969459 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080814696 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077402288 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080467407 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077183825 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.075846068 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078944868 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079589951 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076042842 seconds)
  done (took 3.474412428 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082796478 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077724332 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080294099 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076463212 seconds)
  done (took 1.91141008 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.083515839 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.097198983 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094432177 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083114159 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097323529 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091669929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073917948 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073805577 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074985601 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082244586 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072744367 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100532294 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.09359183 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082580131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084648994 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070207678 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072913146 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.093040289 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083153223 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083306334 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075016609 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082902216 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072973182 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.09336803 seconds)
  done (took 3.604050095 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.092053802 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105232925 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.086653058 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093885307 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096572495 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070088235 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092451376 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09791241 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.129525631 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069966787 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075858239 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.070318871 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.078478024 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070453292 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.086619288 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.110947807 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.114604988 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073419342 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.10329782 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070501955 seconds)
  done (took 3.387642351 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.076623763 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073924175 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.075369011 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070915786 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081841341 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077053814 seconds)
  done (took 2.058573014 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.07308614 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.074875538 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072164889 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.071756496 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07591942 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071302077 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070473469 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072682425 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072559729 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072050212 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071942269 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07110429 seconds)
  done (took 2.468280728 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.203381248 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.074292493 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.074519836 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070833827 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.075130333 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071057362 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085113549 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072374992 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097393263 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071100254 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.07102019 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07294106 seconds)
  done (took 2.639694911 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211848043 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080393601 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239958917 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157694206 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117695007 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120970348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117293709 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117822823 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147585468 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106000846 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170246315 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170533704 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114445019 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1415613 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094325807 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.104864731 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161689158 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169444291 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110405205 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168125002 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151159062 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130641587 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149465254 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106777673 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110520072 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12599878 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075967602 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085447584 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172916822 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137898958 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149562653 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116050773 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103517613 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180321065 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170874094 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145763937 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153318757 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089915915 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.108019371 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.136627394 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201451805 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09392048 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16858697 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25695493 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086489868 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137781953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123585554 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124699056 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.109915584 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09503057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152685332 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188085413 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142822196 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092399975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128859262 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120278957 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119665476 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117928232 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182420425 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162713778 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132100138 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076087832 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114983153 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153994318 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13448022 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.112526624 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.128854127 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096429366 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140250241 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15700682 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129150732 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149405697 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121887904 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093207838 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122636034 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14511069 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134551867 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163400205 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128542706 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077412156 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129922547 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107626579 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084848943 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.148581364 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079516559 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176418677 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103656107 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110321537 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127059714 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112686404 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113418362 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165890132 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.294515943 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110066057 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070838556 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11167401 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123606438 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153997276 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092070665 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112209717 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123204609 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082898761 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145487165 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080347142 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128517282 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.081343307 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129287869 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134906553 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.08254865 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126210768 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109086396 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10446385 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138626103 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161706845 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091670217 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086934016 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168046652 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125373558 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107758718 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147423851 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158454061 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103880534 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106772886 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151589131 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175493694 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094302566 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1653561 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111113877 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088738299 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092694471 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127046772 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116381814 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129385369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086215533 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122249681 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170148958 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079277629 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101225638 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137360377 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08284398 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08469815 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110249191 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110054102 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100976825 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104616887 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106522311 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142446814 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126811085 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.256914182 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130223026 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10346735 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170897668 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093120373 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106438038 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109556524 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074720934 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.142074472 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160768271 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084349647 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167109503 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.126605803 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120136793 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12236152 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088831288 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141831732 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083567726 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075629702 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146695689 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114816743 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115524555 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.15267406 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119889145 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.130563054 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122613359 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13931248 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135442585 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131346193 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110479269 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092192008 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114969273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132881685 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.07707326 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094938266 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084456492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109651235 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101590021 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088352141 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146324546 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128069365 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116404098 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114802477 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10075457 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148745644 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080863819 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131393249 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.122569993 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099576403 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.153475713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153262315 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134719752 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102610741 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2863072 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075581975 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07979376 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095361155 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128129313 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088808968 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.089292807 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122573186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149995001 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133988863 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143498603 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127496588 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125035515 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156747277 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075131696 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.12255345 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14951968 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124713539 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109287552 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094610973 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104137265 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143838426 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111722888 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184397069 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117408868 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126626591 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156507828 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.104763589 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084718272 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10597977 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140955293 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108528708 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145724777 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102435171 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091871523 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111747722 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079246245 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103295504 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131761829 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124365754 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137592084 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.117433245 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138032893 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081722539 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121171911 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128202714 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126967167 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068086616 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121056747 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161244951 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09834289 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120220291 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153566098 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083413163 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.284973924 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179149662 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149003726 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090583776 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113826467 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124405113 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129933969 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12452931 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142941722 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112459096 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137711128 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114192863 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.088139327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092885903 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102500812 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108849314 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099442857 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109669654 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117125231 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100949139 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13653767 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107884463 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113382549 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120519974 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.101847064 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096495679 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100659153 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176275065 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121291894 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172426782 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.104078913 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.144782506 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16508523 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078907467 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083705671 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082972758 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142437439 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089015389 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133749365 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.114289109 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120862263 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12725285 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146194215 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102931016 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073192935 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112201825 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139142537 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126713646 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101769289 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107361036 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163560334 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.103392932 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083854559 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118079851 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118902581 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107160915 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172526075 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066420323 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109107878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080336933 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084167685 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128141303 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151251075 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.082942157 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102756042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12038797 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114530306 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127280169 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103867539 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112949353 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125917824 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146749828 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128214485 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091374543 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113022183 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12655547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151994443 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103212971 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.099383519 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169051111 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148325713 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.156373277 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090523641 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113829588 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113978295 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111127141 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137297423 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085652625 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158913425 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083895778 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133544201 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104655351 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090214094 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130289071 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.112029745 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089597195 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144179754 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117151277 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085640125 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080144129 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117580422 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118734656 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106558215 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078278853 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136863314 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075575001 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.390787384 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165652284 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08771197 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112943984 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102617112 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086735057 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114219216 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108835127 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.094257857 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.103023292 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176886433 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.092880581 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153467377 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138593272 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118682435 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140993389 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108793083 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.649670787 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.082859255 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154255259 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122569198 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175660534 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105498717 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121468636 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113984517 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128758528 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147079843 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10870543 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.183317676 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135614698 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120918696 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085173557 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107635197 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109204103 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.093578141 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11252708 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117141025 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121564708 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097437542 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120114053 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128569296 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086452124 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100843162 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157426325 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122591446 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148936722 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141454119 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089186806 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120958215 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14051455 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083797612 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.123950481 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.307519725 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111893557 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103981192 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085419975 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.107548124 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16119628 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.077719743 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166122497 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123406238 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113267549 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115638114 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.115372787 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136724275 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111366905 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124944827 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096661095 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111482854 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117127484 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086347679 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081300447 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108687607 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115228361 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101955041 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10165906 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.10219977 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152858069 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076807481 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103883174 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119281481 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150646775 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175734959 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092470762 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087874905 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125496105 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120997565 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116758955 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124380255 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083560125 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085479013 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084833899 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08399583 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111158062 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116492718 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118563432 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113153118 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165717134 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.08690841 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.228221746 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100710086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109047729 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074554748 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.081691035 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099388618 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101695449 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110291551 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115788038 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312052024 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.098893941 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.09495708 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097086339 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078935702 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086998147 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130424669 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114339826 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122277974 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106441013 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.066828823 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112852904 seconds)
  done (took 60.940421042 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108223789 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.08666375 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101211947 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149730343 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.127644677 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204756262 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.160068602 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.193456787 seconds)
  done (took 2.858930679 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073102956 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.099513516 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107884877 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087235959 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071042868 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073316026 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232925353 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084442046 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071228416 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100551073 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.082262208 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.0735397 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44056808 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070196423 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071773343 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066500725 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071998042 seconds)
  done (took 3.596810212 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.398081243 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.623388076 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.35095956 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.08116861 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.960756007 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.095856304 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.15949432 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.139663662 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.082747697 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.53105574 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.41217808 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.132596283 seconds)
  done (took 18.697757331 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084845029 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.079575104 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.094287535 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093166689 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08253168 seconds)
  done (took 2.163192602 seconds)
done (took 111.344489108 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.086467938 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.629107378 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.058893543 seconds)
  done (took 2.444164635 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.093115813 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.089839807 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090206207 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08762189 seconds)
  done (took 2.098311806 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07814445 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079619756 seconds)
  done (took 1.890092811 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.23953578 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171997461 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100140144 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086981691 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083156621 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.08415546 seconds)
  done (took 1.989232488 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076776793 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079296238 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07651916 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.081109078 seconds)
  done (took 2.043475883 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081452477 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.057009028 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060595861 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.062525635 seconds)
  done (took 1.992001982 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.090546864 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.086124883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082286281 seconds)
  done (took 1.99020467 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106029659 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090422542 seconds)
  done (took 1.929496613 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086601467 seconds)
  done (took 1.818784367 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.099310434 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104672174 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.13600131 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114396944 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14462413 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.112594294 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088709262 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089734333 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.08122059 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090377437 seconds)
  done (took 2.794004834 seconds)
done (took 23.316775899 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083190082 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.372313283 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364308233 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095319675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.733360928 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.361059885 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.973176764 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09798301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.119587989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071764879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089333962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652375722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.963225181 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.329148736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95085631 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.326666416 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65412472 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072840881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071828821 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072359383 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957959077 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072718457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072466315 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07313682 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652494271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.375703495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072853356 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.326109582 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072827006 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074395394 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359860316 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072832661 seconds)
  done (took 16.355197629 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075464032 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.140393242 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077298304 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089221381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.075506359 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0737583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075777333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.073732775 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124351125 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072117419 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089353395 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072805663 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.07577845 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072963257 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091477078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07254353 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073584092 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073384382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072934341 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072632254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091321562 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072771608 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072716465 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073436954 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072669406 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08501402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073932884 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073632359 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072912182 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074686031 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075479294 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073608753 seconds)
  done (took 4.304725709 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.121547579 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.129753957 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078045943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108616509 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117163365 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074556777 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145952048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098086192 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.131244152 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072150697 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089607066 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072655896 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.1057617 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.073372986 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09300076 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072724975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073529591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073428392 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.073218119 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.073579181 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092644723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072555686 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.073758327 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07377341 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072872033 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086532449 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073531834 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073697816 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073521845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.075478607 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076842612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074162832 seconds)
  done (took 4.549740614 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.077345477 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080161348 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088225589 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089290441 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.073878409 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075762783 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077217248 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.07425071 seconds)
  done (took 2.390064396 seconds)
done (took 29.340530602 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083315933 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072768869 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076596173 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.092744941 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.077551141 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083309726 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071032192 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079825503 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077249258 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077729529 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079208564 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.072829935 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075835923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071820631 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078633508 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072343394 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084711845 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077507928 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084346198 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084799331 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074550134 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077227613 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079768301 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083426398 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083716625 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.08375877 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081865265 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077991509 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073175265 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074979731 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081892477 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089385559 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.07340472 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084423782 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.072177324 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.072538061 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07600649 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071988364 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.084047855 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081188482 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074341037 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.081307425 seconds)
  done (took 5.037027712 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.093297456 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096469076 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089573579 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066279336 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071641809 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069700846 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094048477 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.06430473 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064563743 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093131895 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.061028041 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064409931 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067781688 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.058678571 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063736236 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061721506 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066243389 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060293471 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064548719 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064078873 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.093283087 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05860239 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081372148 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067245483 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.061581665 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066854567 seconds)
  done (took 3.626552764 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078588827 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.087482886 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095062831 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.146650052 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.115572644 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081513325 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082869395 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.097319287 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097721996 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071517869 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.076101393 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09633521 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091781251 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.078094173 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071891392 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.089041713 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089382316 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07343859 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077778747 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095920466 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089784265 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.089314811 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09582452 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084808686 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071742767 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074042246 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075310669 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085789849 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.075372345 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080835106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074857479 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075647848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073821501 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083528626 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.074963823 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.074085367 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.097958485 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084791457 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082024726 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072553082 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.080099971 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072685731 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096495733 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.127231689 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071922478 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077854978 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07591591 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082137976 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071724225 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09693551 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083163672 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.071862542 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075234453 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071435109 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071132279 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075067094 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073984052 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.085957615 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08070708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078175924 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.095730591 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076808519 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088085525 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071542919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.079962168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071641863 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.072869586 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071145428 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097107108 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07404022 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112654592 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073235206 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.072849097 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081247986 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080202916 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078282914 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072473484 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087984528 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083305709 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076168102 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08060214 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.077227939 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075263288 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.100611496 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074957021 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074002006 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073204796 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077889491 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074558557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.07337319 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085269054 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072025771 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075628522 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.088842671 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071795872 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073794098 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077614206 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076550704 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.07168578 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083993067 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076131208 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.073230958 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082234492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.072505911 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075362102 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084005084 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078233612 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071125979 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076665441 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077524893 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072998889 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073267064 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075461412 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073973818 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080216848 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079340527 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076456605 seconds)
  done (took 11.268036427 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.166858438 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158103511 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.075475565 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.149265181 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081531092 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083762123 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152598034 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099602295 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072512421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073370014 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073319952 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115868078 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.110705074 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121184441 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083408682 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.073198835 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095097992 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119045938 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152987391 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.146297524 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.094528958 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081372007 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074997579 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073707101 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075363616 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083315154 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.09062229 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.081182846 seconds)
  done (took 4.659272502 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084148479 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1059547 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.078572497 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094845619 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.094666988 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072330748 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074733087 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07402804 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.088556577 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082502453 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072758608 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077716985 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078638831 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075751272 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072968195 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.079489325 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079338766 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073611911 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075930261 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076997105 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082105162 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096168646 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075832843 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071731221 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07679791 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.072246882 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068247726 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088129759 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072784929 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096807462 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070684906 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077191638 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.085910896 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073077 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072723571 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07228276 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07206425 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072072573 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074378754 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.073203401 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070652439 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.062257832 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071246837 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082743411 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084530123 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.061539191 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.07668436 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077399617 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077715953 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069690344 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075014306 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075031778 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074744036 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079455686 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076075989 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077053752 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07305446 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078769574 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080807183 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.07297571 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06949014 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070910218 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.07725756 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.070002714 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.087197871 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077092508 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.071581352 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072313738 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074780789 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.085645313 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.072178095 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076685569 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069771312 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074188947 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077154837 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074187655 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073608227 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070806402 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072181605 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072464829 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.060127031 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072409752 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.058449392 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.07559978 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070860596 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070833013 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072907118 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076505962 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083649499 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.074196219 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078029492 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073432689 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071183846 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.07538164 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.065016029 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.075148457 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083468435 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086948243 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.0723336 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070565534 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.085108607 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.077203625 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071278244 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.061336263 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077435828 seconds)
  done (took 9.766663737 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.09570629 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074304019 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087104325 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093991594 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.090925986 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.078866234 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081826501 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073438756 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087462542 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078395483 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081073319 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07247568 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.08223694 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08139476 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074162063 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081612357 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076035913 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087876143 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087058308 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072909604 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080494923 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085077406 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.093676756 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084406558 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082979386 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085275964 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.094015745 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081176395 seconds)
  done (took 4.132928334 seconds)
done (took 40.240505066 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.866193935 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.085798065 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.837072347 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.223004179 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.90868586 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.004855158 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.929538652 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.833527036 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.037026643 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.867062443 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.142011727 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.933316704 seconds)
done (took 66.560092308 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.861676287 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.97466116 seconds)
    (2/2) benchmarking "String"...
    done (took 2.073895053 seconds)
  done (took 5.812957781 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.047180043 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.41965034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.078191076 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.830034924 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.83725344 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.149201904 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.639506679 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.338616336 seconds)
  done (took 31.058421361 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.059399232 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.05397994 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.567767217 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.60072861 seconds)
  done (took 16.098147679 seconds)
done (took 64.734106197 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.846121078 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.872238284 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.849528315 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.815088946 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.895913503 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.84515153 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.94491097 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.83000449 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.831972187 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.824597833 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.833635474 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.266555143 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.835979301 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.064970118 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.832312397 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.834341287 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.835311222 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.292011964 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.990607887 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.851641088 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.856208752 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.869820487 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.829157531 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.985344329 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.876679362 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.83052529 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.254641978 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.831406529 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.455863287 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.832945774 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.86741473 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.183759005 seconds)
  done (took 205.632980589 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.83327655 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.896867943 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.948369356 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.876904983 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.3468078 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.014457355 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.932774818 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.395644059 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.835563506 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.854273177 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.993621942 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.833453309 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.017830014 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.868765174 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.862961676 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.837886977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.978921995 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.03265207 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.866722747 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.985393723 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.84587855 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.878923874 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.841754126 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.981989902 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.868384635 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.864156299 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.838477007 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.846189133 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.026507444 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.962801682 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.845481032 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.845149643 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.033583984 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.705338331 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.857380596 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.853818915 seconds)
  done (took 172.081829945 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.027610569 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.836989813 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.834581344 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.832954518 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.838188057 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.832358025 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.955249036 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.958763796 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.461125225 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.29724862 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.887336461 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.648546828 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.835960045 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.902472418 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.845039598 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.834294567 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.849454287 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.861776735 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.836081016 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.836092962 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.959750059 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.848825311 seconds)
    (22/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.835380611 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.841396653 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.837262147 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.840875316 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.206458752 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.952913934 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.837462091 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840152878 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.076863842 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.836181425 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.834118468 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.704043575 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.007594609 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.921842821 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.832073874 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.838656882 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83831481 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.833468019 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.052616456 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.837083677 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.835606144 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.838028325 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.83670249 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.986454487 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.839676894 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.95629307 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.836010008 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.321063714 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.834755117 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.836438448 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.79947112 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.443204099 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.835840867 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.834567003 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.838759911 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.834539957 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.835864527 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.840681163 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.808757643 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.912391948 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.837897838 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.839377175 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.841909441 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.837365136 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.022521619 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.834972927 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.83594895 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.894596502 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.056958284 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.957039232 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.837048216 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.902660322 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.930268618 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.836116494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.835778938 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.836960935 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.837250361 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.919115724 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.838059178 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.966783176 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.84272985 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.83809197 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.888019451 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.905981156 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.838633486 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.690351386 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.839454576 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.836924676 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.142394112 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.90505647 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.836666157 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.836862504 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.837850039 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.967178728 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.957731271 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.553201599 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.841301549 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.594213371 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.843017162 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.83653869 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.976438655 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.839302169 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.992516034 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.839174741 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.921519245 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.843116627 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.839743255 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.837322309 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.869996389 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.838788172 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.892993958 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.837200468 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.208358236 seconds)
  done (took 410.958096414 seconds)
done (took 792.525517678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.497724639 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.461813284 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.566927171 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.481496703 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.459475253 seconds)
  done (took 14.241271564 seconds)
done (took 16.017051449 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.925970566 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.93331833 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.863414479 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.929732725 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860585486 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.932232446 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91121678 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.864307931 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.898748784 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.864869018 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898397472 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.863600966 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.85233077 seconds)
  done (took 26.369120749 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.076449146 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.081310468 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.909773682 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.08787857 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.883042043 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.072532158 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.006953444 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.99166869 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.992763671 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.856152014 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.853089703 seconds)
  done (took 23.58540491 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.082868934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.08079139 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.913938285 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.077197568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.88732007 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.125410165 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.005630855 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.995660445 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.99335019 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.855281945 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.85209697 seconds)
  done (took 23.642180582 seconds)
done (took 75.371123243 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.848023155 seconds)
  done (took 3.62048032 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.875536104 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.049733158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.85574337 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.854409411 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.850754194 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.851283115 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.854744508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.850001543 seconds)
  done (took 16.816902601 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.846941967 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.845435502 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.847888618 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.845589715 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.849205939 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.850946065 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.848002925 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.847729186 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.848679428 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.847102425 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.851297353 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.845895279 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.845290672 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.84753541 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.850066154 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.847260817 seconds)
  done (took 31.339849106 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.852316913 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.847245132 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.848413791 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.848563196 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.848842135 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.84886158 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.848961794 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.847362249 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.846345264 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.846535494 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.847921433 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.847205086 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.847629327 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.847606746 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.847658143 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.849825625 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.847854398 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.848525836 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.853618737 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.848031827 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.847627617 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.847345912 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.847823335 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.849151946 seconds)
  done (took 46.141005399 seconds)
done (took 99.694284252 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.567370225 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.477712243 seconds)
  done (took 9.820943362 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.855967177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.850422663 seconds)
  done (took 5.539473855 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.852705313 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.850222716 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.853385224 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.850435937 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.852451437 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.849694137 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.851648203 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.851026145 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.853898763 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.851800897 seconds)
  done (took 20.29566916 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.852542455 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.850697544 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.846500178 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.851557539 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.851710299 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.849157541 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.850982143 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.853740205 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.85210532 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.848432494 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.853267627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.853005928 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.851948953 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.85182749 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.852542882 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.849263797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.850150455 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.849511493 seconds)
  done (took 35.098971191 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.853308976 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.853453264 seconds)
  done (took 5.486374666 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.852923726 seconds)
    (2/7) benchmarking "second"...
    done (took 1.848945131 seconds)
    (3/7) benchmarking "month"...
    done (took 1.847897943 seconds)
    (4/7) benchmarking "year"...
    done (took 1.85105125 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.847702104 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.848766374 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.849593664 seconds)
  done (took 14.726511016 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.853800881 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.014018474 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.083694854 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.50780253 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.853909947 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.854957276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.790080633 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.856308959 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.857589812 seconds)
  done (took 20.450166573 seconds)
done (took 113.198840587 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.668647669 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.851273094 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.106299873 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.897705907 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.909007551 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.191313165 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.863619313 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.149964916 seconds)
done (took 43.419704367 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.944450194 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.626116279 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.679375483 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.985495625 seconds)
  done (took 16.069815523 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.833063266 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.390992586 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.893270031 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.504154504 seconds)
  done (took 20.595665811 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.217868013 seconds)
    (2/2) benchmarking "read"...
    done (took 2.200266795 seconds)
  done (took 6.202048083 seconds)
done (took 51.595488557 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.858502741 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.854061444 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.8548992 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.851658276 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.856240994 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.853211 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.852904197 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.853670643 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.8538669 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.855420031 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.854898019 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.854993418 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.854128706 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.855525286 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.852558967 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.85314329 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85509822 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.852254165 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8540438 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.852527177 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.855356693 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.852270613 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.852918322 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.854516437 seconds)
  done (took 46.278165591 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.854682835 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.853904559 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.85815474 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.855426714 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.853596473 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.857167026 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.857964001 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.853603708 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.857374631 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.858485033 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.854658386 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.85333407 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.857653422 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.854048825 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856392312 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.854061876 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.857962026 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.854324458 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.856778663 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.85395385 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.857474444 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.853413065 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.853361957 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.856147767 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.855861745 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.853232099 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.856989859 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.854617283 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.859131422 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.854713361 seconds)
  done (took 57.452039667 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.861646036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.865305512 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.858937817 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.857381571 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.857339924 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.859505492 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.857128656 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.857652037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.857976088 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.858464072 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.859253324 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.859735875 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.858713967 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.860398369 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.858840325 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.858800349 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.860647555 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.858372802 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.859535875 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.857967794 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.858358974 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.858717378 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.85921439 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.85955104 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.858573878 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.858089711 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.859682858 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.859397205 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.859179732 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.859209951 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.859666179 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.858270904 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.860729532 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.859019366 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.860207316 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.858548416 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.865185672 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.870067043 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.858344024 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.860361231 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.861748847 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.860142412 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.859297788 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.860251093 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.861025598 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.859101877 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.859041022 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.859132818 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.862772523 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.859134827 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.860481415 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.860753553 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.859760965 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.859805355 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.860051251 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.860493761 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.859449335 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.860485216 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.860869596 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.863351186 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.860862026 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.860145514 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.85977177 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.859482139 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.86192174 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.862408988 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.863648166 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.860241264 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.860280337 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.860634533 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.861051775 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.866265438 seconds)
  done (took 135.712731691 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.862944508 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.859849852 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.859762277 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.859009295 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.860323916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.861693561 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.861747186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.861616905 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.861056315 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.862109437 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.862214913 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.860571961 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861780428 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.862087798 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.864024849 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.860581692 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.861664223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.859616116 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.865251105 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.862946312 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.864023308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.861612593 seconds)
  done (took 42.745785339 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.862995249 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.863793301 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.86251899 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.862004693 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.862867225 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.865597546 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.865639339 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.86441835 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.867245631 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.862195994 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862036772 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.864492344 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.861367984 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.861021402 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.860135849 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.864453975 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.863200726 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.863219935 seconds)
  done (took 35.328315738 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.861884031 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.860663545 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.865736795 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.86409606 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.863362378 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.867351844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.861818288 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.865446754 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.868935727 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.862334627 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.865480534 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.866564177 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.866485106 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862939507 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.865086269 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.863594346 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.866782579 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.863505351 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863901568 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.86459254 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.865727435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865100759 seconds)
  done (took 42.813955684 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.866356293 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.864196603 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.864020613 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.866297343 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.86244799 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.864608947 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.867805411 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.865459494 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.868092177 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.864771817 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.865391206 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.863587754 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.864132061 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.86596125 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.864780727 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.864701829 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.865291087 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.8656934 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86526982 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862776984 seconds)
  done (took 39.093442935 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.869922395 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.867294267 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.868859705 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.87018137 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.869187343 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.870224661 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.869246886 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.867191936 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.868805793 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.868859536 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.868462816 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.868398794 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.86847384 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.866891111 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.870761338 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.868004 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.869158944 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.871506824 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.873330128 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.868397569 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.87077618 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.87057884 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.871547961 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871473307 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.869149833 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.873061399 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.872044295 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.867018803 seconds)
  done (took 54.140933874 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.867005099 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.868586497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.864063417 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.864941033 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.866299724 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.866979618 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.865967373 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.864278788 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.867678509 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.866365275 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.867834712 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.868565914 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.869337363 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.869325851 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.870057554 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.868000085 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.86799102 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.867432312 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.864234555 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.865166515 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.86883607 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.868853938 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.867602863 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.86528129 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.86506567 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.868608941 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.867027241 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.866217941 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.86795831 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.865394201 seconds)
  done (took 57.804453164 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.889833973 seconds)
    (2/2) benchmarking "in"...
    done (took 1.88700231 seconds)
  done (took 5.570276796 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.866796994 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.868243949 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.869598201 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.866440775 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.868073077 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.868665288 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.869638701 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.865533366 seconds)
  done (took 16.737742751 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.871064739 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.869266902 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.869380791 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.869746817 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.87140086 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.871100632 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.875760251 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.869788022 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.870470512 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.873879469 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.879394263 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.879971951 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.874356551 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.871332909 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.871240886 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873312205 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.870305319 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.87116378 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.871192486 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.873075434 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.87186109 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.872858395 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.873277017 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.870024176 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.874534794 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.884135839 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.877267403 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.871777286 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870275628 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.87637394 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.871575031 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.869164209 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.874926021 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.873542533 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.871412888 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.872912039 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.880116712 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.872256216 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.877072417 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.872811524 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.87194513 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.869334574 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.872838687 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.873125947 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.876339652 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.874181186 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.874752459 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.867969408 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.871982573 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.876081766 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.880155416 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.872176806 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.870445521 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.876674974 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.874497656 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.878681618 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.874597437 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.877591338 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.884337391 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.883441781 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.886986778 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.882883757 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.875754045 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.875657494 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.885321002 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.901069442 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.880629825 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.870525635 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.870805546 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.874848662 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.881892565 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.887872675 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.884934029 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.878216685 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.877162742 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.87606327 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.873893684 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.874469275 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.880748905 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.876780686 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.877079338 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.877954942 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.884944362 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.899603195 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.874113181 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.876684109 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.874707623 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.876336304 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.877068913 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.886911173 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.876290747 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.875593137 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.874278274 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.876399835 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.877226265 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.875488157 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.877013388 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.879465554 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.872855525 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.875850805 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.878767374 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.880726394 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.887308307 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.877122402 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.879004397 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.881843809 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.874757356 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.875327308 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.881727571 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.876572292 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.876516918 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.878395043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.881749361 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.87355693 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.880277666 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.886113966 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.877263861 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.87930525 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.8771473 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.876570915 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.885513351 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.905619904 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.877344645 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.877287954 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.882620147 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.891124021 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.880260375 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.879220079 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.878124345 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.8741107 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.873375053 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.879170698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.879224818 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.879797809 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.880310716 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.878174004 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.874959457 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.878383516 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.878767325 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.87946149 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.878934291 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.877537029 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.87900104 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.881403275 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.878836865 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.879195334 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.883735586 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.877770809 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.880416804 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.879711849 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.876345335 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.877294069 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.88311006 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.879528095 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.879728437 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.87879421 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.879757402 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.878792983 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.877943957 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.879339057 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.878023778 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.879571654 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.884161708 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.881399418 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.886440349 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.878918058 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.876742203 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.87963474 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.8813647 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.878975385 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.882130753 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.880072154 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.882788016 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.890543454 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.881062747 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.880830051 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.882377919 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.881243629 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881224254 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.884150876 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.882533049 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.88804305 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.883297661 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.887683449 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.883034833 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.88245532 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.881197467 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.880194357 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.880050511 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.881760194 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.88483174 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.890822683 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.894382204 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.891045116 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.882755307 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.886039065 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.882094028 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.886689663 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.885149589 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.883461112 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.881290835 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.883973676 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.881357291 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.882319012 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.884395636 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.881300932 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.883484247 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.882208226 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.883768396 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.885414102 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.883722288 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.884183184 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.885854515 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.880222777 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.883599458 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.884070227 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.882020938 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.878984657 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.882804175 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.88206703 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.882905631 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.885565008 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.890511907 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.881536763 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884981533 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.88368774 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.885818993 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.882424743 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.881944561 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.884990675 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.885357683 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.889857264 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.884460132 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.885732369 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.889120304 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.884413171 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.882827657 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.887230516 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.884190892 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.882492423 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.887733383 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.892769821 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.883972197 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.887579837 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.885537937 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.884925836 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.885485692 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.890523235 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.882872918 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.885219012 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.884945817 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.886526859 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.884384328 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.88745169 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.886154467 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.885920873 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.887965426 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.88610597 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.886379685 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.886119366 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.886401889 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.88868192 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.888270558 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.88855385 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.896241465 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.890799257 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.888470957 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.88882796 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.887155967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.890405122 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.886306205 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.888645322 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.888124946 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.899592265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.900242908 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.893863715 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.88853318 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.887059618 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.890513025 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.888866213 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.892582423 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.886123676 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.889450413 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.887062111 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.885699291 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.88537892 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.889165717 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.889853312 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.889413914 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.889809884 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.891439461 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.887153344 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.885935578 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.88900488 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.887829809 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.88727769 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.88749764 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.888547191 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.889678035 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.889607238 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.885687457 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.888511887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896832448 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.887608894 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.890730244 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.886626954 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.888319267 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.886118667 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.889403954 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.889578408 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.893128651 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.900110184 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.892418863 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.898762288 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.889164432 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.897456906 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.891507173 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.893984574 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.898205397 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.887749211 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.887087899 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.88866926 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.891683599 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.896684228 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.891523104 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.891682151 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.897840118 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.889371714 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.891471916 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.889670659 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.890025397 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.890753274 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.891395304 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.900525367 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.892322994 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.893706494 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.895434356 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.887836909 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.892008866 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.890261339 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.887835773 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.895504341 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.890628612 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.891624925 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.888876499 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.890395776 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.891600391 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.890947793 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.889931868 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.889192092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.89071528 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.895823492 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.891260078 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.897543458 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.892327179 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.899622293 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.892036412 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.897864427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.895410083 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.89327866 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.891527259 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.889600963 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.894394867 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.89134393 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.892967259 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.893720539 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.89561241 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.896125602 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.893492367 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.895634648 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.894905571 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.893300486 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.893320189 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.901945171 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.921448025 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.892671397 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.897023966 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.889943309 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.895303864 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.899158971 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.894720059 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.893093279 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.896808956 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.907000369 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.901126842 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.89423428 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.894022075 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.892544594 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.895662399 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.895551089 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.893528489 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.894107609 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.89289518 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.894642765 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.896114158 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.897133109 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.894338711 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.894854981 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.892786761 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.895202104 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.904496589 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.896231432 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.895018831 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.896302971 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.892666024 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.89496452 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.895342798 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.896122894 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.895190912 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.893650021 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.89535309 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.900169852 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.90071173 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.897805886 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.893629919 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.895526838 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.895707224 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.895856994 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.897491749 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.895397996 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.896800354 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.896017204 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.896245619 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.895487905 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.894004129 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.894849137 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.893630209 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.894613245 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.896512198 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.905150529 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.896667165 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.89135983 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.894669702 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.89541916 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.894167286 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.896611806 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.90296876 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.898355445 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.909311803 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.905532649 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.900739598 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.896375201 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.899771453 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.906483657 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.89482705 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.895728455 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.896817326 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.900077926 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.897283396 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.901573451 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.898951783 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.902786777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.895042787 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.89487947 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.905848913 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.898436116 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.897971058 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.899067358 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.903644083 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.897475146 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.892421464 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.899116146 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.898425671 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.90413196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.900122411 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.897616775 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.900458966 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.895307726 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.89811357 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.904580769 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.896378939 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.899359991 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.895109019 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.900641289 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.899831236 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.898032811 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.89629706 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.899100466 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.898253675 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.900322674 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.90704885 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.893437237 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.89882781 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.897620932 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.898982931 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.901629146 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.900332979 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.896264176 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.896567975 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.898642584 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.901182839 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.898921498 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.901111521 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.899561916 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.900465372 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.901675617 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.897948178 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.898355255 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.911478001 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.909528999 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.896538531 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.897951946 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.899981119 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.902582891 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.901949045 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.902182812 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.900562388 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.8987675 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.899829462 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.901500907 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.898404683 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.902406974 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.917233214 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.901706842 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.900848699 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.902382001 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.903757604 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.90038402 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.895320957 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.899673479 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.902164899 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.901827472 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.912469171 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.904068123 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.906056505 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.900720366 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.902584225 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.904492678 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.901474885 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.908012744 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.903406319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.902030644 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.904718855 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.907177054 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.919325224 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.901926084 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.911966722 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.93460404 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.903831879 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.903906485 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.90323022 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.900275076 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.903859722 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.903949817 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.904645576 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.90272829 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.901861972 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.90489199 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.904081731 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.910376216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.903731083 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.903220464 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.903025191 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.903284505 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.903197796 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.897376682 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.905038637 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.902396892 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.904989463 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.902822485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.904454703 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.903587703 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.916906848 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.915352853 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.901470545 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.904171956 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.900276461 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.907541378 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.905966167 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.915854428 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.912419003 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.903765721 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.903704139 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.904813483 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.904246347 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.901645241 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.904265389 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.904955588 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.902745268 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.899445106 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.917404922 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.916181183 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.907174377 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.903656911 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.906583895 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.904420653 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.905732846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.904686603 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.907035817 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.907960767 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.905113045 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.909113458 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.905432149 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.90545962 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.908612511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.913394441 seconds)
  done (took 1128.246218174 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.901685968 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.901284352 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.902186621 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.904129936 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.904253879 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.900575771 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.901748095 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.904209735 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.902478771 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.902251233 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.900931044 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.90275643 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.901101958 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.903069933 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.90341144 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.902017944 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.902526977 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.903664034 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.902356344 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.902353074 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.901892394 seconds)
  done (took 41.779441327 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.905677198 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.90323288 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.904818222 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.906213519 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.90364528 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.905069029 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.904587931 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.906087204 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.906957764 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.901284358 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.905298652 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904288732 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.902635066 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.904010511 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.90356592 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.906081133 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.907083424 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.904170527 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.907033052 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.903270759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.90723911 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.904945747 seconds)
  done (took 43.736709701 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.908543292 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.910168081 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.906158564 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.903787118 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.905813048 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.906337401 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.911304328 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.906275597 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.909260201 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.907515274 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.907642774 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.909169423 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.915835014 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.915137168 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.907960508 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.908203538 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.049726109 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.908304872 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.907674217 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.91011761 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.906772052 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.913270473 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.905500684 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.903284597 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.906719193 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.909751391 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.90909589 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.90693759 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.908542795 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.908541458 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.915647473 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.910607354 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.905958076 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.910159266 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.908600931 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.910251784 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.9142725 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.910373185 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.906899275 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.910217302 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.9174813 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.933674869 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.910721565 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.915288372 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.908430377 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.912143891 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.913106296 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.919962926 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.907663459 seconds)
  done (took 95.568268091 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.909134234 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.91008507 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.908713727 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.907156916 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.913358607 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.909889208 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.910165476 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.908880263 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.90801604 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.908167498 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.909604916 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.907834553 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.907343592 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.907391467 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.911648242 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.906856259 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.907061141 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.907035662 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.90774297 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.90766057 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.90746582 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.910261698 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.909958317 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.908623138 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.910570135 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.907940875 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.908715926 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.910372987 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.908517921 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.909451314 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.910000162 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.912431679 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.912088587 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.909092728 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.908106572 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.910881924 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.908832542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.904030446 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.910031603 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.90806672 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.910180903 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.911891507 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.909684252 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.91174826 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.908478552 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.908621268 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.908382679 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.908077082 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.910551575 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.911903518 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.912795553 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.910001801 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.912216114 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.9084949 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.912281532 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.909829344 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.90917568 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.91016416 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.912193059 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.910447391 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.908600355 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.912053012 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.910418776 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.914248125 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.913295955 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.909341099 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.90934221 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.91193387 seconds)
  done (took 131.691132552 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.914053409 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.91385037 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.914101637 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.914576726 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.914847076 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.914231333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.914925999 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.914894376 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.914909693 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.916400444 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.914401227 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.914310817 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.914483052 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.912716732 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.915329319 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.914723916 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.916409159 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.915605946 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.915788965 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.915776005 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.916211018 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.915534387 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.917655 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.913713921 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.916935142 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.916688053 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.914766585 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.913495001 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.916365171 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.916096808 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.913996261 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.913738092 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.914030011 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.917642099 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.914509366 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.912791876 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.910697356 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.91222193 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.914346872 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.914086127 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.914374797 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.914004524 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.913874589 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.913125895 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.918458172 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.914881612 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.911669503 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.913813176 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.913901355 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.916861727 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.913309809 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.914024758 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.913079961 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.914392212 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.914508633 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.912972162 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913267432 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.913405719 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.913449264 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.914374755 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.910850578 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.909717243 seconds)
  done (took 120.532608277 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.91007861 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.91096413 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.907932104 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.907877989 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.911003386 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.910900288 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.912475124 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.912626651 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.906014836 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.906725776 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.907546382 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.904378913 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.907428159 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904243071 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.905092093 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903530116 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.904036902 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.90603166 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.905980541 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.901921314 seconds)
  done (took 39.982262579 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.902740072 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.904127963 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.903074712 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.903017571 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.905480243 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.903903923 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.904726976 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.904428453 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.902891018 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.904734023 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.905938103 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.90622789 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.903448396 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.901675908 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.906989565 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.902312673 seconds)
  done (took 32.297308909 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.903337298 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.908200661 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.908505641 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.908790365 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.902889209 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.902793507 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.907897218 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.906135152 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.904011406 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.907311038 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.9068775 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.907821976 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.907337214 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.907035614 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.904401181 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.905400182 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.907741346 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.903202308 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.906455259 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.907011643 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.904940156 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.906149445 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.906205062 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.906934209 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.904331379 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.904650281 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.901442994 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.905142545 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.902304676 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.903976665 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.90475042 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.907011837 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.906988642 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.902314237 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.908015551 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.904581675 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.906928117 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.911838002 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.90661727 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.908259239 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.906185979 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.902508937 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.909383167 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.906936241 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.905199 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.906837643 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.905052232 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.906952509 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.905680116 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.90579623 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.905861169 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.911770629 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.90752205 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.910268352 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.906213479 seconds)
  done (took 106.673348213 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.908497571 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.906258447 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.904644307 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.907112663 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.908565939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.904998192 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.907641804 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.90330657 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.901607433 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.904764131 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.900619645 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.90662063 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.903798891 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.90373212 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.899972398 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.90132198 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.896369426 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.897993437 seconds)
  done (took 36.102629314 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.891082903 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.89149821 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.895092246 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.890596688 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.891904739 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.891370148 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.891754521 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.893704709 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.893514247 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.891514921 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.89370682 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.892803357 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893302458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.893392254 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.890465114 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891673331 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.893848963 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89298208 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.891813329 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.890706398 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.895528327 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893167367 seconds)
  done (took 43.464470377 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.893647616 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.893662327 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.9113759 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.916900796 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.915529393 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.934438713 seconds)
  done (took 13.282612416 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891260948 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894574148 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.891344049 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893375984 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894475105 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891810109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892831544 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891497018 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893669605 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891048319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891679703 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893490961 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89406787 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891132816 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893975498 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894951539 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892179967 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893956237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892556928 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895482864 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891364033 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895123731 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893007083 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892309005 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891583271 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892012413 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894669124 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894517857 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891276418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893954992 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893402533 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891910998 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.897612354 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.888192819 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890957363 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890372432 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889849068 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.890909115 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.890431003 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.885500715 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.888271151 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88831959 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.887985564 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.887506949 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.887635779 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.884804216 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.885226741 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.885612662 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.887224384 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886041743 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.885866091 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.885014757 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88675419 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885154217 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.890608113 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886254078 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.883297379 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.883527298 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.886661952 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.887840317 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.881992562 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885162379 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882588982 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.883139805 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.886751754 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880588226 seconds)
  done (took 126.545880046 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881444352 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.881087963 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.882170165 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.884059539 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.882427627 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88105287 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882375667 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.881347218 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881902878 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881267498 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.88392524 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881224188 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881107102 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882667421 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880812711 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880795341 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881597961 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880592114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.88017058 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.885305143 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880489588 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880309114 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.881104912 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880638582 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.882020111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.882600278 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880654983 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880180501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878942813 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879465037 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880875719 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879643513 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880034772 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.879904218 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880000528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880770933 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879621808 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.881186773 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880063671 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883452777 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881307062 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.883584626 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880876325 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.881158446 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.881082157 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.883837918 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880339847 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.879011143 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879068788 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8797654 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.88374992 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878687939 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880246555 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878868523 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878788232 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878925535 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87935447 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878133278 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880317729 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881374333 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879408594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.881248845 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880743627 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879005532 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879539528 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879431603 seconds)
  done (took 125.947958973 seconds)
done (took 2621.316175929 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.870498869 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.868310102 seconds)
  done (took 15.542400201 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.04197395 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.996870037 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.879497459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.91257075 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.876650161 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.902814121 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.901901258 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.877383831 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.880076205 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.881353742 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.878494105 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.069269354 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.934591877 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.876956039 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.878932563 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.970474857 seconds)
  done (took 52.568981765 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.882189128 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.881679232 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.893237706 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.883859712 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.881551164 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.893598021 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.915780939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.883966399 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.92320108 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.894887083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.960214861 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.890269287 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.879514834 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.932057849 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.89498603 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.896458033 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.977517798 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.957554519 seconds)
  done (took 36.126396096 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.960595547 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.885779141 seconds)
  done (took 10.656955439 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.886269208 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.901629554 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.922475842 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.898445051 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.899485352 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.909866292 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.88787589 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.882391678 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.896431118 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.913329767 seconds)
  done (took 70.806619619 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.882701528 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.877660149 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.878391682 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.875269307 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.868076521 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.872053745 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.875459 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.872541411 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.544634354 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.909798689 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.883852729 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.880359761 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.876381604 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.877192219 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.875862696 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.899302407 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.967628613 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.873178925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.873208605 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.881813531 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.875789287 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.92588169 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.888872986 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.877722185 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.907852061 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.544481588 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.882840254 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.883663071 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.966178235 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.878298084 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.876533414 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.877763825 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.879427544 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.263057669 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.15112157 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.875941675 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.890159316 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.886772452 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.874668222 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.969701985 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.877631076 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.884081761 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.570319695 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.126348754 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.988264037 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.919252653 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.193391832 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.893984593 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.879084213 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.906213264 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.880338549 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.878926164 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.890339891 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.361315558 seconds)
  done (took 132.577821271 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.872352169 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.224539366 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.043989094 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874717859 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.166374335 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082851861 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.873743097 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923456631 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.874214871 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.111941507 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.135206291 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.984429989 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873678577 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.872226812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.875207877 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.869649126 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.035005911 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.949889265 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.874264795 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.871763788 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904727968 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.123114911 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.998259298 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.876970261 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.90527046 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088772234 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998005412 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.983956901 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.669696851 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872527035 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.940709245 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.87543585 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.872055441 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.874515317 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.032867269 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.972571906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962267592 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.874734928 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.874174909 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.872727879 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.548291693 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081253647 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.972115021 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.020768013 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.077294687 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.083643101 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.658239283 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.872502302 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.618521923 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.042156648 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.109329767 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.114259669 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999997506 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.876947051 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.406927518 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.876261033 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873639506 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.127493835 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.019059603 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.975084105 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.879392531 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.872904279 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871999783 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.12678598 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.873076956 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.969518312 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.877705245 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.86943768 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.973038166 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.972862782 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.010776879 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.091105544 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.903696717 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.836724256 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.414420765 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.123797294 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.940175866 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.125246281 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.872575353 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.871707205 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952718858 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.713618611 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.128626779 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.12973052 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.126529174 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908168318 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.601373114 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.877184401 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.102586467 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.094137177 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.13867932 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.082529952 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.114225994 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.192325372 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.870883454 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.871256304 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.087126081 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.015366467 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.871695734 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220400218 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.108542087 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.41474068 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.893486731 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.182612222 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.005300818 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.873362028 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.520251825 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.873217171 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.110811798 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.914549534 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.87324659 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.877965548 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.095361498 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.871448523 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.871036432 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.513751753 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.936823087 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.873805215 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.110672884 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.874463918 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.148318548 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.873555556 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114425376 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.926677246 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.915693191 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.102013543 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.078898425 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.873843893 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12054453 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11902298 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988858081 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.096353861 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.575404287 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.870971279 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.163848661 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87243178 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.873563116 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.049048855 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.872989816 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.020167556 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.873960155 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.168885805 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897549808 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.107677131 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.872078576 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.138248514 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.908218869 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923600046 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.873114899 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008023884 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.872798557 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.710759363 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.037513765 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871875001 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.874174205 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.801574198 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.87341492 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.025351527 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.107176354 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.897704425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.953077483 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.543110259 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.872115371 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956008728 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898024558 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.268721768 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.873419918 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.129856537 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.874581312 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.873694029 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.874709154 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.119331591 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.062829717 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.873537786 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.871960458 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.782726154 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.872541574 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874950811 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.057145311 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.223374937 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.876501858 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08069685 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.874964886 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.003661593 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.873923658 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.957064093 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220838035 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.873797698 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871843383 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.872647479 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.873578637 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.871589379 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.143764434 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.902701718 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.409072376 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.013805011 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151650133 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.188203656 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.128447564 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.919012824 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.875905198 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.139648068 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.8759308 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.942647004 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.873342265 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.898935809 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110836199 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87827571 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.087378674 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.157859722 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.730499507 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.925049445 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.876598306 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.875825714 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.873615291 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.02323208 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969332061 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.875938668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.87749199 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992508036 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999379044 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.092212491 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.875600014 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.077193626 seconds)
  done (took 904.87483685 seconds)
done (took 1224.9645513 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.875126781 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.875227369 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.867803009 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881339427 seconds)
  done (took 29.304878757 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.891057193 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.888088297 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.892220119 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.888567844 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.889796278 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.888119931 seconds)
  done (took 13.150536104 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.915294557 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 7.338463039 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.881444962 seconds)
  done (took 21.94811677 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.955312021 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.276558316 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.99533512 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.310127257 seconds)
  done (took 10.348628786 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.890104003 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.890573036 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.890580108 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.8906715 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.895187875 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.892351552 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.88941587 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.891001439 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.892297264 seconds)
  done (took 18.83849431 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.036129688 seconds)
done (took 99.434594621 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.275634419 seconds)
    (2/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.171810101 seconds)
    (3/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.892620565 seconds)
    (4/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.962141277 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.868035003 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.270768802 seconds)
    (7/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.055553943 seconds)
    (8/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.968328592 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.829405946 seconds)
    (10/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.120452515 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.028834396 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.556604032 seconds)
    (13/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.28670105 seconds)
    (14/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.80079023 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.902338037 seconds)
    (16/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.065784725 seconds)
    (17/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.847924745 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.909337223 seconds)
    (19/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.867466832 seconds)
    (20/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.870008568 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.308815626 seconds)
    (22/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.908935192 seconds)
    (23/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.882588483 seconds)
    (24/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.163392494 seconds)
    (25/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.26935331 seconds)
    (26/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.868648861 seconds)
    (27/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.645511778 seconds)
    (28/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.148799016 seconds)
    (29/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.88262353 seconds)
    (30/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 3.58560925 seconds)
    (31/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.900581436 seconds)
    (32/309) benchmarking ("sort", BigInt, false)...
    done (took 6.88174925 seconds)
    (33/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.986670191 seconds)
    (34/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.907343131 seconds)
    (35/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.153806912 seconds)
    (36/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.297008837 seconds)
    (37/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.987203287 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.255564994 seconds)
    (39/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.986380725 seconds)
    (40/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.022284748 seconds)
    (41/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.8675653 seconds)
    (42/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.003074282 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.978797384 seconds)
    (44/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.867194997 seconds)
    (45/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.185720146 seconds)
    (46/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.120663131 seconds)
    (47/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.985657395 seconds)
    (48/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.980812663 seconds)
    (49/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.065084339 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.961816946 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.776307545 seconds)
    (52/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.50522806 seconds)
    (53/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.966261869 seconds)
    (54/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.855971117 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.174859145 seconds)
    (56/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.88390582 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.626106995 seconds)
    (58/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.886894288 seconds)
    (59/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 3.324829477 seconds)
    (60/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.026750548 seconds)
    (61/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.137065704 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.119834711 seconds)
    (63/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.870610666 seconds)
    (64/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.981318887 seconds)
    (65/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.992876265 seconds)
    (66/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.886334126 seconds)
    (67/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.742422792 seconds)
    (68/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.953405009 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.879333253 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.244461555 seconds)
    (71/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.94645109 seconds)
    (72/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.885329748 seconds)
    (73/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.037270828 seconds)
    (74/309) benchmarking ("sort", Float32, false)...
    done (took 5.602688184 seconds)
    (75/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.455285045 seconds)
    (76/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.329991323 seconds)
    (77/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.207612797 seconds)
    (78/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.912481344 seconds)
    (79/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.33953755 seconds)
    (80/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.179871125 seconds)
    (81/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.128804304 seconds)
    (82/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.979599281 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.239546732 seconds)
    (84/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.395502056 seconds)
    (85/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.47373151 seconds)
    (86/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.024931388 seconds)
    (87/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.913887138 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.893022019 seconds)
    (89/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.980159689 seconds)
    (90/309) benchmarking ("sort", Int64, false)...
    done (took 5.60869592 seconds)
    (91/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.129204834 seconds)
    (92/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.776541265 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.97905463 seconds)
    (94/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.967119781 seconds)
    (95/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.910214316 seconds)
    (96/309) benchmarking ("sort", Float64, false)...
    done (took 5.670519145 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.2271079 seconds)
    (98/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.130777028 seconds)
    (99/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.399856995 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.963162776 seconds)
    (101/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.971915012 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 2.844243055 seconds)
    (103/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.924530212 seconds)
    (104/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.228652785 seconds)
    (105/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.416292656 seconds)
    (106/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.871869972 seconds)
    (107/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 3.487868793 seconds)
    (108/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.897002622 seconds)
    (109/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.566268275 seconds)
    (110/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.910918756 seconds)
    (111/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.838373199 seconds)
    (112/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.457682054 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.992061261 seconds)
    (114/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.912004365 seconds)
    (115/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.914659847 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.075229283 seconds)
    (117/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.159990942 seconds)
    (118/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.971066149 seconds)
    (119/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.917969673 seconds)
    (120/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.32377555 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.917845757 seconds)
    (122/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.968501956 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.887678744 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.695554881 seconds)
    (125/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.889940935 seconds)
    (126/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.065278463 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.198785378 seconds)
    (128/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.106965168 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.543654855 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.985111418 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.013890634 seconds)
    (132/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.875777306 seconds)
    (133/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.262726588 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.105966779 seconds)
    (135/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.910526205 seconds)
    (136/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.888927283 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.160400857 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.144346074 seconds)
    (139/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.957847815 seconds)
    (140/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.958438038 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.861449689 seconds)
    (142/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.72827768 seconds)
    (143/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.988759042 seconds)
    (144/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.908525936 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.107369474 seconds)
    (146/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.904786906 seconds)
    (147/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.139310041 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.980025442 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.985732464 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.9100072 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.90431751 seconds)
    (152/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.878383531 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.355704521 seconds)
    (154/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.045411914 seconds)
    (155/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.889331328 seconds)
    (156/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.300778826 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.126352212 seconds)
    (158/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.955762046 seconds)
    (159/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.083707497 seconds)
    (160/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.896031485 seconds)
    (161/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.1133089 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.123017895 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.915982141 seconds)
    (164/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.092818828 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.028120188 seconds)
    (166/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.876718623 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.349477784 seconds)
    (168/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.875655107 seconds)
    (169/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.979521973 seconds)
    (170/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.223431238 seconds)
    (171/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.954417208 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.991453609 seconds)
    (173/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.022258284 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.914526212 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.890422954 seconds)
    (176/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.969181596 seconds)
    (177/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.902853918 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.931398684 seconds)
    (179/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.28894235 seconds)
    (180/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.444390967 seconds)
    (181/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.87936829 seconds)
    (182/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.962410843 seconds)
    (183/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.242630082 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.606215554 seconds)
    (185/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.823245371 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.230775008 seconds)
    (187/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.079630494 seconds)
    (188/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.139439573 seconds)
    (189/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.195587267 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.969428031 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.121148027 seconds)
    (192/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.414512383 seconds)
    (193/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.803967799 seconds)
    (194/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.223749789 seconds)
    (195/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.053067019 seconds)
    (196/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.917980032 seconds)
    (197/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024183643 seconds)
    (198/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.929743139 seconds)
    (199/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.993577929 seconds)
    (200/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.894422697 seconds)
    (201/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.999526264 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.029396638 seconds)
    (203/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.891130054 seconds)
    (204/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.824910514 seconds)
    (205/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.257132053 seconds)
    (206/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.999983466 seconds)
    (207/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.95156549 seconds)
    (208/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.011206599 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.069261058 seconds)
    (210/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.921350045 seconds)
    (211/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.122690473 seconds)
    (212/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.332313637 seconds)
    (213/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.308549427 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.191109366 seconds)
    (215/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.992269121 seconds)
    (216/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.893363034 seconds)
    (217/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.16744349 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.996612792 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.729805691 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.114841269 seconds)
    (221/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.957088836 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.852100981 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.18267321 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.089591041 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.153259222 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.720057738 seconds)
    (227/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.895144288 seconds)
    (228/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.339218094 seconds)
    (229/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.328911775 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.642561495 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.920049363 seconds)
    (232/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.180627058 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.073118114 seconds)
    (234/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.038813898 seconds)
    (235/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.179543354 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.199373233 seconds)
    (237/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.959487491 seconds)
    (238/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.913735807 seconds)
    (239/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.208164497 seconds)
    (240/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.993174326 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.807024684 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.857248576 seconds)
    (243/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.604166409 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.222446918 seconds)
    (245/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.07195905 seconds)
    (246/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.921856441 seconds)
    (247/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.176645428 seconds)
    (248/309) benchmarking ("sort", Int8, false)...
    done (took 4.798271522 seconds)
    (249/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.900101324 seconds)
    (250/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.763764062 seconds)
    (251/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.931464564 seconds)
    (252/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.908297257 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.33957109 seconds)
    (254/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.281176055 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.90968246 seconds)
    (256/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.010637633 seconds)
    (257/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.324696582 seconds)
    (258/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.19580328 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 3.024747973 seconds)
    (260/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.017373267 seconds)
    (261/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.060118904 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.910031432 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.150547243 seconds)
    (264/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.879992333 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.963194825 seconds)
    (266/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20334505 seconds)
    (267/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.254638491 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.195189771 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.906212724 seconds)
    (270/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.249472622 seconds)
    (271/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.240718363 seconds)
    (272/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.113263777 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.080490078 seconds)
    (274/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.91051313 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.991074607 seconds)
    (276/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.90759111 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.972545817 seconds)
    (278/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.044336593 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.892863369 seconds)
    (280/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 7.886084168 seconds)
    (281/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.495733319 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.992252544 seconds)
    (283/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.895283889 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.86904454 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.91098799 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.017519766 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.760655585 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.009700716 seconds)
    (289/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.274328704 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.080109786 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.129315576 seconds)
    (292/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.540386587 seconds)
    (293/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.91027698 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.768089831 seconds)
    (295/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.980829318 seconds)
    (296/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.833348168 seconds)
    (297/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.00488021 seconds)
    (298/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.054520033 seconds)
    (299/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.019039792 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.947437835 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.895778327 seconds)
    (302/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.421699111 seconds)
    (303/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.98922744 seconds)
    (304/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.003638038 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.926942147 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.909203203 seconds)
    (307/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.165250386 seconds)
    (308/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.410525608 seconds)
    (309/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.380047579 seconds)
  done (took 1015.641728966 seconds)
done (took 1017.52218514 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.981943202 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.935786058 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.920527802 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.941652337 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.03272023 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.949775425 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.931621201 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.923720822 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.969097389 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.971864886 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.917765983 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.947791128 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.921520503 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.920561847 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.92284914 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.935572575 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.242967778 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.956708256 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.936761392 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.931349002 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.938429011 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.919657907 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.971182039 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.948369762 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.925363057 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.924562815 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.924717114 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.941373793 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.032566021 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.923030213 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.92559581 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.932415867 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.242680045 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.955086532 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.917249121 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.941649859 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.93443373 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.931492952 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.926446844 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.953517823 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.341241131 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.965288863 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.925092586 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.924791496 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.923184198 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.927231175 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.923640066 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.929521977 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.935242692 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.937668099 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.331931055 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.981138341 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.926110365 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.925205195 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.934479674 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.92513553 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.927599994 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.940200382 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.944069268 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.939342477 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.231790712 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.961246681 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.92668492 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.940773267 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.930878447 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364413352 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.963700681 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.928779689 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.336472903 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.972060731 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365912894 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.976521944 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.926973997 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.940264376 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.956739446 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.246220875 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.952318274 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.924479165 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.931269017 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.922447694 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.936929778 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.938070454 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.930165849 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.925832539 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938931412 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.953176926 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.935731342 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.92680633 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.93541619 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.945085146 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.933631606 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.937966147 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.928643609 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.920427165 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.935247675 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.931661138 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.928207304 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.928069085 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.931479434 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.937163607 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.339680486 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.985470187 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.922868854 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.922796388 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.925370506 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.941093362 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.338552108 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.97344163 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.950826647 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.975689317 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.929992919 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.236163595 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.962474846 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.943937851 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.937130978 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.933398323 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.922947777 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.235147549 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.370652903 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.986085338 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.930470344 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.925165609 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.944273988 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.929023887 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.924036983 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.250452068 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.96472339 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.941892951 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.048270846 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.939080151 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.9604318 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.925556854 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.931752988 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.960594552 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943846204 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.961387941 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.931056976 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.943364656 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.944135642 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.926026211 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.940436398 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.939144023 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.929656626 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.933991131 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.923733319 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.956277131 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.941364532 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.941121756 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.94980918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.051240649 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.925729639 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.238823632 seconds)
done (took 302.764112649 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.999903271 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.916714152 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.023557425 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.924580182 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.006877641 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.010092024 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.92175589 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.921340732 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.92137955 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.298256104 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.922084227 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.921604431 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.919929054 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.922682117 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.008508856 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.924048315 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.921901074 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.26634253 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.927562975 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.997282589 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.92104084 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.922686554 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.924341796 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.298559363 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.91949768 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.922823513 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.997907463 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.92534238 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.263896619 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.923585404 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.919975658 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.263808621 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.015943827 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.944186513 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.936271454 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.932422203 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.00729538 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.929788516 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.007673424 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.009114228 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.027300034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.96803932 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.925419092 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.92303265 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.930410357 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.92942286 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.924523186 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.955819231 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.918862196 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.925788588 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.265758523 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.93638164 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.934980834 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.924303102 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.924361249 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.949778539 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.924783551 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.928942355 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.018347201 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.928875062 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.990100902 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.30088819 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.302207516 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.927144645 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.927395214 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.925239795 seconds)
  done (took 188.045649891 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.993715966 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.004863536 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.994100533 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.933490944 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.977406773 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.996612124 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.933336892 seconds)
  done (took 15.6797868 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.935960053 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.929175465 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.980734849 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.981305526 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.930902175 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.082005334 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.929801483 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.940915848 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.927252966 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.98392459 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.932869269 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.929989305 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.93580425 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.921684252 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.980703588 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.940279918 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.04575711 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.931101053 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.935234102 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.081455566 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.927723914 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.936414856 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.982704348 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.942748615 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.930816304 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.937809026 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.51564158 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931301316 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.931194934 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.929484485 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.927756681 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.971935835 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.930356556 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.923948675 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.927223333 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.048464259 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.93107423 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.927230923 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.929458742 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.930585338 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.929541783 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.929819393 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.930891549 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.928120583 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.93080026 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.953615235 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.931212516 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.930884994 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.931442023 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.930937379 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.982396924 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931647081 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.927918861 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.929724372 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.986171533 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.937798479 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.933167145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.930352606 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.931828146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930429876 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.084290363 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.983702523 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.93147225 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.98189166 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.932150689 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.932285618 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.932070763 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.930938147 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.028841501 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.932230483 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.983078708 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.928899646 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.092003438 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.955301629 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.933729098 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.935607902 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.935318828 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.933067215 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.93046248 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.938077462 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.928842545 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.93348854 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.940085847 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.929699736 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.930275482 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.045582398 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.041212184 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.932659886 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.946440803 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.940302656 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.930551229 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.987114705 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.936703132 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.930064624 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.990917111 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.051701478 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.991389205 seconds)
  done (took 211.891683297 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.939248164 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.943396714 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.935632301 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.950519757 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.936587932 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.932390591 seconds)
  done (took 13.489042075 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.936651419 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.935987846 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.933901209 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.933905883 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.934112559 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.934559041 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.935857118 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.936228974 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.939051652 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.934333912 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.934878241 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.936015204 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.936617906 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.935821177 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.93632334 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.933744119 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.936551987 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.932139429 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.935072555 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.935355599 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.093149342 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.935309682 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93664473 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.936048715 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.939985378 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.934497214 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.944372753 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.936090155 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.934480606 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.945686865 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.939900154 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.935531205 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.936270506 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.941699051 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.94135354 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.937157879 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.939076708 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.937918442 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.934105306 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.936254333 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.936924727 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.936260265 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.936115454 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.936862893 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.938787696 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.941513797 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.941222253 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.943603195 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.940216216 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.938319821 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.938420018 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.935587842 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.936115898 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.939600424 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.93899668 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.942528498 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.94279271 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.938751361 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.941643672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.936739146 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.937418788 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.936981651 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.939270035 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.9431495 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.936277881 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.938234961 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.938063282 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.941486632 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938402959 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.93837129 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.939249107 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.934760876 seconds)
  done (took 142.520508789 seconds)
done (took 573.491917313 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.12172795 seconds)
  done (took 8.975444514 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.118907659 seconds)
  done (took 9.015440759 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.49615498 seconds)
  done (took 10.355585201 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.950948579 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.955149394 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.939439394 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.931575087 seconds)
  done (took 29.657841386 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.047087625 seconds)
  done (took 8.904797785 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.95511821 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.928463066 seconds)
  done (took 15.768297298 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.026545076 seconds)
  done (took 8.884946109 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.088901622 seconds)
  done (took 8.975585035 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.954446602 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.963713319 seconds)
  done (took 15.788627185 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.917932272 seconds)
  done (took 8.775114182 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.657142633 seconds)
  done (took 11.613013731 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.960600814 seconds)
  done (took 8.925644686 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.010550394 seconds)
  done (took 8.86953013 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.098151068 seconds)
  done (took 8.955252943 seconds)
done (took 165.323375516 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.936946227 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.935539103 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.936825433 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.933714691 seconds)
  done (took 29.598549545 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.974004889 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.971755093 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.974852856 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.984339794 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.974322474 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.973097945 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.965603645 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.965693513 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.985515417 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.976064742 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.973856228 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.974783228 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.973427329 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.968901799 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.975046244 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.975776356 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.984093192 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.973605178 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.96826546 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.976091536 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.941014211 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.983546609 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.977870291 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.942134542 seconds)
  done (took 49.192127072 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.140080034 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.011445531 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.094944613 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.012080527 seconds)
  done (took 10.11723731 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.992533708 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.993390341 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.004871949 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.046496457 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.06803373 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.003771762 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.967530262 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.962603317 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.949979551 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.993694242 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.069437672 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.989249644 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.079279266 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.943916756 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.129485902 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.940836409 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.940581934 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.993051426 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.045637327 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.059296066 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.941692369 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.993348979 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.9973509 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.98995961 seconds)
  done (took 49.95514295 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.94019457 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.947832295 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.946063509 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.943906123 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.941257827 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.941213242 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.947022095 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.942486715 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.962643395 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.941600979 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.939914906 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.94006775 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.941191975 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.94292935 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.940170053 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.952891473 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.9542245 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.94155886 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.948447442 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.947638043 seconds)
  done (took 40.762832213 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.935784513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.790431516 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.288252918 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.19220085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.936653192 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.936778489 seconds)
  done (took 31.94095442 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.956150085 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.94872797 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.945111186 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.000709881 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.082867801 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.948564223 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.943898553 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.956125967 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.990502916 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.004497732 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.961337297 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.972915912 seconds)
  done (took 25.572793157 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.938580346 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.938125718 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.937275149 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.952973554 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.953572792 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.952019188 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.954597027 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.937811729 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.954430095 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.965872154 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.949913363 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.957675417 seconds)
  done (took 45.262326772 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027190506 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.827353991 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.009846924 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.653296947 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.476484958 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149118951 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.461917909 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.280529182 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.940150938 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212504687 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.020319901 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190776693 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.195412895 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939544695 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.006166449 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.427580875 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243318125 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.165090863 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.962746747 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.681439192 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065660495 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.499232383 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.717479277 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.07723826 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.149665017 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.070513241 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.201022676 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.89902487 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.082291171 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977101701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951647646 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.940259149 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214168601 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.318991953 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068759755 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95354291 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.597398426 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.654483641 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.963323479 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.687230718 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.998346703 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.083319953 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949513302 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941866714 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.876647998 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.501653169 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281457166 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.942926478 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.643269225 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.941021316 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.952895766 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032023112 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.945212092 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.759883185 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.899803006 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.218378332 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.93902579 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947967663 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.512093996 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112089817 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.610521436 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.875401869 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.034373703 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.693941475 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.442206564 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.099455485 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.944012772 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.943970918 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.876254857 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.691914465 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.070726976 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.089134117 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.958996109 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.592017178 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263937488 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.153583537 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.033563346 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2329884 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.64352256 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 4.005795933 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.170170284 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89890199 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877560211 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.785129037 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.877405637 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22068198 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.97410589 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.62661198 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977501103 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.291719781 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.951963966 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962644964 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950516635 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.168361417 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.825566279 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942831724 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.815597794 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236656008 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963082796 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.283926943 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875439152 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.945270529 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199821618 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.153413219 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.078984803 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.537861831 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106774078 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.941630306 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.030260947 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.77166998 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.059831809 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.232628353 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013818542 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.116227639 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085185087 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.903172179 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242162225 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.965280532 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.116243899 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.062735305 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219670306 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.272482229 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190515213 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027515358 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944750115 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.944033479 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.761114268 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.575933034 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.168978601 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.946259059 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341752767 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061062495 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.94596418 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880926508 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.603844803 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088335522 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.071596207 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169551018 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.822195439 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.327038347 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.87993116 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.090747538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.058381582 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.166304908 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.614958388 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.03375479 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206496685 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343171042 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.20986646 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063814852 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964771496 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064939019 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967992374 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.292095441 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30674893 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.950689673 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.950759428 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.782146111 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.025027155 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9472189 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.950495592 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.743900556 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24747478 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.979709902 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.945291927 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.882617663 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.960499818 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02943426 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95184938 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956822713 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472955188 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.705595674 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.955361784 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.595264503 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172716114 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957016554 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.762477813 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143697695 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.030239717 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240250885 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.017589786 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.880987024 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.648801949 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.650659258 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.948226158 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.883108421 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.946956853 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957036321 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.959053606 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.170618476 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.242427287 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.000027095 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.766446696 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.072686294 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.958795231 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.953100753 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947898458 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.474515619 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.138196195 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49072871 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.064586932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.084669306 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.962129244 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.882455385 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.952707699 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.95271535 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.949546845 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.915489704 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002591134 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.708379407 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416853553 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206893431 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.597436621 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965397467 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.744955899 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.08872052 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.972853251 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.837631512 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963657701 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.052957345 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003579803 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.959175182 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.771763071 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.740703357 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.521760994 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279187228 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.297653229 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419915561 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.365296605 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278270115 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295234521 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182620291 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.479287112 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.012305455 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296713932 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.893025516 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.034797342 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.619052466 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.316161152 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965299227 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178093092 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356470711 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.911782636 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120317793 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.162445022 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.986103356 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.801753078 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983506085 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.577317384 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107781521 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.913218468 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.192963018 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298396745 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.851364193 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.063174378 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.951722147 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.662116892 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030705037 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.659557117 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.314770142 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.523401135 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.050218213 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.461204501 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.950432296 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.398502636 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.324271581 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32378955 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.038303431 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885634492 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.96388573 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.963377584 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.95449684 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.934197503 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.801068446 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.207298697 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96289434 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.188078744 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.131604664 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.357422405 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.867040245 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.957157125 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955227781 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.249159965 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.719552362 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197830581 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.32281216 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.535266459 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967061872 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.889032768 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888975054 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.656639675 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.953663208 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.93054697 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.18422494 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.065890607 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.912866567 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359574476 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.268635024 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.210166349 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.968665484 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.250090061 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.243064854 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.719325026 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980937635 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.054684796 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.832606855 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.665104164 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.179295557 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.191442019 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755535661 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.181635816 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.032432987 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.928309687 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.95412962 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.170689166 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.176944204 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.066881641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21633157 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.675516375 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.959751907 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326586704 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020903464 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.076652821 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.178498192 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.048130852 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966768214 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034985171 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.965293785 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.967810821 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.966784684 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001749731 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086436059 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.095748854 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.968751184 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.048558611 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.124186416 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.552359808 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.96991737 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.254168434 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.344103193 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308989559 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.025471688 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.957346744 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957723347 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.889936734 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.091966855 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.404327311 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.229653175 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.08642833 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.100023356 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980915209 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.843372098 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.28213393 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.270723369 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234934762 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.850833468 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956544711 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.04732083 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.186586224 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9680832 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.168862473 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191946423 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277751457 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424737644 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.108145036 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.400952758 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228738837 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.336469587 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957067559 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54934836 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.960714729 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.709632746 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.993589869 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.069465748 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256712207 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969439456 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.341098434 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.976718204 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.158228841 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.410637525 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.743788435 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33111978 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.956543101 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.017339145 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.257530325 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.383564133 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281316428 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040991447 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.96934682 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.659929843 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097093451 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.832395654 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.200425891 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.959732497 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17038692 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.670377466 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.969526552 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.255159725 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279360174 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.955867091 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.877796077 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998747342 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.969139341 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184321331 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22485671 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.206922749 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968112661 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.961434774 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.776880308 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.253883156 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.028054724 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.894293223 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.961507143 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.058795744 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.205527323 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978219141 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.477686007 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.663502921 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259997772 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.876122556 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981757789 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402949731 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.423134633 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315127613 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.49645534 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.191889878 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.516336284 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.839290261 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.336942929 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.965848241 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382453478 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340610944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.964953736 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.487397854 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.074396013 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.256146318 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.291661679 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.976712791 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831288224 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.015588722 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183926039 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555912929 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901932573 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963071842 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.024641287 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.958707196 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.094449533 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97163091 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.915820565 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854269246 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.802929776 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.455458776 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.966376832 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.101997815 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.849034535 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.55961988 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.069834547 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.118297925 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.96481022 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.670626539 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.256658999 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.218224908 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.48388892 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.033420816 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.966165798 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.963247091 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.891099743 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.159111977 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.162561298 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.275143227 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.324342771 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.074225987 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.967844657 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.179935802 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.17533105 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.078009687 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.13077765 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.366818933 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.076368371 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.895615552 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.678996804 seconds)
  done (took 1731.241749586 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.979176649 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.991361674 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.974927386 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.001981284 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.991463818 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983930782 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.033582048 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969539574 seconds)
  done (took 57.815373566 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.964453369 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.182088281 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.974635689 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.966547819 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.994493094 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.965943638 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.163671648 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.977920184 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.985424236 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.978872202 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.967975734 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.975140292 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.314176482 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.991762058 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.967641048 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.9870713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.985559083 seconds)
  done (took 76.240901332 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.971055611 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.152362043 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.986224648 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.995022371 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.834647301 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.9709804 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.908666971 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.986325792 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.97102477 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.139824059 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.302532495 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.019819478 seconds)
  done (took 91.133333638 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.984879353 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.974660282 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.975936206 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.9748385 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.975955309 seconds)
  done (took 11.788051355 seconds)
done (took 2252.49677715 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.35815035 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.194880878 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.210586724 seconds)
  done (took 6.298968003 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.115184493 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.164837559 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.285620998 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.303784787 seconds)
  done (took 10.764858552 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.263831574 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.342271855 seconds)
  done (took 6.496750594 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.299872896 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.988113129 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.388535569 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.969466758 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.965774141 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.968328107 seconds)
  done (took 22.800944364 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.969677814 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.973120075 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.970216908 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.973247283 seconds)
  done (took 9.777560042 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.953485406 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.697537296 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.950121666 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.9681359 seconds)
  done (took 21.458612502 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.720768787 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.094937872 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.718160931 seconds)
  done (took 9.425722363 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.614941952 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.886145707 seconds)
  done (took 9.393618641 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.211347304 seconds)
  done (took 4.103469882 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.99895025 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.24313214 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.49705233 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.508576832 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.595324308 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.798690391 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.268629053 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.199243342 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.409559871 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.424437235 seconds)
  done (took 25.836687369 seconds)
done (took 142.287463966 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.3114221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.98563454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.169751261 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.320702735 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.211605369 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.169169345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.188150879 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.310561068 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.844216455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.840411314 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.32300948 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.191696718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.132182133 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.980167711 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.13876772 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.978173091 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.186935776 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.326573848 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.00970452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.225619489 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.197263162 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.973222316 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.163725287 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.985029017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.203488103 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.117569168 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.516766187 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.982580744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.151361226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.528841189 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.118191752 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.370869863 seconds)
  done (took 171.04603308 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.973477221 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.970312685 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.970292071 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.970398024 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.430105496 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.970546605 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.971162356 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.970129371 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.248295087 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.236697742 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.969652383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.419944672 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.970121787 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.968564854 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.976271344 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.970136958 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.434588906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.971737244 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.975994202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.983282345 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.981062364 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.290017931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.985737613 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.340869143 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.463637207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.992883133 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.966479185 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997125825 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.001290375 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.997629043 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.998056178 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.957408815 seconds)
  done (took 212.22111422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.887867955 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.957120083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.965303468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.954869764 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.968466219 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.96598328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.954954212 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950309235 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.550031023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.565868183 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.972284054 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.980503629 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.962661161 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.950115103 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.966241031 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.949677307 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.964617036 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.960579499 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.963871207 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.966864515 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.969796859 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.612641632 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.967358354 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.604026617 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.957498991 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.987216448 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.945402078 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.959603116 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961121635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961056237 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.965074302 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.944334885 seconds)
  done (took 223.118192392 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.137255385 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.95288594 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.955194842 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.885263743 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.952968247 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.951049275 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.946222178 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.135431519 seconds)
  done (took 19.810686267 seconds)
done (took 628.099233132 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.415025199 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.251346885 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.131981429 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.975257228 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.222037394 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.005579282 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.968035744 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.033024446 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.702667869 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.039239684 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.619664518 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.990038895 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.709740375 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.995676923 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.093139257 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.025908691 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.559607822 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.647730044 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149055045 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.040300532 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.145655352 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.931283523 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.054305597 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.729900986 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.810715443 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.97946186 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.138611471 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.562445095 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.97749786 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.133808675 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.732903412 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.353306405 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.980654912 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.966978262 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.026145047 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.999924202 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.309280473 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.979552465 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.087433262 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.732863681 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.033919748 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.585689509 seconds)
  done (took 106.697304198 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.940177341 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.940061182 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.938681823 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.94506256 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.945156336 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.945384632 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.944743895 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.943873321 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.945486893 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.944948701 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.944376147 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.945261926 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.943967227 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.946476163 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.944119205 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.944857719 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.945563592 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.946589248 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.944264472 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.945479373 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.945696965 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.945610805 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.960901014 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.945616017 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.947962461 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.946477482 seconds)
  done (took 52.45721907 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.957236044 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.109748355 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.198717767 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.979119188 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.957609873 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.960944704 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.975651538 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.962453125 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.960156934 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.96014216 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.062723048 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.9648196 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.977589013 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.197022843 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.974838283 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.958320065 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.959390411 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.958543893 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.117658223 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.974712562 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.977952856 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.963876071 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.979651183 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.973302657 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.959289284 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958231703 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.962717997 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.384482605 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.968269542 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.064114728 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.001826594 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.980416001 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.33149883 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.209485412 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.013518951 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.964855156 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.959635407 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.066134828 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.965403098 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.959467968 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.977401591 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.964555162 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.198968019 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.460455922 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.975924198 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.960657891 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.39823254 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.078315522 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999713423 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.967489745 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.201331095 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.977588396 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.960975465 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.961400282 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.995479158 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.96308943 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.96061357 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264451938 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.969982884 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.978017307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.96510385 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.961537126 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.124145014 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.969557752 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.112051255 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.970551246 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.968400231 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.961050226 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.199448509 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.978412504 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.461506659 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.976461182 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.960915069 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.06566372 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.116736678 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.425344335 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.974446011 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.125521767 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.348604204 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.985968724 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.969133784 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.376226421 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.99113553 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.969551618 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.962213495 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.963505536 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.961332334 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.004748812 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.978722005 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.394631089 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.470233852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.278250479 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.989775301 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.97706816 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.961092022 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.261103148 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.972713372 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.963767729 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.19713514 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.475957206 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.977810038 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.969354521 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.449784625 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.979172549 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.982572126 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.971723892 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.2061775 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.978223863 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.007042867 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.963247939 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.970978705 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.966403827 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.982052339 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.970080281 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.964151321 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.443710143 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.089906265 seconds)
  done (took 242.548518074 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.95948799 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.977319267 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.956294536 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.981678812 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.956917732 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.962135847 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.957506569 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.956990746 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.962800196 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.956590027 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.957273493 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.958897524 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.961233208 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.959174634 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.55809673 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.992677576 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.596023797 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.987054994 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.98614936 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.994547783 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.677055722 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.989872046 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.987130933 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.997955887 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.984687157 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.984991227 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.088627266 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.991513691 seconds)
  done (took 171.165984244 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.987835327 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.16843425 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.008021634 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.028455065 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.996635837 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.985415929 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.011381178 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.008492929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.994995507 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.985737204 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.985190692 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.049283988 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.996476188 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.132693923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.016124716 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.019137845 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.088480177 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.992359971 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.985768771 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.985227449 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.016993853 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.983745816 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.050074725 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.11505236 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.006782714 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.105430746 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.993122615 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.989093495 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.988992708 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.107513514 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.005114549 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.048669765 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.018545325 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.005967519 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.109558411 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.10516302 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.091100837 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.015712336 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.990411517 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.987321567 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.987308222 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.976536716 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.107477717 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.010013644 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.990282245 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.098110603 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.007746076 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.99115306 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.998454193 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.988259055 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.002730876 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.007892173 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.056872664 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.120960913 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.023180831 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.016026498 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.014334829 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.267111533 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.997396915 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.088601247 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.981143144 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.106635477 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.009976156 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.977460713 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.990047645 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.995876819 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.018532327 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.020223723 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.092332815 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.99525813 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.088949778 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.02151283 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.994143123 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.988170687 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.99161666 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.107951913 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.107605912 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.022359693 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.025182301 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.018922489 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.98462935 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.990843868 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.978065332 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.007597106 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.993908711 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.107183783 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.108542275 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.995933124 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.991713644 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.992008417 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.99218591 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.016245932 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.115680493 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.025899862 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.086615062 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.056148305 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.064637108 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.005007774 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.002476483 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.995784742 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.055000805 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.005311614 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.002980268 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.317328392 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.061134461 seconds)
  done (took 215.325576571 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.441281555 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.04348333 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.05048222 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.321919147 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.427720988 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.784013076 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.039894017 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.042229296 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.064710535 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.228885643 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.11247256 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.06031162 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.026180537 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.01408842 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.042725094 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.062024824 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.052131292 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.37104329 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.162371069 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.158451381 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.022097033 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.335505263 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.360791966 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.433444823 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.076777359 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.396934918 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.72006034 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.180600381 seconds)
  done (took 64.950236869 seconds)
done (took 855.014818255 seconds)
SAVING RESULT...
DONE!
