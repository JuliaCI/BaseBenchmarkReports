cset: moving following pidspec: 20012
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.764399691 seconds)
loading group "shootout"... done (took 1.186725855 seconds)
loading group "string"... done (took 0.422452305 seconds)
loading group "linalg"... done (took 8.218536728 seconds)
loading group "parallel"... done (took 0.162049662 seconds)
loading group "find"... done (took 1.350821038 seconds)
loading group "tuple"... done (took 2.054407046 seconds)
loading group "union"... done (took 13.089247813 seconds)
loading group "dates"... done (took 1.383535771 seconds)
loading group "micro"... done (took 0.212822685 seconds)
loading group "simd"... done (took 4.526120726 seconds)
loading group "io"... done (took 1.048657005 seconds)
loading group "random"... done (took 8.941815899 seconds)
loading group "problem"... done (took 1.555187677 seconds)
loading group "array"... done (took 20.226786939 seconds)
loading group "misc"... done (took 1.533628121 seconds)
loading group "scalar"... done (took 41.385996094 seconds)
loading group "sort"... done (took 3.289239901 seconds)
loading group "sparse"... done (took 12.069377504 seconds)
loading group "collection"... done (took 17.487849417 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.515833024 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122060325 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.127636563 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120294991 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.184943539 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11901063 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.126562479 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084200037 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.8373476 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.135933038 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114033969 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.428689177 seconds)
done (took 5.243461122 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.166185524 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.091460956 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081959677 seconds)
  done (took 1.285162391 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063917453 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.13385623 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065378916 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.065278093 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.065577879 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.064736022 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.064859976 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065127946 seconds)
  done (took 1.6372462 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.071133356 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.066569168 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.064263336 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.066920426 seconds)
  done (took 1.381156166 seconds)
done (took 5.661376881 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.239316318 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099609776 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.285344233 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.442298118 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.604916168 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.092372913 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.073591551 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.069209526 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.126336886 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325776316 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102538446 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.180049907 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088936525 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.169881144 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.985379864 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.119578767 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084835361 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.121283006 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.093332014 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130246084 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.385961549 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.076885281 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.074461196 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.069538554 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.066751262 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.646944164 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.667687011 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.119271858 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.08297032 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.160712544 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.11561105 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.640287488 seconds)
  done (took 10.687233002 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.091377679 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.088275592 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067393285 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122451902 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.091495227 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.068360036 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073486321 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066319865 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086640348 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121406673 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087832336 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096372047 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.064790382 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.067742751 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.073046812 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.194237925 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.07928153 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.079930517 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.066642048 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079691269 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.103963068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077218853 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.076826387 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.076334082 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128107082 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.167413866 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.095490171 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097120576 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068950756 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080056391 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114142255 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.123277425 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065114156 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063912931 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117581007 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094112707 seconds)
  done (took 4.477186052 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.967308984 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.093133376 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.098181326 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.624456404 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06504455 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.14905631 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.238767391 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.072340841 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.341258708 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.149225861 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.142767523 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.146063347 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.114734765 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06775301 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.24329277 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.115664667 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.521462864 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.066392362 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.066213942 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.064902333 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.066785448 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.066505202 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062587957 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.068018582 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093913464 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.086472333 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.164313436 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.954740433 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.289251781 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.068688778 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.158927987 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.08388221 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.372602137 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.068905651 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.082080958 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064639531 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.440703788 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.122027837 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064216595 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.168309766 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.115497576 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063097416 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.119244659 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.07680557 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.067938841 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.068546742 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067604398 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.069766167 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.07745573 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.100002988 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066432785 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.083340749 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.064575881 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.169056126 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06415498 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065498962 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.065842262 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063004859 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149547243 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064664546 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.140057092 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.063344884 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068420882 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.10092866 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067792927 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.085342916 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09352534 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.336425221 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.057551443 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.067170429 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.203723243 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.075442044 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.064971949 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07059561 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065643604 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.066639649 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.062964636 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066542959 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.07089619 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.069615281 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067901421 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.107811128 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065588628 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068795838 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.06612473 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.071261994 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.0963154 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064421385 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.493745981 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096151135 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.065021348 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074154268 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103783831 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065826947 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.069832088 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.066351295 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.066100755 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065285324 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.066085673 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.068377849 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.094508519 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.068904198 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.111625494 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.161656649 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.068464227 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.066318812 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.073416766 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068200526 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.068831085 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.065903526 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.067869317 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.067343565 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064156295 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.105885582 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.065839152 seconds)
  done (took 21.93997304 seconds)
done (took 39.182135708 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326593513 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077491795 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077622616 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077590009 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077512908 seconds)
  done (took 1.848689207 seconds)
done (took 3.047987963 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.107842224 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.063547587 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.098593131 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.098333163 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.06300557 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.062968539 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.096744935 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.062698797 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.096658227 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.097964711 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.099952133 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.099330299 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.06291598 seconds)
  done (took 2.317839028 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.069002341 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.080080545 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.081471545 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060579027 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070645874 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.081004027 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.060881492 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080146572 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.085863866 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080246059 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.08042251 seconds)
  done (took 2.02279154 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.070772436 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.08084229 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.082159562 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.060861066 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.071880204 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.08085644 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.061541819 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.080762752 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083423866 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.080813058 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.080387439 seconds)
  done (took 2.019842329 seconds)
done (took 7.547115079 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065057276 seconds)
  done (took 1.236649202 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.521595403 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.205031396 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.066855775 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084912626 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189026534 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.091360757 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.199401225 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.06993933 seconds)
  done (took 7.772437145 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102197285 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06992924 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.067527868 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.066608404 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.066628489 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.066840539 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.06751579 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068252167 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.067823276 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067638752 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.066388062 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067181775 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069014345 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067052563 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.066849453 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067290307 seconds)
  done (took 2.38883783 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097419416 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096485165 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071432746 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071749645 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.06987464 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069750617 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071412966 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.071097026 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.068263673 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069654706 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071255992 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.06992651 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069663154 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.061198935 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.071379781 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.071959415 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067971954 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071198609 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071829615 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.073255355 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07119418 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060960769 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069316544 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070624954 seconds)
  done (took 3.027472972 seconds)
done (took 15.611922631 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.170488819 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072936843 seconds)
  done (took 1.4258265 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.066749537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.066981935 seconds)
  done (took 1.328554036 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.072241647 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.059985748 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.077246771 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.069056124 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.060381062 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.059986388 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.075512815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.060472069 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.060070952 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059982627 seconds)
  done (took 1.849693888 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.061948294 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.067748346 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.0655706 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.067405374 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.065762343 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061054517 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063452337 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061610314 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.067649051 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060119432 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.06430309 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.08103399 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.064235244 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081553694 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063750765 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064305571 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066422145 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063996153 seconds)
  done (took 2.390542539 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.060735677 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.061192004 seconds)
  done (took 1.325406488 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063868629 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060775685 seconds)
    (3/7) benchmarking "month"...
    done (took 0.062998446 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063167165 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06100295 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.060233701 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060447414 seconds)
  done (took 1.628298888 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.412175565 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119014567 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.331353485 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067159102 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.075203983 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248871744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.062509728 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.066712029 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.066791164 seconds)
  done (took 2.68900154 seconds)
done (took 13.843760791 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080277421 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.174884431 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.087502973 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.516289277 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090430386 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066247712 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111544845 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.164533038 seconds)
done (took 2.508026739 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.226500506 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.316027812 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.778476858 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.065166833 seconds)
  done (took 3.368008246 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.327256657 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.077819725 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.077029767 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066433434 seconds)
  done (took 1.763847576 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.064162269 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070166903 seconds)
  done (took 1.345557013 seconds)
done (took 7.923179034 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063230068 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.062443075 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.06318731 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062363595 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.062934074 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063229614 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.090667772 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.063430756 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.062539298 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.062053275 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.062477644 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.062485834 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062201706 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062534665 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062725646 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.062209 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062352791 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062564925 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062632082 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063248344 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062268881 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.062937099 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063139924 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.062724743 seconds)
  done (took 2.774241087 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.078014417 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064937183 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.065648446 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.065799833 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.066076049 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.065588517 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.065725766 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.064356592 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.065927718 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.064287053 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065913204 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.065877042 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.064055284 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.066162121 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064295315 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06613829 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.065587013 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064731673 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064492393 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.066060786 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.065549438 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064343801 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065808931 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065621877 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066113698 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065750765 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.064095065 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065007178 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065706618 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066158334 seconds)
  done (took 3.19779237 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.065613288 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.059259301 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.060183222 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.077995209 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.059290088 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.059349 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.059639156 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.059119508 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.059429776 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.060217836 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.060067142 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.060107344 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.060188607 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.059547397 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.058911996 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.059623733 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.063773455 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.077423801 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.059231067 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.058955371 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.063629562 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.059123976 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.058693983 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.059072384 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.059235782 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.058794302 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.058907388 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.059860572 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.058719526 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.060755662 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.058918584 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063379169 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064136557 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.059646687 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069047613 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.064177166 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.059483307 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.063244484 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.060286582 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.059238572 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.059267446 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.058901275 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.059090668 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.059551716 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06890692 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.059304301 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06031503 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.059928263 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.05934316 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.059213204 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.059346924 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060921994 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064710869 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.060508775 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.06204906 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059886296 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.058986824 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.059863824 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.058989779 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.058834839 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05866405 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062903709 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.060815958 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.060060329 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077935067 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.06051264 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069348371 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059145123 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.059879643 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.062740215 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.059407441 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076456561 seconds)
  done (took 5.654324986 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083294997 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084783851 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064040395 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063961965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.05965942 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.059544436 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067303273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059609115 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064348291 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079214876 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.059634599 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06403596 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063888075 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063898573 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.059545685 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064391715 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.06715308 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059966368 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.060239072 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.063686003 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059757184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066754417 seconds)
  done (took 2.678696704 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.136843954 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.064767778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.103510437 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073560778 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067347248 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073064495 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064840672 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064801613 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06508277 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065531775 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065688632 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065363634 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066966368 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065510364 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065575611 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065727914 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065277244 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065336005 seconds)
  done (took 2.535787349 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.075729375 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065622543 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085199194 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064528957 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065013556 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.064353356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067943242 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.06910703 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.064512482 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06494734 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068902866 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064427077 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.064311087 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064976833 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064874768 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065168077 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.064481037 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064575764 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068417669 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068421368 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068063889 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068560804 seconds)
  done (took 2.712553845 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.075426241 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.063403582 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07856156 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065455461 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059647911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059654512 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.064764054 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.064130878 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.065043628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.063539288 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064162287 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059798685 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066263455 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064170311 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065763134 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064686386 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063843953 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064064807 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063836319 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059348605 seconds)
  done (took 2.528617222 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085433891 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061736178 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061912948 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081428078 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062224988 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.063075434 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080607204 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.061780018 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061624985 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083327838 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.061867069 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061736378 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080934432 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.081060025 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.062064414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081262094 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080942737 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081161686 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.062360797 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061776304 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083953959 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.062075938 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08150816 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062284166 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06232582 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06226809 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061778073 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081103715 seconds)
  done (took 3.208120294 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063746063 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062795913 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063274517 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063132509 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062643133 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062747843 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063060475 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063140276 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063347368 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063558014 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06328052 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.062478922 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062902057 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062611661 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062682679 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062694051 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062947365 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062841747 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063092688 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062900903 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062480015 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062230316 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.062413905 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063089681 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063122929 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062429529 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063453783 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063334005 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062220397 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062916353 seconds)
  done (took 3.126001792 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072403676 seconds)
    (2/2) benchmarking "in"...
    done (took 0.071283991 seconds)
  done (took 1.381119366 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.061348837 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076103764 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.05949857 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071760153 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067708386 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063068279 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.068092338 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067570072 seconds)
  done (took 1.769843868 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06556925 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.088388849 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.061370655 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.061480519 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.064106838 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.120088832 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073600018 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072320597 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074179281 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063844369 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.061530205 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.072479283 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.063082311 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074239884 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.062418744 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069640809 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068582242 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073097147 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073574268 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05952899 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073437764 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061529187 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059798687 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.061685287 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.060709716 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067308459 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076331214 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072955791 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069611828 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059324007 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.079753138 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.059822202 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.060890827 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069329596 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.06426217 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.059714599 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.096108948 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.060222708 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.064663726 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.0598891 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.071440961 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080267781 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.074351383 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.077254293 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.061822845 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.061402483 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.059803013 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.061547134 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063844789 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069240812 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.05988888 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067157784 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.059108197 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.06115077 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070632759 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.060046613 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065169319 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068876515 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072976828 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070369307 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.068535798 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.07498148 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068726585 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.067812306 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.061191889 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078752828 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.061110475 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07279675 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074266716 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.060671654 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073257548 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.059226513 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.058903845 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.059374174 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092464348 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.061110311 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.060639193 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.059742845 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.059646513 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.060820439 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068652602 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.064687182 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06653903 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063161883 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075479707 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068929492 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.059515383 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.06605886 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.077303773 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.062990933 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.059792643 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.075656715 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.062999545 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.059168269 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076755247 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069523528 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.061070035 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.060855599 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063359417 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072636492 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.061177515 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.058695499 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067410193 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.061026914 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061760315 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063986101 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067139804 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.059227899 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069514415 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.064228441 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.060451447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.057681488 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.063016041 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059431099 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.057721799 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07074352 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.058649991 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.072560533 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.064752237 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.073128142 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073427261 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.068837895 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074179296 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.058746744 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.057606184 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.075809272 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068350785 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.060047556 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07604159 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058843289 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068971656 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.189447537 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.061996234 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.07061324 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.060032785 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063218504 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060516048 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.065698373 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.061969081 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062035458 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06514207 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068558776 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072101719 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.061168583 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069681903 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.060142687 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075980018 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.069741829 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065332351 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064061129 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.060320038 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071959001 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066596668 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.069775245 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.059917966 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.060520049 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060348672 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070501292 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069737272 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062325043 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067431071 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.064238634 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.061515602 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.060319918 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.061064947 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063215016 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063565564 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061285865 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067898301 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.069133108 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073499797 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067363451 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069881425 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.060030226 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059610144 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.064527507 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.059513308 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065032391 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069316656 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.075248239 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072317789 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082593893 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.06154968 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.071061867 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.063097947 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.078592154 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.074414594 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.062126126 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.065798781 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.059843554 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061558966 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068926204 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072889806 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.075429904 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.075576918 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.064677658 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.064639734 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.05944554 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074565303 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.060726815 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068592925 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.069079976 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.064415687 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.060057304 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.061356002 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068793038 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064611989 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.059730164 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.074976045 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065797553 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.059251172 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074176353 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.060523425 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.070588391 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.059484958 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.063640305 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065014812 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.061517923 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069419462 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075458363 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059048731 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.060520517 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075790595 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.061859755 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061367691 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.068029989 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.075296568 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064653182 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.068104777 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070549912 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070503676 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064079679 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068950065 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.060446479 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.069278658 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.062494034 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070994643 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.059828021 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.077446853 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.058552752 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.074551707 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.059964132 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.070417387 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060288411 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068730795 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.060574952 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.075608254 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.061230237 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.059815414 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.070192717 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.057778043 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.067885821 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.058857023 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.063957558 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.065703065 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.068026826 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.060210397 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067821716 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.060345338 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067098403 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063442494 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.066301876 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067837644 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.063023222 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.059761273 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067119252 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069184994 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06683965 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.195576488 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.062537946 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.062137446 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070753108 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.062328288 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.061970166 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.0687482 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064791401 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065940268 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061892109 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.06214408 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.061382276 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068267568 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069633101 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.078216637 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068879198 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067506769 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069614195 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.05977067 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075863992 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.059789856 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06809399 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.059381784 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.065775072 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069431083 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.060574797 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.07860412 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.061372486 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.067911563 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072226474 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06897684 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063883866 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077675336 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.063093145 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068833081 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068139932 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065062593 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067220561 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.061844982 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068601802 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.069227126 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070825839 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.060962142 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067614758 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068913581 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062144909 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.067191267 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061471631 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.068156638 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.061728977 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059065408 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064288297 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071264417 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.064940301 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06529934 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059924746 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.058978731 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.060519754 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.066352061 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.064353608 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068414476 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075699234 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.059095218 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.060994517 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.059648805 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063713386 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078329512 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.069661136 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067758377 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.064743465 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061562429 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.061346105 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061907318 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.060824239 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.063983725 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.059698701 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.059582755 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070734941 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.061874641 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064540568 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060965584 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.060755439 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069948497 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.065024746 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.060477624 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066166079 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.059544198 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065191485 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.059404921 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.061762356 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064896576 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.059637348 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063804101 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.070553323 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.076050397 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066972618 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068941306 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.060998234 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068034981 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07481699 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.067128491 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060818466 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069146666 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059345791 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.078248177 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069053266 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068201738 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069546012 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.061176464 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076720114 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.064061554 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069717203 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.074749318 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.061102624 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.066121414 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.059868999 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.074772422 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.064391197 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.059799994 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.067134114 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067067741 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064949934 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070914775 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.059314792 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066953937 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063541754 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062485894 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.060211996 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.059947791 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067402075 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074531327 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059222452 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.063241967 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.066324366 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067047218 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063612745 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.211290979 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069953237 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.062312919 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.063118667 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.06461546 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.061517614 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071998761 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.060606943 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065694172 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.064849585 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.060187187 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.06696561 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076360279 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069638397 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069670792 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.060046636 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.05993784 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.077881285 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.063918705 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.06432895 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067987518 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.07025751 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072582935 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069309471 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076611507 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.0607976 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065901134 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071866104 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.060837457 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.060144541 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06388082 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.062169492 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069734605 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.070105607 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067950334 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06248396 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066609431 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.073418352 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.061811518 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065578945 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.065049707 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.060720678 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.070425276 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068383516 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068919012 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.061468216 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060180418 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064000057 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069364131 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068354777 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069387486 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060903888 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.066077499 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.073446908 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.06797596 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063216059 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059691512 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06316916 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.068982958 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.064210034 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059952095 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.064675968 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063527992 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066605034 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.069223673 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064983137 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059839232 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.076214395 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067745883 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.068879456 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.061302709 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.061713798 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060440854 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059811383 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070814329 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059814539 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.061865598 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.064911129 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.061522066 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.07691157 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068320942 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.075582246 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060841337 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.064522737 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.059767233 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069787888 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.064636974 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.060267833 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070086683 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.061453046 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.074785474 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.071778933 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.065172477 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.059665995 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065188132 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06803718 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07701773 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069539837 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068789137 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.063235481 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069546184 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.061959804 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.070541166 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.059546869 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.059640142 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070438973 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068792668 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071991335 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060043993 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.070000829 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.061568113 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067964019 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067925362 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.061344673 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.061448788 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.06175504 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068623336 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.064351132 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068989317 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.064507548 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076186544 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.060830099 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070153714 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068065334 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.069634882 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072379587 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070771461 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.066752841 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.05943891 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066652915 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066791125 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.06002939 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064011095 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.061879985 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079312202 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.060706718 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059949393 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.210803084 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.067837723 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.061264283 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.067368763 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.065372992 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.07087046 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.079388938 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.070915282 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.064538023 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.061628556 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.06495697 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065309841 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.059628819 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059749085 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.060487985 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.0697303 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065137941 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.060283569 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.078442099 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.061525954 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068994911 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071485771 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.066728302 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.062194282 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058839928 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.061132698 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.07311171 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.075789425 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063660601 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069486258 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.062115395 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.070202327 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.059451478 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069078981 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068616217 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068557714 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.059997773 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.060380292 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075274171 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.07582687 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065022757 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06940898 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.069630548 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06186589 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.081579756 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069163108 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.061843109 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.071195197 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.062511967 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.059270905 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.059044496 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061305008 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071246225 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.059981358 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.062212053 seconds)
  done (took 41.255517129 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.097611975 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.060768003 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.059677342 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060031734 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071232533 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06104203 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.060350413 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060983284 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06078022 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062425998 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059910512 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059691799 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070712617 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072577668 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070130795 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.063919308 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059651678 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06083659 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059755714 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060622698 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069738052 seconds)
  done (took 2.712420868 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.066344402 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.074973823 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070781214 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075950564 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068189404 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064857433 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071004116 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063764208 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071426985 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069223217 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071130017 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063871918 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069053573 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.069249231 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069024558 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063741109 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071438798 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067451641 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.064197161 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070563963 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064107221 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070958239 seconds)
  done (took 2.842955308 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.061749875 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.060443503 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068983576 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060005158 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.059265723 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.063553843 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.059035084 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.064118325 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.063939715 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.064118363 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068529898 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.060347998 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.060419156 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.065042877 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.059069614 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.060148 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.100967292 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.060741021 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.060784631 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.059507356 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062329308 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068960325 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059812794 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.060054112 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066037539 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062881603 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.05974191 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.061948723 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.060096146 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.063760196 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.060785695 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.059078009 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068256447 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067772047 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.063746596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064088373 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.061611245 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.060627175 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.059661352 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.059634004 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06783186 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.060642401 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.05972432 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.060791061 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068494161 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.059604634 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.059051918 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068521943 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.059538406 seconds)
  done (took 4.431606592 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070374937 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111495892 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065660836 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091656456 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.072416692 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.065987819 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.065026442 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092514451 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060932232 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061276929 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073145097 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.073443548 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062655317 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063578486 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066302741 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062701882 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062990064 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061878198 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065108247 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062066129 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065077329 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.066499936 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.072098575 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.072433874 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063187244 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.061763286 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063050589 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063899814 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.072395563 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.065459432 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.063699275 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.064258843 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.072565448 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.065379249 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062232576 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.062054 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.073414542 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.062857128 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.062421399 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060652923 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.061866263 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.063491285 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.066896984 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.073734629 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062824492 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.067034117 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.062806923 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060325479 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.072554036 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.062300974 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.066426185 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.073860625 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063485401 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.063042573 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.064107971 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.072625701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06338949 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061868712 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.062401664 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072597146 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06120188 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063486722 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073201425 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061849053 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065768661 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.073581198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.06740213 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06354746 seconds)
  done (took 6.023788131 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069195132 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.093257224 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070975463 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070250253 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072459917 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070074019 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070256287 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071308525 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072339357 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072297129 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071495797 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108587122 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066518384 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074094486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070035853 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070570294 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.070666978 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07012918 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070643358 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.070382161 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069969805 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07032691 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070016549 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070656396 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072241819 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066157307 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06964169 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069867534 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070103859 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069914349 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072539476 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069801458 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069692299 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070415623 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073034515 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069951113 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.060493373 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070358119 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.0699083 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.069949024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066294075 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070812535 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069788817 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066272116 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069867173 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069961714 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070451051 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.072477914 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07655234 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070880546 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070580493 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071009919 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070012255 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.070210369 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070436637 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.076932047 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07065657 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071179722 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070567591 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071144476 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.07062776 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.077491209 seconds)
  done (took 5.801967646 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073582509 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066871178 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078953459 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060118493 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059658615 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068882484 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.059705084 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.059877912 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068864703 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.066444022 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067759669 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069455771 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071006947 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067889948 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070800141 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070737358 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068951944 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06866575 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066298793 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068512424 seconds)
  done (took 2.713800076 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074825658 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.078232291 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.065968534 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068706838 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.065068659 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068943416 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.064473414 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0658118 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065512716 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065677991 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070117831 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069921737 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066214378 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069199163 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070638456 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068567995 seconds)
  done (took 2.445869284 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.066471616 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066734512 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.066682941 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.061318555 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064710948 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.060416236 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.060426848 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.059362524 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059851157 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.073424274 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060697256 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.072274653 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.06051125 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.059932822 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060101644 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065898315 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.060054307 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060905655 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.060453627 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065609735 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.067204535 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061544663 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.065248458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.060758007 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066343641 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067538691 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062244167 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064599199 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060744826 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.061119189 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066209989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.06703072 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060214207 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061434267 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.059597721 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060801562 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.060507026 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.061558844 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.066077791 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.060376255 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.059695373 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.065460457 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060578546 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.061795107 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.060097177 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.06122941 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059987241 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.066189212 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060983709 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066089489 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060508165 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062466389 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061099526 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067724556 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.063287708 seconds)
  done (took 4.815550204 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076287157 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064677924 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059532654 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.059520585 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.064575095 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065697213 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.065579051 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.065035523 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065325561 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.059340269 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065226098 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.064124716 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065545786 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.06533766 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064961544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064539093 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05909336 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064858906 seconds)
  done (took 2.521402696 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071001774 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06502971 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.069951164 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064800376 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.064968761 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.064205904 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06046792 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.059692627 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059719764 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.064569143 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064857425 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.064274399 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060323368 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.064276235 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.064485897 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064847563 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.064026697 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060327758 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.064763045 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06024791 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064051387 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.060006675 seconds)
  done (took 2.75593124 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.086908788 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.082499573 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.124874556 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078863447 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086895022 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.070670984 seconds)
  done (took 1.886883963 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091824208 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10223535 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064270049 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064938487 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072740954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068070782 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067172135 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06731989 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072767189 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071293081 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067678495 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073057522 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072719825 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069266558 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072780751 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075285257 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067660763 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067580448 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064595757 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075134038 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067558041 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072909685 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067462967 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067192515 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067277202 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06913894 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075284303 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071341822 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06729442 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072753034 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075621227 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067705502 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073061788 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073833388 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065323175 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072771131 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068577029 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075367294 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073307412 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069966862 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06480429 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073167455 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073018249 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069416094 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075586353 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068710861 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069655151 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068124689 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067861933 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077768004 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073271375 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069740277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07341572 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075643481 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075522934 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077844435 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071843196 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069759808 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073304617 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071594093 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069405498 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073285183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069503489 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071410923 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075284252 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069184783 seconds)
  done (took 6.091072203 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.097973857 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065414896 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06790864 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071733452 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069381066 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068343822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067911133 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067705759 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067314839 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065294026 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102167723 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067815445 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069506372 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069545149 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067829469 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067865859 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067852782 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072748164 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064976653 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077366311 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067656198 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069211923 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06967996 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069577923 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071268489 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075104389 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067521491 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067743393 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06791075 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067327358 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069394208 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06743056 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069219824 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064586779 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069274537 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067589905 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067848457 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069205021 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067985337 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073114618 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069422148 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075397306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067561374 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067521636 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071462547 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067527299 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06772675 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064939318 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067646256 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065063346 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071838132 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071911219 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071704946 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069711677 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068069672 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067991846 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068073134 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067894477 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067695171 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07610137 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069384615 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067795559 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077833615 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067326585 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067834811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069006523 seconds)
  done (took 6.003660955 seconds)
done (took 125.084789393 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.208941919 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.181488689 seconds)
  done (took 1.738216335 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073401738 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095303897 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07394786 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132960881 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070990171 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.1042941 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10371784 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.074403596 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.069980086 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070762453 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070123929 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072703046 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135947068 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.07084628 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071422587 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073086665 seconds)
  done (took 2.730175829 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.105366511 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.180217466 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.111533537 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068143655 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10507509 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074891285 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068570812 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079241347 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07174113 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.080086758 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.074980167 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073593223 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070442931 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073241892 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.07210802 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075516406 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070026212 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.074516891 seconds)
  done (took 2.900253338 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.095577979 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.084256649 seconds)
  done (took 1.555064078 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152868649 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103638623 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.141693157 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.319727782 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.127621961 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.124431853 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127986556 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.12409478 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.108446302 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.119975632 seconds)
  done (took 2.820849511 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.104318534 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174510678 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.309051655 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119878336 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074436493 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096958132 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120666898 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080707133 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.078332291 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077795496 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.07758075 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075332233 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099303761 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.074327054 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073662632 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077322607 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103202994 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.073594826 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073903251 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.074553752 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.107099874 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069164542 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.074262137 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072751461 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076041385 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.075929077 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070598109 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.069289673 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074496118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073663039 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07592046 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.093914333 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076663666 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.096707178 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073429009 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.097841993 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.074084328 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072578529 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074079748 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072354729 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075855618 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075131081 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077825683 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075082335 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070580864 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073179679 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.07062921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069000912 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077482608 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.0697043 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076942809 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076241349 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.096874457 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070004376 seconds)
  done (took 6.04840619 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105574813 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104614399 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069175049 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.110919104 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103430197 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068490478 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.102266821 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.098779422 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107222833 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06851986 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067634795 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067989047 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074386174 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.077730242 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113588662 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.105723381 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069779453 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068745918 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105486512 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105419346 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067473655 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099383006 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098159209 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104386069 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066998203 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068381295 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066708074 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067483722 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.072142854 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073853533 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067278066 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074024217 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.07951339 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074065346 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066379775 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067049343 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067045315 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.074004516 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074781231 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074179186 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.072901272 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066779479 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.066729413 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068149303 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068252958 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066779117 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073028327 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.074179702 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.0730273 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066918099 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067476746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.066996729 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067388416 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073472576 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072467102 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.074385275 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074627277 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06753654 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067529961 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.068948181 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075159281 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075143268 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074453352 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06807899 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.075117897 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067429662 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076346324 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.079007754 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067367669 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067674284 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067588914 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067448157 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068068805 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0734615 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.073367465 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.0674497 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.067090632 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066995108 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075287578 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076165523 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067365313 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072805626 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067034987 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067397294 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067665303 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067301103 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072926784 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.0744531 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067967284 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066859844 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.067774421 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067176571 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.066431587 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072248904 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073319097 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.07384722 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.073330859 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067283529 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.073296467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.074020831 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068056669 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072615009 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.066258647 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066960108 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066379771 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.072378757 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071520892 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.074002501 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066665678 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.066278835 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.072796792 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074622237 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066133048 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.071732764 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073736239 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.205820742 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068403364 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077831241 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068865628 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.075855473 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068122152 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076593439 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069944457 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074054373 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067788612 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.06741238 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06793656 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.073899705 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068003995 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067760766 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068369135 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067456585 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074084991 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077256129 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06835616 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073951299 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.073854149 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068832566 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073876172 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.067848928 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.074389306 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067187059 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068299234 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067153025 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075818647 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067796667 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067538647 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067761179 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.074981911 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067965283 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075530603 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072683042 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067302346 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077356859 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075957111 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07363855 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.076502738 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068407671 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067722873 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067966721 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068090697 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072697647 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073924336 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.0680863 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067766866 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072443188 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.075264619 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.066879817 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073386873 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073297974 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.074258707 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.067506721 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06768608 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076466909 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.075290343 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.073378981 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.073300585 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.073845874 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067552795 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073408813 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073225657 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067478888 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079558754 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067766007 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077763348 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.073646453 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.073239793 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074104929 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075230548 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.07533277 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.075762721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.077569611 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067871548 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067275547 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073921723 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067636132 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067832736 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.07355544 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068614215 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068124188 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078290894 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068027288 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.075801897 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066900123 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.074725279 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06722777 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068007278 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078272604 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067553507 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068453718 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.073493745 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.067225913 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073371785 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075735584 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.073119023 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06715367 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067992857 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.074156605 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.075309985 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066939187 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067123633 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066972513 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.071708241 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.071576959 seconds)
  done (took 17.89519515 seconds)
done (took 37.071663146 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.216824743 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.163755903 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.198238957 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.113613082 seconds)
  done (took 2.16909887 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.089943732 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.098041975 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.074710181 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064464187 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078632876 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.064474877 seconds)
  done (took 1.886647491 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.248848074 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.184712748 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168895319 seconds)
  done (took 2.011354857 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212790209 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189564716 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.695801129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.300888167 seconds)
  done (took 2.908795627 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.126851802 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076559933 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.061943787 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.072432573 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101556544 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.130521116 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.083709628 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.104841424 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.073611421 seconds)
  done (took 2.306289478 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.127904361 seconds)
done (took 12.846293894 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.197941118 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.196974734 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.282410633 seconds)
    (4/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.252781091 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.102816041 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224178436 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.125241776 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.209811488 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071487579 seconds)
    (10/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076900009 seconds)
    (11/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.065768404 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.089849993 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.20190161 seconds)
    (14/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070148274 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.076075213 seconds)
    (16/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.069887734 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.074660032 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076340933 seconds)
    (19/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.073089142 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.181036999 seconds)
    (21/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.173787992 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.170894542 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171183481 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.173677984 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089464411 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.100358093 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073193762 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.072463103 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 0.13545662 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.151524798 seconds)
    (31/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.174579271 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071797764 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.089444171 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.130939797 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.139459556 seconds)
    (36/309) benchmarking ("sort", Int8, false)...
    done (took 0.168798567 seconds)
    (37/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092511982 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089810256 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072219208 seconds)
    (40/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.068705094 seconds)
    (41/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.10738101 seconds)
    (42/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.07170653 seconds)
    (43/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.071656989 seconds)
    (44/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.091655385 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.186222741 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.08017798 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072062713 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.064858291 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.229381147 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157025662 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07202051 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.169227413 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.086479942 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.07254647 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.173877891 seconds)
    (56/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.062948291 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088099159 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.110891904 seconds)
    (59/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.172178785 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.090470218 seconds)
    (61/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.084066254 seconds)
    (62/309) benchmarking ("sort", Bool, false)...
    done (took 0.146284097 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.08968363 seconds)
    (64/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.074425633 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.0644667 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 0.065274556 seconds)
    (67/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.0943337 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074113607 seconds)
    (69/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.064896623 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073487673 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.075462354 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.063483556 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.072855003 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185540775 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.176268753 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062440322 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.083302401 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192488388 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.218697075 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070755422 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.088931932 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.074795297 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150475219 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 0.406531046 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15018322 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073275054 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.065973583 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079767064 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065291619 seconds)
    (90/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.139600118 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076240151 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140932014 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.077071549 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.090840931 seconds)
    (95/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.06470679 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.063646546 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180165984 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140898237 seconds)
    (99/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.145086347 seconds)
    (100/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.137883437 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.063327701 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.144994348 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074104516 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.074136223 seconds)
    (105/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.077473972 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122004586 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072294579 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.064585417 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19720795 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.191035288 seconds)
    (111/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.064007365 seconds)
    (112/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.0860135 seconds)
    (113/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.071936391 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.158095622 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071660171 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.114910061 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.064784761 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120932671 seconds)
    (119/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.192248348 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083980682 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.079717526 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079530037 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.091189019 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.21276863 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.090568514 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090610881 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.063657353 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066977471 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074472641 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.073502704 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225877127 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073593674 seconds)
    (133/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.064113376 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.07238714 seconds)
    (135/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.07303567 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.066476457 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.072025205 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.182571775 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.168915066 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072142264 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.189659496 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064219717 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.084653485 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.064119863 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.063663587 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071193416 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.065578799 seconds)
    (148/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073676323 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.072540069 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.065215295 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064163131 seconds)
    (152/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.135357651 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074669953 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064114404 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153195527 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.063467822 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.143829058 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.195919234 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086007883 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.209207396 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.144669824 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.072753451 seconds)
    (163/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074381933 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.063493326 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.088952067 seconds)
    (166/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.063867307 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.071626073 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.064801088 seconds)
    (169/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.064512322 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064935796 seconds)
    (171/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.162024993 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.12065749 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.065918656 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.063444879 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.063095521 seconds)
    (176/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.063708647 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.063725329 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.064765787 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.063490663 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.063857636 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.1949668 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06505113 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.069304798 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.076213421 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.064406952 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.064932788 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.065252511 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146994698 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.06416245 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.063324861 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.063191524 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070642533 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.153415243 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.070395722 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.063482638 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.373718888 seconds)
    (197/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068411198 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070698496 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.06622688 seconds)
    (200/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.064999366 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.0677176 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.127885444 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.221720249 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.064896491 seconds)
    (205/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.065019623 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.159124146 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068119378 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 0.137911161 seconds)
    (209/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073876185 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152600707 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.064274474 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.066450593 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063578983 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.064913943 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.065395101 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.071653008 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.076377484 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084483362 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.145519568 seconds)
    (220/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.137598364 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.08028328 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.067551822 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.06559807 seconds)
    (224/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.136934267 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07215267 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064754441 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.065189672 seconds)
    (228/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.069222314 seconds)
    (229/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065516599 seconds)
    (230/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.072724742 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.071735321 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.065038372 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074588207 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.065454573 seconds)
    (235/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076761427 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.17474542 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.145763485 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.140934869 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.13970167 seconds)
    (240/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.064990378 seconds)
    (241/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.064749089 seconds)
    (242/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.064183986 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172270304 seconds)
    (244/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072247998 seconds)
    (245/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.064791337 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.064650975 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089312172 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065111182 seconds)
    (249/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.064065655 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.063429175 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.063801935 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065827334 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.130455176 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064972862 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.064129954 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.063079851 seconds)
    (257/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.080010626 seconds)
    (258/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.065329896 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.15756319 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065152673 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.065525242 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.063250876 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.063579468 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.071988743 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.072338534 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.065381446 seconds)
    (267/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064829256 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.064119729 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.064593192 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.065575841 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065603472 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089715992 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.062678247 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.063897334 seconds)
    (275/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.063541409 seconds)
    (276/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063396678 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071366765 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066954872 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.120607266 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071429722 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.128960424 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088896626 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.063380237 seconds)
    (284/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.126388597 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.144593296 seconds)
    (286/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.064276209 seconds)
    (287/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.06401446 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.064736661 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.071519175 seconds)
    (290/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.065081696 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.148274016 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089340764 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.06543178 seconds)
    (294/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065171398 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.065118814 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075560118 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087135892 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066996174 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.066691591 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.071736146 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064179216 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.075800982 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.064790538 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.064698125 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085166236 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.063915288 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064516019 seconds)
    (308/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071953887 seconds)
    (309/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.063447334 seconds)
  done (took 32.491088766 seconds)
done (took 33.922866409 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085162373 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088632254 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.072328817 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.083469493 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080168004 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.098634443 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073465982 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.077506485 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079717198 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078351074 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077678975 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070930041 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073730334 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073845936 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.072165068 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087701195 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.07979824 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073177653 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07312933 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.063574365 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072898475 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.064744455 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06360826 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070870191 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.076542666 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071366044 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073626682 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073800427 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.064603239 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.064540165 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069298715 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073282468 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06449038 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075849492 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072952063 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073553073 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076918945 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077328517 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.063451167 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065384232 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075669252 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.064551837 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072717853 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07093118 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.069920678 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071750236 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072816253 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076295027 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.086537503 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069325624 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075609707 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075785774 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.076023381 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.070336941 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070383078 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.07337347 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.071292215 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087330942 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073399265 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068786214 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.075039849 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074335487 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071486692 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073630464 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07321536 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.076162112 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075799775 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071844808 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075482958 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072111047 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.064468303 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073223573 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069564537 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.064671519 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075935001 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.078574899 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.063632245 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.068867245 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072714985 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072903923 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063945043 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068865892 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06378825 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.06963716 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069094169 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.071275613 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070207608 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072248005 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.063323769 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07286521 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07238917 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07263124 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.063850679 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076109985 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.063857349 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071736496 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065093884 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.064786654 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063510579 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070303942 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064134612 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069281248 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.072619362 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062969743 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.069617742 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.077429721 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.064663862 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072483125 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.063619844 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.063855197 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.074634261 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075368431 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.064970642 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069111156 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063701866 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07043121 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063983051 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064154463 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064355957 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06451605 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069815572 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.065334471 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069567829 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.070362888 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076444167 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064560067 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070097205 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069381007 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.06442392 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.071606803 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065083143 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064593728 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063699617 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077384539 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068816219 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.064220936 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.069887455 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068295269 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071909648 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.062484437 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.072580222 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070186103 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.06805535 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070630584 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062253312 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074793892 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068055945 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067966195 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.202782932 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066528064 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064037532 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065110718 seconds)
done (took 12.508431914 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066059244 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.103754192 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.072054453 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.081178356 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.076715937 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.066100772 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.068279209 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.080734729 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068102556 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.083526392 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.091664977 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085452981 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.090469484 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06371631 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.064618686 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.065450933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.063422521 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.072119182 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.078607519 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087602123 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.093427469 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064573604 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.066723831 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.080961382 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074915239 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.080982755 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066183753 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.066567593 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.067638385 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.081862258 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089303579 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.064780444 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066178354 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.077898079 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078515784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.071560943 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066155978 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.068832193 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065675919 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065048718 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.06688542 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078457981 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068807881 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.068673978 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066143696 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066255429 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066190519 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.070257047 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.07771797 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.068207431 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.072830315 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.076879501 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.066915518 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065483328 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063987923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.068817987 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.064965038 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065713652 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.065189651 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065198829 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065165379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.067692476 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.065960635 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.065698618 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.068564203 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.067338007 seconds)
  done (took 6.254014957 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08296446 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093178655 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08245418 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.081686818 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.064704718 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066240114 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.065861826 seconds)
  done (took 2.072825462 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066557361 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.077029723 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.08068989 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081312553 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073457369 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083249565 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066056772 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.096024617 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.06431561 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.077365334 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.109710798 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081573454 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068353941 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077116208 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.065874626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.072202066 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.065800875 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07413833 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.07275895 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081881644 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069294541 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.094042252 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079231782 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06638254 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.085049586 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.069556731 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.064603964 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.0662684 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066988371 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066440537 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066630403 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.103817579 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068661381 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076898403 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066557156 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.097263141 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.070848423 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06887304 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067797188 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073759323 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.070007645 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06719076 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.064212124 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066936845 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067593234 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.068895145 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064057856 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066184785 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066635534 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.076264356 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064569178 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068651747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068033021 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07005914 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071898197 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069817252 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073927023 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.066988633 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.076545804 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.073138681 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066060767 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073253716 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073264395 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.070088376 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072568162 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.069979164 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.068559549 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070261431 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.065694679 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.068118339 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.067043856 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073237364 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.064873677 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.06723964 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068792883 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067350865 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068829175 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.081717 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.081486135 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077738429 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067202149 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066290684 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069783827 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.08155151 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069667774 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066520097 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068502404 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065188955 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070123988 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066547289 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071500524 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066639473 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.073649596 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.068270157 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069447594 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073132902 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.065457483 seconds)
  done (took 8.523379195 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.067730526 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.066722481 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067138472 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06682511 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.066453954 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068158183 seconds)
  done (took 1.970253066 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.08727493 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.065912593 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080542255 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.066270834 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101373468 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072609074 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072579666 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073822621 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.079046772 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078409398 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.07233029 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.075274388 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.071670169 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.0671454 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.071506923 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.066755795 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.071437404 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.068900833 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077935983 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067639981 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.077827199 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.067130162 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067103071 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.077380827 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.068839861 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.066646501 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06649903 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078023408 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077504138 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.073254756 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.067339492 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.068266751 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074120727 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.074970912 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.07201822 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073428991 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.065495041 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070797128 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068064608 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.068724788 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.073716051 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.067371397 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.067847071 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.071069036 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.073309271 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073759194 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.071276526 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.069170646 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.071703319 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070824802 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070954548 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.06603457 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.068453214 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070777604 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074048143 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073136172 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07066221 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.071795644 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06707545 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074096252 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065625549 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.068318084 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.073153122 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.068096533 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.070157284 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07070668 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074075334 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.067690255 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.067659674 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.065456872 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.070896303 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066090404 seconds)
  done (took 6.69254245 seconds)
done (took 27.037413517 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.541410129 seconds)
  done (took 2.059478199 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.57064423 seconds)
  done (took 2.125662465 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.671283229 seconds)
  done (took 8.221254131 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.295564146 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.320340879 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.728195201 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130590338 seconds)
  done (took 3.058304596 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.744539454 seconds)
  done (took 2.307541142 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.233879365 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225319914 seconds)
  done (took 2.033917723 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.339575074 seconds)
  done (took 1.895647458 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.118529059 seconds)
  done (took 2.671020161 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.222500123 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157702596 seconds)
  done (took 1.941616753 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.487150823 seconds)
  done (took 2.042424925 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.241699524 seconds)
  done (took 5.803044682 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.229504809 seconds)
  done (took 1.830199355 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.231591742 seconds)
  done (took 1.797679754 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.767406771 seconds)
  done (took 3.323268957 seconds)
done (took 42.672002721 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.08238673 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084905116 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084463303 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.080311191 seconds)
  done (took 1.867228096 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072305758 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.068334065 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.072081981 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.071985891 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.070352771 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.071293117 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.070667419 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.068267597 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.070225169 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.068469089 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066907645 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.068386359 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070971562 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.068053545 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.07059815 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072507334 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.068177474 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.068389524 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070988949 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.068038115 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070579117 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.068508657 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.066862264 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.06858961 seconds)
  done (took 3.229324174 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078139581 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071171307 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074581887 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070376676 seconds)
  done (took 1.861789861 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074711228 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.082137147 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083810535 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.088568283 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.075089052 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.074675601 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.080388305 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.082471611 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.064606633 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084459277 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.066802245 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.065682356 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.065613358 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.083705692 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080901688 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.061563157 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.062686116 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.074823444 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.074248881 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.076819253 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.067387822 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.064460089 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.075427966 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.074584483 seconds)
  done (took 3.354304153 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.07778342 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.064787807 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076720958 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.089530102 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.09125937 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064302356 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.077277317 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091828643 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121209906 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064484077 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070209054 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064686076 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101695672 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064282731 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078591299 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104842627 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107352312 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.067890128 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.096146385 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064273543 seconds)
  done (took 3.215641927 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074819049 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068316003 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069657237 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.064375881 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.075837681 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072224994 seconds)
  done (took 2.001916598 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067520952 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067087616 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066849308 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.065753146 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071753633 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066590201 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065177492 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066607353 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067026439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066001123 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.065597306 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.064827114 seconds)
  done (took 2.370590827 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.164400029 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068370295 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.06955804 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065309366 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070454514 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066081472 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079816697 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069908476 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.082674929 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065728518 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06606404 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067925839 seconds)
  done (took 2.507814958 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.09698417 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.101481227 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.143217909 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.11503205 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092144013 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.092081241 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.156604455 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.133702242 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.114583911 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.06809309 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085340983 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098378453 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.098120521 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.132175273 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11055131 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.071545084 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.110195032 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079110839 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112365644 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120297414 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113415846 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120177997 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091444533 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.09682439 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105235579 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.116291061 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.070968381 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069686796 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.147366216 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.098995542 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.090791225 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097657801 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107954922 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.06784368 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.085328163 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.104513077 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081684998 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.114303323 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.086450985 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096991412 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07921809 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.129172215 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103929593 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101950729 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.12920667 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091793201 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109159965 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.104567968 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080972861 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.116980492 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097065061 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089884949 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078436821 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.15700563 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087662578 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.108941899 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110190448 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.079358297 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.086367626 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.098523897 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.126045005 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.103430878 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110764999 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.255085375 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.090129307 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091023307 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.130151573 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084421318 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099411629 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128366529 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.090649987 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075008223 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.094520532 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.068625671 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.09547203 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.104768825 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090346696 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.110040028 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.076190354 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.124421906 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.107697038 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071584259 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.115372365 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096917713 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153519733 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092868717 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.099066113 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09002631 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.148909168 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.083679028 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.079012844 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.096982769 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.126871249 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09288029 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094528364 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126439362 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09514625 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.085727271 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.074237743 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.087414609 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099803689 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10600636 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100179559 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08767633 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.085635889 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.094826424 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.07334222 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.079259779 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.099314156 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084565234 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122155984 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107694966 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.12255588 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.077336329 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104377919 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.095201619 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127425716 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.116256597 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.083117588 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10680459 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13907148 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.112178182 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083840244 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.098957958 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109066065 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106207307 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094845536 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.1349543 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.11467894 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087612295 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.091866503 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092058636 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.261640498 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.153842163 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089425714 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.103985198 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.137088833 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.111976951 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089743558 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082993128 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.093978082 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103950261 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139342139 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.095008234 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.069574946 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090455512 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.129119208 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075419387 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09777835 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.091598607 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.082250602 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080400638 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.067604307 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100012652 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133639109 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.111871915 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097510205 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.104680765 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.068374683 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.097488242 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102882576 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140269732 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115132001 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096560019 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.098703016 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103043854 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078399773 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.131017598 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.131068862 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090357485 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089358711 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121700671 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.094989646 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.103442406 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.113050537 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102497182 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.099763198 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.140877416 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119385031 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.122365875 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103425345 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123351734 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081069497 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114452145 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.073140072 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.102383425 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076228471 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104280916 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.077916768 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.10895131 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.077895477 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.097504128 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.067953941 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072243446 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.107708031 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.242111149 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.08576544 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.133613439 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.129152536 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.080612273 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.100171089 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.098775111 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100360262 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.108010255 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.088908045 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090063529 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.07785599 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.078961471 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097206906 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092360403 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105006555 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.077743963 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074073076 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.136208219 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101972793 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089486069 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.093845084 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.11919162 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.088003984 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.085712216 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102445209 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.136177652 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.115874269 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.078841057 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089556187 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.068356761 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.083544704 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.074455736 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107398083 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.073935671 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108764657 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067636841 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.127872161 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08576523 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.099763377 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096000914 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.127135382 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089558186 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126665444 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086035367 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106482029 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.092550787 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.093552279 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.107864491 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.094741036 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.103508323 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.108747663 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091915691 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088342371 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119754542 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104374459 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.115629338 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104348735 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134174702 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110608875 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.074372226 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103204662 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098250719 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.143135011 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098430224 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088310799 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.093906953 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101706188 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080679688 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.292431295 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086546333 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.085983736 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.112447284 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.088238283 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096000528 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075777649 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.099483873 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.092823446 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112021931 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.097921378 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.091994591 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108391219 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109447399 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084365663 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.085886756 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.121728493 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.126683074 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.100151905 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092480367 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087121838 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096956631 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092376975 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107743279 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079014728 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074861017 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.067809445 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.071273603 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.115591597 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106237276 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096705768 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096612996 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101239482 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071161325 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086836422 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089262756 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.081532201 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.088545104 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.113825368 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.102312023 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.126759137 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.100427363 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084482848 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.139908719 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.126027418 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084099293 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090521031 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099836564 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073322257 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145791518 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116991026 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.076235983 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083599944 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.075916528 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08326099 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.070604546 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102307938 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.102893357 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075184884 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.101980701 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.096420164 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.123211227 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095130008 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075384991 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.078297529 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073727243 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074358117 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.100991427 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.076488882 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075534691 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.127165453 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101038259 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10548178 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.081335681 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.072976432 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.282363834 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.069325316 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.131372791 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081703916 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.109500587 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.080381043 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078574676 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088282436 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.104872455 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.104539428 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111654108 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070976435 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101967385 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.152973475 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074500135 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074278208 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.073533185 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109716945 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085499572 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139847058 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088440071 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.091260782 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076197109 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125504246 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.101198121 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081845351 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.125823348 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078370454 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.070127249 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084851008 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.109603901 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.071511737 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074430154 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112863819 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.509344013 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.089473123 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075045264 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.087559374 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126639046 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082402103 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10792897 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.116467989 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104937607 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.182738489 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.072868953 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.090174735 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.102765911 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096593475 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090387886 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078439787 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.087260794 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086119157 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.083483789 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104863328 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.079748397 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.089568615 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.079081887 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.102860115 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.128412073 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085025193 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.099964698 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086529918 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089505782 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096924855 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.109934481 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103958692 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.085898616 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086683266 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.106743181 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.081792893 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076720326 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.251982802 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.076596192 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.077878968 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116559216 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.083275604 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.092121974 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102676446 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.087985091 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.112331029 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.116046481 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.110153236 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.096364046 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0785511 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084643804 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.086245348 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0727406 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0775555 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074170929 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.069817612 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105572782 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083958139 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.080385696 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099001575 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.107317121 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098416873 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.105241399 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088997019 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095368882 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.098908209 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.125187309 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14367132 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.096931291 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121437388 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130211922 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075420204 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074887046 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07951229 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.130430083 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.080334222 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091602791 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.234653252 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.077064633 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.08013771 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.090037641 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.106181004 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.082388464 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079255798 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097674939 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109333067 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083460133 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.079960065 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09220847 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.10770131 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127159789 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.088455424 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075016562 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107842083 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.101295846 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.122364677 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.071966037 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080200142 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.127188355 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086755731 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103563827 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078899889 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122162052 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130973154 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072948022 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.087644593 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.071291449 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086471017 seconds)
  done (took 50.397091663 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.147669806 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.140889655 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.081393869 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.096674969 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.185906682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.19567183 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.118454213 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.094212995 seconds)
  done (took 2.784750031 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067421887 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.081497032 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098973919 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081628903 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065971434 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067069529 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.198557859 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080460419 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065280327 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.104921663 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.074033712 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06779236 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.357140194 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065000034 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066114809 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073415573 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.066988124 seconds)
  done (took 3.359736569 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.36917978 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.620842913 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.321124855 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073903847 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 5.02292983 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090821691 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.222026947 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.140412231 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081445325 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.54193594 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.369902841 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130575966 seconds)
  done (took 18.673946102 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074979545 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073807265 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.077702647 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.076549742 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073055392 seconds)
  done (took 2.06535976 seconds)
done (took 99.271134494 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081955177 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.168479995 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.066481492 seconds)
  done (took 1.956645762 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.081749827 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.080373067 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.079631148 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.077368177 seconds)
  done (took 2.016645979 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.073382986 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075136224 seconds)
  done (took 1.837089335 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.229987542 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.171284374 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.08885042 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081756284 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079810352 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.07928956 seconds)
  done (took 1.940245667 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070660201 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071033475 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.070551693 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.070787391 seconds)
  done (took 1.970838097 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.06667437 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.065335344 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.067672965 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.070288835 seconds)
  done (took 1.958436928 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081494748 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.077353546 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07691046 seconds)
  done (took 1.924444481 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107559934 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.095156263 seconds)
  done (took 1.889500197 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078790831 seconds)
  done (took 1.7712053 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.089316592 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.096192912 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.139227889 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.105595158 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.13829054 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.124043163 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.075587862 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.076906843 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.072130426 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.071264271 seconds)
  done (took 2.676650396 seconds)
done (took 22.200694223 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077777464 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366149537 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.35834541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08551748 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670032218 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356088554 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.968765426 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089259844 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.097341882 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067678233 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084005912 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.646633628 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.959705041 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324476882 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.945571355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.319402294 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.648437516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06731474 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066527598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06735926 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.952199055 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066197906 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067077209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06720576 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.647083035 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372096918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067731656 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.322680208 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.066893484 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068953872 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354989468 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068409784 seconds)
  done (took 16.054834739 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.068465876 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120478939 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071797058 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082404945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069185205 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068301867 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069632903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067835651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108032248 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067174763 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083489882 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067018338 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070865796 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068669319 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087596096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067850824 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069152833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068936931 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068275616 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072962175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085911104 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06796649 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068579226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070823825 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068739664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081012881 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068721339 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067866605 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068820119 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07056111 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071256062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069374049 seconds)
  done (took 4.086037687 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120999119 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124456934 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07219407 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10721347 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11660801 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069084073 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148743989 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090025899 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111769498 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067178506 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084164252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067379216 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103282205 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069665445 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087650851 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06802185 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069545842 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069242227 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06813946 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068331962 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086395427 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067391693 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068413759 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068681887 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068909594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082941607 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069486608 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068304187 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067888556 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07065001 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071962592 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06966922 seconds)
  done (took 4.351473954 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.068707466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.070916173 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.079231527 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.079864538 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.066144595 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.067987741 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069332117 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066360002 seconds)
  done (took 2.284455524 seconds)
done (took 28.482068463 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077901296 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.067370998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070478275 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.086858265 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073032449 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.069654832 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.064098073 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073512611 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.070359821 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07067721 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071800113 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066319129 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.069186208 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063965345 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.071564845 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.065521801 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071669693 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069601738 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.0699443 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.071366689 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.067956138 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071389416 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.074549564 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.070969606 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.070369084 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.070663596 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.075055311 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.071535324 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066180587 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.068984542 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.067463073 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.079389109 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072296994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.072263314 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066121436 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.065839787 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070289105 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068206845 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.072609434 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075012871 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.06837256 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074265495 seconds)
  done (took 4.657745951 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086171358 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092024048 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084300467 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080800507 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.104293382 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081781069 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088973996 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.077973641 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.076193467 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087450093 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.072568891 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077522558 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07792625 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.070921564 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077139963 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.073634712 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.078590677 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.072435326 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077466757 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077757981 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.089152521 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070996558 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079170621 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078736051 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072969566 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078809282 seconds)
  done (took 3.803442745 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.071925108 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.086861514 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.091002759 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139281378 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108612791 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.081771896 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.081950091 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10188382 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.099717466 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067821975 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071430745 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093438954 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095210654 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07459396 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.106589873 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084840841 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.079158193 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069177261 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.07393814 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101290073 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.090517029 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086061605 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100254194 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087207315 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066846678 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.076183361 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073849825 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08199168 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074467033 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07922908 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071301125 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070217592 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.068335531 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078266139 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070912086 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.065142382 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.08881706 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078699336 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08244579 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105500285 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.076206728 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06810896 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.096311511 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132473978 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066993199 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.069185998 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.070570077 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079005974 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068030947 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095876926 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084806626 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066618624 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.085578816 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068101433 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068355361 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082038263 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068422496 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068760581 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078715946 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072857001 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.087533118 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.0715757 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086571869 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066897451 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077667652 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068467339 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068569736 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066352863 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.102379895 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073816166 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.117567306 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.067667547 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064914447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078831295 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077861698 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073576677 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066457257 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08484729 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07826661 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070917087 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078123344 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069901826 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069845514 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.101888573 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066169768 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.065180657 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.064945811 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.068748883 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069438864 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.067725979 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079633475 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066506018 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070467677 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.081019368 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066767751 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.067726042 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.069216366 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.068103614 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066459163 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077204083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.070626728 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068579676 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078889895 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067896066 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070498679 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081488962 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076189109 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066585487 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.068229856 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.068923399 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068356859 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.071386572 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070108598 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06858203 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073109091 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074030441 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071848568 seconds)
  done (took 10.865389083 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159651671 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149836447 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.068332554 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144840707 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075492311 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.07157652 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146095441 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.086066366 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067979348 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068728241 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.067452488 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.094441226 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.089637924 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.101376287 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.071119939 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068113086 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092835277 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.100145527 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148722433 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143450966 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.09083221 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.075327011 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070089734 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069176703 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.06894337 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076152217 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083645613 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075950822 seconds)
  done (took 4.382636361 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.074755597 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.109862631 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.07124402 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090969509 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.086385741 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067723567 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069308482 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068388928 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.084449128 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.074433787 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067698306 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072068871 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.070713072 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.069569963 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068486537 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.073240152 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.07411065 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.066177747 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071104894 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071753987 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077453528 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.09223743 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071468761 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06760823 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069617952 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067086754 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074292061 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077189599 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067313114 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097068033 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064293238 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.071562954 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081523931 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068117966 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067733316 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067575168 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067410628 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067388874 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.067702575 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065914805 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065498627 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.071884011 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066397444 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.073597224 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.080975163 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.074525601 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.068582016 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.070233207 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069825939 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064259998 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070057489 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.070605079 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.069823996 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075473771 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07103299 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069750662 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068203584 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.096092467 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.073349763 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066880413 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.066438936 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067756119 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068522886 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.075060274 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.083672659 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068271121 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.06564993 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067816432 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.072387683 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.081861156 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.067262238 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072308146 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064602578 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.067553169 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069754216 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070106891 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.068751559 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065742252 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067559586 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067300546 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.067424189 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066993439 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.066618023 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069879947 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065095915 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066156587 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068227454 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068098602 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.073915814 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.066288833 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069878058 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068760289 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066365985 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06992678 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.07223575 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070236967 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.086503658 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076027166 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067563804 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065188159 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081657895 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06900442 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066785047 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072864745 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071886386 seconds)
  done (took 9.293338233 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089332893 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069109116 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087135638 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.093807091 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.078357995 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072750942 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080564129 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068205731 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.083341971 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066668805 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076549034 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065799515 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079708761 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075988197 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069412769 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077089887 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069529709 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.087271056 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082248946 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.066385246 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075837608 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079353845 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080063037 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.085236807 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083942066 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.085352482 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.079792676 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069956115 seconds)
  done (took 3.94412037 seconds)
done (took 38.654599352 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.801347075 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.959188098 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.786682811 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.987113773 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.835691396 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.917211566 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.901010026 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.780222647 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.949157723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.809191846 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.075136751 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.14117117 seconds)
done (took 66.724887203 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.846588412 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.931369154 seconds)
    (2/2) benchmarking "String"...
    done (took 2.002577769 seconds)
  done (took 5.652681909 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.976514827 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.421045252 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.059887786 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.779006373 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.784716306 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.291172065 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.58037806 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.26910496 seconds)
  done (took 30.901496733 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.897846546 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.006174522 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.457043861 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.501993467 seconds)
  done (took 15.626871327 seconds)
done (took 63.816630729 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.825128673 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.779595119 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.813211238 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.815007404 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.790219564 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.780965205 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.783675516 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.781188284 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.78389354 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.891864678 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.779974133 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.79535708 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.780204689 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.818137885 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.498349376 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.842305127 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.804411453 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.793157214 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.796867261 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.822517496 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.784884311 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.786126809 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.241870451 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.964987372 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.38677093 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.143429899 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.422132125 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.186326764 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790382863 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.782523637 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.824877232 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.096483831 seconds)
  done (took 204.902335741 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.786950867 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.642023138 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.715445273 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.785239407 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.031141666 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956601404 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.875942786 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.205470805 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.784805728 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.787586942 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.934111858 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.783389483 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.960525305 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.728023251 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.818455849 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.869147654 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.931097079 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.976387278 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.822948098 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.930991782 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.801876369 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.771546243 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.719786342 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.933227607 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.789539057 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.796131792 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.79876554 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.798052324 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.971698099 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.902337796 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.791416601 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.79519927 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.940555924 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.654916538 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.805696095 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.790994163 seconds)
  done (took 169.106984944 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.977085761 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.792717404 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.784148281 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.839104121 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.90522431 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.785536798 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.450469242 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.795392503 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.913211981 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.789483068 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.78431124 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.785898336 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.786582083 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.797932691 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.861823244 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.788708657 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.799960892 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.787471607 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.810217342 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.786426137 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.785217832 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.785315287 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.785896552 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784176551 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785302943 seconds)
    (25/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.785515687 seconds)
    (26/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 21.987543369 seconds)
    (27/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.029195522 seconds)
    (28/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.786237979 seconds)
    (29/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.786449417 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.305246738 seconds)
    (31/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.797044863 seconds)
    (32/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.211227936 seconds)
    (33/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.789488776 seconds)
    (34/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.876971896 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.7847021 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.842920046 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.902283654 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.786158567 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.002925167 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.859112188 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.786421938 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.785761755 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.848815707 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.798356474 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.786953824 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.789895189 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.792385241 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.850824422 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.027892346 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.786690487 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.78538764 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.906953408 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.271391915 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.786108018 seconds)
    (55/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.785532607 seconds)
    (56/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.787001605 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.786603828 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.363179862 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.787976451 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.789576987 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.793353476 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.793153175 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.78679654 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.787662057 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.172117951 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.859450198 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.315805477 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 21.991988882 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.788884203 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.559480052 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.856061899 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.787681761 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.787369016 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787895758 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.790088049 seconds)
    (76/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.788122892 seconds)
    (77/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787251386 seconds)
    (78/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.78958781 seconds)
    (79/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.910175372 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.795355466 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.907431375 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.870108157 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.908928324 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.789945608 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.800884598 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.613360254 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.857420763 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.827231728 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.609777427 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.790052353 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.161351988 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.561670386 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.790768379 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.788807399 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.801969869 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.789255718 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.789314534 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.790085644 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.868761713 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.788511664 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.909320944 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.513091321 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.224454999 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.793614281 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.789326827 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.797586613 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.872576272 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.911705829 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.791299938 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.855604491 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.794985551 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.791246726 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.866403844 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.791161257 seconds)
  done (took 402.282397153 seconds)
done (took 780.046853636 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.510001948 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.393622055 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.536222914 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.409307839 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.38040868 seconds)
  done (took 13.955557881 seconds)
done (took 15.681615147 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.806631578 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.795543342 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.845625604 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.871922966 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.805086847 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.80879531 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.8690448 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.808872434 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.83948018 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.84304664 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.873632545 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.873858469 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.813526299 seconds)
  done (took 25.580535 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.799625183 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.95119453 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.018652781 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 2.028743108 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.800134401 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.015089294 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.856811615 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.929879912 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.931873759 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.012482681 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.023986762 seconds)
  done (took 23.097791732 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.79856442 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.935555838 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.018829261 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.835088064 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.800389649 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.015821857 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.862935557 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.925053504 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.933471271 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.02211171 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.025652436 seconds)
  done (took 22.908772338 seconds)
done (took 73.313182737 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.795571261 seconds)
  done (took 3.523804136 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.817389386 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.993981364 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.794918665 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.796269001 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.795045861 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.795272553 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.797278439 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.795658661 seconds)
  done (took 16.314356697 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.794746351 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.794181806 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.795652889 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.796005671 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.796438348 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.796137384 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.796333926 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.795744765 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.794917499 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.796695561 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.79473455 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.796134504 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.796202714 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.79690177 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.795787604 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.795869081 seconds)
  done (took 30.462687276 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.798481531 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.79551178 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.795643576 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.796251682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.797110652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.797239065 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.795823229 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.795569138 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.796268429 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.79677397 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.795825513 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.795650872 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.79644934 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.797742211 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.797990636 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.796429244 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.796274385 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.795842861 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.800197559 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.796613816 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.796817483 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.797738118 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.79599134 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.797445389 seconds)
  done (took 44.852179856 seconds)
done (took 96.891756961 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.740217412 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.680837525 seconds)
  done (took 10.151228324 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.799744582 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.796880471 seconds)
  done (took 5.331616933 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.797508413 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.79719032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.798890147 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.797633089 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.798050874 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.797920278 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.798375722 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.798454926 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.798995229 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.798643652 seconds)
  done (took 19.713103789 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.798548181 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.797814745 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.798810548 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.799378127 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.798826333 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.798668678 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.798388043 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.798556344 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.799744448 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.798188681 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.798513727 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.799056894 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.799164256 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.799410554 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.798704509 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.800150901 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.798789974 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.799710643 seconds)
  done (took 34.111632384 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.799683585 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.799825334 seconds)
  done (took 5.331721974 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.799489168 seconds)
    (2/7) benchmarking "second"...
    done (took 1.799785878 seconds)
    (3/7) benchmarking "month"...
    done (took 1.799579599 seconds)
    (4/7) benchmarking "year"...
    done (took 1.799908969 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.800439446 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.798889864 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.800123081 seconds)
  done (took 14.331077435 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.800625754 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.951325185 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.004235483 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.392265398 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.800757106 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.802589107 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.663652456 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.802449844 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.803940602 seconds)
  done (took 19.753986332 seconds)
done (took 110.456374356 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.607221102 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.801628004 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.083843719 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.868237475 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.823233373 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.095136849 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.835614034 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.414957657 seconds)
done (took 42.263001974 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.85205114 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.799497603 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.829529193 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.829686475 seconds)
  done (took 22.192736378 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.79979176 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.128014803 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.823869975 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.689666588 seconds)
  done (took 22.194455915 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.179282899 seconds)
    (2/2) benchmarking "read"...
    done (took 2.153642027 seconds)
  done (took 6.070954078 seconds)
done (took 59.048133369 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.800368815 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.801077788 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.800665682 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.800783945 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.802131816 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.800908243 seconds)
    (7/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.800797761 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.801540686 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.801515442 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.800763176 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.80127763 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.800737243 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.803157199 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.801248593 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.801946525 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.800965591 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802254956 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.801980113 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802618622 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.801374635 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.801318089 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.802853201 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.802356965 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.802541982 seconds)
  done (took 44.972668047 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.802903469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.80402212 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.802651177 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.80186452 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.802437517 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.803273237 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.802391172 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.802714904 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.80184325 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.802116817 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803297429 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.803314581 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.80325419 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.805685433 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802922994 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.802684372 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.802982351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802374787 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.804479593 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.804415862 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.803111065 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.80384496 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.804008446 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803538421 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.804218168 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.803512855 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.802110338 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.803470136 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804178382 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.804852892 seconds)
  done (took 55.835035431 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.804027725 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.804072176 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803295463 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.80451276 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.804914427 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.80476138 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.804125617 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.805224627 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.804518715 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.805389303 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.804866793 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.804217717 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.804277528 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.803452547 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.803999771 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.804783565 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.804091863 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.80593228 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.804455539 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.803886992 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.806282777 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.805417899 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.805063194 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.805915416 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.805373695 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.805137709 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.806084033 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.806130355 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.804991676 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.806364899 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.806548344 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.806059259 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.804972139 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.806507265 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.806735564 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.805187771 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.805899021 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.805809138 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.805976375 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.8064506 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.805472657 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.806139132 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.806373331 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.807540262 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.806307898 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.805939119 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.807546095 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.806981408 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.806835319 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.806525478 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.806203974 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.807472394 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.806214368 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.80621288 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.808233147 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.807295569 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.8064765 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.806837792 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.806266826 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.807978707 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.806570264 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.807883435 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.808185064 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80639507 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.807460044 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.807403956 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.807435476 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.807747712 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.808575666 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.808362823 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.808368391 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.807558806 seconds)
  done (took 131.771506216 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.804461652 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805356064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.804302422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.803965958 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.804116036 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.804868397 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803911885 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804805874 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.804926435 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.804526949 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805334743 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.806012058 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.805132165 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804967714 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805134027 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.80519609 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.804948748 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.805475662 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.804689646 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.806364089 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.805484058 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805062848 seconds)
  done (took 41.451173968 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.804858859 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.805140129 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.805584432 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.804424535 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.806362882 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.805276099 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.806134116 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.80593488 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.806540206 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.805374067 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805039307 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805306778 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.804913624 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806207391 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.805771092 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.805380408 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.806187241 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.805406313 seconds)
  done (took 34.23822058 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.807202214 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.806536476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.805326436 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.806289617 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.807247467 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.80688159 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.806734671 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.80675961 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.807783693 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.807692159 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.806642605 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.809104036 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.806942464 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.806569164 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.806646635 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.806818884 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.805904726 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.806124267 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.807097625 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806920663 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.807398364 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.807361828 seconds)
  done (took 41.491105922 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.80665374 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.806546975 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.807165206 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.807650458 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.808764478 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.80744191 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.807408499 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.807290714 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.80746604 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.808026398 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.80992467 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.807700677 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.807147157 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.808073613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.807782839 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809003883 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.80789285 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.808728486 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.808269571 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.807977266 seconds)
  done (took 37.899551512 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810136952 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808845057 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.808409513 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.80900799 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.807874062 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.809360996 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811725902 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.808678314 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811129824 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.808420244 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.809128747 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808724799 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808943923 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.809253874 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.808459283 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.809865175 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.809430864 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.810627947 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.809205013 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.808593732 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.810617937 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.810670582 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811703431 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.80952594 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809410529 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809701128 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809974747 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810524529 seconds)
  done (took 52.40929322 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810106755 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.809919281 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.810428661 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.811720249 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.811602052 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.809958195 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.810305646 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.811296354 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810411709 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.810503272 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.811353669 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.809338044 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.809832646 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.810771759 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.810573925 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.812519932 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.810501416 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.810682454 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810666489 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810438842 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.810972577 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811151413 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.811362604 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.810052936 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810775487 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.810894885 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.812217268 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.810947544 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.811105177 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.811015864 seconds)
  done (took 56.06741095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.832092116 seconds)
    (2/2) benchmarking "in"...
    done (took 1.834272112 seconds)
  done (took 5.41072964 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.811188182 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.810911694 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.811437784 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.812195601 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.810992593 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.811209008 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.811624362 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.811567021 seconds)
  done (took 16.235782209 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.812731092 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.815644932 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.812494169 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.812411934 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.813241049 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.823271083 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.814559071 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.815205307 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.815445461 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.814479047 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.816505724 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.818428039 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.820434778 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.817740988 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.813354679 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.813173662 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.815512897 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815579383 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.815263299 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.813620268 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817075261 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81337472 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.814391374 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.813331668 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.813272907 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.815419523 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.822344067 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.815669221 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.815100641 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.813801988 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.821478511 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.813658007 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.8135967 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816486967 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.814482732 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.813671032 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.821866418 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.815260043 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.815710041 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.81339112 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.816905787 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.816748548 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.81794793 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.822430237 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.815750297 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.813519261 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.814735875 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.814563209 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.815271599 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.819368896 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.821384637 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.816097859 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.815014595 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.814989311 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.81737556 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.816252002 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.815298627 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.817736693 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821411993 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.823163727 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.818965323 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.835993037 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.823465733 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.815924522 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.816495142 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.825980041 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.838943054 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.817406017 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.817939782 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.816458296 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.824145331 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.816542421 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.815932325 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.816787608 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829782842 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.8239798 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.81633227 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.816383167 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.816127267 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.817006652 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817951726 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.817276559 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.818082525 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.817383318 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.826872165 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.839730969 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.816657204 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.816422988 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.820087325 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.817723312 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.822205027 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.820126505 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.817176429 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.8189277 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.819593087 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.820127303 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.817731404 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.81749819 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.816579184 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.828604912 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.817913666 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.816544312 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.820708264 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.826227064 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.818156885 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.81822825 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.818685615 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.818101372 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.826059338 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.818466499 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.81808212 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.817801773 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.819840811 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.822637606 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.818070054 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.821762266 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.826612285 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.827456443 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.820857442 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.822429889 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.82323411 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.823106197 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829129552 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.842629211 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.819020586 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.822949489 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.825711931 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.830330498 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.824283366 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.819472817 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.82172848 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.819900342 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.820906042 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.821712504 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.819305704 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.820523635 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.819132465 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.820319181 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.8205003 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.819922436 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.821393445 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.82082835 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.821190208 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.820398299 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.824671731 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.820688613 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.822729454 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.82840277 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.821645443 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.820495702 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.821135166 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.822680672 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.822421845 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.821369255 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.820886412 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.820966256 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.820813676 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.821662288 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.823339799 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.822075175 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.821416124 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.821938874 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.824631102 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.821176192 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.820383652 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.822530261 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822276715 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.822056335 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.823486308 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.822922866 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.824340335 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.822785174 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.826536983 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.821467302 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.821667406 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.821289906 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.823087299 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.82150522 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.82509458 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.832674036 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.825659317 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.832690857 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.822319754 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.83127686 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.823671971 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.825161029 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.823613384 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.824301455 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.823708632 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.822835 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.821864692 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.826038805 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.843379922 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.833182391 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.825056187 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.823558483 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.828393957 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.826526521 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.829660656 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.822613348 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.824678669 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.826026913 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.822916664 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.824807836 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.822821235 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.827603021 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.823653175 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.823870362 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.826457159 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.825229524 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.823891865 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.824777004 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.823232962 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.825713394 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.824217671 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.823598201 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.824654117 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.824016593 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.832127561 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826659728 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.824745861 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.824438675 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.825850254 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.824537861 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.824258998 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.827382304 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.828385076 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.825084321 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.826176812 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.834329583 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.826339979 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.826424727 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.825719263 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.824760013 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.826891862 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.826092802 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.828828481 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.83309677 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.829254749 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.825874817 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.830548244 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.82528004 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.828933282 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.825829579 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.826103998 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.825612803 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.82649282 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.826855608 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.824916988 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.834142562 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.825315251 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.826203037 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.826592671 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.828961452 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.826877167 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.828621487 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.826775815 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.829274044 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.835379931 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.832876073 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.827630353 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.830633197 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.829089496 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.828287257 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.830177992 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.829078122 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.84014716 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.836307036 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.827193584 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.827960113 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.826767496 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.830198832 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.826345637 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.828094184 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.835042286 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.828142769 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.82959462 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.830153635 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.827948278 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.828506957 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.835272283 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.828493029 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.832080206 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.829602166 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.829830102 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.829024036 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.827171983 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832354463 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.82906233 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.830414638 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.832073948 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.828081309 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.828290136 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.829205841 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.837544972 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.829003865 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.830037464 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837736454 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.830553446 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.828830993 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.829254666 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.827907564 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.830361704 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.83011379 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.829691459 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.830559208 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.829268163 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.832734997 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.838856781 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.832763587 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.836109937 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.830259225 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.839446239 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.830259728 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.829246572 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.830041494 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.833192768 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.837387077 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.830375919 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.829080326 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.83997335 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.831005266 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.830290894 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.83549241 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.830995632 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.829733009 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.829910208 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.831017709 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.834739567 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.834837665 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.829432737 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.831548902 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.830038135 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.829734493 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.835633194 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.833180928 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.831757293 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.831400697 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.830461469 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.831356269 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.832023358 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.831984447 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.831831392 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.831705525 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.830291635 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840655438 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.8326083 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.832178539 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.835952465 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.831007835 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.840653486 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.832851698 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.831276001 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.83354657 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.832258469 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.834150403 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.831662471 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.831886807 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.831459719 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.831916413 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.83322801 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.843641654 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.840386454 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.836201805 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.83288815 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.832848911 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.832433105 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.84222857 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.85451106 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.832851274 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.835068174 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.83641444 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.840764342 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.834864048 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.837468634 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.836158466 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.840173554 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.834512449 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.833536652 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.835827576 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.844324768 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832852374 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.833405429 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.833835824 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.837574309 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.835047594 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.832828644 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.834158607 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.836688256 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.834724033 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.845358051 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.834231095 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.835118236 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.833902166 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.834223742 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.834429179 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.83354777 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.836571487 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.835985947 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.834571129 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.835555942 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.835832322 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.839535055 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.834005692 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.837862353 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.844272338 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.834558066 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.834330309 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.836814075 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.835030777 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.837331171 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.836249609 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.833627981 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.835939298 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.834087476 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.834662504 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.838043608 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.843402616 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.837102228 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.835662085 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.834736841 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.839351345 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.834352962 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.834582907 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.837387504 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.845178422 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.837719131 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.847665491 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.844713865 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.834325435 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.837172026 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.842849835 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.842787809 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.83648794 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.835042685 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.835123276 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.838496464 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.838433499 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.837512784 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.836052216 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.83616948 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.841771355 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.835874839 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.837401511 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.83567681 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.836029882 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.838680974 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.838981879 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.841295414 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.836347824 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.83602961 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.835720925 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.838398522 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.839067677 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.84049872 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837698839 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.836349271 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.840615491 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.840270728 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.841711591 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.837172204 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837229265 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.839311123 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.837111787 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.837356282 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.83783371 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.837487753 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.838530212 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.84162107 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.84483345 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.837716427 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.839539724 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.839455916 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.841849793 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.838937793 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.838484058 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.838185126 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.838058125 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.8460214 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.838270134 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.838816918 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.839554105 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.838129402 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.844659066 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.840619759 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.843444765 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.840050263 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.839452172 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.838318006 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842211172 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.847902007 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.842509348 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.842673364 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.846344144 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.843378711 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.841533174 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.838703999 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.838668975 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.841229547 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.84092865 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.843437961 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.841107977 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.841778827 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.839868544 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.841935791 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.840535308 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.842559752 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.840766932 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.839870493 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.8439633 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.848107631 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.848561466 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.840956998 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.842405754 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.839747839 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.843192388 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.851644465 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.840672896 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.840138448 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.842425628 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.841857028 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.841819737 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.846743407 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.849631349 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.844852923 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.841753083 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.845882038 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.857572244 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.843187793 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.851082121 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.87199764 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.842832167 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.84136406 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841774279 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.842381012 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.841085614 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.845062982 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.84180203 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.849240743 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.841881972 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.840585931 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.849752939 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.842628564 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.841210774 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.842538668 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.843779565 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.848413035 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.842941446 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.850023178 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.842363955 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.842132812 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.843062809 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.845759038 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.841264493 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.842575149 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.843266059 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.844247897 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.843127456 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.843481147 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.852432683 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.844645387 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.845459224 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857772309 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.853389891 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.842985161 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.841502132 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.843106016 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.849086987 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.847396803 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.843219936 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846285156 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.850844483 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.846789998 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.850826005 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.84628303 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.844007112 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844154172 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.843312843 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.843800445 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.856662692 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.854611004 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.843923436 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.844406635 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.849746316 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.843613357 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.850996721 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.850490942 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.845224242 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.845877959 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.845190136 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.843994678 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.8445197 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.844676807 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.846677628 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.851648674 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.84505718 seconds)
  done (took 1093.130893507 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.844148343 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.84480338 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843989034 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845129414 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.844499739 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.84438374 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845054907 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.845595553 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.844828036 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.845712797 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.844769512 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.845238077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.844948957 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.84628455 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.844909066 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.845956409 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844635124 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845222271 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.845771053 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.845630299 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.8457736 seconds)
  done (took 40.523741922 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.846743885 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.846348245 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.846197242 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.845797172 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846381988 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.846609133 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8472821 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845789362 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.846709026 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.845950656 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.845152906 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.846237503 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.847023385 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.846655749 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.847362198 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.845460923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.846622797 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.845293218 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.847359302 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.846826865 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.84721929 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.846956893 seconds)
  done (took 42.399861684 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.847261589 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.846397752 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.84830994 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.846980531 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.846281657 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.846655084 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.847084898 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.848816255 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.847972195 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.849099339 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.854973532 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.855085918 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.847052688 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.85160216 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.847616307 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.847755285 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.993256501 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.847940166 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.849258797 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.848002923 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.849402771 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.856032955 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.848740951 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.847772764 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.848872837 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.850421852 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.848271488 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.849609897 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.849645147 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.850514062 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.853366498 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.848271291 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.84998509 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.851842989 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.850255236 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.85071778 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.852946295 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.849476502 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.848923304 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.848874385 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.859800777 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.87156179 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.848000387 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.849783217 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.857095138 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.849233549 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.850034566 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.853234365 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.857519089 seconds)
  done (took 92.596583314 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.849037951 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.850058242 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.850115872 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.848977934 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.848983475 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.848787091 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.849414083 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.85003089 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.849258497 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850373611 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.849824041 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.85053141 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.849823039 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.852900662 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.850135682 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.84987755 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850778784 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850611447 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.85088458 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.849727956 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851639376 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.850294554 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.850443706 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851244173 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850551087 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.850216005 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850987019 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.850031088 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.851182129 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.850229093 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.850616726 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.850833982 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.850957784 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.850746164 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852511278 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.852911523 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.850783286 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.852133744 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.851942821 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.852679636 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.85149398 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.852380488 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.851896892 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.852444771 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.852581346 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.852326424 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.853702742 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.852070444 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.852445311 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.853467466 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.853866755 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.852773918 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852667811 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.85249383 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852135462 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.852138536 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.8529519 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.852883803 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.853760515 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.852735712 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.853277383 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.852146569 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.853149687 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.853261485 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.853430634 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.853848439 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.85299068 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.853292569 seconds)
  done (took 127.68456949 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.853222595 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.853976303 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.85361177 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.853336217 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.854055067 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.853821065 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.85356467 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.852909406 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.854166316 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.852911527 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.854582704 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854423332 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.854389168 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.85454555 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854646315 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.85542767 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.854847586 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.854058122 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.854888234 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.854550092 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.855169205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.855445376 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.85479666 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855305906 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.855859616 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854965602 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.855395151 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855735815 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.855224097 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.855788772 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.854715063 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.855443161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855798715 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.854805457 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.854888155 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.855548156 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854891612 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.856295362 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.855330198 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.853726298 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.856769061 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.856606194 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.856369336 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.854542644 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85452538 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.856876459 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.855315803 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.856791857 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.855777585 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.856066674 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.857063389 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.85580177 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855772107 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856080179 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.855971398 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.855964692 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.857536973 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.856080251 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.856499079 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.855596654 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.856746616 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.856748456 seconds)
  done (took 116.808446339 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.856461969 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.856287029 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.856828673 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.857358646 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.858061593 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.856916936 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.856688193 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.857038795 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.855635467 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.856867582 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.856633772 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8563989 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.857843247 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857060084 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.857418756 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858268177 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.856788503 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.856495197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.85779027 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.857296078 seconds)
  done (took 38.927923427 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.857191162 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.857503045 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.857641211 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.857672692 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.857180086 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.857265022 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.857677656 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.858065198 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.856695791 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.857889225 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.857985533 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.858356186 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.858192541 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.85740776 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.857062122 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.857673997 seconds)
  done (took 31.510776674 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.858468539 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.858638343 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.858873736 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.859367256 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.858024333 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.858520791 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.85816443 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.858094803 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.85742896 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.85874769 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.858764309 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.858224243 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.858671261 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.858160331 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.857864798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.859794262 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.85857888 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.859104376 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.859640282 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.85957877 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.860240309 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.858974215 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.859837179 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.860701516 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.860053848 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.860239642 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.860640747 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.859769745 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.860092384 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.859185826 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.860058808 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.861277527 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.860518627 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.859864978 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.861636201 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.861118965 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.86407051 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.85957889 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.860137862 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.859582541 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.860404346 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.860345788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.860190673 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.860861208 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.860830362 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.860374511 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.861088677 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.860955774 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.860255571 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.860723675 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.860754589 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.861592829 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.860317279 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.860919443 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.861684435 seconds)
  done (took 104.081439902 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.860036287 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.861322489 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.860648165 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.861515427 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.861000813 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.861249705 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.860874445 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.860960894 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.861675165 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.861862758 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.861165737 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.860947837 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.861648215 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.860999729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.861810017 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.862077079 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.862754884 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.862360638 seconds)
  done (took 35.297333332 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.862094418 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.863231845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.862439983 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.862001011 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.861344883 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.863463682 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.862939639 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.862993467 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.863275337 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.864232541 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.862066032 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.862418518 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.863375822 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.862598522 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.864141427 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.862550182 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.862662335 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.861961639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.862832849 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.863413551 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863382858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.862820034 seconds)
  done (took 42.776360842 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.863290661 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.863378021 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.877650512 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.884317778 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.883428603 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.898893694 seconds)
  done (took 13.064363487 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.861991677 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863564189 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.863134889 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863785686 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863371938 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86404938 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865054896 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.863486942 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863933462 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864960225 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864029784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.864715291 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.863516796 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864507747 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864705775 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.863774122 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864241644 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.864007973 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864246276 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.863851803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864347591 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864552386 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.864600463 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86439658 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.864928035 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865699923 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86542055 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866528026 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865910682 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865279396 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.865388114 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.864340043 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864489682 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867113203 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.864028764 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.865228248 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.865399744 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864211157 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866095503 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865765547 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.864520661 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.864843672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865732439 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86635686 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.865479469 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86570272 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.865387454 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86588608 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.865724427 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865753288 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.866017333 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866706164 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866193478 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866108721 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866796674 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867182679 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.866710149 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867129456 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.866332176 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.866995387 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.866228963 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.866341738 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.868073925 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.867731022 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.867490753 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.86746455 seconds)
  done (took 124.90363317 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868376996 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.867013582 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.866728852 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.867714329 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867565855 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866811866 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.866993124 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.867723502 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.865850984 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868979571 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868113898 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.86728816 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.86753637 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.867525762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868669925 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868325282 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.867488832 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868518421 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868661518 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86845369 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869420241 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868608429 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.868343817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868588126 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.868368583 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869291057 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.86847595 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86846271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.86894177 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.868797064 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869327476 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.867467325 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868613775 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.86894987 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.869127328 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.868007865 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869245676 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869108875 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869099375 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.86872258 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869102505 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.869481296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.868620935 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.86920785 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.868297216 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.870946392 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870136969 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.869532415 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.870394383 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.868067714 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870097316 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.870218097 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870443731 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.870017088 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869195298 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.869582628 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.869472174 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.870201894 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869895267 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869900595 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.872716625 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872011992 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.869752831 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.871260104 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870563105 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.870569505 seconds)
  done (took 125.148939898 seconds)
done (took 2548.38050167 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.90447511 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.98236937 seconds)
  done (took 15.6874427 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.038787833 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.989559778 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.875938579 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.922602413 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.875642057 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.894854653 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.877838752 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.874900481 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.875565481 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.875491522 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.875914868 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.060036326 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.93622797 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.874857542 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.875419469 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.96849532 seconds)
  done (took 52.506343031 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.881752187 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.878060593 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.892460389 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.878274813 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.881732413 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.894698556 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.908634453 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.885152441 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.918066835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.894296854 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952388478 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.896919784 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.882632878 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.932767788 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.895974554 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.897259004 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.978424524 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.960246555 seconds)
  done (took 36.111332975 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.9608656 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.891300599 seconds)
  done (took 10.662187356 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.889371772 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.883302797 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.878378953 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.905347008 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.891058237 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.912561781 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.893892418 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.893628106 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.900731903 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.893890998 seconds)
  done (took 70.748676081 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.881989551 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.880733893 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.880491555 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.876383601 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.875122024 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.879872222 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.877700313 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.878374185 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.566088596 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.920166595 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.890767794 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.887182258 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.877814119 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.878515198 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.875900833 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.905357956 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.059895124 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.875516464 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.874501863 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.882340595 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.878547587 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.981505001 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.892454556 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.879980948 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.912746934 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.56797355 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.892225854 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.882973035 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.047836263 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.875759313 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.87888597 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.089717343 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.885477185 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.324316452 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.201006403 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.888795594 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.890686217 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.887588389 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.875810177 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.070532913 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.879060337 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.88591079 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.721917048 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.175155704 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.977877628 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.926447379 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.235707715 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.887098972 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.879626995 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.914854979 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.88485867 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.880416127 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.899768745 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.375025782 seconds)
  done (took 133.659961111 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879808669 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.124217676 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.031961415 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87511382 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.136644956 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091014395 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.874681513 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.916988245 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880366181 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074151006 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.126722598 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.981563927 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.873777977 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.873755579 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.876735195 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.872418159 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.019076105 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.943190264 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.878098957 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.871041283 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900458701 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.076786473 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.999829481 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.879852112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.901965769 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.082711191 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.999335045 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.980923673 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.655844615 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.872123533 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939734289 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.875388178 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.880189243 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.877616346 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.035494503 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.988017335 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960225635 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.881125163 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.880948385 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.878574446 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.646409206 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082191572 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.976156306 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.00175443 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.135103377 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.096633035 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.492672949 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.88036129 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.505655964 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049252793 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.084778803 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.082229649 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.999916889 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.884424622 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.431018942 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.878899317 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.874849615 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.104394263 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.099408111 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.978629555 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.88112091 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.880776422 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.879358435 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.169201133 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.883703534 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.971644721 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.884654795 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.883611699 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.973972129 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.983065208 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.111628609 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.100754899 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.913054854 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.208887164 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.383948094 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.081285899 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.947458436 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.10680835 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.883095017 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.880632618 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956147193 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.716353324 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.126951365 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.157717641 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.074326548 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903806127 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.504290445 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.87683099 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.061031026 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.063429331 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.113407925 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.122282154 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.119379379 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.204923835 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.87186189 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.87528332 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.169738701 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.990678736 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.824351235 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.228004224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113601637 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.369627668 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.905032464 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.167670343 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014640766 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.882237657 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.525469549 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.878379426 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.090547219 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.919871393 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.881797405 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.884166187 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.070288264 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.797602658 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.885192687 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.839273668 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.940769246 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.887595525 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.082084436 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.885945507 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130144839 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.887217864 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.119780918 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.436521712 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.912211466 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.113684223 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.12833509 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.508910765 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.124665668 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.126056229 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.999009955 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159325057 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.882784548 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.884446329 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.144805339 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.886323442 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.882950029 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.050086295 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.886561534 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.025157296 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.886843224 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.152797711 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.905832488 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.121625682 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.885970641 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.122422436 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.914571672 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932925212 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.887325256 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.008166645 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.885746891 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.70452342 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.045620976 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.889191953 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.882869626 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.630536611 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.884991986 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.040750117 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.113401989 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.904197351 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.950301341 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.430972783 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.866624535 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.967466566 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.90834548 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.169134171 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.887586286 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.134224557 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.866589105 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.349184944 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.885029206 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.175742503 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.128332222 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.886109879 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.884496364 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.723270558 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.845175256 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.884570191 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.494708276 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.240712267 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.651248799 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.092489211 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.888648749 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.012663458 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.887393662 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.961878953 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.220879336 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.883525818 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.886482384 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.882926028 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.885373755 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.885627963 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.149640192 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.909616272 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.317568198 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.018074302 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.138023483 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.186174206 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.083726856 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.92165082 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.882868361 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.159768813 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.880657847 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.940441984 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.880047849 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.897825273 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.110060769 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.882865097 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.166606825 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114964056 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.747384372 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92414521 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.879740273 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.879666401 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.806190127 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.023747389 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963528278 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.880468389 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.877722865 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.992327157 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.999436739 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.061088144 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.566411953 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.033939726 seconds)
  done (took 905.02709056 seconds)
done (took 1226.207039025 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.877356378 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.881648983 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.88123286 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.880457368 seconds)
  done (took 29.331027511 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.881716475 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.880082079 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.879889175 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.879866483 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.88009951 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.880000685 seconds)
  done (took 13.093765562 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.878482034 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.88029965 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.880438364 seconds)
  done (took 22.449413096 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.957572073 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.288718252 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.024231011 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.309828737 seconds)
  done (took 10.391347164 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.880036527 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.880692017 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.881259391 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.883062819 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.883698417 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.885065127 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.881515922 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.882618249 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.884651556 seconds)
  done (took 18.755205036 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.897846647 seconds)
done (took 99.728865643 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.987163767 seconds)
    (2/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.063953417 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.202436571 seconds)
    (4/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.210387164 seconds)
    (5/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.90602337 seconds)
    (6/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.889411036 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.895348333 seconds)
    (8/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.895557763 seconds)
    (9/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.903870978 seconds)
    (10/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.888005813 seconds)
    (11/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.719795184 seconds)
    (12/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.199196571 seconds)
    (13/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.276374816 seconds)
    (14/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.990443672 seconds)
    (15/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.709438141 seconds)
    (16/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.372762433 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.903619357 seconds)
    (18/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.889521354 seconds)
    (19/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 2.030377606 seconds)
    (20/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.094451242 seconds)
    (21/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.277115867 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.827380016 seconds)
    (23/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.044669552 seconds)
    (24/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.894841985 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.73612534 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.913532473 seconds)
    (27/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.970345604 seconds)
    (28/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.037341282 seconds)
    (29/309) benchmarking ("sort", Float64, false)...
    done (took 5.588775254 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.023576216 seconds)
    (31/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.085053952 seconds)
    (32/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.903380037 seconds)
    (33/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.195608763 seconds)
    (34/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.013909289 seconds)
    (35/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.060606378 seconds)
    (36/309) benchmarking ("sort", Int8, false)...
    done (took 4.853752004 seconds)
    (37/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.898243709 seconds)
    (38/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.235614325 seconds)
    (39/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.899737009 seconds)
    (40/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.027501214 seconds)
    (41/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.754004861 seconds)
    (42/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.972433423 seconds)
    (43/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.017149626 seconds)
    (44/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.915042148 seconds)
    (45/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.686118408 seconds)
    (46/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.977219197 seconds)
    (47/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.883847324 seconds)
    (48/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.874610506 seconds)
    (49/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.947305998 seconds)
    (50/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 3.611251716 seconds)
    (51/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.897319843 seconds)
    (52/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.957000523 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.87981743 seconds)
    (54/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.034789934 seconds)
    (55/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.124321285 seconds)
    (56/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.97034504 seconds)
    (57/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.763999701 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.014167533 seconds)
    (59/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.145043335 seconds)
    (60/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.636384785 seconds)
    (61/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.304311581 seconds)
    (62/309) benchmarking ("sort", Bool, false)...
    done (took 2.093463957 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.27198044 seconds)
    (64/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.009154149 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.16562113 seconds)
    (66/309) benchmarking ("sort", Int64, false)...
    done (took 5.533172272 seconds)
    (67/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.880861002 seconds)
    (68/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.196845775 seconds)
    (69/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.965475432 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.895642778 seconds)
    (71/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.870691 seconds)
    (72/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.051852746 seconds)
    (73/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.893582635 seconds)
    (74/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.176932217 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.877969368 seconds)
    (76/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.948363997 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.763256093 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.17131408 seconds)
    (79/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.25913853 seconds)
    (80/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.885364355 seconds)
    (81/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.629480609 seconds)
    (82/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.892772178 seconds)
    (83/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.866861397 seconds)
    (84/309) benchmarking ("sort", BigInt, false)...
    done (took 6.86695522 seconds)
    (85/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.866672863 seconds)
    (86/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.052288104 seconds)
    (87/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.968481513 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.332802986 seconds)
    (89/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.87085624 seconds)
    (90/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.202433065 seconds)
    (91/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.522966065 seconds)
    (92/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.114210157 seconds)
    (93/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.864350103 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.950640955 seconds)
    (95/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.993231796 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.059834629 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.865128411 seconds)
    (98/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.97759596 seconds)
    (99/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.354910706 seconds)
    (100/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.936751109 seconds)
    (101/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.175511961 seconds)
    (102/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.991704796 seconds)
    (103/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.869130094 seconds)
    (104/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.487011188 seconds)
    (105/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.144599493 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.591354353 seconds)
    (107/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.008950393 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.209302387 seconds)
    (109/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.206665908 seconds)
    (110/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.20247747 seconds)
    (111/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.974640164 seconds)
    (112/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.534886473 seconds)
    (113/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.282409092 seconds)
    (114/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.138855734 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.901247186 seconds)
    (116/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.010605576 seconds)
    (117/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.186061037 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.890188481 seconds)
    (119/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.705384017 seconds)
    (120/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.783646441 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.702031149 seconds)
    (122/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.443978678 seconds)
    (123/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.897122515 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 8.486460058 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.228139992 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780083614 seconds)
    (127/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.280461146 seconds)
    (128/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.964342111 seconds)
    (129/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.180536956 seconds)
    (130/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.886350648 seconds)
    (131/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.882477012 seconds)
    (132/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.917316694 seconds)
    (133/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.641998745 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.002821871 seconds)
    (135/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.640929745 seconds)
    (136/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.974069002 seconds)
    (137/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.116743095 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.888296818 seconds)
    (139/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.885874883 seconds)
    (140/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.901535598 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.066178619 seconds)
    (142/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.097798855 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.758424735 seconds)
    (144/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.215822663 seconds)
    (145/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.900054224 seconds)
    (146/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.020383351 seconds)
    (147/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.09758714 seconds)
    (148/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.904959993 seconds)
    (149/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.022413013 seconds)
    (150/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.202188804 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.213863744 seconds)
    (152/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.374625186 seconds)
    (153/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.150313561 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.282082523 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.915553723 seconds)
    (156/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.022647516 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.91450835 seconds)
    (158/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1103272 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.003602916 seconds)
    (160/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.141707705 seconds)
    (161/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.030678891 seconds)
    (162/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.562966877 seconds)
    (163/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.296216547 seconds)
    (164/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.146868359 seconds)
    (165/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.250574815 seconds)
    (166/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.987617245 seconds)
    (167/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.90139019 seconds)
    (168/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.884697377 seconds)
    (169/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.590835236 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.309509639 seconds)
    (171/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.356852367 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.780366095 seconds)
    (173/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.986334486 seconds)
    (174/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.102501519 seconds)
    (175/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.921288985 seconds)
    (176/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.29041121 seconds)
    (177/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.062390121 seconds)
    (178/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.005035623 seconds)
    (179/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.037894377 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.137088886 seconds)
    (181/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.296676367 seconds)
    (182/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.892358905 seconds)
    (183/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.996368218 seconds)
    (184/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.3690606 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.60184445 seconds)
    (186/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.002581462 seconds)
    (187/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.895785226 seconds)
    (188/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.962443757 seconds)
    (189/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.895128228 seconds)
    (190/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.866869699 seconds)
    (191/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.085087915 seconds)
    (192/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.975837355 seconds)
    (193/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.992673864 seconds)
    (194/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.161623577 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.244273455 seconds)
    (196/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.191995346 seconds)
    (197/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.978466001 seconds)
    (198/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.906871369 seconds)
    (199/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.892186645 seconds)
    (200/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.291597442 seconds)
    (201/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.892444291 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 3.586749131 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.196641616 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.13793145 seconds)
    (205/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.592279626 seconds)
    (206/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.000926021 seconds)
    (207/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.958614234 seconds)
    (208/309) benchmarking ("sort", Float32, false)...
    done (took 5.546082769 seconds)
    (209/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.90777124 seconds)
    (210/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.89140539 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.077906551 seconds)
    (212/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.203657548 seconds)
    (213/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.115512108 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.032263099 seconds)
    (215/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.007615056 seconds)
    (216/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.903883767 seconds)
    (217/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.907665129 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.007285693 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.91875142 seconds)
    (220/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.979683603 seconds)
    (221/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.71497762 seconds)
    (222/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.448268084 seconds)
    (223/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.286205547 seconds)
    (224/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.011641742 seconds)
    (225/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.134569207 seconds)
    (226/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.905514125 seconds)
    (227/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.781112068 seconds)
    (228/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 2.073969187 seconds)
    (229/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.983233098 seconds)
    (230/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.922119647 seconds)
    (231/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.903064838 seconds)
    (232/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.179563868 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.20805416 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.716170571 seconds)
    (235/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.672710993 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.042759594 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.903669264 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.296071658 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.023206799 seconds)
    (240/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.026849068 seconds)
    (241/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.037499551 seconds)
    (242/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.276081389 seconds)
    (243/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.898700717 seconds)
    (244/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.912719802 seconds)
    (245/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.101703446 seconds)
    (246/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.292966987 seconds)
    (247/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.494465396 seconds)
    (248/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.174507542 seconds)
    (249/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.423885448 seconds)
    (250/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.97649961 seconds)
    (251/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.160650319 seconds)
    (252/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.898297927 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 3.62807233 seconds)
    (254/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.195078404 seconds)
    (255/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.27881461 seconds)
    (256/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.912366311 seconds)
    (257/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.415354931 seconds)
    (258/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.031680588 seconds)
    (259/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.187475002 seconds)
    (260/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.292830026 seconds)
    (261/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.117572289 seconds)
    (262/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.029728956 seconds)
    (263/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.106022062 seconds)
    (264/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.976324923 seconds)
    (265/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145009841 seconds)
    (266/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.314402185 seconds)
    (267/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.26456514 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.195410994 seconds)
    (269/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.876293994 seconds)
    (270/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.4392777 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.898978029 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 9.477205562 seconds)
    (273/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.102065269 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.202564652 seconds)
    (275/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.374987105 seconds)
    (276/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.999148883 seconds)
    (277/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.913141626 seconds)
    (278/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.95493579 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.897551839 seconds)
    (280/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.958640811 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.024716806 seconds)
    (282/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.49279171 seconds)
    (283/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.156417861 seconds)
    (284/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.89523707 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.892747342 seconds)
    (286/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.028350588 seconds)
    (287/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.036019686 seconds)
    (288/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.197586754 seconds)
    (289/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.906800167 seconds)
    (290/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.67355326 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.891677758 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.557693693 seconds)
    (293/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.233385975 seconds)
    (294/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050222992 seconds)
    (295/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.116581327 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.792258684 seconds)
    (297/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.897261594 seconds)
    (298/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.943093736 seconds)
    (299/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.009308367 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 2.000526087 seconds)
    (301/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.180668074 seconds)
    (302/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.566769376 seconds)
    (303/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.03303279 seconds)
    (304/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.975123408 seconds)
    (305/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.901945247 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.083011247 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.276532226 seconds)
    (308/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.889326367 seconds)
    (309/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.951383289 seconds)
  done (took 1017.053833609 seconds)
done (took 1018.947011727 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.89737783 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.891453012 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.874742191 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.899001319 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.986758265 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915236595 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.884855791 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.876323802 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.925003007 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.918640711 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.869524752 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.909034607 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.871200979 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.8716467 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.870713977 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.882531673 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.180306324 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.902642348 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.888038204 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.879779947 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.884220428 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.864805754 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.914811412 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.905506904 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.868895499 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.86993417 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.869552083 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.885797033 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.979469838 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.869260187 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.870088069 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.878412836 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.178982229 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.897863623 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.864408455 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.887388113 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.880139957 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.87727391 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.86930995 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.900333659 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.331019209 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.874566905 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.868752582 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.866334936 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.8667485 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.872700988 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.867094358 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.874277695 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881177823 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.881901679 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.325266195 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.891452947 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.870679635 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.866383266 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.879455532 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.868553061 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.87041664 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883573698 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.888392783 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.88311539 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.166981619 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.906871754 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.870562869 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.885900078 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.879241109 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.360235972 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.873632815 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.872770456 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.332450282 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.880997133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.359936498 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.886092612 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.869850981 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.883771392 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.901024255 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.179531977 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.898913543 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.866477262 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.877342374 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.867018085 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.879767866 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.883158175 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.872556298 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.869272743 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.884074014 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.911175052 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.880379828 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.870078881 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.880115488 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.889357584 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.880460631 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.883301054 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.87305499 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.868173253 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.883841936 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.87389141 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.873831107 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.873977861 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.874566046 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.882138947 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.33236967 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.894564712 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.867766084 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.866681911 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.868731641 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.885446641 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.332358371 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.879387004 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.89290735 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.919566663 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.871049293 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.168378155 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.907795013 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886907374 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.882321078 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.87236302 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.866665496 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.169708317 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.361813645 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.893987815 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.870271006 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.869194173 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886754016 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.87205103 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.867041114 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.182456898 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.907381676 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887117925 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.99584559 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.883758618 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.904146094 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.870102366 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.87445833 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.915493254 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887764626 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.905136163 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.873619809 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.887439461 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.890394784 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.868994072 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.88404032 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.884040079 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.870894885 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.879441384 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.868914213 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.916832214 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886880307 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.886641976 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.89205378 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.995288996 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.869259053 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.170705125 seconds)
done (took 294.362560028 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.952765528 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.867836167 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.96030414 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.868756591 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.962004967 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.947145521 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.867079491 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.868467673 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.868681816 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.378917415 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.869205275 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.873817017 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.866632073 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.869726184 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.943301769 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.869221599 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.868753012 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.151956895 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.869774868 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.951776078 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.868525715 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.869477958 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.87035369 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.382761316 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.869472201 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.869436688 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.954196751 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.870027044 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.158076291 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.868760317 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.868662479 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.158643731 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952417281 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.88306663 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.878153861 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.877566485 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.962290913 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.878799741 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.941560399 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.941715765 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.96176179 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.902630159 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.871001904 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.869213983 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.87415459 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.870910739 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.870726494 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.900375541 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.87175166 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.874772285 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153493233 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.875618114 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.878289874 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.871293094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.871365875 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.883310145 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.87222305 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.872647973 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.953534947 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.872508186 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.942976727 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.384962314 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.383833588 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.871826187 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.872137779 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.873297165 seconds)
  done (took 184.701758119 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.93827781 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.945989356 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.940790534 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.877628883 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.920710547 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.940159897 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.878450464 seconds)
  done (took 15.244626033 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.879287524 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872612249 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.931563786 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.931899174 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.872319815 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.052385796 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.883427955 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.877398568 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.899615129 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.872655811 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.508880686 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.932192414 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.878182708 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.871566486 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.88446491 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.935365985 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.875072265 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.873319352 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.982522764 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.022842076 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.878147349 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.879927253 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.899530837 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.886698021 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.870988174 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.870580531 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.870698524 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.87709296 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.870773769 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.870419019 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.868749415 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.932000739 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.868732623 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.867458926 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.86616868 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.866404528 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.86561962 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.866887106 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.864254855 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.861356084 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.863778656 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.860628948 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.863863539 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.865252662 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.862704753 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.883625692 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.860508158 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859109662 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.86012253 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.858490545 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.888542363 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.857839571 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.857111757 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.861868699 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.899386128 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.866257985 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.854188238 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.854483629 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.854884853 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.855470628 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.853599007 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.001130365 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.907993172 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.849038951 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.908821905 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.006873865 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850126368 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.849183335 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.848811559 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.940805046 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.849074822 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.911365827 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.844390707 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.963400824 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.843985638 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.024615039 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.867708816 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.845016138 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.845738289 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.841059952 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.849689889 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.842278041 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.844725079 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.849564336 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.847563636 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841859516 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.842704505 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.843682969 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.85085122 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.842840387 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.895403473 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.842269952 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.843637352 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.982904466 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.843034818 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.952504622 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.87072138 seconds)
  done (took 204.972888959 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.851302231 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.851607245 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.845207064 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.858670461 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.844967847 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.845347544 seconds)
  done (took 12.871752318 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.847336509 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.848252101 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.843478503 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.8432386 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.843978129 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.844746403 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.843899081 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.847155266 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.849596551 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.843803969 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.846116452 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.844691248 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.845965388 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.845460726 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.844473805 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.8450633 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.844656786 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.84425214 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.844034484 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.844571526 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.978815696 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.845565703 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.844911071 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.851989245 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.849950269 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.844273971 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.858285261 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.845883822 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.84596707 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.853673286 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.850618958 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.846310595 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.851042797 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.85217549 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.850384666 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.851786775 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.848216484 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.845315998 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.84702359 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.846867301 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.846457332 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.845176259 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.843422118 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.844504108 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.845889318 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.850318733 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.845243243 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.853077012 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.841113728 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.84146531 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.837965754 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.836860095 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.83859008 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.838657663 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.845253609 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.845848607 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.839424378 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.835526087 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.835516962 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.841615607 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.839714328 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.835652007 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.836545044 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.838972019 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.839799189 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.836001759 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.841307776 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.839671479 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.836607726 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.834300986 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.836352283 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.835865982 seconds)
  done (took 135.693442714 seconds)
done (took 555.30384302 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.874351212 seconds)
  done (took 8.640591339 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.002933631 seconds)
  done (took 8.860659586 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.723448623 seconds)
  done (took 10.490285574 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.838998601 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.858158982 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.852086769 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.84421849 seconds)
  done (took 29.171298128 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.05474266 seconds)
  done (took 8.822022458 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.849053091 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.833844545 seconds)
  done (took 15.522120298 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.882367549 seconds)
  done (took 8.649091677 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.267091969 seconds)
  done (took 9.048867643 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.840741976 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.854815783 seconds)
  done (took 15.486075272 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.839078675 seconds)
  done (took 8.605764966 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.49207695 seconds)
  done (took 9.348427295 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.847140123 seconds)
  done (took 8.629713555 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.871488504 seconds)
  done (took 8.629349263 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.957336181 seconds)
  done (took 8.711425338 seconds)
done (took 160.382254134 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.830115188 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.822354561 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.823248966 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.821133942 seconds)
  done (took 29.050224641 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.85795261 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.858554933 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.867328195 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.856820463 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.849163355 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.849082108 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.858471095 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.858764413 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.848655087 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.855264207 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.858079075 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.855344268 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.857973932 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.867082946 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.868194104 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.855953274 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.85897628 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.859576274 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.850722041 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.867898013 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.856440652 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.858026647 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.824738835 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.823849461 seconds)
  done (took 46.277319081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.010159816 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.889165905 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.977946429 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.869706504 seconds)
  done (took 9.502905987 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.825221058 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.88825643 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.875294412 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.877700302 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.910835067 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.93617173 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.877406226 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.035161598 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 1.94060337 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 1.952611642 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.832770676 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.846637245 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.849997387 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.877344915 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.927743742 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.825384353 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.82503212 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 1.964657271 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.885927033 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.034921904 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.825060212 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.879788831 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.919537498 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.880615697 seconds)
  done (took 47.250601848 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.826588414 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.834117076 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.833366063 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.827054729 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.82768089 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.828465397 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.834188292 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.828349862 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.849389823 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.828384017 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.826902022 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.8290802 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.833574879 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.827547741 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.827501614 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.840401036 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.841232096 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.827907245 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.831667368 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.833505695 seconds)
  done (took 38.393664555 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.825788799 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.671371981 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.17065427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.077261699 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.826452097 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.826497345 seconds)
  done (took 31.156296088 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.838897158 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.83481932 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.827245781 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.885726086 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.970234165 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.837229911 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.828675665 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.839227111 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.876487043 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.899644852 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.849370699 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.856045518 seconds)
  done (took 24.101504165 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.827415634 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.828665041 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.830108344 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.839925232 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.838721041 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.836487354 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.836092673 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.826103001 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.841822035 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.847174855 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.836586136 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.839770324 seconds)
  done (took 43.791327307 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.044100279 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.053231694 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.045151853 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.448421152 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.828670215 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.728535645 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.457633404 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.488104844 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.121448221 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.812556965 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.797383516 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.711577681 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.070552594 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.832002328 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.083173938 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.760694329 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.83242262 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.100525123 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.832768859 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.830169954 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.123284337 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.887834279 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.044292356 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.877770939 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.043927631 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.320785937 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.085340934 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.08845121 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.162748486 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.890649351 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.036117703 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.887485101 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.839804005 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.846887691 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.833520806 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.843458261 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103556542 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.832916225 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.843577749 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.820717111 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.757533969 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.161124833 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.951823892 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.241534076 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.952407588 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.072726461 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.836383606 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 5.032058538 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.900100646 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.099605582 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.94074866 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.04362754 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.757967204 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.154513992 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.961711762 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.834923588 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.837180961 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.531422188 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.072367218 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.913334171 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.170382482 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.949516916 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.83526086 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.921221624 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.832064189 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.946632576 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.205935754 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.839572504 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.83296426 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.841575957 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.930552174 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.046306194 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.83371769 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834165924 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.853055329 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.835656294 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.184766792 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.409212905 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.832181742 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.401060511 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.371659671 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.807639044 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.332568921 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.885260098 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.114257133 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.056006522 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.033601596 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.079495378 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.719897126 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.83949699 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.640924694 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.913992499 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.913687992 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.834344185 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.035380962 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.150369288 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.956377607 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.834952756 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.760054837 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.846780006 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.03766226 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.327447876 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.899744858 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.834748648 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.835283278 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.837505648 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.836777975 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.852204621 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.84783474 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.355186079 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.115917404 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.942556359 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.091113501 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.831202568 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.515143969 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.101454248 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.965293187 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.40874254 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.971225159 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.83652738 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.978842219 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.848789273 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.838987995 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.213151554 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.243673748 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.044234893 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.086088154 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.870614836 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.870457161 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.842190417 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.919073788 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.062887137 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.837973734 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.08188472 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.084103723 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.504385497 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.865498468 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.911630448 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.845961178 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.051077523 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.919419052 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.363543566 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.053563156 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.434835055 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.828729894 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.337164276 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.103791731 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226761393 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.853809195 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.043196446 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.876273261 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.538435203 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.762732374 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.842861979 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.17603589 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.877037518 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.941272476 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.839768361 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.839399286 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.846105504 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.91938167 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.90860665 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.911455801 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.765472871 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.840974287 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.841257342 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.839067094 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.382243708 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.473830129 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.130600346 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.83963516 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.899026153 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.840340249 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.438407962 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.842627959 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.960139617 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.844571594 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.587924874 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.869913971 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.101371899 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.249148884 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.959227453 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.84009308 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.84866499 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.540337401 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.849144372 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.540528753 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.120207567 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.84274092 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.285477667 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.905743038 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.025946021 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.858130497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.841285594 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.843322336 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.843602406 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.0426407 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.347798025 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.175937701 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.193790573 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.925785835 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.106221432 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.0347355 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.360001359 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.527311033 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.356455349 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.067959395 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.84313743 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84330741 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.488420152 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.850141018 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.05945025 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.044488729 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.115766978 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.138188424 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.259984971 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.847165194 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.853788742 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.083586621 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.842291686 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.273607613 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.870637166 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.209470982 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.661041834 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.101918639 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 1.913261335 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.854236547 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.485782855 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.977481772 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.799614006 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.961335952 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.768848448 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.475174965 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.137841763 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.114221524 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.827341347 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.177239291 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.14246681 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.145603721 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.47617545 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.84401355 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.891809237 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.92409671 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.851937781 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.409433966 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.891562742 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.89019916 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.848641265 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.843985157 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.846234807 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.518011413 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.922279339 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.963044688 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.519604948 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.373192174 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.759718099 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.109354135 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.903750936 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.299678906 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.889194226 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.058224754 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.849999011 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.433370993 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.900804904 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.115671295 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.807160612 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.058406976 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.046790813 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.876149834 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.851097019 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.77185662 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.711455261 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.849694176 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.057364144 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.736534585 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.848799456 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.140263359 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.483194204 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.890082834 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.847998039 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.176945968 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.261783176 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.111409203 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.854505427 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.059799364 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.968337342 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.765716648 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.336491546 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.426754103 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.545556768 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.859702566 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.048797991 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.188119929 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.174219612 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.890522659 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.917788147 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.1131916 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.830092361 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.847062478 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.36660198 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.945236326 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.086792067 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.159237983 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.383728312 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.221818815 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.287770454 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.90581416 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057857985 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.223365515 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.094719926 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.848865963 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.939209685 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.061445984 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.128553982 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.742681525 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.557644029 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.088557561 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.852555609 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.804302654 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.054780316 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.346653662 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.20332791 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.385457275 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.064006739 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.882257792 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.342966894 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.864630701 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.782692022 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.849941872 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.797593196 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.065824253 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.060717722 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.894290524 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.405525756 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.123741926 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.2577511 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.119379182 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.894299727 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.775514726 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.485079519 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.80222614 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.8827202 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.892992126 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.922373875 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.858749193 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.057207756 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.292615269 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.899918022 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.385020987 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.057781975 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.159420744 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.117589221 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.154425749 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.815584335 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12604183 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.802907619 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.500558874 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.947462102 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.946297992 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.855402462 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.858536807 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12712985 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.213925935 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.465411149 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.897446458 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.190715103 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.960163083 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.857092068 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.859912968 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.370895536 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.096708475 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.069013295 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.932721888 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 6.998144065 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.927512235 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.369867065 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.861058383 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.858899893 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.991398696 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.856156497 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.530299343 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.154036602 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.594908046 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.059612728 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.377280066 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.756498905 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.076551241 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.907805919 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.856715217 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.903461672 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.863215214 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.098799334 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.127601761 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.62344127 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.863101982 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.858911979 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.766994777 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.501721334 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.09513991 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.860805132 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.919638802 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.862404422 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.974488862 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.858138143 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.120491033 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.916139853 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.858837288 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.866707105 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.072442355 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.372390762 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.875180011 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.559053188 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.061697369 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.864657357 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.350177673 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.312798135 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.152138004 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.908165522 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.074281313 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.113727032 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.413677621 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.079029334 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.863533643 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.085866088 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.861401891 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1294228 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.133521129 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.860621782 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.075247928 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.361644489 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.156787133 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.871000438 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.760036961 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.860542713 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.119974851 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.91540796 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.860299187 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.868493277 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.401171603 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.490244403 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.344435698 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019634249 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.184161636 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.59829274 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.619666296 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.864509223 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.864152578 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.485257036 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.597751158 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.076134873 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.14843572 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.805638535 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.064822581 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.565909591 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.862274151 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.129704925 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.789882224 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.864870264 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.502375021 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.141032593 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.797683578 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.867352283 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.420882574 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.862245827 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.946557934 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.86376552 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.980382023 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.126948271 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.253275837 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 1.980375424 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.502595675 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.496360064 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.807620499 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.908628008 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.670966523 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.433595106 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.498118697 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.888944885 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.880422317 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.790147333 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.866572519 seconds)
  done (took 1636.725903539 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.931731767 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 6.91827517 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.95164583 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.884245395 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.892528305 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.920656105 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.906994956 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.877321122 seconds)
  done (took 57.077854837 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.86470215 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.87963465 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.868132297 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.864848346 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.882412762 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.864256499 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.02491821 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.875654157 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.886546103 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.869923212 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.865769656 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.864288989 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.139266338 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.886983306 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.866459474 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.866961429 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.868734956 seconds)
  done (took 74.090846152 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.868294591 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.157369248 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.914035322 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.868977803 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.706908499 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.882620774 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.928785563 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.900059309 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.873828171 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.011556721 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.164702294 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.869456781 seconds)
  done (took 89.943277904 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.871853379 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.866649627 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.867272025 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.86680427 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.867496329 seconds)
  done (took 11.141414858 seconds)
done (took 2140.324805611 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.116558568 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.925023691 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.967275709 seconds)
  done (took 5.688551255 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.014884894 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.059455544 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.174746886 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.936661319 seconds)
  done (took 9.989307307 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.159498579 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.231972658 seconds)
  done (took 6.187576726 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.242597737 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.886432221 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.258005313 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.868349111 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.86954032 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.871158699 seconds)
  done (took 22.409755674 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.868414897 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.868542343 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.869108725 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.868438362 seconds)
  done (took 9.271708547 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.867279529 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.547911929 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.867913405 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.877860995 seconds)
  done (took 20.95954191 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.010019623 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.877613401 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.004854245 seconds)
  done (took 7.689121834 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.089386319 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.878474034 seconds)
  done (took 6.765328635 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.010481606 seconds)
  done (took 3.807902427 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.895813503 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.141728438 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.339983501 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.388528117 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.462342565 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.642176151 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.194470394 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.141425417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.314774602 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.307415673 seconds)
  done (took 24.627287214 seconds)
done (took 132.696903823 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.231703444 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.887501034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.092838209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.233060807 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.093592707 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.071116598 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.092349903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.218325195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.90441331 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.892188334 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.230510205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.092177858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.030080893 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.884293651 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.037139731 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887348715 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.090423601 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.240576475 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.900878022 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.147980845 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.095823948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.878690324 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.072157365 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.892718059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.092474836 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.02239843 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.418176165 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.88564633 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.057293483 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.431458774 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.024405875 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.29752573 seconds)
  done (took 168.22703923 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.871671354 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.870767227 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.870587786 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.871111124 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.17162705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.871898927 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.872376317 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.871999424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.12388456 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.115749817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.8721077 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.160653727 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.872660992 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.872426464 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.871992382 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872211543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.267104906 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.8719289 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.872126831 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.872327861 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.873094011 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.012360056 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.87313328 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.023997702 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.258029951 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.872696426 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.872627085 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.872240502 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.873463429 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.872314762 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.873614094 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.872860481 seconds)
  done (took 207.869519893 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.815588463 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.871901813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.872983131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.873488091 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.87374717 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.873752215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.875527588 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.872898582 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.520811129 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.503661019 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.873457481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.874897526 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.875552906 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.873111552 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.875216214 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872813558 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.872081497 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.867981451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.877795526 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.878353311 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.87441124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.504777775 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.883103995 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.512375955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.873976838 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.874319112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.87485983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.873964879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.877126001 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.874480378 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.874018459 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.874593868 seconds)
  done (took 220.270954449 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.114635884 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.875168773 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.875335196 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.889970266 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.877176922 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.874967528 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.88246821 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.123007301 seconds)
  done (took 19.320400374 seconds)
done (took 617.501013405 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.236840977 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.60684686 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.017609838 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.901317345 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.14173126 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.942214526 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.894185779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.957010036 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.729698707 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.970843383 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.285735343 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.903739366 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.646487052 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.923099232 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.016832493 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.953660224 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.234969373 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.55242143 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.03782512 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.568471225 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.05278899 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.828723589 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.974055034 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.76756426 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.302659785 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.857636159 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.909686322 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.240564028 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.899514651 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.05171224 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.502248958 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.157022946 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.912764048 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.896770964 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.946892918 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.927128225 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.107487678 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.909105461 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.017488471 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.624125117 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.565746699 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.612536739 seconds)
  done (took 100.391095137 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.887474616 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.881921964 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.882416672 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.881895858 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.891545753 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.882876661 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.883704163 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.883178447 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.882588801 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.882835384 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.882669453 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.891185213 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.883661998 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.891928312 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.883105503 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.882671483 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.883638521 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.892653271 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.884339913 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.883350762 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.884383282 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.882897965 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.879830371 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.883187262 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.883848189 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.883046055 seconds)
  done (took 50.81633055 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.878437714 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.04270431 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.120118225 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.90090601 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.880565766 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.882041117 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.909494664 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.889095997 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.882485728 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.881617694 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.997055876 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.884685247 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892674965 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.118376937 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.898455202 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.879764678 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.880418022 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.880960988 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.048242345 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.896531647 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.911470362 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.888977811 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.910648955 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.8971193 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.882645806 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.881779869 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.883602669 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.303375536 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.893808422 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.997229833 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.925782859 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.914672034 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.229682428 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.131595518 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.93728263 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.88810511 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.881603232 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.003336644 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.888629048 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.882092568 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.909323572 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.889623437 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.124737727 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.410578799 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.897093632 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.882025993 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.301220486 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.014481831 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.923843137 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.892812933 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.130772241 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.900209715 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.881540064 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.883904694 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.918019165 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.895542023 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.881798185 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.150704888 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.89929621 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.910826066 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.890510986 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.883585454 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.060274507 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.89299978 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.045937376 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.893565706 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.888869229 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.883627775 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.125621965 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.90164942 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.418123822 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.89891354 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.883877286 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.999943569 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.053463287 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.32834888 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.898807513 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.062365968 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.245560799 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.922344975 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.897316301 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.285249331 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.925276824 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.895562751 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.883972745 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.884087981 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.884504544 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.929833182 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.910626236 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.334174109 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.417280409 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.166966917 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.924740628 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.897777968 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.885455623 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.152147453 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.894982606 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.884214068 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.115803214 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.428787231 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.900341775 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.891662067 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.398575141 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.90175161 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.914886919 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.896844594 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.136646699 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.903170277 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.931271342 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.885479947 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.892042272 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.888980807 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.916645299 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.89705045 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.884886079 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.393032558 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.022880128 seconds)
  done (took 233.721924926 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.886711273 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.885062816 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.884283026 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.886054204 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.885506326 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.886576557 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.884868109 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.88337297 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.887314246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.884737802 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.883497654 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.887706872 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.886508528 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.891061922 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.922807736 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.886756623 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.372616887 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.885098735 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.88657354 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.887309369 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.445448004 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.890420179 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.885840176 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.887943421 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.887778328 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.887638688 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.894858312 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.920224783 seconds)
  done (took 167.762121639 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.887295575 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.943076246 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.902550176 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.934219377 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.901983594 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.888373945 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.985835858 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.907734032 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.893040949 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.887710079 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.886895992 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.920497952 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.895672095 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.984716185 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.920653543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.992583546 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.992766275 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.897754258 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.889050384 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.888603857 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.936070055 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.904055349 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.920892498 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.953740478 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.904088708 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.945175669 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.904452602 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.88940543 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.890142392 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.003968416 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.907565454 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.919752413 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.926156142 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.913223484 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.008034233 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.005028333 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.993210086 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.993464485 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.89798313 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.889400239 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.888725131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.890201236 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.945610871 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.902919481 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.892311238 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.005314781 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.908012275 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.8899695 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.8906072 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.890294859 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.903557073 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.9093198 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.926429564 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.019161074 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.93735718 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.919590748 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.98764274 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.011134451 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.89058195 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.986470174 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.898766583 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.004861016 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.910681019 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.890941734 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.892465118 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.894730358 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.938055229 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.001111805 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.995118531 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.89827229 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.987371247 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.945256336 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.904840455 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.892028269 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.89453603 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.946422215 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.001414758 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.946543437 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.951598521 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.928777587 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.901172095 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.893084978 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.894032524 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.919539406 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.902152708 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.006341634 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.005796372 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.899174607 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.893533188 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.89344275 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.89267733 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.916512024 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.954462967 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.933027225 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998827806 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.931007095 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.931252344 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.899611504 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.906357074 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.897685309 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.926872017 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.901964035 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.90370588 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.170742675 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.923878023 seconds)
  done (took 204.541854064 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.242219956 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.938308285 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.967036991 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.1439341 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.274907109 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.83809358 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.934495559 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.941298891 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.95107543 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.068594305 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.00091764 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.993963022 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.932985523 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.915753832 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.937110854 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.954389867 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.968135645 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.233072611 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.150834133 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.446319447 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.932569456 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.200105826 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.266285234 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.29281276 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.996172563 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.344672494 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.530939874 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.035604272 seconds)
  done (took 63.259114778 seconds)
done (took 822.298670376 seconds)
SAVING RESULT...
DONE!
